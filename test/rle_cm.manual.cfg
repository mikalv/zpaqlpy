(ABCD registers, A is accumulator and holds input/output for OUT cmd
R0-255: 32 bit array of length 256
F: condition flag
H: 32 bit array of length 2^h. In HCOMP, H[i] is the input to COMP[i]
M: 8 bit array of length 2^m
)

comp 20 0 20 24 1 (hh hm ph pm n)  (n ist f√ºr Anzahl der Teile in comp)
  0 cm 18 255
hcomp
  a<<= 1
  ifnot
    a==a
  else
    a++
    a<a
  endif
  a<<= 9
  *d=a
  halt
pcomp ./rle c ; (information for zpaqd to call the python script)
  b<>a (==N comparisons are only available for A)
  a== 0 if (b is ichar)
    b<>a (swap back)
    b++ (case: load byte)
    c=a (c is charv)
  else
    b<>a (swap back)
    b-- (case: write out bytes c times)
    do a> 0 if
      c<>a (now c holds the count, a the byte)
      out
      c--
      c<>a (bring byte to c again)
    forever endif
  endif
  halt
end
