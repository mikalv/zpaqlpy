comp 2 2 27 26 4 (hh hm ph pm n)
                    (where H gets the size of 2^hh in hcomp or 2^ph in comp,
                     M 2^hm or 2^pm and n is the number of
                     context-mixing components)
  0 cm 19 4   (will get an order 1 context)
  1 icm 16    (order 2, chained to isse)
  2 isse 19 1 (order 4, has reference to ICM component 1)
  3 mix2 0 0 2 24 0 (moderate adapting mixer between CM and ISSE
                     based on which predicts better, no contexts even for bits)
  (ICM and ISSE part adapted from fast.cfg)
hcomp
  r=a 2 (R2 = A, input byte in R2)
  d=0
  a<<= 9 *d=a (H[D] = A) (set context to actual byte)
  (leaving first 9 bits free for the partially decoded byte)
  a=r 2 (A = R2)
  *b=a (M[B] = A) (save input byte in rotating buffer)
                  (full M is used with pointer b)
  a=0 hash (shortcut for A = (A + M[B] + 512) * 773)
  b-- hash
  d= 1 *d=a (order 2 hash for H[1])
  b-- hash b-- hash
  d= 2 *d=a (order 4 hash for H[2])
  (H[3] stays 0 as fixed context for MIX2)
  halt (execution stops here for this input byte)
pcomp ./brotli-helper ;
  r=a 255 (0)
  (t255 holds the inital value passed into the A register, first ZPAQL instruction must thus be r=a 255) (2)
  (         ifN t0 goto init_code) (2)
  a=r 0 (2)
  a== 0 (4)
  jf 3 (6)
  lj 23 (8)
  (         if t254 goto cont_reading) (11)
  a=r 254 (11)
  a== 0 (13)
  jt 3 (15)
  lj 74 (17)
  (         goto call_next) (20)
  lj 62630 (20)
  (        :init_code:) (23)
  (         t0 = 67108864) (23)
  a= 4 (23)
  a<<= 8 (25)
  a<<= 8 (27)
  a<<= 8 (29)
  r=a 0 (31)
  (         t252 = t0) (33)
  r=a 252 (33)
  (         goto read_b_end~) (35)
  lj 98 (35)
  (        :read_b:) (38)
  (         t1 = t253 == 4294967294) (38)
  c=0 (38)
  c-- (39)
  c-- (40)
  a=r 253 (41)
  a==c (43)
  a=0 (44)
  jf 1 (45)
  a++ (47)
  r=a 1 (48)
  (         if t1 goto do_read_in) (50)
  a== 0 (50)
  jt 3 (52)
  lj 69 (54)
  (         t255 = t253) (57)
  a=r 253 (57)
  r=a 255 (59)
  (         t253 = 4294967294) (61)
  a=0 (61)
  a-- (62)
  a-- (63)
  r=a 253 (64)
  (         goto cont_reading) (66)
  lj 74 (66)
  (        :do_read_in:) (69)
  (         t254 = 1) (69)
  a= 1 (69)
  r=a 254 (71)
  (         halt) (73)
  halt (73)
  (        :cont_reading:) (74)
  (         t254 = 0) (74)
  a=0 (74)
  r=a 254 (75)
  (         t1 = t255) (77)
  a=r 255 (77)
  r=a 1 (79)
  (         t2 = H[t0]〈〉) (81)
  d=r 0 (81)
  a=*d (83)
  r=a 2 (84)
  (         t0 = t0 - 1) (86)
  a=r 0 (86)
  a-- (88)
  r=a 0 (89)
  (         t0 = H[t0]〈〉) (91)
  d=a (91)
  a=*d (92)
  r=a 0 (93)
  (         goto find_label_ret_id) (95)
  lj 62666 (95)
  (        :read_b_end~:) (98)
  (                    19: def get32_hM〈addr〉:) (98)
  (                    22: def set32_hM〈addr, value〉:) (98)
  (                    31: def get32_pM〈addr〉:) (98)
  (         goto get32_pM_end~) (98)
  lj 197 (98)
  (        :get32_pM:) (101)
  (         MarkTempVarStart) (101)
  (Arg addr at t0 + 1) (101)
  (                    32:   return 〈〈〈〈〈pM[addr] << 8〉 + pM[addr+1]〉 << 8〉 + pM[addr+2]〉 << 8〉 + pM[addr+3]) (101)
  (         t7 = H[t0+1]〈addr〉) (101)
  a=r 0 (101)
  a++ (103)
  d=a (104)
  a=*d (105)
  r=a 7 (106)
  (         t6 = M[t7] << 8) (108)
  c= 8 (108)
  b=a (110)
  a=*b (111)
  a<<=c (112)
  r=a 6 (113)
  (         t7 = H[t0+1]〈addr〉 + 1) (115)
  c= 1 (115)
  a=*d (117)
  a+=c (118)
  r=a 7 (119)
  (         t5 = t6 + M[t7]) (121)
  b=a (121)
  c=*b (122)
  a=r 6 (123)
  a+=c (125)
  r=a 5 (126)
  (         t4 = t5 << 8) (128)
  c= 8 (128)
  a<<=c (130)
  r=a 4 (131)
  (         t5 = H[t0+1]〈addr〉 + 2) (133)
  c= 2 (133)
  a=*d (135)
  a+=c (136)
  r=a 5 (137)
  (         t3 = t4 + M[t5]) (139)
  b=a (139)
  c=*b (140)
  a=r 4 (141)
  a+=c (143)
  r=a 3 (144)
  (         t2 = t3 << 8) (146)
  c= 8 (146)
  a<<=c (148)
  r=a 2 (149)
  (         t3 = H[t0+1]〈addr〉 + 3) (151)
  c= 3 (151)
  a=*d (153)
  a+=c (154)
  r=a 3 (155)
  (         t1 = t2 + M[t3]) (157)
  b=a (157)
  c=*b (158)
  a=r 2 (159)
  a+=c (161)
  r=a 1 (162)
  (         t1 = t1) (164)
  (         t2 = H[t0]〈〉) (164)
  d=r 0 (164)
  a=*d (166)
  r=a 2 (167)
  (         t0 = t0 - 1) (169)
  a=r 0 (169)
  a-- (171)
  r=a 0 (172)
  (         t0 = H[t0]〈〉) (174)
  d=a (174)
  a=*d (175)
  r=a 0 (176)
  (         goto find_label_ret_id) (178)
  lj 62666 (178)
  (insert return as it might not be done by the function:) (181)
  (         t2 = H[t0]〈〉) (181)
  d=a (181)
  a=*d (182)
  r=a 2 (183)
  (         t0 = t0 - 1) (185)
  a=r 0 (185)
  a-- (187)
  r=a 0 (188)
  (         t0 = H[t0]〈〉) (190)
  d=a (190)
  a=*d (191)
  r=a 0 (192)
  (         goto find_label_ret_id) (194)
  lj 62666 (194)
  (         MarkTempVarEnd) (197)
  (        :get32_pM_end~:) (197)
  (                    34: def set32_pM〈addr, value〉:) (197)
  (         goto set32_pM_end~) (197)
  lj 320 (197)
  (        :set32_pM:) (200)
  (         MarkTempVarStart) (200)
  (Arg addr at t0 + 1) (200)
  (Arg value at t0 + 2) (200)
  (                    35:   pM[addr+3] = value % 256) (200)
  (         t1 = H[t0+2]〈value〉 % 256) (200)
  a= 1 (200)
  a<<= 8 (202)
  c=a (204)
  a=r 0 (205)
  a+= 2 (207)
  d=a (209)
  a=*d (210)
  a%=c (211)
  r=a 1 (212)
  (         t2 = H[t0+1]〈addr〉 + 3) (214)
  c= 3 (214)
  d-- (216)
  a=*d (217)
  a+=c (218)
  r=a 2 (219)
  (         M[t2] = t1) (221)
  c=a (221)
  a=r 1 (222)
  *c=a (224)
  (                    36:   value >>= 8) (225)
  (         H[t0+2]〈value〉 = H[t0+2]〈value〉 >> 8) (225)
  c= 8 (225)
  d++ (227)
  a=*d (228)
  a>>=c (229)
  c=a (230)
  *d=c (231)
  (                    37:   pM[addr+2] = value % 256) (232)
  (         t1 = H[t0+2]〈value〉 % 256) (232)
  a= 1 (232)
  a<<= 8 (234)
  c=a (236)
  a=*d (237)
  a%=c (238)
  r=a 1 (239)
  (         t2 = H[t0+1]〈addr〉 + 2) (241)
  c= 2 (241)
  d-- (243)
  a=*d (244)
  a+=c (245)
  r=a 2 (246)
  (         M[t2] = t1) (248)
  c=a (248)
  a=r 1 (249)
  *c=a (251)
  (                    38:   value >>= 8) (252)
  (         H[t0+2]〈value〉 = H[t0+2]〈value〉 >> 8) (252)
  c= 8 (252)
  d++ (254)
  a=*d (255)
  a>>=c (256)
  c=a (257)
  *d=c (258)
  (                    39:   pM[addr+1] = value % 256) (259)
  (         t1 = H[t0+2]〈value〉 % 256) (259)
  a= 1 (259)
  a<<= 8 (261)
  c=a (263)
  a=*d (264)
  a%=c (265)
  r=a 1 (266)
  (         t2 = H[t0+1]〈addr〉 + 1) (268)
  c= 1 (268)
  d-- (270)
  a=*d (271)
  a+=c (272)
  r=a 2 (273)
  (         M[t2] = t1) (275)
  c=a (275)
  a=r 1 (276)
  *c=a (278)
  (                    40:   value >>= 8) (279)
  (         H[t0+2]〈value〉 = H[t0+2]〈value〉 >> 8) (279)
  c= 8 (279)
  d++ (281)
  a=*d (282)
  a>>=c (283)
  c=a (284)
  *d=c (285)
  (                    41:   pM[addr] = value % 256) (286)
  (         t1 = H[t0+2]〈value〉 % 256) (286)
  a= 1 (286)
  a<<= 8 (288)
  c=a (290)
  a=*d (291)
  a%=c (292)
  r=a 1 (293)
  (         t2 = H[t0+1]〈addr〉) (295)
  d-- (295)
  a=*d (296)
  r=a 2 (297)
  (         M[t2] = t1) (299)
  c=a (299)
  a=r 1 (300)
  *c=a (302)
  (insert return as it might not be done by the function:) (303)
  (         t2 = H[t0]〈〉) (303)
  d=r 0 (303)
  a=*d (305)
  r=a 2 (306)
  (         t0 = t0 - 1) (308)
  a=r 0 (308)
  a-- (310)
  r=a 0 (311)
  (         t0 = H[t0]〈〉) (313)
  d=a (313)
  a=*d (314)
  r=a 0 (315)
  (         goto find_label_ret_id) (317)
  lj 62666 (317)
  (         MarkTempVarEnd) (320)
  (        :set32_pM_end~:) (320)
  (                    44: def addr_alloc_pM〈size〉:) (320)
  (         goto addr_alloc_pM_end~) (320)
  lj 1443 (320)
  (        :addr_alloc_pM:) (323)
  (         MarkTempVarStart) (323)
  (Arg size at t0 + 1) (323)
  (                    45:   start = 0  # each block is either of type free 〈0〉 or allocated 〈1〉, starting with 〈size0…3, type〉 <- 5) (323)
  (         H[t0+2]〈start〉 = 0) (323)
  a=r 0 (323)
  a+= 2 (325)
  d=a (327)
  *d=0 (328)
  (                    46:   if get32_pM〈start〉 == 0 and pM[start+4] == 0 and get32_pM〈start+5〉 == 0 and pM[start+9] == 0:  # first run) (329)
  (         H[t0+7]〈〉 = t0) (329)
  a=r 0 (329)
  a+= 7 (331)
  d=a (333)
  a=r 0 (334)
  *d=a (336)
  (saved bsp, return id:) (337)
  (         H[t0+8]〈〉 = 0) (337)
  d++ (337)
  *d=0 (338)
  (push arguments:) (339)
  (         H[t0+9]〈〉 = H[t0+2]〈start〉) (339)
  a+= 2 (339)
  d=a (341)
  c=*d (342)
  a=r 0 (343)
  a+= 9 (345)
  d=a (347)
  *d=c (348)
  (         t0 = t0 + 8) (349)
  c= 8 (349)
  a=r 0 (351)
  a+=c (353)
  r=a 0 (354)
  (         goto get32_pM) (356)
  lj 101 (356)
  (        :return_id_0:) (359)
  (         t5 = t1) (359)
  a=r 1 (359)
  r=a 5 (361)
  (         t4 = t5 == 0) (363)
  c=0 (363)
  a==c (364)
  a=0 (365)
  jf 1 (366)
  a++ (368)
  r=a 4 (369)
  (         t6 = H[t0+2]〈start〉 + 4) (371)
  c= 4 (371)
  a=r 0 (373)
  a+= 2 (375)
  d=a (377)
  a=*d (378)
  a+=c (379)
  r=a 6 (380)
  (         t5 = M[t6] == 0) (382)
  c=0 (382)
  b=a (383)
  a=*b (384)
  a==c (385)
  a=0 (386)
  jf 1 (387)
  a++ (389)
  r=a 5 (390)
  (         t3 = t4 and t5) (392)
  c=a (392)
  a=r 4 (393)
  a== 0 (395)
  jt 1 (397)
  a=c (399)
  r=a 3 (400)
  (         t5 = H[t0+2]〈start〉 + 5) (402)
  c= 5 (402)
  a=*d (404)
  a+=c (405)
  r=a 5 (406)
  (         H[t0+3]〈〉 = t3) (408)
  d++ (408)
  a=r 3 (409)
  *d=a (411)
  (         H[t0+7]〈〉 = t0) (412)
  a=r 0 (412)
  a+= 7 (414)
  d=a (416)
  a=r 0 (417)
  *d=a (419)
  (saved bsp, return id:) (420)
  (         H[t0+8]〈〉 = 1) (420)
  d++ (420)
  *d= 1 (421)
  (push arguments:) (423)
  (         H[t0+9]〈〉 = t5) (423)
  d++ (423)
  a=r 5 (424)
  *d=a (426)
  (         t0 = t0 + 8) (427)
  c= 8 (427)
  a=r 0 (429)
  a+=c (431)
  r=a 0 (432)
  (         goto get32_pM) (434)
  lj 101 (434)
  (        :return_id_1:) (437)
  (         t6 = t1) (437)
  a=r 1 (437)
  r=a 6 (439)
  (         t3 = H[t0+3]〈〉) (441)
  a=r 0 (441)
  a+= 3 (443)
  d=a (445)
  a=*d (446)
  r=a 3 (447)
  (         t4 = t6 == 0) (449)
  c=0 (449)
  a=r 6 (450)
  a==c (452)
  a=0 (453)
  jf 1 (454)
  a++ (456)
  r=a 4 (457)
  (         t2 = t3 and t4) (459)
  c=a (459)
  a=r 3 (460)
  a== 0 (462)
  jt 1 (464)
  a=c (466)
  r=a 2 (467)
  (         t4 = H[t0+2]〈start〉 + 9) (469)
  c= 9 (469)
  d-- (471)
  a=*d (472)
  a+=c (473)
  r=a 4 (474)
  (         t3 = M[t4] == 0) (476)
  c=0 (476)
  b=a (477)
  a=*b (478)
  a==c (479)
  a=0 (480)
  jf 1 (481)
  a++ (483)
  r=a 3 (484)
  (         t1 = t2 and t3) (486)
  c=a (486)
  a=r 2 (487)
  a== 0 (489)
  jt 1 (491)
  a=c (493)
  r=a 1 (494)
  (         ifN t1 goto else_5) (496)
  a== 0 (496)
  jf 3 (498)
  lj 706 (500)
  (                    47:     if len〈pM〉-start-10 < size:  # also 5 bytes for ending entry 〈0,0〉) (503)
  (         t3 = 67108864 - H[t0+2]〈start〉) (503)
  c=*d (503)
  a= 4 (504)
  a<<= 8 (506)
  a<<= 8 (508)
  a<<= 8 (510)
  a-=c (512)
  r=a 3 (513)
  (         t2 = t3 - 10) (515)
  c= 10 (515)
  a-=c (517)
  r=a 2 (518)
  (         t1 = t2 < H[t0+1]〈size〉) (520)
  d-- (520)
  c=*d (521)
  a<c (522)
  a=0 (523)
  jf 1 (524)
  a++ (526)
  r=a 1 (527)
  (         ifN t1 goto else_8) (529)
  a== 0 (529)
  jf 3 (531)
  lj 540 (533)
  (                    48:       error〈〉) (536)
  (         error) (536)
  error (536)
  (         goto endif_9) (537)
  lj 540 (537)
  (        :else_8:) (540)
  (        :endif_9:) (540)
  (                    49:     set32_pM〈start, size〉) (540)
  (         H[t0+3]〈〉 = t0) (540)
  a=r 0 (540)
  a+= 3 (542)
  d=a (544)
  a=r 0 (545)
  *d=a (547)
  (saved bsp, return id:) (548)
  (         H[t0+4]〈〉 = 2) (548)
  d++ (548)
  *d= 2 (549)
  (push arguments:) (551)
  (         H[t0+5]〈〉 = H[t0+2]〈start〉) (551)
  a+= 2 (551)
  d=a (553)
  c=*d (554)
  a=r 0 (555)
  a+= 5 (557)
  d=a (559)
  *d=c (560)
  (         H[t0+6]〈〉 = H[t0+1]〈size〉) (561)
  a=r 0 (561)
  a++ (563)
  d=a (564)
  c=*d (565)
  a=r 0 (566)
  a+= 6 (568)
  d=a (570)
  *d=c (571)
  (         t0 = t0 + 4) (572)
  c= 4 (572)
  a=r 0 (574)
  a+=c (576)
  r=a 0 (577)
  (         goto set32_pM) (579)
  lj 200 (579)
  (        :return_id_2:) (582)
  (                    50:     pM[start+4] = 1) (582)
  (         t1 = H[t0+2]〈start〉 + 4) (582)
  c= 4 (582)
  a=r 0 (584)
  a+= 2 (586)
  d=a (588)
  a=*d (589)
  a+=c (590)
  r=a 1 (591)
  (         M[t1] = 1) (593)
  c=a (593)
  *c= 1 (594)
  (                    51:     set32_pM〈start+size+5, len〈pM〉-start-size-10〉) (596)
  (         t2 = H[t0+2]〈start〉 + H[t0+1]〈size〉) (596)
  d-- (596)
  c=*d (597)
  d++ (598)
  a=*d (599)
  a+=c (600)
  r=a 2 (601)
  (         t1 = t2 + 5) (603)
  c= 5 (603)
  a+=c (605)
  r=a 1 (606)
  (         t4 = 67108864 - H[t0+2]〈start〉) (608)
  c=*d (608)
  a= 4 (609)
  a<<= 8 (611)
  a<<= 8 (613)
  a<<= 8 (615)
  a-=c (617)
  r=a 4 (618)
  (         t3 = t4 - H[t0+1]〈size〉) (620)
  d-- (620)
  c=*d (621)
  a-=c (622)
  r=a 3 (623)
  (         t2 = t3 - 10) (625)
  c= 10 (625)
  a-=c (627)
  r=a 2 (628)
  (         H[t0+3]〈〉 = t0) (630)
  a=r 0 (630)
  a+= 3 (632)
  d=a (634)
  a=r 0 (635)
  *d=a (637)
  (saved bsp, return id:) (638)
  (         H[t0+4]〈〉 = 3) (638)
  d++ (638)
  *d= 3 (639)
  (push arguments:) (641)
  (         H[t0+5]〈〉 = t1) (641)
  d++ (641)
  a=r 1 (642)
  *d=a (644)
  (         H[t0+6]〈〉 = t2) (645)
  d++ (645)
  a=r 2 (646)
  *d=a (648)
  (         t0 = t0 + 4) (649)
  c= 4 (649)
  a=r 0 (651)
  a+=c (653)
  r=a 0 (654)
  (         goto set32_pM) (656)
  lj 200 (656)
  (        :return_id_3:) (659)
  (         t3 = t1) (659)
  a=r 1 (659)
  r=a 3 (661)
  (                    52:     pM[start+size+6] = 0) (663)
  (         t2 = H[t0+2]〈start〉 + H[t0+1]〈size〉) (663)
  a=r 0 (663)
  a++ (665)
  d=a (666)
  c=*d (667)
  d++ (668)
  a=*d (669)
  a+=c (670)
  r=a 2 (671)
  (         t1 = t2 + 6) (673)
  c= 6 (673)
  a+=c (675)
  r=a 1 (676)
  (         M[t1] = 0) (678)
  c=a (678)
  *c=0 (679)
  (                    53:     return start+5  # return pointer to first element) (680)
  (         t1 = H[t0+2]〈start〉 + 5) (680)
  c= 5 (680)
  a=*d (682)
  a+=c (683)
  r=a 1 (684)
  (         t1 = t1) (686)
  (         t2 = H[t0]〈〉) (686)
  d=r 0 (686)
  a=*d (688)
  r=a 2 (689)
  (         t0 = t0 - 1) (691)
  a=r 0 (691)
  a-- (693)
  r=a 0 (694)
  (         t0 = H[t0]〈〉) (696)
  d=a (696)
  a=*d (697)
  r=a 0 (698)
  (         goto find_label_ret_id) (700)
  lj 62666 (700)
  (         goto endif_6) (703)
  lj 706 (703)
  (        :else_5:) (706)
  (        :endif_6:) (706)
  (                    54:   pos = start) (706)
  (         H[t0+3]〈pos〉 = H[t0+2]〈start〉) (706)
  a=r 0 (706)
  a+= 2 (708)
  d=a (710)
  c=*d (711)
  d++ (712)
  *d=c (713)
  (                    55:   while len〈pM〉-pos-10 >= size: # also needs 5 bytes for ending entry) (714)
  (        :while_10:) (714)
  (         t3 = 67108864 - H[t0+3]〈pos〉) (714)
  a=r 0 (714)
  a+= 3 (716)
  d=a (718)
  c=*d (719)
  a= 4 (720)
  a<<= 8 (722)
  a<<= 8 (724)
  a<<= 8 (726)
  a-=c (728)
  r=a 3 (729)
  (         t2 = t3 - 10) (731)
  c= 10 (731)
  a-=c (733)
  r=a 2 (734)
  (         t1 = t2 >= H[t0+1]〈size〉) (736)
  a=r 0 (736)
  a++ (738)
  d=a (739)
  c=*d (740)
  a=r 2 (741)
  a==c (743)
  jt 4 (744)
  a>c (746)
  a=0 (747)
  jf 2 (748)
  a= 1 (750)
  r=a 1 (752)
  (         ifN t1 goto whileend_12) (754)
  a== 0 (754)
  jf 3 (756)
  lj 1425 (758)
  (                    57:     pos_size = get32_pM〈pos〉) (761)
  (         H[t0+4]〈〉 = t0) (761)
  a=r 0 (761)
  a+= 4 (763)
  d=a (765)
  a=r 0 (766)
  *d=a (768)
  (saved bsp, return id:) (769)
  (         H[t0+5]〈〉 = 4) (769)
  d++ (769)
  *d= 4 (770)
  (push arguments:) (772)
  (         H[t0+6]〈〉 = H[t0+3]〈pos〉) (772)
  a+= 3 (772)
  d=a (774)
  c=*d (775)
  a=r 0 (776)
  a+= 6 (778)
  d=a (780)
  *d=c (781)
  (         t0 = t0 + 5) (782)
  c= 5 (782)
  a=r 0 (784)
  a+=c (786)
  r=a 0 (787)
  (         goto get32_pM) (789)
  lj 101 (789)
  (        :return_id_4:) (792)
  (         H[t0+4]〈pos_size〉 = t1) (792)
  a=r 0 (792)
  a+= 4 (794)
  d=a (796)
  a=r 1 (797)
  *d=a (799)
  (                    58:     if pM[pos+4] == 0 and 〈pos_size == size or 〈) (800)
  (                    59:         pos_size > size and pos+9+pos_size < len〈pM〉 and pM[pos+9+pos_size] == 0〉 or pos_size >= size+5〉:  # found) (800)
  (                    58:     if pM[pos+4] == 0 and 〈pos_size == size or 〈) (800)
  (         t3 = H[t0+3]〈pos〉 + 4) (800)
  c= 4 (800)
  d-- (802)
  a=*d (803)
  a+=c (804)
  r=a 3 (805)
  (         t2 = M[t3] == 0) (807)
  c=0 (807)
  b=a (808)
  a=*b (809)
  a==c (810)
  a=0 (811)
  jf 1 (812)
  a++ (814)
  r=a 2 (815)
  (                    59:         pos_size > size and pos+9+pos_size < len〈pM〉 and pM[pos+9+pos_size] == 0〉 or pos_size >= size+5〉:  # found) (817)
  (                    58:     if pM[pos+4] == 0 and 〈pos_size == size or 〈) (817)
  (         t5 = H[t0+4]〈pos_size〉 == H[t0+1]〈size〉) (817)
  a=r 0 (817)
  a++ (819)
  d=a (820)
  c=*d (821)
  a=r 0 (822)
  a+= 4 (824)
  d=a (826)
  a=*d (827)
  a==c (828)
  a=0 (829)
  jf 1 (830)
  a++ (832)
  r=a 5 (833)
  (                    59:         pos_size > size and pos+9+pos_size < len〈pM〉 and pM[pos+9+pos_size] == 0〉 or pos_size >= size+5〉:  # found) (835)
  (         t8 = H[t0+4]〈pos_size〉 > H[t0+1]〈size〉) (835)
  a=r 0 (835)
  a++ (837)
  d=a (838)
  c=*d (839)
  a=r 0 (840)
  a+= 4 (842)
  d=a (844)
  a=*d (845)
  a>c (846)
  a=0 (847)
  jf 1 (848)
  a++ (850)
  r=a 8 (851)
  (         t11 = H[t0+3]〈pos〉 + 9) (853)
  c= 9 (853)
  d-- (855)
  a=*d (856)
  a+=c (857)
  r=a 11 (858)
  (         t10 = t11 + H[t0+4]〈pos_size〉) (860)
  d++ (860)
  c=*d (861)
  a+=c (862)
  r=a 10 (863)
  (         t9 = t10 < 67108864) (865)
  a= 4 (865)
  a<<= 8 (867)
  a<<= 8 (869)
  a<<= 8 (871)
  c=a (873)
  a=r 10 (874)
  a<c (876)
  a=0 (877)
  jf 1 (878)
  a++ (880)
  r=a 9 (881)
  (         t7 = t8 and t9) (883)
  c=a (883)
  a=r 8 (884)
  a== 0 (886)
  jt 1 (888)
  a=c (890)
  r=a 7 (891)
  (         t10 = H[t0+3]〈pos〉 + 9) (893)
  c= 9 (893)
  d-- (895)
  a=*d (896)
  a+=c (897)
  r=a 10 (898)
  (         t9 = t10 + H[t0+4]〈pos_size〉) (900)
  d++ (900)
  c=*d (901)
  a+=c (902)
  r=a 9 (903)
  (         t8 = M[t9] == 0) (905)
  c=0 (905)
  b=a (906)
  a=*b (907)
  a==c (908)
  a=0 (909)
  jf 1 (910)
  a++ (912)
  r=a 8 (913)
  (         t6 = t7 and t8) (915)
  c=a (915)
  a=r 7 (916)
  a== 0 (918)
  jt 1 (920)
  a=c (922)
  r=a 6 (923)
  (         t4 = t5 or t6) (925)
  c=a (925)
  a=r 5 (926)
  a== 0 (928)
  jf 1 (930)
  a=c (932)
  r=a 4 (933)
  (         t6 = H[t0+1]〈size〉 + 5) (935)
  c= 5 (935)
  a=r 0 (937)
  a++ (939)
  d=a (940)
  a=*d (941)
  a+=c (942)
  r=a 6 (943)
  (         t5 = H[t0+4]〈pos_size〉 >= t6) (945)
  c=a (945)
  a=r 0 (946)
  a+= 4 (948)
  d=a (950)
  a=*d (951)
  a==c (952)
  jt 4 (953)
  a>c (955)
  a=0 (956)
  jf 2 (957)
  a= 1 (959)
  r=a 5 (961)
  (         t3 = t4 or t5) (963)
  c=a (963)
  a=r 4 (964)
  a== 0 (966)
  jf 1 (968)
  a=c (970)
  r=a 3 (971)
  (         t1 = t2 and t3) (973)
  c=a (973)
  a=r 2 (974)
  a== 0 (976)
  jt 1 (978)
  a=c (980)
  r=a 1 (981)
  (         ifN t1 goto else_20) (983)
  a== 0 (983)
  jf 3 (985)
  lj 1405 (987)
  (                    60:       if pos_size > size: # handle rest) (990)
  (         t1 = H[t0+4]〈pos_size〉 > H[t0+1]〈size〉) (990)
  a=r 0 (990)
  a++ (992)
  d=a (993)
  c=*d (994)
  a=r 0 (995)
  a+= 4 (997)
  d=a (999)
  a=*d (1000)
  a>c (1001)
  a=0 (1002)
  jf 1 (1003)
  a++ (1005)
  r=a 1 (1006)
  (         ifN t1 goto else_23) (1008)
  a== 0 (1008)
  jf 3 (1010)
  lj 1323 (1012)
  (                    61:         if pos+9+pos_size < len〈pM〉 and pM[pos+9+pos_size] == 0: # merge rest with next block) (1015)
  (         t4 = H[t0+3]〈pos〉 + 9) (1015)
  c= 9 (1015)
  d-- (1017)
  a=*d (1018)
  a+=c (1019)
  r=a 4 (1020)
  (         t3 = t4 + H[t0+4]〈pos_size〉) (1022)
  d++ (1022)
  c=*d (1023)
  a+=c (1024)
  r=a 3 (1025)
  (         t2 = t3 < 67108864) (1027)
  a= 4 (1027)
  a<<= 8 (1029)
  a<<= 8 (1031)
  a<<= 8 (1033)
  c=a (1035)
  a=r 3 (1036)
  a<c (1038)
  a=0 (1039)
  jf 1 (1040)
  a++ (1042)
  r=a 2 (1043)
  (         t5 = H[t0+3]〈pos〉 + 9) (1045)
  c= 9 (1045)
  d-- (1047)
  a=*d (1048)
  a+=c (1049)
  r=a 5 (1050)
  (         t4 = t5 + H[t0+4]〈pos_size〉) (1052)
  d++ (1052)
  c=*d (1053)
  a+=c (1054)
  r=a 4 (1055)
  (         t3 = M[t4] == 0) (1057)
  c=0 (1057)
  b=a (1058)
  a=*b (1059)
  a==c (1060)
  a=0 (1061)
  jf 1 (1062)
  a++ (1064)
  r=a 3 (1065)
  (         t1 = t2 and t3) (1067)
  c=a (1067)
  a=r 2 (1068)
  a== 0 (1070)
  jt 1 (1072)
  a=c (1074)
  r=a 1 (1075)
  (         ifN t1 goto else_27) (1077)
  a== 0 (1077)
  jf 3 (1079)
  lj 1232 (1081)
  (                    63:           set32_pM〈pos+5+size, pos_size-size + get32_pM〈pos+5+pos_size〉〉  # -5 〈this new free block's header〉 + 5 〈next header〉) (1084)
  (         t2 = H[t0+3]〈pos〉 + 5) (1084)
  c= 5 (1084)
  d-- (1086)
  a=*d (1087)
  a+=c (1088)
  r=a 2 (1089)
  (         t1 = t2 + H[t0+1]〈size〉) (1091)
  a=r 0 (1091)
  a++ (1093)
  d=a (1094)
  c=*d (1095)
  a=r 2 (1096)
  a+=c (1098)
  r=a 1 (1099)
  (         t3 = H[t0+4]〈pos_size〉 - H[t0+1]〈size〉) (1101)
  c=*d (1101)
  a=r 0 (1102)
  a+= 4 (1104)
  d=a (1106)
  a=*d (1107)
  a-=c (1108)
  r=a 3 (1109)
  (         t5 = H[t0+3]〈pos〉 + 5) (1111)
  c= 5 (1111)
  d-- (1113)
  a=*d (1114)
  a+=c (1115)
  r=a 5 (1116)
  (         t4 = t5 + H[t0+4]〈pos_size〉) (1118)
  d++ (1118)
  c=*d (1119)
  a+=c (1120)
  r=a 4 (1121)
  (         H[t0+5]〈〉 = t1) (1123)
  d++ (1123)
  a=r 1 (1124)
  *d=a (1126)
  (         H[t0+6]〈〉 = t3) (1127)
  d++ (1127)
  a=r 3 (1128)
  *d=a (1130)
  (         H[t0+8]〈〉 = t0) (1131)
  a=r 0 (1131)
  a+= 8 (1133)
  d=a (1135)
  a=r 0 (1136)
  *d=a (1138)
  (saved bsp, return id:) (1139)
  (         H[t0+9]〈〉 = 5) (1139)
  d++ (1139)
  *d= 5 (1140)
  (push arguments:) (1142)
  (         H[t0+10]〈〉 = t4) (1142)
  d++ (1142)
  a=r 4 (1143)
  *d=a (1145)
  (         t0 = t0 + 9) (1146)
  c= 9 (1146)
  a=r 0 (1148)
  a+=c (1150)
  r=a 0 (1151)
  (         goto get32_pM) (1153)
  lj 101 (1153)
  (        :return_id_5:) (1156)
  (         t5 = t1) (1156)
  a=r 1 (1156)
  r=a 5 (1158)
  (         t1 = H[t0+5]〈〉) (1160)
  a=r 0 (1160)
  a+= 5 (1162)
  d=a (1164)
  a=*d (1165)
  r=a 1 (1166)
  (         t3 = H[t0+6]〈〉) (1168)
  d++ (1168)
  a=*d (1169)
  r=a 3 (1170)
  (         t2 = t3 + t5) (1172)
  c=r 5 (1172)
  a+=c (1174)
  r=a 2 (1175)
  (         H[t0+5]〈〉 = t0) (1177)
  d-- (1177)
  a=r 0 (1178)
  *d=a (1180)
  (saved bsp, return id:) (1181)
  (         H[t0+6]〈〉 = 6) (1181)
  d++ (1181)
  *d= 6 (1182)
  (push arguments:) (1184)
  (         H[t0+7]〈〉 = t1) (1184)
  d++ (1184)
  a=r 1 (1185)
  *d=a (1187)
  (         H[t0+8]〈〉 = t2) (1188)
  d++ (1188)
  a=r 2 (1189)
  *d=a (1191)
  (         t0 = t0 + 6) (1192)
  c= 6 (1192)
  a=r 0 (1194)
  a+=c (1196)
  r=a 0 (1197)
  (         goto set32_pM) (1199)
  lj 200 (1199)
  (        :return_id_6:) (1202)
  (         t3 = t1) (1202)
  a=r 1 (1202)
  r=a 3 (1204)
  (                    64:           pM[pos+9+size] = 0) (1206)
  (         t2 = H[t0+3]〈pos〉 + 9) (1206)
  c= 9 (1206)
  a=r 0 (1208)
  a+= 3 (1210)
  d=a (1212)
  a=*d (1213)
  a+=c (1214)
  r=a 2 (1215)
  (         t1 = t2 + H[t0+1]〈size〉) (1217)
  a=r 0 (1217)
  a++ (1219)
  d=a (1220)
  c=*d (1221)
  a=r 2 (1222)
  a+=c (1224)
  r=a 1 (1225)
  (         M[t1] = 0) (1227)
  c=a (1227)
  *c=0 (1228)
  (         goto endif_28) (1229)
  lj 1320 (1229)
  (        :else_27:) (1232)
  (                    66:           set32_pM〈pos+5+size, pos_size-size-5〉  # 5 is this free block's header) (1232)
  (         t2 = H[t0+3]〈pos〉 + 5) (1232)
  c= 5 (1232)
  a=r 0 (1234)
  a+= 3 (1236)
  d=a (1238)
  a=*d (1239)
  a+=c (1240)
  r=a 2 (1241)
  (         t1 = t2 + H[t0+1]〈size〉) (1243)
  a=r 0 (1243)
  a++ (1245)
  d=a (1246)
  c=*d (1247)
  a=r 2 (1248)
  a+=c (1250)
  r=a 1 (1251)
  (         t3 = H[t0+4]〈pos_size〉 - H[t0+1]〈size〉) (1253)
  c=*d (1253)
  a=r 0 (1254)
  a+= 4 (1256)
  d=a (1258)
  a=*d (1259)
  a-=c (1260)
  r=a 3 (1261)
  (         t2 = t3 - 5) (1263)
  c= 5 (1263)
  a-=c (1265)
  r=a 2 (1266)
  (         H[t0+5]〈〉 = t0) (1268)
  d++ (1268)
  a=r 0 (1269)
  *d=a (1271)
  (saved bsp, return id:) (1272)
  (         H[t0+6]〈〉 = 7) (1272)
  d++ (1272)
  *d= 7 (1273)
  (push arguments:) (1275)
  (         H[t0+7]〈〉 = t1) (1275)
  d++ (1275)
  a=r 1 (1276)
  *d=a (1278)
  (         H[t0+8]〈〉 = t2) (1279)
  d++ (1279)
  a=r 2 (1280)
  *d=a (1282)
  (         t0 = t0 + 6) (1283)
  c= 6 (1283)
  a=r 0 (1285)
  a+=c (1287)
  r=a 0 (1288)
  (         goto set32_pM) (1290)
  lj 200 (1290)
  (        :return_id_7:) (1293)
  (         t3 = t1) (1293)
  a=r 1 (1293)
  r=a 3 (1295)
  (                    67:           pM[pos+9+size] = 0) (1297)
  (         t2 = H[t0+3]〈pos〉 + 9) (1297)
  c= 9 (1297)
  a=r 0 (1299)
  a+= 3 (1301)
  d=a (1303)
  a=*d (1304)
  a+=c (1305)
  r=a 2 (1306)
  (         t1 = t2 + H[t0+1]〈size〉) (1308)
  a=r 0 (1308)
  a++ (1310)
  d=a (1311)
  c=*d (1312)
  a=r 2 (1313)
  a+=c (1315)
  r=a 1 (1316)
  (         M[t1] = 0) (1318)
  c=a (1318)
  *c=0 (1319)
  (        :endif_28:) (1320)
  (         goto endif_24) (1320)
  lj 1323 (1320)
  (        :else_23:) (1323)
  (        :endif_24:) (1323)
  (                    68:       set32_pM〈pos, size〉) (1323)
  (         H[t0+5]〈〉 = t0) (1323)
  a=r 0 (1323)
  a+= 5 (1325)
  d=a (1327)
  a=r 0 (1328)
  *d=a (1330)
  (saved bsp, return id:) (1331)
  (         H[t0+6]〈〉 = 8) (1331)
  d++ (1331)
  *d= 8 (1332)
  (push arguments:) (1334)
  (         H[t0+7]〈〉 = H[t0+3]〈pos〉) (1334)
  a+= 3 (1334)
  d=a (1336)
  c=*d (1337)
  a=r 0 (1338)
  a+= 7 (1340)
  d=a (1342)
  *d=c (1343)
  (         H[t0+8]〈〉 = H[t0+1]〈size〉) (1344)
  a=r 0 (1344)
  a++ (1346)
  d=a (1347)
  c=*d (1348)
  a=r 0 (1349)
  a+= 8 (1351)
  d=a (1353)
  *d=c (1354)
  (         t0 = t0 + 6) (1355)
  c= 6 (1355)
  a=r 0 (1357)
  a+=c (1359)
  r=a 0 (1360)
  (         goto set32_pM) (1362)
  lj 200 (1362)
  (        :return_id_8:) (1365)
  (                    69:       pM[pos+4] = 1  # allocated) (1365)
  (         t1 = H[t0+3]〈pos〉 + 4) (1365)
  c= 4 (1365)
  a=r 0 (1367)
  a+= 3 (1369)
  d=a (1371)
  a=*d (1372)
  a+=c (1373)
  r=a 1 (1374)
  (         M[t1] = 1) (1376)
  c=a (1376)
  *c= 1 (1377)
  (                    70:       return pos+5  # return pointer to first element) (1379)
  (         t1 = H[t0+3]〈pos〉 + 5) (1379)
  c= 5 (1379)
  a=*d (1381)
  a+=c (1382)
  r=a 1 (1383)
  (         t1 = t1) (1385)
  (         t2 = H[t0]〈〉) (1385)
  d=r 0 (1385)
  a=*d (1387)
  r=a 2 (1388)
  (         t0 = t0 - 1) (1390)
  a=r 0 (1390)
  a-- (1392)
  r=a 0 (1393)
  (         t0 = H[t0]〈〉) (1395)
  d=a (1395)
  a=*d (1396)
  r=a 0 (1397)
  (         goto find_label_ret_id) (1399)
  lj 62666 (1399)
  (         goto endif_21) (1402)
  lj 1405 (1402)
  (        :else_20:) (1405)
  (        :endif_21:) (1405)
  (                    72:     pos += 5 + pos_size) (1405)
  (         t1 = 5 + H[t0+4]〈pos_size〉) (1405)
  a=r 0 (1405)
  a+= 4 (1407)
  d=a (1409)
  c=*d (1410)
  a= 5 (1411)
  a+=c (1413)
  r=a 1 (1414)
  (         H[t0+3]〈pos〉 = H[t0+3]〈pos〉 + t1) (1416)
  c=a (1416)
  d-- (1417)
  a=*d (1418)
  a+=c (1419)
  c=a (1420)
  *d=c (1421)
  (         goto while_10) (1422)
  lj 714 (1422)
  (        :whileend_12:) (1425)
  (                    73:   error〈〉) (1425)
  (         error) (1425)
  error (1425)
  (insert return as it might not be done by the function:) (1426)
  (         t2 = H[t0]〈〉) (1426)
  d=r 0 (1426)
  a=*d (1428)
  r=a 2 (1429)
  (         t0 = t0 - 1) (1431)
  a=r 0 (1431)
  a-- (1433)
  r=a 0 (1434)
  (         t0 = H[t0]〈〉) (1436)
  d=a (1436)
  a=*d (1437)
  r=a 0 (1438)
  (         goto find_label_ret_id) (1440)
  lj 62666 (1440)
  (         MarkTempVarEnd) (1443)
  (        :addr_alloc_pM_end~:) (1443)
  (                    77: def addr_alloc_pH〈size〉:) (1443)
  (         goto addr_alloc_pH_end~) (1443)
  lj 2403 (1443)
  (        :addr_alloc_pH:) (1446)
  (         MarkTempVarStart) (1446)
  (Arg size at t0 + 1) (1446)
  (                    78:   start = 0  # each block is either of type free 〈0〉 or allocated 〈1〉, starting with 〈size, type〉) (1446)
  (         H[t0+2]〈start〉 = 0) (1446)
  a=r 0 (1446)
  a+= 2 (1448)
  d=a (1450)
  *d=0 (1451)
  (                    79:   if pH[start] == 0 and pH[start+1] == 0 and pH[start+2] == 0 and pH[start+3] == 0:  # first run) (1452)
  (         t5 = H[t0+2]〈start〉) (1452)
  a=*d (1452)
  r=a 5 (1453)
  (         t4 = H[t5]〈〉 == 0) (1455)
  c=0 (1455)
  d=a (1456)
  a=*d (1457)
  a==c (1458)
  a=0 (1459)
  jf 1 (1460)
  a++ (1462)
  r=a 4 (1463)
  (         t6 = H[t0+2]〈start〉 + 1) (1465)
  c= 1 (1465)
  a=r 0 (1467)
  a+= 2 (1469)
  d=a (1471)
  a=*d (1472)
  a+=c (1473)
  r=a 6 (1474)
  (         t5 = H[t6]〈〉 == 0) (1476)
  c=0 (1476)
  d=a (1477)
  a=*d (1478)
  a==c (1479)
  a=0 (1480)
  jf 1 (1481)
  a++ (1483)
  r=a 5 (1484)
  (         t3 = t4 and t5) (1486)
  c=a (1486)
  a=r 4 (1487)
  a== 0 (1489)
  jt 1 (1491)
  a=c (1493)
  r=a 3 (1494)
  (         t5 = H[t0+2]〈start〉 + 2) (1496)
  c= 2 (1496)
  a=r 0 (1498)
  a+= 2 (1500)
  d=a (1502)
  a=*d (1503)
  a+=c (1504)
  r=a 5 (1505)
  (         t4 = H[t5]〈〉 == 0) (1507)
  c=0 (1507)
  d=a (1508)
  a=*d (1509)
  a==c (1510)
  a=0 (1511)
  jf 1 (1512)
  a++ (1514)
  r=a 4 (1515)
  (         t2 = t3 and t4) (1517)
  c=a (1517)
  a=r 3 (1518)
  a== 0 (1520)
  jt 1 (1522)
  a=c (1524)
  r=a 2 (1525)
  (         t4 = H[t0+2]〈start〉 + 3) (1527)
  c= 3 (1527)
  a=r 0 (1529)
  a+= 2 (1531)
  d=a (1533)
  a=*d (1534)
  a+=c (1535)
  r=a 4 (1536)
  (         t3 = H[t4]〈〉 == 0) (1538)
  c=0 (1538)
  d=a (1539)
  a=*d (1540)
  a==c (1541)
  a=0 (1542)
  jf 1 (1543)
  a++ (1545)
  r=a 3 (1546)
  (         t1 = t2 and t3) (1548)
  c=a (1548)
  a=r 2 (1549)
  a== 0 (1551)
  jt 1 (1553)
  a=c (1555)
  r=a 1 (1556)
  (         ifN t1 goto else_33) (1558)
  a== 0 (1558)
  jf 3 (1560)
  lj 1724 (1562)
  (                    80:     if len〈pH〉-start-4 < size:  # also 2 bytes for ending entry 〈0,0〉) (1565)
  (         t3 = 67108864 - H[t0+2]〈start〉) (1565)
  a=r 0 (1565)
  a+= 2 (1567)
  d=a (1569)
  c=*d (1570)
  a= 4 (1571)
  a<<= 8 (1573)
  a<<= 8 (1575)
  a<<= 8 (1577)
  a-=c (1579)
  r=a 3 (1580)
  (         t2 = t3 - 4) (1582)
  c= 4 (1582)
  a-=c (1584)
  r=a 2 (1585)
  (         t1 = t2 < H[t0+1]〈size〉) (1587)
  d-- (1587)
  c=*d (1588)
  a<c (1589)
  a=0 (1590)
  jf 1 (1591)
  a++ (1593)
  r=a 1 (1594)
  (         ifN t1 goto else_36) (1596)
  a== 0 (1596)
  jf 3 (1598)
  lj 1607 (1600)
  (                    81:       error〈〉) (1603)
  (         error) (1603)
  error (1603)
  (         goto endif_37) (1604)
  lj 1607 (1604)
  (        :else_36:) (1607)
  (        :endif_37:) (1607)
  (                    82:     pH[start] = size) (1607)
  (         t1 = H[t0+2]〈start〉) (1607)
  a=r 0 (1607)
  a+= 2 (1609)
  d=a (1611)
  a=*d (1612)
  r=a 1 (1613)
  (         H[t1]〈〉 = H[t0+1]〈size〉) (1615)
  d-- (1615)
  c=*d (1616)
  d=r 1 (1617)
  *d=c (1619)
  (                    83:     pH[start+1] = 1) (1620)
  (         t1 = H[t0+2]〈start〉 + 1) (1620)
  c= 1 (1620)
  a=r 0 (1622)
  a+= 2 (1624)
  d=a (1626)
  a=*d (1627)
  a+=c (1628)
  r=a 1 (1629)
  (         H[t1]〈〉 = 1) (1631)
  d=a (1631)
  *d= 1 (1632)
  (                    84:     pH[start+size+2] = len〈pH〉-start-size-4) (1634)
  (         t3 = 67108864 - H[t0+2]〈start〉) (1634)
  a=r 0 (1634)
  a+= 2 (1636)
  d=a (1638)
  c=*d (1639)
  a= 4 (1640)
  a<<= 8 (1642)
  a<<= 8 (1644)
  a<<= 8 (1646)
  a-=c (1648)
  r=a 3 (1649)
  (         t2 = t3 - H[t0+1]〈size〉) (1651)
  d-- (1651)
  c=*d (1652)
  a-=c (1653)
  r=a 2 (1654)
  (         t1 = t2 - 4) (1656)
  c= 4 (1656)
  a-=c (1658)
  r=a 1 (1659)
  (         t3 = H[t0+2]〈start〉 + H[t0+1]〈size〉) (1661)
  c=*d (1661)
  d++ (1662)
  a=*d (1663)
  a+=c (1664)
  r=a 3 (1665)
  (         t2 = t3 + 2) (1667)
  c= 2 (1667)
  a+=c (1669)
  r=a 2 (1670)
  (         H[t2]〈〉 = t1) (1672)
  d=a (1672)
  a=r 1 (1673)
  *d=a (1675)
  (                    85:     pH[start+size+3] = 0) (1676)
  (         t2 = H[t0+2]〈start〉 + H[t0+1]〈size〉) (1676)
  a=r 0 (1676)
  a++ (1678)
  d=a (1679)
  c=*d (1680)
  d++ (1681)
  a=*d (1682)
  a+=c (1683)
  r=a 2 (1684)
  (         t1 = t2 + 3) (1686)
  c= 3 (1686)
  a+=c (1688)
  r=a 1 (1689)
  (         H[t1]〈〉 = 0) (1691)
  d=a (1691)
  *d=0 (1692)
  (                    86:     return start+2  # return pointer to first element) (1693)
  (         t1 = H[t0+2]〈start〉 + 2) (1693)
  c= 2 (1693)
  a=r 0 (1695)
  a+= 2 (1697)
  d=a (1699)
  a=*d (1700)
  a+=c (1701)
  r=a 1 (1702)
  (         t1 = t1) (1704)
  (         t2 = H[t0]〈〉) (1704)
  d=r 0 (1704)
  a=*d (1706)
  r=a 2 (1707)
  (         t0 = t0 - 1) (1709)
  a=r 0 (1709)
  a-- (1711)
  r=a 0 (1712)
  (         t0 = H[t0]〈〉) (1714)
  d=a (1714)
  a=*d (1715)
  r=a 0 (1716)
  (         goto find_label_ret_id) (1718)
  lj 62666 (1718)
  (         goto endif_34) (1721)
  lj 1724 (1721)
  (        :else_33:) (1724)
  (        :endif_34:) (1724)
  (                    87:   pos = start) (1724)
  (         H[t0+3]〈pos〉 = H[t0+2]〈start〉) (1724)
  a=r 0 (1724)
  a+= 2 (1726)
  d=a (1728)
  c=*d (1729)
  d++ (1730)
  *d=c (1731)
  (                    88:   while len〈pH〉-pos-4 >= size: # also needs 2 bytes for ending entry) (1732)
  (        :while_38:) (1732)
  (         t3 = 67108864 - H[t0+3]〈pos〉) (1732)
  a=r 0 (1732)
  a+= 3 (1734)
  d=a (1736)
  c=*d (1737)
  a= 4 (1738)
  a<<= 8 (1740)
  a<<= 8 (1742)
  a<<= 8 (1744)
  a-=c (1746)
  r=a 3 (1747)
  (         t2 = t3 - 4) (1749)
  c= 4 (1749)
  a-=c (1751)
  r=a 2 (1752)
  (         t1 = t2 >= H[t0+1]〈size〉) (1754)
  a=r 0 (1754)
  a++ (1756)
  d=a (1757)
  c=*d (1758)
  a=r 2 (1759)
  a==c (1761)
  jt 4 (1762)
  a>c (1764)
  a=0 (1765)
  jf 2 (1766)
  a= 1 (1768)
  r=a 1 (1770)
  (         ifN t1 goto whileend_40) (1772)
  a== 0 (1772)
  jf 3 (1774)
  lj 2385 (1776)
  (                    90:     if pH[pos+1] == 0 and 〈pH[pos] == size or 〈pH[pos] > size and pos+3+pH[pos] < len〈pH〉 and pH[pos+3+pH[pos]] == 0〉 or pH[pos] >= size+2〉:  # found) (1779)
  (         t3 = H[t0+3]〈pos〉 + 1) (1779)
  c= 1 (1779)
  a=r 0 (1781)
  a+= 3 (1783)
  d=a (1785)
  a=*d (1786)
  a+=c (1787)
  r=a 3 (1788)
  (         t2 = H[t3]〈〉 == 0) (1790)
  c=0 (1790)
  d=a (1791)
  a=*d (1792)
  a==c (1793)
  a=0 (1794)
  jf 1 (1795)
  a++ (1797)
  r=a 2 (1798)
  (         t6 = H[t0+3]〈pos〉) (1800)
  a=r 0 (1800)
  a+= 3 (1802)
  d=a (1804)
  a=*d (1805)
  r=a 6 (1806)
  (         t5 = H[t6]〈〉 == H[t0+1]〈size〉) (1808)
  a=r 0 (1808)
  a++ (1810)
  d=a (1811)
  c=*d (1812)
  d=r 6 (1813)
  a=*d (1815)
  a==c (1816)
  a=0 (1817)
  jf 1 (1818)
  a++ (1820)
  r=a 5 (1821)
  (         t9 = H[t0+3]〈pos〉) (1823)
  a=r 0 (1823)
  a+= 3 (1825)
  d=a (1827)
  a=*d (1828)
  r=a 9 (1829)
  (         t8 = H[t9]〈〉 > H[t0+1]〈size〉) (1831)
  a=r 0 (1831)
  a++ (1833)
  d=a (1834)
  c=*d (1835)
  d=r 9 (1836)
  a=*d (1838)
  a>c (1839)
  a=0 (1840)
  jf 1 (1841)
  a++ (1843)
  r=a 8 (1844)
  (         t11 = H[t0+3]〈pos〉 + 3) (1846)
  c= 3 (1846)
  a=r 0 (1848)
  a+= 3 (1850)
  d=a (1852)
  a=*d (1853)
  a+=c (1854)
  r=a 11 (1855)
  (         t12 = H[t0+3]〈pos〉) (1857)
  a=*d (1857)
  r=a 12 (1858)
  (         t10 = t11 + H[t12]〈〉) (1860)
  d=a (1860)
  c=*d (1861)
  a=r 11 (1862)
  a+=c (1864)
  r=a 10 (1865)
  (         t9 = t10 < 67108864) (1867)
  a= 4 (1867)
  a<<= 8 (1869)
  a<<= 8 (1871)
  a<<= 8 (1873)
  c=a (1875)
  a=r 10 (1876)
  a<c (1878)
  a=0 (1879)
  jf 1 (1880)
  a++ (1882)
  r=a 9 (1883)
  (         t7 = t8 and t9) (1885)
  c=a (1885)
  a=r 8 (1886)
  a== 0 (1888)
  jt 1 (1890)
  a=c (1892)
  r=a 7 (1893)
  (         t10 = H[t0+3]〈pos〉 + 3) (1895)
  c= 3 (1895)
  a=r 0 (1897)
  a+= 3 (1899)
  d=a (1901)
  a=*d (1902)
  a+=c (1903)
  r=a 10 (1904)
  (         t11 = H[t0+3]〈pos〉) (1906)
  a=*d (1906)
  r=a 11 (1907)
  (         t9 = t10 + H[t11]〈〉) (1909)
  d=a (1909)
  c=*d (1910)
  a=r 10 (1911)
  a+=c (1913)
  r=a 9 (1914)
  (         t8 = H[t9]〈〉 == 0) (1916)
  c=0 (1916)
  d=a (1917)
  a=*d (1918)
  a==c (1919)
  a=0 (1920)
  jf 1 (1921)
  a++ (1923)
  r=a 8 (1924)
  (         t6 = t7 and t8) (1926)
  c=a (1926)
  a=r 7 (1927)
  a== 0 (1929)
  jt 1 (1931)
  a=c (1933)
  r=a 6 (1934)
  (         t4 = t5 or t6) (1936)
  c=a (1936)
  a=r 5 (1937)
  a== 0 (1939)
  jf 1 (1941)
  a=c (1943)
  r=a 4 (1944)
  (         t6 = H[t0+3]〈pos〉) (1946)
  a=r 0 (1946)
  a+= 3 (1948)
  d=a (1950)
  a=*d (1951)
  r=a 6 (1952)
  (         t7 = H[t0+1]〈size〉 + 2) (1954)
  c= 2 (1954)
  a=r 0 (1956)
  a++ (1958)
  d=a (1959)
  a=*d (1960)
  a+=c (1961)
  r=a 7 (1962)
  (         t5 = H[t6]〈〉 >= t7) (1964)
  c=a (1964)
  d=r 6 (1965)
  a=*d (1967)
  a==c (1968)
  jt 4 (1969)
  a>c (1971)
  a=0 (1972)
  jf 2 (1973)
  a= 1 (1975)
  r=a 5 (1977)
  (         t3 = t4 or t5) (1979)
  c=a (1979)
  a=r 4 (1980)
  a== 0 (1982)
  jf 1 (1984)
  a=c (1986)
  r=a 3 (1987)
  (         t1 = t2 and t3) (1989)
  c=a (1989)
  a=r 2 (1990)
  a== 0 (1992)
  jt 1 (1994)
  a=c (1996)
  r=a 1 (1997)
  (         ifN t1 goto else_48) (1999)
  a== 0 (1999)
  jf 3 (2001)
  lj 2357 (2003)
  (                    91:       if pH[pos] > size: # handle rest) (2006)
  (         t2 = H[t0+3]〈pos〉) (2006)
  a=r 0 (2006)
  a+= 3 (2008)
  d=a (2010)
  a=*d (2011)
  r=a 2 (2012)
  (         t1 = H[t2]〈〉 > H[t0+1]〈size〉) (2014)
  a=r 0 (2014)
  a++ (2016)
  d=a (2017)
  c=*d (2018)
  d=r 2 (2019)
  a=*d (2021)
  a>c (2022)
  a=0 (2023)
  jf 1 (2024)
  a++ (2026)
  r=a 1 (2027)
  (         ifN t1 goto else_51) (2029)
  a== 0 (2029)
  jf 3 (2031)
  lj 2296 (2033)
  (                    92:         if pos+3+pH[pos] < len〈pH〉 and pH[pos+3+pH[pos]] == 0: # merge rest with next block) (2036)
  (         t4 = H[t0+3]〈pos〉 + 3) (2036)
  c= 3 (2036)
  a=r 0 (2038)
  a+= 3 (2040)
  d=a (2042)
  a=*d (2043)
  a+=c (2044)
  r=a 4 (2045)
  (         t5 = H[t0+3]〈pos〉) (2047)
  a=*d (2047)
  r=a 5 (2048)
  (         t3 = t4 + H[t5]〈〉) (2050)
  d=a (2050)
  c=*d (2051)
  a=r 4 (2052)
  a+=c (2054)
  r=a 3 (2055)
  (         t2 = t3 < 67108864) (2057)
  a= 4 (2057)
  a<<= 8 (2059)
  a<<= 8 (2061)
  a<<= 8 (2063)
  c=a (2065)
  a=r 3 (2066)
  a<c (2068)
  a=0 (2069)
  jf 1 (2070)
  a++ (2072)
  r=a 2 (2073)
  (         t5 = H[t0+3]〈pos〉 + 3) (2075)
  c= 3 (2075)
  a=r 0 (2077)
  a+= 3 (2079)
  d=a (2081)
  a=*d (2082)
  a+=c (2083)
  r=a 5 (2084)
  (         t6 = H[t0+3]〈pos〉) (2086)
  a=*d (2086)
  r=a 6 (2087)
  (         t4 = t5 + H[t6]〈〉) (2089)
  d=a (2089)
  c=*d (2090)
  a=r 5 (2091)
  a+=c (2093)
  r=a 4 (2094)
  (         t3 = H[t4]〈〉 == 0) (2096)
  c=0 (2096)
  d=a (2097)
  a=*d (2098)
  a==c (2099)
  a=0 (2100)
  jf 1 (2101)
  a++ (2103)
  r=a 3 (2104)
  (         t1 = t2 and t3) (2106)
  c=a (2106)
  a=r 2 (2107)
  a== 0 (2109)
  jt 1 (2111)
  a=c (2113)
  r=a 1 (2114)
  (         ifN t1 goto else_55) (2116)
  a== 0 (2116)
  jf 3 (2118)
  lj 2221 (2120)
  (                    94:           pH[pos+2+size] = pH[pos]-size + pH[pos+2+pH[pos]]  # -2 〈this new free block's header〉 + 2 〈next header〉) (2123)
  (         t3 = H[t0+3]〈pos〉) (2123)
  a=r 0 (2123)
  a+= 3 (2125)
  d=a (2127)
  a=*d (2128)
  r=a 3 (2129)
  (         t2 = H[t3]〈〉 - H[t0+1]〈size〉) (2131)
  a=r 0 (2131)
  a++ (2133)
  d=a (2134)
  c=*d (2135)
  d=r 3 (2136)
  a=*d (2138)
  a-=c (2139)
  r=a 2 (2140)
  (         t4 = H[t0+3]〈pos〉 + 2) (2142)
  c= 2 (2142)
  a=r 0 (2144)
  a+= 3 (2146)
  d=a (2148)
  a=*d (2149)
  a+=c (2150)
  r=a 4 (2151)
  (         t5 = H[t0+3]〈pos〉) (2153)
  a=*d (2153)
  r=a 5 (2154)
  (         t3 = t4 + H[t5]〈〉) (2156)
  d=a (2156)
  c=*d (2157)
  a=r 4 (2158)
  a+=c (2160)
  r=a 3 (2161)
  (         t1 = t2 + H[t3]〈〉) (2163)
  d=a (2163)
  c=*d (2164)
  a=r 2 (2165)
  a+=c (2167)
  r=a 1 (2168)
  (         t3 = H[t0+3]〈pos〉 + 2) (2170)
  c= 2 (2170)
  a=r 0 (2172)
  a+= 3 (2174)
  d=a (2176)
  a=*d (2177)
  a+=c (2178)
  r=a 3 (2179)
  (         t2 = t3 + H[t0+1]〈size〉) (2181)
  a=r 0 (2181)
  a++ (2183)
  d=a (2184)
  c=*d (2185)
  a=r 3 (2186)
  a+=c (2188)
  r=a 2 (2189)
  (         H[t2]〈〉 = t1) (2191)
  d=a (2191)
  a=r 1 (2192)
  *d=a (2194)
  (                    95:           pH[pos+3+size] = 0) (2195)
  (         t2 = H[t0+3]〈pos〉 + 3) (2195)
  c= 3 (2195)
  a=r 0 (2197)
  a+= 3 (2199)
  d=a (2201)
  a=*d (2202)
  a+=c (2203)
  r=a 2 (2204)
  (         t1 = t2 + H[t0+1]〈size〉) (2206)
  a=r 0 (2206)
  a++ (2208)
  d=a (2209)
  c=*d (2210)
  a=r 2 (2211)
  a+=c (2213)
  r=a 1 (2214)
  (         H[t1]〈〉 = 0) (2216)
  d=a (2216)
  *d=0 (2217)
  (         goto endif_56) (2218)
  lj 2293 (2218)
  (        :else_55:) (2221)
  (                    97:           pH[pos+2+size] = pH[pos]-size-2 # 2 is this free block's header) (2221)
  (         t3 = H[t0+3]〈pos〉) (2221)
  a=r 0 (2221)
  a+= 3 (2223)
  d=a (2225)
  a=*d (2226)
  r=a 3 (2227)
  (         t2 = H[t3]〈〉 - H[t0+1]〈size〉) (2229)
  a=r 0 (2229)
  a++ (2231)
  d=a (2232)
  c=*d (2233)
  d=r 3 (2234)
  a=*d (2236)
  a-=c (2237)
  r=a 2 (2238)
  (         t1 = t2 - 2) (2240)
  c= 2 (2240)
  a-=c (2242)
  r=a 1 (2243)
  (         t3 = H[t0+3]〈pos〉 + 2) (2245)
  c= 2 (2245)
  a=r 0 (2247)
  a+= 3 (2249)
  d=a (2251)
  a=*d (2252)
  a+=c (2253)
  r=a 3 (2254)
  (         t2 = t3 + H[t0+1]〈size〉) (2256)
  a=r 0 (2256)
  a++ (2258)
  d=a (2259)
  c=*d (2260)
  a=r 3 (2261)
  a+=c (2263)
  r=a 2 (2264)
  (         H[t2]〈〉 = t1) (2266)
  d=a (2266)
  a=r 1 (2267)
  *d=a (2269)
  (                    98:           pH[pos+3+size] = 0) (2270)
  (         t2 = H[t0+3]〈pos〉 + 3) (2270)
  c= 3 (2270)
  a=r 0 (2272)
  a+= 3 (2274)
  d=a (2276)
  a=*d (2277)
  a+=c (2278)
  r=a 2 (2279)
  (         t1 = t2 + H[t0+1]〈size〉) (2281)
  a=r 0 (2281)
  a++ (2283)
  d=a (2284)
  c=*d (2285)
  a=r 2 (2286)
  a+=c (2288)
  r=a 1 (2289)
  (         H[t1]〈〉 = 0) (2291)
  d=a (2291)
  *d=0 (2292)
  (        :endif_56:) (2293)
  (         goto endif_52) (2293)
  lj 2296 (2293)
  (        :else_51:) (2296)
  (        :endif_52:) (2296)
  (                    99:       pH[pos] = size) (2296)
  (         t1 = H[t0+3]〈pos〉) (2296)
  a=r 0 (2296)
  a+= 3 (2298)
  d=a (2300)
  a=*d (2301)
  r=a 1 (2302)
  (         H[t1]〈〉 = H[t0+1]〈size〉) (2304)
  a=r 0 (2304)
  a++ (2306)
  d=a (2307)
  c=*d (2308)
  d=r 1 (2309)
  *d=c (2311)
  (                    100:       pH[pos+1] = 1  # allocated) (2312)
  (         t1 = H[t0+3]〈pos〉 + 1) (2312)
  c= 1 (2312)
  a=r 0 (2314)
  a+= 3 (2316)
  d=a (2318)
  a=*d (2319)
  a+=c (2320)
  r=a 1 (2321)
  (         H[t1]〈〉 = 1) (2323)
  d=a (2323)
  *d= 1 (2324)
  (                    101:       return pos+2  # return pointer to first element) (2326)
  (         t1 = H[t0+3]〈pos〉 + 2) (2326)
  c= 2 (2326)
  a=r 0 (2328)
  a+= 3 (2330)
  d=a (2332)
  a=*d (2333)
  a+=c (2334)
  r=a 1 (2335)
  (         t1 = t1) (2337)
  (         t2 = H[t0]〈〉) (2337)
  d=r 0 (2337)
  a=*d (2339)
  r=a 2 (2340)
  (         t0 = t0 - 1) (2342)
  a=r 0 (2342)
  a-- (2344)
  r=a 0 (2345)
  (         t0 = H[t0]〈〉) (2347)
  d=a (2347)
  a=*d (2348)
  r=a 0 (2349)
  (         goto find_label_ret_id) (2351)
  lj 62666 (2351)
  (         goto endif_49) (2354)
  lj 2357 (2354)
  (        :else_48:) (2357)
  (        :endif_49:) (2357)
  (                    103:     pos += 2 + pH[pos]) (2357)
  (         t2 = H[t0+3]〈pos〉) (2357)
  a=r 0 (2357)
  a+= 3 (2359)
  d=a (2361)
  a=*d (2362)
  r=a 2 (2363)
  (         t1 = 2 + H[t2]〈〉) (2365)
  d=a (2365)
  c=*d (2366)
  a= 2 (2367)
  a+=c (2369)
  r=a 1 (2370)
  (         H[t0+3]〈pos〉 = H[t0+3]〈pos〉 + t1) (2372)
  c=a (2372)
  a=r 0 (2373)
  a+= 3 (2375)
  d=a (2377)
  a=*d (2378)
  a+=c (2379)
  c=a (2380)
  *d=c (2381)
  (         goto while_38) (2382)
  lj 1732 (2382)
  (        :whileend_40:) (2385)
  (                    104:   error〈〉) (2385)
  (         error) (2385)
  error (2385)
  (insert return as it might not be done by the function:) (2386)
  (         t2 = H[t0]〈〉) (2386)
  d=r 0 (2386)
  a=*d (2388)
  r=a 2 (2389)
  (         t0 = t0 - 1) (2391)
  a=r 0 (2391)
  a-- (2393)
  r=a 0 (2394)
  (         t0 = H[t0]〈〉) (2396)
  d=a (2396)
  a=*d (2397)
  r=a 0 (2398)
  (         goto find_label_ret_id) (2400)
  lj 62666 (2400)
  (         MarkTempVarEnd) (2403)
  (        :addr_alloc_pH_end~:) (2403)
  (                    107: def addr_alloc_hH〈size〉:) (2403)
  (                    136: def addr_alloc_hM〈size〉:) (2403)
  (                    168: def addr_free_pM〈addr〉:) (2403)
  (         goto addr_free_pM_end~) (2403)
  lj 2910 (2403)
  (        :addr_free_pM:) (2406)
  (         MarkTempVarStart) (2406)
  (Arg addr at t0 + 1) (2406)
  (                    169:   last_free = NONE) (2406)
  (         H[t0+2]〈last_free〉 = 4294967295) (2406)
  a=r 0 (2406)
  a+= 2 (2408)
  d=a (2410)
  *d=0 (2411)
  *d-- (2412)
  (                    170:   pos = 0  # 0 is start) (2413)
  (         H[t0+3]〈pos〉 = 0) (2413)
  d++ (2413)
  *d=0 (2414)
  (                    171:   addr -= 5  # addr showed to first element, not block start) (2415)
  (         H[t0+1]〈addr〉 = H[t0+1]〈addr〉 - 5) (2415)
  c= 5 (2415)
  a=r 0 (2417)
  a++ (2419)
  d=a (2420)
  a=*d (2421)
  a-=c (2422)
  c=a (2423)
  *d=c (2424)
  (                    172:   pM[addr+4] = 0  # free) (2425)
  (         t1 = H[t0+1]〈addr〉 + 4) (2425)
  c= 4 (2425)
  a=*d (2427)
  a+=c (2428)
  r=a 1 (2429)
  (         M[t1] = 0) (2431)
  c=a (2431)
  *c=0 (2432)
  (                    173:   while pos < addr:) (2433)
  (        :while_113:) (2433)
  (         t1 = H[t0+3]〈pos〉 < H[t0+1]〈addr〉) (2433)
  a=r 0 (2433)
  a++ (2435)
  d=a (2436)
  c=*d (2437)
  a=r 0 (2438)
  a+= 3 (2440)
  d=a (2442)
  a=*d (2443)
  a<c (2444)
  a=0 (2445)
  jf 1 (2446)
  a++ (2448)
  r=a 1 (2449)
  (         ifN t1 goto whileend_115) (2451)
  a== 0 (2451)
  jf 3 (2453)
  lj 2548 (2455)
  (                    174:     if pM[pos+4] == 0:  # of type 'free'?) (2458)
  (         t2 = H[t0+3]〈pos〉 + 4) (2458)
  c= 4 (2458)
  a=*d (2460)
  a+=c (2461)
  r=a 2 (2462)
  (         t1 = M[t2] == 0) (2464)
  c=0 (2464)
  b=a (2465)
  a=*b (2466)
  a==c (2467)
  a=0 (2468)
  jf 1 (2469)
  a++ (2471)
  r=a 1 (2472)
  (         ifN t1 goto else_118) (2474)
  a== 0 (2474)
  jf 3 (2476)
  lj 2487 (2478)
  (                    175:       last_free = pos) (2481)
  (         H[t0+2]〈last_free〉 = H[t0+3]〈pos〉) (2481)
  c=*d (2481)
  d-- (2482)
  *d=c (2483)
  (         goto endif_119) (2484)
  lj 2494 (2484)
  (        :else_118:) (2487)
  (                    177:       last_free = NONE) (2487)
  (         H[t0+2]〈last_free〉 = 4294967295) (2487)
  a=r 0 (2487)
  a+= 2 (2489)
  d=a (2491)
  *d=0 (2492)
  *d-- (2493)
  (        :endif_119:) (2494)
  (                    178:     pos += 5 + get32_pM〈pos〉) (2494)
  (         H[t0+5]〈〉 = t0) (2494)
  a=r 0 (2494)
  a+= 5 (2496)
  d=a (2498)
  a=r 0 (2499)
  *d=a (2501)
  (saved bsp, return id:) (2502)
  (         H[t0+6]〈〉 = 18) (2502)
  d++ (2502)
  *d= 18 (2503)
  (push arguments:) (2505)
  (         H[t0+7]〈〉 = H[t0+3]〈pos〉) (2505)
  a+= 3 (2505)
  d=a (2507)
  c=*d (2508)
  a=r 0 (2509)
  a+= 7 (2511)
  d=a (2513)
  *d=c (2514)
  (         t0 = t0 + 6) (2515)
  c= 6 (2515)
  a=r 0 (2517)
  a+=c (2519)
  r=a 0 (2520)
  (         goto get32_pM) (2522)
  lj 101 (2522)
  (        :return_id_18:) (2525)
  (         t2 = t1) (2525)
  a=r 1 (2525)
  r=a 2 (2527)
  (         t1 = 5 + t2) (2529)
  c=a (2529)
  a= 5 (2530)
  a+=c (2532)
  r=a 1 (2533)
  (         H[t0+3]〈pos〉 = H[t0+3]〈pos〉 + t1) (2535)
  c=a (2535)
  a=r 0 (2536)
  a+= 3 (2538)
  d=a (2540)
  a=*d (2541)
  a+=c (2542)
  c=a (2543)
  *d=c (2544)
  (         goto while_113) (2545)
  lj 2433 (2545)
  (        :whileend_115:) (2548)
  (                    180:   addr_size = get32_pM〈addr〉) (2548)
  (         H[t0+4]〈〉 = t0) (2548)
  a=r 0 (2548)
  a+= 4 (2550)
  d=a (2552)
  a=r 0 (2553)
  *d=a (2555)
  (saved bsp, return id:) (2556)
  (         H[t0+5]〈〉 = 19) (2556)
  d++ (2556)
  *d= 19 (2557)
  (push arguments:) (2559)
  (         H[t0+6]〈〉 = H[t0+1]〈addr〉) (2559)
  a++ (2559)
  d=a (2560)
  c=*d (2561)
  a=r 0 (2562)
  a+= 6 (2564)
  d=a (2566)
  *d=c (2567)
  (         t0 = t0 + 5) (2568)
  c= 5 (2568)
  a=r 0 (2570)
  a+=c (2572)
  r=a 0 (2573)
  (         goto get32_pM) (2575)
  lj 101 (2575)
  (        :return_id_19:) (2578)
  (         H[t0+4]〈addr_size〉 = t1) (2578)
  a=r 0 (2578)
  a+= 4 (2580)
  d=a (2582)
  a=r 1 (2583)
  *d=a (2585)
  (                    181:   if addr+9+addr_size < len〈pM〉 and pM[addr+9+addr_size] == 0: # merge with next block) (2586)
  (         t4 = H[t0+1]〈addr〉 + 9) (2586)
  c= 9 (2586)
  a=r 0 (2588)
  a++ (2590)
  d=a (2591)
  a=*d (2592)
  a+=c (2593)
  r=a 4 (2594)
  (         t3 = t4 + H[t0+4]〈addr_size〉) (2596)
  a=r 0 (2596)
  a+= 4 (2598)
  d=a (2600)
  c=*d (2601)
  a=r 4 (2602)
  a+=c (2604)
  r=a 3 (2605)
  (         t2 = t3 < 67108864) (2607)
  a= 4 (2607)
  a<<= 8 (2609)
  a<<= 8 (2611)
  a<<= 8 (2613)
  c=a (2615)
  a=r 3 (2616)
  a<c (2618)
  a=0 (2619)
  jf 1 (2620)
  a++ (2622)
  r=a 2 (2623)
  (         t5 = H[t0+1]〈addr〉 + 9) (2625)
  c= 9 (2625)
  a=r 0 (2627)
  a++ (2629)
  d=a (2630)
  a=*d (2631)
  a+=c (2632)
  r=a 5 (2633)
  (         t4 = t5 + H[t0+4]〈addr_size〉) (2635)
  a=r 0 (2635)
  a+= 4 (2637)
  d=a (2639)
  c=*d (2640)
  a=r 5 (2641)
  a+=c (2643)
  r=a 4 (2644)
  (         t3 = M[t4] == 0) (2646)
  c=0 (2646)
  b=a (2647)
  a=*b (2648)
  a==c (2649)
  a=0 (2650)
  jf 1 (2651)
  a++ (2653)
  r=a 3 (2654)
  (         t1 = t2 and t3) (2656)
  c=a (2656)
  a=r 2 (2657)
  a== 0 (2659)
  jt 1 (2661)
  a=c (2663)
  r=a 1 (2664)
  (         ifN t1 goto else_122) (2666)
  a== 0 (2666)
  jf 3 (2668)
  lj 2782 (2670)
  (                    183:     set32_pM〈addr, addr_size + 5 + get32_pM〈addr+5+addr_size〉〉 # + 5 is header) (2673)
  (         t2 = H[t0+4]〈addr_size〉 + 5) (2673)
  c= 5 (2673)
  a=*d (2675)
  a+=c (2676)
  r=a 2 (2677)
  (         t4 = H[t0+1]〈addr〉 + 5) (2679)
  c= 5 (2679)
  a=r 0 (2681)
  a++ (2683)
  d=a (2684)
  a=*d (2685)
  a+=c (2686)
  r=a 4 (2687)
  (         t3 = t4 + H[t0+4]〈addr_size〉) (2689)
  a=r 0 (2689)
  a+= 4 (2691)
  d=a (2693)
  c=*d (2694)
  a=r 4 (2695)
  a+=c (2697)
  r=a 3 (2698)
  (         H[t0+5]〈〉 = t2) (2700)
  d++ (2700)
  a=r 2 (2701)
  *d=a (2703)
  (         H[t0+7]〈〉 = t0) (2704)
  a=r 0 (2704)
  a+= 7 (2706)
  d=a (2708)
  a=r 0 (2709)
  *d=a (2711)
  (saved bsp, return id:) (2712)
  (         H[t0+8]〈〉 = 20) (2712)
  d++ (2712)
  *d= 20 (2713)
  (push arguments:) (2715)
  (         H[t0+9]〈〉 = t3) (2715)
  d++ (2715)
  a=r 3 (2716)
  *d=a (2718)
  (         t0 = t0 + 8) (2719)
  c= 8 (2719)
  a=r 0 (2721)
  a+=c (2723)
  r=a 0 (2724)
  (         goto get32_pM) (2726)
  lj 101 (2726)
  (        :return_id_20:) (2729)
  (         t4 = t1) (2729)
  a=r 1 (2729)
  r=a 4 (2731)
  (         t2 = H[t0+5]〈〉) (2733)
  a=r 0 (2733)
  a+= 5 (2735)
  d=a (2737)
  a=*d (2738)
  r=a 2 (2739)
  (         t1 = t2 + t4) (2741)
  c=r 4 (2741)
  a+=c (2743)
  r=a 1 (2744)
  (         H[t0+5]〈〉 = t0) (2746)
  a=r 0 (2746)
  *d=a (2748)
  (saved bsp, return id:) (2749)
  (         H[t0+6]〈〉 = 21) (2749)
  d++ (2749)
  *d= 21 (2750)
  (push arguments:) (2752)
  (         H[t0+7]〈〉 = H[t0+1]〈addr〉) (2752)
  a++ (2752)
  d=a (2753)
  c=*d (2754)
  a=r 0 (2755)
  a+= 7 (2757)
  d=a (2759)
  *d=c (2760)
  (         H[t0+8]〈〉 = t1) (2761)
  d++ (2761)
  a=r 1 (2762)
  *d=a (2764)
  (         t0 = t0 + 6) (2765)
  c= 6 (2765)
  a=r 0 (2767)
  a+=c (2769)
  r=a 0 (2770)
  (         goto set32_pM) (2772)
  lj 200 (2772)
  (        :return_id_21:) (2775)
  (         t2 = t1) (2775)
  a=r 1 (2775)
  r=a 2 (2777)
  (         goto endif_123) (2779)
  lj 2782 (2779)
  (        :else_122:) (2782)
  (        :endif_123:) (2782)
  (                    185:   if last_free != NONE:) (2782)
  (         t1 = H[t0+2]〈last_free〉 != 4294967295) (2782)
  c=0 (2782)
  c-- (2783)
  a=r 0 (2784)
  a+= 2 (2786)
  d=a (2788)
  a=*d (2789)
  a==c (2790)
  a=0 (2791)
  jt 1 (2792)
  a++ (2794)
  r=a 1 (2795)
  (         ifN t1 goto else_125) (2797)
  a== 0 (2797)
  jf 3 (2799)
  lj 2893 (2801)
  (                    187:     set32_pM〈last_free, get32_pM〈last_free〉 + 5 + addr_size〉  # + 5 is header) (2804)
  (         H[t0+7]〈〉 = t0) (2804)
  a=r 0 (2804)
  a+= 7 (2806)
  d=a (2808)
  a=r 0 (2809)
  *d=a (2811)
  (saved bsp, return id:) (2812)
  (         H[t0+8]〈〉 = 22) (2812)
  d++ (2812)
  *d= 22 (2813)
  (push arguments:) (2815)
  (         H[t0+9]〈〉 = H[t0+2]〈last_free〉) (2815)
  a+= 2 (2815)
  d=a (2817)
  c=*d (2818)
  a=r 0 (2819)
  a+= 9 (2821)
  d=a (2823)
  *d=c (2824)
  (         t0 = t0 + 8) (2825)
  c= 8 (2825)
  a=r 0 (2827)
  a+=c (2829)
  r=a 0 (2830)
  (         goto get32_pM) (2832)
  lj 101 (2832)
  (        :return_id_22:) (2835)
  (         t3 = t1) (2835)
  a=r 1 (2835)
  r=a 3 (2837)
  (         t2 = t3 + 5) (2839)
  c= 5 (2839)
  a+=c (2841)
  r=a 2 (2842)
  (         t1 = t2 + H[t0+4]〈addr_size〉) (2844)
  a=r 0 (2844)
  a+= 4 (2846)
  d=a (2848)
  c=*d (2849)
  a=r 2 (2850)
  a+=c (2852)
  r=a 1 (2853)
  (         H[t0+5]〈〉 = t0) (2855)
  d++ (2855)
  a=r 0 (2856)
  *d=a (2858)
  (saved bsp, return id:) (2859)
  (         H[t0+6]〈〉 = 23) (2859)
  d++ (2859)
  *d= 23 (2860)
  (push arguments:) (2862)
  (         H[t0+7]〈〉 = H[t0+2]〈last_free〉) (2862)
  a+= 2 (2862)
  d=a (2864)
  c=*d (2865)
  a=r 0 (2866)
  a+= 7 (2868)
  d=a (2870)
  *d=c (2871)
  (         H[t0+8]〈〉 = t1) (2872)
  d++ (2872)
  a=r 1 (2873)
  *d=a (2875)
  (         t0 = t0 + 6) (2876)
  c= 6 (2876)
  a=r 0 (2878)
  a+=c (2880)
  r=a 0 (2881)
  (         goto set32_pM) (2883)
  lj 200 (2883)
  (        :return_id_23:) (2886)
  (         t2 = t1) (2886)
  a=r 1 (2886)
  r=a 2 (2888)
  (         goto endif_126) (2890)
  lj 2893 (2890)
  (        :else_125:) (2893)
  (        :endif_126:) (2893)
  (insert return as it might not be done by the function:) (2893)
  (         t2 = H[t0]〈〉) (2893)
  d=r 0 (2893)
  a=*d (2895)
  r=a 2 (2896)
  (         t0 = t0 - 1) (2898)
  a=r 0 (2898)
  a-- (2900)
  r=a 0 (2901)
  (         t0 = H[t0]〈〉) (2903)
  d=a (2903)
  a=*d (2904)
  r=a 0 (2905)
  (         goto find_label_ret_id) (2907)
  lj 62666 (2907)
  (         MarkTempVarEnd) (2910)
  (        :addr_free_pM_end~:) (2910)
  (                    190: def addr_free_pH〈addr〉:  # expects a valid reference to a used block) (2910)
  (         goto addr_free_pH_end~) (2910)
  lj 3252 (2910)
  (        :addr_free_pH:) (2913)
  (         MarkTempVarStart) (2913)
  (Arg addr at t0 + 1) (2913)
  (                    191:   last_free = NONE) (2913)
  (         H[t0+2]〈last_free〉 = 4294967295) (2913)
  a=r 0 (2913)
  a+= 2 (2915)
  d=a (2917)
  *d=0 (2918)
  *d-- (2919)
  (                    192:   pos = 0  # 0 is start) (2920)
  (         H[t0+3]〈pos〉 = 0) (2920)
  d++ (2920)
  *d=0 (2921)
  (                    193:   addr -= 2  # addr showed to first element, not block start) (2922)
  (         H[t0+1]〈addr〉 = H[t0+1]〈addr〉 - 2) (2922)
  c= 2 (2922)
  a=r 0 (2924)
  a++ (2926)
  d=a (2927)
  a=*d (2928)
  a-=c (2929)
  c=a (2930)
  *d=c (2931)
  (                    194:   pH[addr+1] = 0  # free) (2932)
  (         t1 = H[t0+1]〈addr〉 + 1) (2932)
  c= 1 (2932)
  a=*d (2934)
  a+=c (2935)
  r=a 1 (2936)
  (         H[t1]〈〉 = 0) (2938)
  d=a (2938)
  *d=0 (2939)
  (                    195:   while pos < addr:) (2940)
  (        :while_127:) (2940)
  (         t1 = H[t0+3]〈pos〉 < H[t0+1]〈addr〉) (2940)
  a=r 0 (2940)
  a++ (2942)
  d=a (2943)
  c=*d (2944)
  a=r 0 (2945)
  a+= 3 (2947)
  d=a (2949)
  a=*d (2950)
  a<c (2951)
  a=0 (2952)
  jf 1 (2953)
  a++ (2955)
  r=a 1 (2956)
  (         ifN t1 goto whileend_129) (2958)
  a== 0 (2958)
  jf 3 (2960)
  lj 3034 (2962)
  (                    196:     if pH[pos+1] == 0:  # of type 'free'?) (2965)
  (         t2 = H[t0+3]〈pos〉 + 1) (2965)
  c= 1 (2965)
  a=*d (2967)
  a+=c (2968)
  r=a 2 (2969)
  (         t1 = H[t2]〈〉 == 0) (2971)
  c=0 (2971)
  d=a (2972)
  a=*d (2973)
  a==c (2974)
  a=0 (2975)
  jf 1 (2976)
  a++ (2978)
  r=a 1 (2979)
  (         ifN t1 goto else_132) (2981)
  a== 0 (2981)
  jf 3 (2983)
  lj 2999 (2985)
  (                    197:       last_free = pos) (2988)
  (         H[t0+2]〈last_free〉 = H[t0+3]〈pos〉) (2988)
  a=r 0 (2988)
  a+= 3 (2990)
  d=a (2992)
  c=*d (2993)
  d-- (2994)
  *d=c (2995)
  (         goto endif_133) (2996)
  lj 3006 (2996)
  (        :else_132:) (2999)
  (                    199:       last_free = NONE) (2999)
  (         H[t0+2]〈last_free〉 = 4294967295) (2999)
  a=r 0 (2999)
  a+= 2 (3001)
  d=a (3003)
  *d=0 (3004)
  *d-- (3005)
  (        :endif_133:) (3006)
  (                    200:     pos += 2 + pH[pos]) (3006)
  (         t2 = H[t0+3]〈pos〉) (3006)
  a=r 0 (3006)
  a+= 3 (3008)
  d=a (3010)
  a=*d (3011)
  r=a 2 (3012)
  (         t1 = 2 + H[t2]〈〉) (3014)
  d=a (3014)
  c=*d (3015)
  a= 2 (3016)
  a+=c (3018)
  r=a 1 (3019)
  (         H[t0+3]〈pos〉 = H[t0+3]〈pos〉 + t1) (3021)
  c=a (3021)
  a=r 0 (3022)
  a+= 3 (3024)
  d=a (3026)
  a=*d (3027)
  a+=c (3028)
  c=a (3029)
  *d=c (3030)
  (         goto while_127) (3031)
  lj 2940 (3031)
  (        :whileend_129:) (3034)
  (                    202:   if addr+3+pH[addr] < len〈pH〉 and pH[addr+3+pH[addr]] == 0: # merge with next block) (3034)
  (         t4 = H[t0+1]〈addr〉 + 3) (3034)
  c= 3 (3034)
  a=r 0 (3036)
  a++ (3038)
  d=a (3039)
  a=*d (3040)
  a+=c (3041)
  r=a 4 (3042)
  (         t5 = H[t0+1]〈addr〉) (3044)
  a=*d (3044)
  r=a 5 (3045)
  (         t3 = t4 + H[t5]〈〉) (3047)
  d=a (3047)
  c=*d (3048)
  a=r 4 (3049)
  a+=c (3051)
  r=a 3 (3052)
  (         t2 = t3 < 67108864) (3054)
  a= 4 (3054)
  a<<= 8 (3056)
  a<<= 8 (3058)
  a<<= 8 (3060)
  c=a (3062)
  a=r 3 (3063)
  a<c (3065)
  a=0 (3066)
  jf 1 (3067)
  a++ (3069)
  r=a 2 (3070)
  (         t5 = H[t0+1]〈addr〉 + 3) (3072)
  c= 3 (3072)
  a=r 0 (3074)
  a++ (3076)
  d=a (3077)
  a=*d (3078)
  a+=c (3079)
  r=a 5 (3080)
  (         t6 = H[t0+1]〈addr〉) (3082)
  a=*d (3082)
  r=a 6 (3083)
  (         t4 = t5 + H[t6]〈〉) (3085)
  d=a (3085)
  c=*d (3086)
  a=r 5 (3087)
  a+=c (3089)
  r=a 4 (3090)
  (         t3 = H[t4]〈〉 == 0) (3092)
  c=0 (3092)
  d=a (3093)
  a=*d (3094)
  a==c (3095)
  a=0 (3096)
  jf 1 (3097)
  a++ (3099)
  r=a 3 (3100)
  (         t1 = t2 and t3) (3102)
  c=a (3102)
  a=r 2 (3103)
  a== 0 (3105)
  jt 1 (3107)
  a=c (3109)
  r=a 1 (3110)
  (         ifN t1 goto else_136) (3112)
  a== 0 (3112)
  jf 3 (3114)
  lj 3174 (3116)
  (                    204:     pH[addr] = pH[addr] + 2 + pH[addr+2+pH[addr]] # + 2 is header) (3119)
  (         t3 = H[t0+1]〈addr〉) (3119)
  a=r 0 (3119)
  a++ (3121)
  d=a (3122)
  a=*d (3123)
  r=a 3 (3124)
  (         t2 = H[t3]〈〉 + 2) (3126)
  c= 2 (3126)
  d=a (3128)
  a=*d (3129)
  a+=c (3130)
  r=a 2 (3131)
  (         t4 = H[t0+1]〈addr〉 + 2) (3133)
  c= 2 (3133)
  a=r 0 (3135)
  a++ (3137)
  d=a (3138)
  a=*d (3139)
  a+=c (3140)
  r=a 4 (3141)
  (         t5 = H[t0+1]〈addr〉) (3143)
  a=*d (3143)
  r=a 5 (3144)
  (         t3 = t4 + H[t5]〈〉) (3146)
  d=a (3146)
  c=*d (3147)
  a=r 4 (3148)
  a+=c (3150)
  r=a 3 (3151)
  (         t1 = t2 + H[t3]〈〉) (3153)
  d=a (3153)
  c=*d (3154)
  a=r 2 (3155)
  a+=c (3157)
  r=a 1 (3158)
  (         t2 = H[t0+1]〈addr〉) (3160)
  a=r 0 (3160)
  a++ (3162)
  d=a (3163)
  a=*d (3164)
  r=a 2 (3165)
  (         H[t2]〈〉 = t1) (3167)
  d=a (3167)
  a=r 1 (3168)
  *d=a (3170)
  (         goto endif_137) (3171)
  lj 3174 (3171)
  (        :else_136:) (3174)
  (        :endif_137:) (3174)
  (                    206:   if last_free != NONE:) (3174)
  (         t1 = H[t0+2]〈last_free〉 != 4294967295) (3174)
  c=0 (3174)
  c-- (3175)
  a=r 0 (3176)
  a+= 2 (3178)
  d=a (3180)
  a=*d (3181)
  a==c (3182)
  a=0 (3183)
  jt 1 (3184)
  a++ (3186)
  r=a 1 (3187)
  (         ifN t1 goto else_139) (3189)
  a== 0 (3189)
  jf 3 (3191)
  lj 3235 (3193)
  (                    208:     pH[last_free] = pH[last_free] + 2 + pH[addr] # + 2 is header) (3196)
  (         t3 = H[t0+2]〈last_free〉) (3196)
  a=*d (3196)
  r=a 3 (3197)
  (         t2 = H[t3]〈〉 + 2) (3199)
  c= 2 (3199)
  d=a (3201)
  a=*d (3202)
  a+=c (3203)
  r=a 2 (3204)
  (         t3 = H[t0+1]〈addr〉) (3206)
  a=r 0 (3206)
  a++ (3208)
  d=a (3209)
  a=*d (3210)
  r=a 3 (3211)
  (         t1 = t2 + H[t3]〈〉) (3213)
  d=a (3213)
  c=*d (3214)
  a=r 2 (3215)
  a+=c (3217)
  r=a 1 (3218)
  (         t2 = H[t0+2]〈last_free〉) (3220)
  a=r 0 (3220)
  a+= 2 (3222)
  d=a (3224)
  a=*d (3225)
  r=a 2 (3226)
  (         H[t2]〈〉 = t1) (3228)
  d=a (3228)
  a=r 1 (3229)
  *d=a (3231)
  (         goto endif_140) (3232)
  lj 3235 (3232)
  (        :else_139:) (3235)
  (        :endif_140:) (3235)
  (insert return as it might not be done by the function:) (3235)
  (         t2 = H[t0]〈〉) (3235)
  d=r 0 (3235)
  a=*d (3237)
  r=a 2 (3238)
  (         t0 = t0 - 1) (3240)
  a=r 0 (3240)
  a-- (3242)
  r=a 0 (3243)
  (         t0 = H[t0]〈〉) (3245)
  d=a (3245)
  a=*d (3246)
  r=a 0 (3247)
  (         goto find_label_ret_id) (3249)
  lj 62666 (3249)
  (         MarkTempVarEnd) (3252)
  (        :addr_free_pH_end~:) (3252)
  (                    211: def addr_free_hH〈addr〉:  # expects a valid reference to a used block) (3252)
  (                    231: def addr_free_hM〈addr〉:) (3252)
  (                    254: pass) (3252)
  (                    383: bit_pos = 0) (3252)
  (         H[t0+1]〈bit_pos〉 = 0) (3252)
  a=r 0 (3252)
  a++ (3254)
  d=a (3255)
  *d=0 (3256)
  (                    384: current_byte = NONE) (3257)
  (         H[t0+2]〈current_byte〉 = 4294967295) (3257)
  d++ (3257)
  *d=0 (3258)
  *d-- (3259)
  (                    385: global_bit_pos = 0) (3260)
  (         H[t0+3]〈global_bit_pos〉 = 0) (3260)
  d++ (3260)
  *d=0 (3261)
  (                    387: read_exact_result = 0) (3262)
  (         H[t0+4]〈read_exact_result〉 = 0) (3262)
  d++ (3262)
  *d=0 (3263)
  (                    388: def read_exact〈〉: # read only one as it's anyway not used for more) (3264)
  (         goto read_exact_end~) (3264)
  lj 3370 (3264)
  (        :read_exact:) (3267)
  (         MarkTempVarStart) (3267)
  (                    389:   global read_exact_result) (3267)
  (Global read_exact_result via H[t252+4]) (3267)
  (                    390:   read_exact_result = read_b〈〉) (3267)
  (         H[t0+1]〈〉 = t0) (3267)
  a=r 0 (3267)
  a++ (3269)
  d=a (3270)
  a=r 0 (3271)
  *d=a (3273)
  (saved bsp, return id:) (3274)
  (         H[t0+2]〈〉 = 30) (3274)
  d++ (3274)
  *d= 30 (3275)
  (push arguments:) (3277)
  (         t0 = t0 + 2) (3277)
  c= 2 (3277)
  a+=c (3279)
  r=a 0 (3280)
  (         goto read_b) (3282)
  lj 38 (3282)
  (        :return_id_30:) (3285)
  (         H[t252+4]〈read_exact_result〉 = t1) (3285)
  a=r 252 (3285)
  a+= 4 (3287)
  d=a (3289)
  a=r 1 (3290)
  *d=a (3292)
  (                    391:   if read_exact_result == NONE:) (3293)
  (         t1 = H[t252+4]〈read_exact_result〉 == 4294967295) (3293)
  c=0 (3293)
  c-- (3294)
  a=*d (3295)
  a==c (3296)
  a=0 (3297)
  jf 1 (3298)
  a++ (3300)
  r=a 1 (3301)
  (         ifN t1 goto else_170) (3303)
  a== 0 (3303)
  jf 3 (3305)
  lj 3334 (3307)
  (                    392:     return 1 # eos error〈〉) (3310)
  (         t1 = 1) (3310)
  a= 1 (3310)
  r=a 1 (3312)
  (         t2 = H[t0]〈〉) (3314)
  d=r 0 (3314)
  a=*d (3316)
  r=a 2 (3317)
  (         t0 = t0 - 1) (3319)
  a=r 0 (3319)
  a-- (3321)
  r=a 0 (3322)
  (         t0 = H[t0]〈〉) (3324)
  d=a (3324)
  a=*d (3325)
  r=a 0 (3326)
  (         goto find_label_ret_id) (3328)
  lj 62666 (3328)
  (         goto endif_171) (3331)
  lj 3334 (3331)
  (        :else_170:) (3334)
  (        :endif_171:) (3334)
  (                    393:   return 0) (3334)
  (         t1 = 0) (3334)
  a=0 (3334)
  r=a 1 (3335)
  (         t2 = H[t0]〈〉) (3337)
  d=r 0 (3337)
  a=*d (3339)
  r=a 2 (3340)
  (         t0 = t0 - 1) (3342)
  a=r 0 (3342)
  a-- (3344)
  r=a 0 (3345)
  (         t0 = H[t0]〈〉) (3347)
  d=a (3347)
  a=*d (3348)
  r=a 0 (3349)
  (         goto find_label_ret_id) (3351)
  lj 62666 (3351)
  (insert return as it might not be done by the function:) (3354)
  (         t2 = H[t0]〈〉) (3354)
  d=a (3354)
  a=*d (3355)
  r=a 2 (3356)
  (         t0 = t0 - 1) (3358)
  a=r 0 (3358)
  a-- (3360)
  r=a 0 (3361)
  (         t0 = H[t0]〈〉) (3363)
  d=a (3363)
  a=*d (3364)
  r=a 0 (3365)
  (         goto find_label_ret_id) (3367)
  lj 62666 (3367)
  (         MarkTempVarEnd) (3370)
  (        :read_exact_end~:) (3370)
  (                    395: def read_u8〈〉:  # return NONE for eof) (3370)
  (         goto read_u8_end~) (3370)
  lj 3783 (3370)
  (        :read_u8:) (3373)
  (         MarkTempVarStart) (3373)
  (                    396:   global bit_pos, current_byte, global_bit_pos) (3373)
  (Global bit_pos via H[t252+1]) (3373)
  (Global current_byte via H[t252+2]) (3373)
  (Global global_bit_pos via H[t252+3]) (3373)
  (                    397:   res = read_exact〈〉) (3373)
  (         H[t0+1]〈〉 = t0) (3373)
  a=r 0 (3373)
  a++ (3375)
  d=a (3376)
  a=r 0 (3377)
  *d=a (3379)
  (saved bsp, return id:) (3380)
  (         H[t0+2]〈〉 = 31) (3380)
  d++ (3380)
  *d= 31 (3381)
  (push arguments:) (3383)
  (         t0 = t0 + 2) (3383)
  c= 2 (3383)
  a+=c (3385)
  r=a 0 (3386)
  (         goto read_exact) (3388)
  lj 3267 (3388)
  (        :return_id_31:) (3391)
  (         H[t0+1]〈res〉 = t1) (3391)
  a=r 0 (3391)
  a++ (3393)
  d=a (3394)
  a=r 1 (3395)
  *d=a (3397)
  (                    398:   buf = read_exact_result) (3398)
  (         H[t0+2]〈buf〉 = H[t252+4]〈read_exact_result〉) (3398)
  a=r 252 (3398)
  a+= 4 (3400)
  d=a (3402)
  c=*d (3403)
  a=r 0 (3404)
  a+= 2 (3406)
  d=a (3408)
  *d=c (3409)
  (                    399:   if bit_pos == 0 and current_byte != NONE and res == 1:  # i.e. res == EOS) (3410)
  (         t3 = H[t252+1]〈bit_pos〉 == 0) (3410)
  c=0 (3410)
  a=r 252 (3411)
  a++ (3413)
  d=a (3414)
  a=*d (3415)
  a==c (3416)
  a=0 (3417)
  jf 1 (3418)
  a++ (3420)
  r=a 3 (3421)
  (         t4 = H[t252+2]〈current_byte〉 != 4294967295) (3423)
  c=0 (3423)
  c-- (3424)
  d++ (3425)
  a=*d (3426)
  a==c (3427)
  a=0 (3428)
  jt 1 (3429)
  a++ (3431)
  r=a 4 (3432)
  (         t2 = t3 and t4) (3434)
  c=a (3434)
  a=r 3 (3435)
  a== 0 (3437)
  jt 1 (3439)
  a=c (3441)
  r=a 2 (3442)
  (         t3 = H[t0+1]〈res〉 == 1) (3444)
  c= 1 (3444)
  a=r 0 (3446)
  a++ (3448)
  d=a (3449)
  a=*d (3450)
  a==c (3451)
  a=0 (3452)
  jf 1 (3453)
  a++ (3455)
  r=a 3 (3456)
  (         t1 = t2 and t3) (3458)
  c=a (3458)
  a=r 2 (3459)
  a== 0 (3461)
  jt 1 (3463)
  a=c (3465)
  r=a 1 (3466)
  (         ifN t1 goto else_175) (3468)
  a== 0 (3468)
  jf 3 (3470)
  lj 3529 (3472)
  (                    400:     tmp_ = current_byte) (3475)
  (         H[t0+3]〈tmp_〉 = H[t252+2]〈current_byte〉) (3475)
  a=r 252 (3475)
  a+= 2 (3477)
  d=a (3479)
  c=*d (3480)
  a=r 0 (3481)
  a+= 3 (3483)
  d=a (3485)
  *d=c (3486)
  (                    401:     current_byte = NONE) (3487)
  (         H[t252+2]〈current_byte〉 = 4294967295) (3487)
  a=r 252 (3487)
  a+= 2 (3489)
  d=a (3491)
  *d=0 (3492)
  *d-- (3493)
  (                    402:     global_bit_pos += 8) (3494)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 8) (3494)
  c= 8 (3494)
  d++ (3496)
  a=*d (3497)
  a+=c (3498)
  c=a (3499)
  *d=c (3500)
  (                    403:     return tmp_) (3501)
  (         t1 = H[t0+3]〈tmp_〉) (3501)
  a=r 0 (3501)
  a+= 3 (3503)
  d=a (3505)
  a=*d (3506)
  r=a 1 (3507)
  (         t2 = H[t0]〈〉) (3509)
  d=r 0 (3509)
  a=*d (3511)
  r=a 2 (3512)
  (         t0 = t0 - 1) (3514)
  a=r 0 (3514)
  a-- (3516)
  r=a 0 (3517)
  (         t0 = H[t0]〈〉) (3519)
  d=a (3519)
  a=*d (3520)
  r=a 0 (3521)
  (         goto find_label_ret_id) (3523)
  lj 62666 (3523)
  (         goto endif_176) (3526)
  lj 3766 (3526)
  (        :else_175:) (3529)
  (                    404:   elif current_byte == NONE and res == 0:  # i.e. res == Ok〈〉) (3529)
  (         t2 = H[t252+2]〈current_byte〉 == 4294967295) (3529)
  c=0 (3529)
  c-- (3530)
  a=r 252 (3531)
  a+= 2 (3533)
  d=a (3535)
  a=*d (3536)
  a==c (3537)
  a=0 (3538)
  jf 1 (3539)
  a++ (3541)
  r=a 2 (3542)
  (         t3 = H[t0+1]〈res〉 == 0) (3544)
  c=0 (3544)
  a=r 0 (3545)
  a++ (3547)
  d=a (3548)
  a=*d (3549)
  a==c (3550)
  a=0 (3551)
  jf 1 (3552)
  a++ (3554)
  r=a 3 (3555)
  (         t1 = t2 and t3) (3557)
  c=a (3557)
  a=r 2 (3558)
  a== 0 (3560)
  jt 1 (3562)
  a=c (3564)
  r=a 1 (3565)
  (         ifN t1 goto else_179) (3567)
  a== 0 (3567)
  jf 3 (3569)
  lj 3613 (3571)
  (                    405:     global_bit_pos += 8) (3574)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 8) (3574)
  c= 8 (3574)
  a=r 252 (3576)
  a+= 3 (3578)
  d=a (3580)
  a=*d (3581)
  a+=c (3582)
  c=a (3583)
  *d=c (3584)
  (                    406:     return buf) (3585)
  (         t1 = H[t0+2]〈buf〉) (3585)
  a=r 0 (3585)
  a+= 2 (3587)
  d=a (3589)
  a=*d (3590)
  r=a 1 (3591)
  (         t2 = H[t0]〈〉) (3593)
  d=r 0 (3593)
  a=*d (3595)
  r=a 2 (3596)
  (         t0 = t0 - 1) (3598)
  a=r 0 (3598)
  a-- (3600)
  r=a 0 (3601)
  (         t0 = H[t0]〈〉) (3603)
  d=a (3603)
  a=*d (3604)
  r=a 0 (3605)
  (         goto find_label_ret_id) (3607)
  lj 62666 (3607)
  (         goto endif_180) (3610)
  lj 3766 (3610)
  (        :else_179:) (3613)
  (                    407:   elif current_byte != NONE and res == 0:) (3613)
  (         t2 = H[t252+2]〈current_byte〉 != 4294967295) (3613)
  c=0 (3613)
  c-- (3614)
  a=r 252 (3615)
  a+= 2 (3617)
  d=a (3619)
  a=*d (3620)
  a==c (3621)
  a=0 (3622)
  jt 1 (3623)
  a++ (3625)
  r=a 2 (3626)
  (         t3 = H[t0+1]〈res〉 == 0) (3628)
  c=0 (3628)
  a=r 0 (3629)
  a++ (3631)
  d=a (3632)
  a=*d (3633)
  a==c (3634)
  a=0 (3635)
  jf 1 (3636)
  a++ (3638)
  r=a 3 (3639)
  (         t1 = t2 and t3) (3641)
  c=a (3641)
  a=r 2 (3642)
  a== 0 (3644)
  jt 1 (3646)
  a=c (3648)
  r=a 1 (3649)
  (         ifN t1 goto else_183) (3651)
  a== 0 (3651)
  jf 3 (3653)
  lj 3745 (3655)
  (                    408:     tmp_ = current_byte) (3658)
  (         H[t0+3]〈tmp_〉 = H[t252+2]〈current_byte〉) (3658)
  a=r 252 (3658)
  a+= 2 (3660)
  d=a (3662)
  c=*d (3663)
  a=r 0 (3664)
  a+= 3 (3666)
  d=a (3668)
  *d=c (3669)
  (                    409:     current_byte = buf) (3670)
  (         H[t252+2]〈current_byte〉 = H[t0+2]〈buf〉) (3670)
  d-- (3670)
  c=*d (3671)
  a=r 252 (3672)
  a+= 2 (3674)
  d=a (3676)
  *d=c (3677)
  (                    410:     global_bit_pos += 8) (3678)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 8) (3678)
  c= 8 (3678)
  d++ (3680)
  a=*d (3681)
  a+=c (3682)
  c=a (3683)
  *d=c (3684)
  (                    411:     return 〈tmp_ >> bit_pos〉 | 〈buf << 〈8 - bit_pos〉〉) (3685)
  (         t2 = H[t0+3]〈tmp_〉 >> H[t252+1]〈bit_pos〉) (3685)
  a=r 252 (3685)
  a++ (3687)
  d=a (3688)
  c=*d (3689)
  a=r 0 (3690)
  a+= 3 (3692)
  d=a (3694)
  a=*d (3695)
  a>>=c (3696)
  r=a 2 (3697)
  (         t4 = 8 - H[t252+1]〈bit_pos〉) (3699)
  a=r 252 (3699)
  a++ (3701)
  d=a (3702)
  c=*d (3703)
  a= 8 (3704)
  a-=c (3706)
  r=a 4 (3707)
  (         t3 = H[t0+2]〈buf〉 << t4) (3709)
  c=a (3709)
  a=r 0 (3710)
  a+= 2 (3712)
  d=a (3714)
  a=*d (3715)
  a<<=c (3716)
  r=a 3 (3717)
  (         t1 = t2 | t3) (3719)
  c=a (3719)
  a=r 2 (3720)
  a|=c (3722)
  r=a 1 (3723)
  (         t1 = t1) (3725)
  (         t2 = H[t0]〈〉) (3725)
  d=r 0 (3725)
  a=*d (3727)
  r=a 2 (3728)
  (         t0 = t0 - 1) (3730)
  a=r 0 (3730)
  a-- (3732)
  r=a 0 (3733)
  (         t0 = H[t0]〈〉) (3735)
  d=a (3735)
  a=*d (3736)
  r=a 0 (3737)
  (         goto find_label_ret_id) (3739)
  lj 62666 (3739)
  (         goto endif_184) (3742)
  lj 3766 (3742)
  (        :else_183:) (3745)
  (                    413:     return NONE # EOF vs …   @TODO: wird EOF jemals aufgefangen und abgeschwächt?) (3745)
  (         t1 = 4294967295) (3745)
  a=0 (3745)
  a-- (3746)
  r=a 1 (3747)
  (         t2 = H[t0]〈〉) (3749)
  d=r 0 (3749)
  a=*d (3751)
  r=a 2 (3752)
  (         t0 = t0 - 1) (3754)
  a=r 0 (3754)
  a-- (3756)
  r=a 0 (3757)
  (         t0 = H[t0]〈〉) (3759)
  d=a (3759)
  a=*d (3760)
  r=a 0 (3761)
  (         goto find_label_ret_id) (3763)
  lj 62666 (3763)
  (        :endif_184:) (3766)
  (        :endif_180:) (3766)
  (        :endif_176:) (3766)
  (insert return as it might not be done by the function:) (3766)
  (         t2 = H[t0]〈〉) (3766)
  d=r 0 (3766)
  a=*d (3768)
  r=a 2 (3769)
  (         t0 = t0 - 1) (3771)
  a=r 0 (3771)
  a-- (3773)
  r=a 0 (3774)
  (         t0 = H[t0]〈〉) (3776)
  d=a (3776)
  a=*d (3777)
  r=a 0 (3778)
  (         goto find_label_ret_id) (3780)
  lj 62666 (3780)
  (         MarkTempVarEnd) (3783)
  (        :read_u8_end~:) (3783)
  (                    415: read_u8_from_nibble_result = 0) (3783)
  (         H[t0+5]〈read_u8_from_nibble_result〉 = 0) (3783)
  a=r 0 (3783)
  a+= 5 (3785)
  d=a (3787)
  *d=0 (3788)
  (                    416: def read_u8_from_nibble〈〉:  # returns 0 for OK, 1 for Error) (3789)
  (         goto read_u8_from_nibble_end~) (3789)
  lj 4569 (3789)
  (        :read_u8_from_nibble:) (3792)
  (         MarkTempVarStart) (3792)
  (                    417:   global bit_pos, current_byte, global_bit_pos, read_u8_from_nibble_result) (3792)
  (Global bit_pos via H[t252+1]) (3792)
  (Global current_byte via H[t252+2]) (3792)
  (Global global_bit_pos via H[t252+3]) (3792)
  (Global read_u8_from_nibble_result via H[t252+5]) (3792)
  (                    418:   if bit_pos == 0 and current_byte == NONE:) (3792)
  (         t2 = H[t252+1]〈bit_pos〉 == 0) (3792)
  c=0 (3792)
  a=r 252 (3793)
  a++ (3795)
  d=a (3796)
  a=*d (3797)
  a==c (3798)
  a=0 (3799)
  jf 1 (3800)
  a++ (3802)
  r=a 2 (3803)
  (         t3 = H[t252+2]〈current_byte〉 == 4294967295) (3805)
  c=0 (3805)
  c-- (3806)
  d++ (3807)
  a=*d (3808)
  a==c (3809)
  a=0 (3810)
  jf 1 (3811)
  a++ (3813)
  r=a 3 (3814)
  (         t1 = t2 and t3) (3816)
  c=a (3816)
  a=r 2 (3817)
  a== 0 (3819)
  jt 1 (3821)
  a=c (3823)
  r=a 1 (3824)
  (         ifN t1 goto else_187) (3826)
  a== 0 (3826)
  jf 3 (3828)
  lj 3985 (3830)
  (                    419:     res = read_exact〈〉) (3833)
  (         H[t0+1]〈〉 = t0) (3833)
  a=r 0 (3833)
  a++ (3835)
  d=a (3836)
  a=r 0 (3837)
  *d=a (3839)
  (saved bsp, return id:) (3840)
  (         H[t0+2]〈〉 = 32) (3840)
  d++ (3840)
  *d= 32 (3841)
  (push arguments:) (3843)
  (         t0 = t0 + 2) (3843)
  c= 2 (3843)
  a+=c (3845)
  r=a 0 (3846)
  (         goto read_exact) (3848)
  lj 3267 (3848)
  (        :return_id_32:) (3851)
  (         H[t0+1]〈res〉 = t1) (3851)
  a=r 0 (3851)
  a++ (3853)
  d=a (3854)
  a=r 1 (3855)
  *d=a (3857)
  (                    420:     buf = read_exact_result) (3858)
  (         H[t0+2]〈buf〉 = H[t252+4]〈read_exact_result〉) (3858)
  a=r 252 (3858)
  a+= 4 (3860)
  d=a (3862)
  c=*d (3863)
  a=r 0 (3864)
  a+= 2 (3866)
  d=a (3868)
  *d=c (3869)
  (                    421:     if res == 0:  # i.e. Ok〈〉) (3870)
  (         t1 = H[t0+1]〈res〉 == 0) (3870)
  c=0 (3870)
  d-- (3871)
  a=*d (3872)
  a==c (3873)
  a=0 (3874)
  jf 1 (3875)
  a++ (3877)
  r=a 1 (3878)
  (         ifN t1 goto else_190) (3880)
  a== 0 (3880)
  jf 3 (3882)
  lj 3958 (3884)
  (                    422:       global_bit_pos += 4) (3887)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 4) (3887)
  c= 4 (3887)
  a=r 252 (3889)
  a+= 3 (3891)
  d=a (3893)
  a=*d (3894)
  a+=c (3895)
  c=a (3896)
  *d=c (3897)
  (                    423:       bit_pos = 4) (3898)
  (         H[t252+1]〈bit_pos〉 = 4) (3898)
  a=r 252 (3898)
  a++ (3900)
  d=a (3901)
  *d= 4 (3902)
  (                    424:       current_byte = buf) (3904)
  (         H[t252+2]〈current_byte〉 = H[t0+2]〈buf〉) (3904)
  a=r 0 (3904)
  a+= 2 (3906)
  d=a (3908)
  c=*d (3909)
  a=r 252 (3910)
  a+= 2 (3912)
  d=a (3914)
  *d=c (3915)
  (                    425:       read_u8_from_nibble_result = buf & 0x0f) (3916)
  (         t1 = H[t0+2]〈buf〉 & 15) (3916)
  c= 15 (3916)
  a=r 0 (3918)
  a+= 2 (3920)
  d=a (3922)
  a=*d (3923)
  a&=c (3924)
  r=a 1 (3925)
  (         H[t252+5]〈read_u8_from_nibble_result〉 = t1) (3927)
  a=r 252 (3927)
  a+= 5 (3929)
  d=a (3931)
  a=r 1 (3932)
  *d=a (3934)
  (                    426:       return 0) (3935)
  (         t1 = 0) (3935)
  a=0 (3935)
  r=a 1 (3936)
  (         t2 = H[t0]〈〉) (3938)
  d=r 0 (3938)
  a=*d (3940)
  r=a 2 (3941)
  (         t0 = t0 - 1) (3943)
  a=r 0 (3943)
  a-- (3945)
  r=a 0 (3946)
  (         t0 = H[t0]〈〉) (3948)
  d=a (3948)
  a=*d (3949)
  r=a 0 (3950)
  (         goto find_label_ret_id) (3952)
  lj 62666 (3952)
  (         goto endif_191) (3955)
  lj 3982 (3955)
  (        :else_190:) (3958)
  (                    428:       return res) (3958)
  (         t1 = H[t0+1]〈res〉) (3958)
  a=r 0 (3958)
  a++ (3960)
  d=a (3961)
  a=*d (3962)
  r=a 1 (3963)
  (         t2 = H[t0]〈〉) (3965)
  d=r 0 (3965)
  a=*d (3967)
  r=a 2 (3968)
  (         t0 = t0 - 1) (3970)
  a=r 0 (3970)
  a-- (3972)
  r=a 0 (3973)
  (         t0 = H[t0]〈〉) (3975)
  d=a (3975)
  a=*d (3976)
  r=a 0 (3977)
  (         goto find_label_ret_id) (3979)
  lj 62666 (3979)
  (        :endif_191:) (3982)
  (         goto endif_188) (3982)
  lj 4552 (3982)
  (        :else_187:) (3985)
  (                    429:   elif 〈bit_pos == 1 or bit_pos == 2 or bit_pos == 3〉 and current_byte != NONE:) (3985)
  (         t4 = H[t252+1]〈bit_pos〉 == 1) (3985)
  c= 1 (3985)
  a=r 252 (3987)
  a++ (3989)
  d=a (3990)
  a=*d (3991)
  a==c (3992)
  a=0 (3993)
  jf 1 (3994)
  a++ (3996)
  r=a 4 (3997)
  (         t5 = H[t252+1]〈bit_pos〉 == 2) (3999)
  c= 2 (3999)
  a=*d (4001)
  a==c (4002)
  a=0 (4003)
  jf 1 (4004)
  a++ (4006)
  r=a 5 (4007)
  (         t3 = t4 or t5) (4009)
  c=a (4009)
  a=r 4 (4010)
  a== 0 (4012)
  jf 1 (4014)
  a=c (4016)
  r=a 3 (4017)
  (         t4 = H[t252+1]〈bit_pos〉 == 3) (4019)
  c= 3 (4019)
  a=*d (4021)
  a==c (4022)
  a=0 (4023)
  jf 1 (4024)
  a++ (4026)
  r=a 4 (4027)
  (         t2 = t3 or t4) (4029)
  c=a (4029)
  a=r 3 (4030)
  a== 0 (4032)
  jf 1 (4034)
  a=c (4036)
  r=a 2 (4037)
  (         t3 = H[t252+2]〈current_byte〉 != 4294967295) (4039)
  c=0 (4039)
  c-- (4040)
  d++ (4041)
  a=*d (4042)
  a==c (4043)
  a=0 (4044)
  jt 1 (4045)
  a++ (4047)
  r=a 3 (4048)
  (         t1 = t2 and t3) (4050)
  c=a (4050)
  a=r 2 (4051)
  a== 0 (4053)
  jt 1 (4055)
  a=c (4057)
  r=a 1 (4058)
  (         ifN t1 goto else_196) (4060)
  a== 0 (4060)
  jf 3 (4062)
  lj 4132 (4064)
  (                    430:     global_bit_pos += 4) (4067)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 4) (4067)
  c= 4 (4067)
  d++ (4069)
  a=*d (4070)
  a+=c (4071)
  c=a (4072)
  *d=c (4073)
  (                    431:     bit_pos += 4) (4074)
  (         H[t252+1]〈bit_pos〉 = H[t252+1]〈bit_pos〉 + 4) (4074)
  c= 4 (4074)
  a=r 252 (4076)
  a++ (4078)
  d=a (4079)
  a=*d (4080)
  a+=c (4081)
  c=a (4082)
  *d=c (4083)
  (                    432:     read_u8_from_nibble_result = 〈current_byte >> 〈bit_pos - 4〉〉 & 0x0f) (4084)
  (         t3 = H[t252+1]〈bit_pos〉 - 4) (4084)
  c= 4 (4084)
  a=*d (4086)
  a-=c (4087)
  r=a 3 (4088)
  (         t2 = H[t252+2]〈current_byte〉 >> t3) (4090)
  c=a (4090)
  d++ (4091)
  a=*d (4092)
  a>>=c (4093)
  r=a 2 (4094)
  (         t1 = t2 & 15) (4096)
  c= 15 (4096)
  a&=c (4098)
  r=a 1 (4099)
  (         H[t252+5]〈read_u8_from_nibble_result〉 = t1) (4101)
  a=r 252 (4101)
  a+= 5 (4103)
  d=a (4105)
  a=r 1 (4106)
  *d=a (4108)
  (                    433:     return 0) (4109)
  (         t1 = 0) (4109)
  a=0 (4109)
  r=a 1 (4110)
  (         t2 = H[t0]〈〉) (4112)
  d=r 0 (4112)
  a=*d (4114)
  r=a 2 (4115)
  (         t0 = t0 - 1) (4117)
  a=r 0 (4117)
  a-- (4119)
  r=a 0 (4120)
  (         t0 = H[t0]〈〉) (4122)
  d=a (4122)
  a=*d (4123)
  r=a 0 (4124)
  (         goto find_label_ret_id) (4126)
  lj 62666 (4126)
  (         goto endif_197) (4129)
  lj 4552 (4129)
  (        :else_196:) (4132)
  (                    434:   elif bit_pos == 4 and current_byte != NONE:) (4132)
  (         t2 = H[t252+1]〈bit_pos〉 == 4) (4132)
  c= 4 (4132)
  a=r 252 (4134)
  a++ (4136)
  d=a (4137)
  a=*d (4138)
  a==c (4139)
  a=0 (4140)
  jf 1 (4141)
  a++ (4143)
  r=a 2 (4144)
  (         t3 = H[t252+2]〈current_byte〉 != 4294967295) (4146)
  c=0 (4146)
  c-- (4147)
  d++ (4148)
  a=*d (4149)
  a==c (4150)
  a=0 (4151)
  jt 1 (4152)
  a++ (4154)
  r=a 3 (4155)
  (         t1 = t2 and t3) (4157)
  c=a (4157)
  a=r 2 (4158)
  a== 0 (4160)
  jt 1 (4162)
  a=c (4164)
  r=a 1 (4165)
  (         ifN t1 goto else_200) (4167)
  a== 0 (4167)
  jf 3 (4169)
  lj 4248 (4171)
  (                    435:     global_bit_pos += 4) (4174)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 4) (4174)
  c= 4 (4174)
  d++ (4176)
  a=*d (4177)
  a+=c (4178)
  c=a (4179)
  *d=c (4180)
  (                    436:     bit_pos = 0) (4181)
  (         H[t252+1]〈bit_pos〉 = 0) (4181)
  a=r 252 (4181)
  a++ (4183)
  d=a (4184)
  *d=0 (4185)
  (                    437:     tmp_ = current_byte) (4186)
  (         H[t0+3]〈tmp_〉 = H[t252+2]〈current_byte〉) (4186)
  d++ (4186)
  c=*d (4187)
  a=r 0 (4188)
  a+= 3 (4190)
  d=a (4192)
  *d=c (4193)
  (                    438:     current_byte = NONE) (4194)
  (         H[t252+2]〈current_byte〉 = 4294967295) (4194)
  a=r 252 (4194)
  a+= 2 (4196)
  d=a (4198)
  *d=0 (4199)
  *d-- (4200)
  (                    439:     read_u8_from_nibble_result = 〈tmp_ >> 4〉 & 0x0f) (4201)
  (         t2 = H[t0+3]〈tmp_〉 >> 4) (4201)
  c= 4 (4201)
  a=r 0 (4203)
  a+= 3 (4205)
  d=a (4207)
  a=*d (4208)
  a>>=c (4209)
  r=a 2 (4210)
  (         t1 = t2 & 15) (4212)
  c= 15 (4212)
  a&=c (4214)
  r=a 1 (4215)
  (         H[t252+5]〈read_u8_from_nibble_result〉 = t1) (4217)
  a=r 252 (4217)
  a+= 5 (4219)
  d=a (4221)
  a=r 1 (4222)
  *d=a (4224)
  (                    440:     return 0) (4225)
  (         t1 = 0) (4225)
  a=0 (4225)
  r=a 1 (4226)
  (         t2 = H[t0]〈〉) (4228)
  d=r 0 (4228)
  a=*d (4230)
  r=a 2 (4231)
  (         t0 = t0 - 1) (4233)
  a=r 0 (4233)
  a-- (4235)
  r=a 0 (4236)
  (         t0 = H[t0]〈〉) (4238)
  d=a (4238)
  a=*d (4239)
  r=a 0 (4240)
  (         goto find_label_ret_id) (4242)
  lj 62666 (4242)
  (         goto endif_201) (4245)
  lj 4552 (4245)
  (        :else_200:) (4248)
  (                    441:   elif 〈bit_pos == 5 or bit_pos == 6 or bit_pos == 7〉 and current_byte != NONE:) (4248)
  (         t4 = H[t252+1]〈bit_pos〉 == 5) (4248)
  c= 5 (4248)
  a=r 252 (4250)
  a++ (4252)
  d=a (4253)
  a=*d (4254)
  a==c (4255)
  a=0 (4256)
  jf 1 (4257)
  a++ (4259)
  r=a 4 (4260)
  (         t5 = H[t252+1]〈bit_pos〉 == 6) (4262)
  c= 6 (4262)
  a=*d (4264)
  a==c (4265)
  a=0 (4266)
  jf 1 (4267)
  a++ (4269)
  r=a 5 (4270)
  (         t3 = t4 or t5) (4272)
  c=a (4272)
  a=r 4 (4273)
  a== 0 (4275)
  jf 1 (4277)
  a=c (4279)
  r=a 3 (4280)
  (         t4 = H[t252+1]〈bit_pos〉 == 7) (4282)
  c= 7 (4282)
  a=*d (4284)
  a==c (4285)
  a=0 (4286)
  jf 1 (4287)
  a++ (4289)
  r=a 4 (4290)
  (         t2 = t3 or t4) (4292)
  c=a (4292)
  a=r 3 (4293)
  a== 0 (4295)
  jf 1 (4297)
  a=c (4299)
  r=a 2 (4300)
  (         t3 = H[t252+2]〈current_byte〉 != 4294967295) (4302)
  c=0 (4302)
  c-- (4303)
  d++ (4304)
  a=*d (4305)
  a==c (4306)
  a=0 (4307)
  jt 1 (4308)
  a++ (4310)
  r=a 3 (4311)
  (         t1 = t2 and t3) (4313)
  c=a (4313)
  a=r 2 (4314)
  a== 0 (4316)
  jt 1 (4318)
  a=c (4320)
  r=a 1 (4321)
  (         ifN t1 goto else_206) (4323)
  a== 0 (4323)
  jf 3 (4325)
  lj 4531 (4327)
  (                    442:     res = read_exact〈〉) (4330)
  (         H[t0+4]〈〉 = t0) (4330)
  a=r 0 (4330)
  a+= 4 (4332)
  d=a (4334)
  a=r 0 (4335)
  *d=a (4337)
  (saved bsp, return id:) (4338)
  (         H[t0+5]〈〉 = 33) (4338)
  d++ (4338)
  *d= 33 (4339)
  (push arguments:) (4341)
  (         t0 = t0 + 5) (4341)
  c= 5 (4341)
  a+=c (4343)
  r=a 0 (4344)
  (         goto read_exact) (4346)
  lj 3267 (4346)
  (        :return_id_33:) (4349)
  (         H[t0+1]〈res〉 = t1) (4349)
  a=r 0 (4349)
  a++ (4351)
  d=a (4352)
  a=r 1 (4353)
  *d=a (4355)
  (                    443:     buf = read_exact_result) (4356)
  (         H[t0+2]〈buf〉 = H[t252+4]〈read_exact_result〉) (4356)
  a=r 252 (4356)
  a+= 4 (4358)
  d=a (4360)
  c=*d (4361)
  a=r 0 (4362)
  a+= 2 (4364)
  d=a (4366)
  *d=c (4367)
  (                    444:     if res == 0:) (4368)
  (         t1 = H[t0+1]〈res〉 == 0) (4368)
  c=0 (4368)
  d-- (4369)
  a=*d (4370)
  a==c (4371)
  a=0 (4372)
  jf 1 (4373)
  a++ (4375)
  r=a 1 (4376)
  (         ifN t1 goto else_209) (4378)
  a== 0 (4378)
  jf 3 (4380)
  lj 4504 (4382)
  (                    445:       global_bit_pos += 4) (4385)
  (         H[t252+3]〈global_bit_pos〉 = H[t252+3]〈global_bit_pos〉 + 4) (4385)
  c= 4 (4385)
  a=r 252 (4387)
  a+= 3 (4389)
  d=a (4391)
  a=*d (4392)
  a+=c (4393)
  c=a (4394)
  *d=c (4395)
  (                    446:       bit_pos_prev = bit_pos) (4396)
  (         H[t0+4]〈bit_pos_prev〉 = H[t252+1]〈bit_pos〉) (4396)
  a=r 252 (4396)
  a++ (4398)
  d=a (4399)
  c=*d (4400)
  a=r 0 (4401)
  a+= 4 (4403)
  d=a (4405)
  *d=c (4406)
  (                    447:       bit_pos = bit_pos - 4) (4407)
  (         t1 = H[t252+1]〈bit_pos〉 - 4) (4407)
  c= 4 (4407)
  a=r 252 (4409)
  a++ (4411)
  d=a (4412)
  a=*d (4413)
  a-=c (4414)
  r=a 1 (4415)
  (         H[t252+1]〈bit_pos〉 = t1) (4417)
  *d=a (4417)
  (                    448:       tmp_ = current_byte) (4418)
  (         H[t0+3]〈tmp_〉 = H[t252+2]〈current_byte〉) (4418)
  d++ (4418)
  c=*d (4419)
  a=r 0 (4420)
  a+= 3 (4422)
  d=a (4424)
  *d=c (4425)
  (                    449:       current_byte = buf) (4426)
  (         H[t252+2]〈current_byte〉 = H[t0+2]〈buf〉) (4426)
  d-- (4426)
  c=*d (4427)
  a=r 252 (4428)
  a+= 2 (4430)
  d=a (4432)
  *d=c (4433)
  (                    450:       read_u8_from_nibble_result = 〈〈tmp_ >> 〈bit_pos_prev〉〉 | 〈buf << 〈8 - bit_pos_prev〉〉〉 & 0x0f) (4434)
  (         t3 = H[t0+3]〈tmp_〉 >> H[t0+4]〈bit_pos_prev〉) (4434)
  a=r 0 (4434)
  a+= 4 (4436)
  d=a (4438)
  c=*d (4439)
  d-- (4440)
  a=*d (4441)
  a>>=c (4442)
  r=a 3 (4443)
  (         t5 = 8 - H[t0+4]〈bit_pos_prev〉) (4445)
  d++ (4445)
  c=*d (4446)
  a= 8 (4447)
  a-=c (4449)
  r=a 5 (4450)
  (         t4 = H[t0+2]〈buf〉 << t5) (4452)
  c=a (4452)
  a=r 0 (4453)
  a+= 2 (4455)
  d=a (4457)
  a=*d (4458)
  a<<=c (4459)
  r=a 4 (4460)
  (         t2 = t3 | t4) (4462)
  c=a (4462)
  a=r 3 (4463)
  a|=c (4465)
  r=a 2 (4466)
  (         t1 = t2 & 15) (4468)
  c= 15 (4468)
  a&=c (4470)
  r=a 1 (4471)
  (         H[t252+5]〈read_u8_from_nibble_result〉 = t1) (4473)
  a=r 252 (4473)
  a+= 5 (4475)
  d=a (4477)
  a=r 1 (4478)
  *d=a (4480)
  (                    451:       return 0) (4481)
  (         t1 = 0) (4481)
  a=0 (4481)
  r=a 1 (4482)
  (         t2 = H[t0]〈〉) (4484)
  d=r 0 (4484)
  a=*d (4486)
  r=a 2 (4487)
  (         t0 = t0 - 1) (4489)
  a=r 0 (4489)
  a-- (4491)
  r=a 0 (4492)
  (         t0 = H[t0]〈〉) (4494)
  d=a (4494)
  a=*d (4495)
  r=a 0 (4496)
  (         goto find_label_ret_id) (4498)
  lj 62666 (4498)
  (         goto endif_210) (4501)
  lj 4528 (4501)
  (        :else_209:) (4504)
  (                    453:       return res) (4504)
  (         t1 = H[t0+1]〈res〉) (4504)
  a=r 0 (4504)
  a++ (4506)
  d=a (4507)
  a=*d (4508)
  r=a 1 (4509)
  (         t2 = H[t0]〈〉) (4511)
  d=r 0 (4511)
  a=*d (4513)
  r=a 2 (4514)
  (         t0 = t0 - 1) (4516)
  a=r 0 (4516)
  a-- (4518)
  r=a 0 (4519)
  (         t0 = H[t0]〈〉) (4521)
  d=a (4521)
  a=*d (4522)
  r=a 0 (4523)
  (         goto find_label_ret_id) (4525)
  lj 62666 (4525)
  (        :endif_210:) (4528)
  (         goto endif_207) (4528)
  lj 4552 (4528)
  (        :else_206:) (4531)
  (                    455:     return 1 # unreachable) (4531)
  (         t1 = 1) (4531)
  a= 1 (4531)
  r=a 1 (4533)
  (         t2 = H[t0]〈〉) (4535)
  d=r 0 (4535)
  a=*d (4537)
  r=a 2 (4538)
  (         t0 = t0 - 1) (4540)
  a=r 0 (4540)
  a-- (4542)
  r=a 0 (4543)
  (         t0 = H[t0]〈〉) (4545)
  d=a (4545)
  a=*d (4546)
  r=a 0 (4547)
  (         goto find_label_ret_id) (4549)
  lj 62666 (4549)
  (        :endif_207:) (4552)
  (        :endif_201:) (4552)
  (        :endif_197:) (4552)
  (        :endif_188:) (4552)
  (insert return as it might not be done by the function:) (4552)
  (         t2 = H[t0]〈〉) (4552)
  d=r 0 (4552)
  a=*d (4554)
  r=a 2 (4555)
  (         t0 = t0 - 1) (4557)
  a=r 0 (4557)
  a-- (4559)
  r=a 0 (4560)
  (         t0 = H[t0]〈〉) (4562)
  d=a (4562)
  a=*d (4563)
  r=a 0 (4564)
  (         goto find_label_ret_id) (4566)
  lj 62666 (4566)
  (         MarkTempVarEnd) (4569)
  (        :read_u8_from_nibble_end~:) (4569)
  (                    458: read_bit_result = 0) (4569)
  (         H[t0+6]〈read_bit_result〉 = 0) (4569)
  a=r 0 (4569)
  a+= 6 (4571)
  d=a (4573)
  *d=0 (4574)
  (                    459: def read_bit〈〉:  # returns 0 for OK, 1 for Error) (4575)
  (         goto read_bit_end~) (4575)
  lj 4848 (4575)
  (        :read_bit:) (4578)
  (         MarkTempVarStart) (4578)
  (                    460:   global bit_pos, current_byte, global_bit_pos, read_bit_result) (4578)
  (Global bit_pos via H[t252+1]) (4578)
  (Global current_byte via H[t252+2]) (4578)
  (Global global_bit_pos via H[t252+3]) (4578)
  (Global read_bit_result via H[t252+6]) (4578)
  (                    461:   if current_byte != NONE:) (4578)
  (         t1 = H[t252+2]〈current_byte〉 != 4294967295) (4578)
  c=0 (4578)
  c-- (4579)
  a=r 252 (4580)
  a+= 2 (4582)
  d=a (4584)
  a=*d (4585)
  a==c (4586)
  a=0 (4587)
  jt 1 (4588)
  a++ (4590)
  r=a 1 (4591)
  (         ifN t1 goto else_212) (4593)
  a== 0 (4593)
  jf 3 (4595)
  lj 4722 (4597)
  (                    462:       tmp_ = bit_pos) (4600)
  (         H[t0+1]〈tmp_〉 = H[t252+1]〈bit_pos〉) (4600)
  d-- (4600)
  c=*d (4601)
  a=r 0 (4602)
  a++ (4604)
  d=a (4605)
  *d=c (4606)
  (                    463:       tmp_2 = current_byte) (4607)
  (         H[t0+2]〈tmp_2〉 = H[t252+2]〈current_byte〉) (4607)
  a=r 252 (4607)
  a+= 2 (4609)
  d=a (4611)
  c=*d (4612)
  a=r 0 (4613)
  a+= 2 (4615)
  d=a (4617)
  *d=c (4618)
  (                    464:       bit_pos = 〈tmp_ + 1〉 % 8) (4619)
  (         t2 = H[t0+1]〈tmp_〉 + 1) (4619)
  c= 1 (4619)
  d-- (4621)
  a=*d (4622)
  a+=c (4623)
  r=a 2 (4624)
  (         t1 = t2 % 8) (4626)
  c= 8 (4626)
  a%=c (4628)
  r=a 1 (4629)
  (         H[t252+1]〈bit_pos〉 = t1) (4631)
  a=r 252 (4631)
  a++ (4633)
  d=a (4634)
  a=r 1 (4635)
  *d=a (4637)
  (                    465:       global_bit_pos = global_bit_pos + 1) (4638)
  (         t1 = H[t252+3]〈global_bit_pos〉 + 1) (4638)
  c= 1 (4638)
  a=r 252 (4640)
  a+= 3 (4642)
  d=a (4644)
  a=*d (4645)
  a+=c (4646)
  r=a 1 (4647)
  (         H[t252+3]〈global_bit_pos〉 = t1) (4649)
  *d=a (4649)
  (                    466:       if bit_pos == 0:) (4650)
  (         t1 = H[t252+1]〈bit_pos〉 == 0) (4650)
  c=0 (4650)
  a=r 252 (4651)
  a++ (4653)
  d=a (4654)
  a=*d (4655)
  a==c (4656)
  a=0 (4657)
  jf 1 (4658)
  a++ (4660)
  r=a 1 (4661)
  (         ifN t1 goto else_215) (4663)
  a== 0 (4663)
  jf 3 (4665)
  lj 4676 (4667)
  (                    467:           current_byte = NONE) (4670)
  (         H[t252+2]〈current_byte〉 = 4294967295) (4670)
  d++ (4670)
  *d=0 (4671)
  *d-- (4672)
  (         goto endif_216) (4673)
  lj 4676 (4673)
  (        :else_215:) (4676)
  (        :endif_216:) (4676)
  (                    468:       read_bit_result = tmp_2 >> tmp_ & 1) (4676)
  (         t2 = H[t0+2]〈tmp_2〉 >> H[t0+1]〈tmp_〉) (4676)
  a=r 0 (4676)
  a++ (4678)
  d=a (4679)
  c=*d (4680)
  d++ (4681)
  a=*d (4682)
  a>>=c (4683)
  r=a 2 (4684)
  (         t1 = t2 & 1) (4686)
  c= 1 (4686)
  a&=c (4688)
  r=a 1 (4689)
  (         H[t252+6]〈read_bit_result〉 = t1) (4691)
  a=r 252 (4691)
  a+= 6 (4693)
  d=a (4695)
  a=r 1 (4696)
  *d=a (4698)
  (                    469:       return 0) (4699)
  (         t1 = 0) (4699)
  a=0 (4699)
  r=a 1 (4700)
  (         t2 = H[t0]〈〉) (4702)
  d=r 0 (4702)
  a=*d (4704)
  r=a 2 (4705)
  (         t0 = t0 - 1) (4707)
  a=r 0 (4707)
  a-- (4709)
  r=a 0 (4710)
  (         t0 = H[t0]〈〉) (4712)
  d=a (4712)
  a=*d (4713)
  r=a 0 (4714)
  (         goto find_label_ret_id) (4716)
  lj 62666 (4716)
  (         goto endif_213) (4719)
  lj 4831 (4719)
  (        :else_212:) (4722)
  (                    471:       if read_exact〈〉:) (4722)
  (         H[t0+3]〈〉 = t0) (4722)
  a=r 0 (4722)
  a+= 3 (4724)
  d=a (4726)
  a=r 0 (4727)
  *d=a (4729)
  (saved bsp, return id:) (4730)
  (         H[t0+4]〈〉 = 34) (4730)
  d++ (4730)
  *d= 34 (4731)
  (push arguments:) (4733)
  (         t0 = t0 + 4) (4733)
  c= 4 (4733)
  a+=c (4735)
  r=a 0 (4736)
  (         goto read_exact) (4738)
  lj 3267 (4738)
  (        :return_id_34:) (4741)
  (         ifN t1 goto else_217) (4741)
  a=r 1 (4741)
  a== 0 (4743)
  jf 3 (4745)
  lj 4774 (4747)
  (                    472:         return 1) (4750)
  (         t1 = 1) (4750)
  a= 1 (4750)
  r=a 1 (4752)
  (         t2 = H[t0]〈〉) (4754)
  d=r 0 (4754)
  a=*d (4756)
  r=a 2 (4757)
  (         t0 = t0 - 1) (4759)
  a=r 0 (4759)
  a-- (4761)
  r=a 0 (4762)
  (         t0 = H[t0]〈〉) (4764)
  d=a (4764)
  a=*d (4765)
  r=a 0 (4766)
  (         goto find_label_ret_id) (4768)
  lj 62666 (4768)
  (         goto endif_218) (4771)
  lj 4831 (4771)
  (        :else_217:) (4774)
  (                    474:         current_byte = read_exact_result) (4774)
  (         H[t252+2]〈current_byte〉 = H[t252+4]〈read_exact_result〉) (4774)
  a=r 252 (4774)
  a+= 4 (4776)
  d=a (4778)
  c=*d (4779)
  a=r 252 (4780)
  a+= 2 (4782)
  d=a (4784)
  *d=c (4785)
  (                    475:         bit_pos = 1) (4786)
  (         H[t252+1]〈bit_pos〉 = 1) (4786)
  d-- (4786)
  *d= 1 (4787)
  (                    476:         global_bit_pos = 1) (4789)
  (         H[t252+3]〈global_bit_pos〉 = 1) (4789)
  a=r 252 (4789)
  a+= 3 (4791)
  d=a (4793)
  *d= 1 (4794)
  (                    477:         read_bit_result = read_exact_result & 1) (4796)
  (         t1 = H[t252+4]〈read_exact_result〉 & 1) (4796)
  c= 1 (4796)
  d++ (4798)
  a=*d (4799)
  a&=c (4800)
  r=a 1 (4801)
  (         H[t252+6]〈read_bit_result〉 = t1) (4803)
  a=r 252 (4803)
  a+= 6 (4805)
  d=a (4807)
  a=r 1 (4808)
  *d=a (4810)
  (                    478:         return 0) (4811)
  (         t1 = 0) (4811)
  a=0 (4811)
  r=a 1 (4812)
  (         t2 = H[t0]〈〉) (4814)
  d=r 0 (4814)
  a=*d (4816)
  r=a 2 (4817)
  (         t0 = t0 - 1) (4819)
  a=r 0 (4819)
  a-- (4821)
  r=a 0 (4822)
  (         t0 = H[t0]〈〉) (4824)
  d=a (4824)
  a=*d (4825)
  r=a 0 (4826)
  (         goto find_label_ret_id) (4828)
  lj 62666 (4828)
  (        :endif_218:) (4831)
  (        :endif_213:) (4831)
  (insert return as it might not be done by the function:) (4831)
  (         t2 = H[t0]〈〉) (4831)
  d=r 0 (4831)
  a=*d (4833)
  r=a 2 (4834)
  (         t0 = t0 - 1) (4836)
  a=r 0 (4836)
  a-- (4838)
  r=a 0 (4839)
  (         t0 = H[t0]〈〉) (4841)
  d=a (4841)
  a=*d (4842)
  r=a 0 (4843)
  (         goto find_label_ret_id) (4845)
  lj 62666 (4845)
  (         MarkTempVarEnd) (4848)
  (        :read_bit_end~:) (4848)
  (                    481: read_u32_from_n_bits_result = 0) (4848)
  (         H[t0+7]〈read_u32_from_n_bits_result〉 = 0) (4848)
  a=r 0 (4848)
  a+= 7 (4850)
  d=a (4852)
  *d=0 (4853)
  (                    483: def read_u32_from_n_bits〈n〉:  # does also serve as read_u8_from_n_bits, read_u16_from_n_bits) (4854)
  (         goto read_u32_from_n_bits_end~) (4854)
  lj 5030 (4854)
  (        :read_u32_from_n_bits:) (4857)
  (         MarkTempVarStart) (4857)
  (Arg n at t0 + 1) (4857)
  (                    484:   global bit_pos, current_byte, global_bit_pos, read_u32_from_n_bits_result) (4857)
  (Global bit_pos via H[t252+1]) (4857)
  (Global current_byte via H[t252+2]) (4857)
  (Global global_bit_pos via H[t252+3]) (4857)
  (Global read_u32_from_n_bits_result via H[t252+7]) (4857)
  (                    485:   read_u32_from_n_bits_result = 0) (4857)
  (         H[t252+7]〈read_u32_from_n_bits_result〉 = 0) (4857)
  a=r 252 (4857)
  a+= 7 (4859)
  d=a (4861)
  *d=0 (4862)
  (                    486:   i = 0) (4863)
  (         H[t0+2]〈i〉 = 0) (4863)
  a=r 0 (4863)
  a+= 2 (4865)
  d=a (4867)
  *d=0 (4868)
  (                    487:   while i < n:) (4869)
  (        :while_219:) (4869)
  (         t1 = H[t0+2]〈i〉 < H[t0+1]〈n〉) (4869)
  a=r 0 (4869)
  a++ (4871)
  d=a (4872)
  c=*d (4873)
  d++ (4874)
  a=*d (4875)
  a<c (4876)
  a=0 (4877)
  jf 1 (4878)
  a++ (4880)
  r=a 1 (4881)
  (         ifN t1 goto whileend_221) (4883)
  a== 0 (4883)
  jf 3 (4885)
  lj 4994 (4887)
  (                    488:     if read_bit〈〉:) (4890)
  (         H[t0+3]〈〉 = t0) (4890)
  d++ (4890)
  a=r 0 (4891)
  *d=a (4893)
  (saved bsp, return id:) (4894)
  (         H[t0+4]〈〉 = 35) (4894)
  d++ (4894)
  *d= 35 (4895)
  (push arguments:) (4897)
  (         t0 = t0 + 4) (4897)
  c= 4 (4897)
  a+=c (4899)
  r=a 0 (4900)
  (         goto read_bit) (4902)
  lj 4578 (4902)
  (        :return_id_35:) (4905)
  (         ifN t1 goto else_223) (4905)
  a=r 1 (4905)
  a== 0 (4907)
  jf 3 (4909)
  lj 4938 (4911)
  (                    489:       return 1  # error) (4914)
  (         t1 = 1) (4914)
  a= 1 (4914)
  r=a 1 (4916)
  (         t2 = H[t0]〈〉) (4918)
  d=r 0 (4918)
  a=*d (4920)
  r=a 2 (4921)
  (         t0 = t0 - 1) (4923)
  a=r 0 (4923)
  a-- (4925)
  r=a 0 (4926)
  (         t0 = H[t0]〈〉) (4928)
  d=a (4928)
  a=*d (4929)
  r=a 0 (4930)
  (         goto find_label_ret_id) (4932)
  lj 62666 (4932)
  (         goto endif_224) (4935)
  lj 4985 (4935)
  (        :else_223:) (4938)
  (                    490:     elif read_bit_result == 1:) (4938)
  (         t1 = H[t252+6]〈read_bit_result〉 == 1) (4938)
  c= 1 (4938)
  a=r 252 (4940)
  a+= 6 (4942)
  d=a (4944)
  a=*d (4945)
  a==c (4946)
  a=0 (4947)
  jf 1 (4948)
  a++ (4950)
  r=a 1 (4951)
  (         ifN t1 goto else_226) (4953)
  a== 0 (4953)
  jf 3 (4955)
  lj 4985 (4957)
  (                    491:       read_u32_from_n_bits_result = read_u32_from_n_bits_result | 〈1 << i〉) (4960)
  (         t2 = 1 << H[t0+2]〈i〉) (4960)
  a=r 0 (4960)
  a+= 2 (4962)
  d=a (4964)
  c=*d (4965)
  a= 1 (4966)
  a<<=c (4968)
  r=a 2 (4969)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 | t2) (4971)
  c=a (4971)
  a=r 252 (4972)
  a+= 7 (4974)
  d=a (4976)
  a=*d (4977)
  a|=c (4978)
  r=a 1 (4979)
  (         H[t252+7]〈read_u32_from_n_bits_result〉 = t1) (4981)
  *d=a (4981)
  (         goto endif_227) (4982)
  lj 4985 (4982)
  (        :else_226:) (4985)
  (        :endif_227:) (4985)
  (        :endif_224:) (4985)
  (                    492:     i += 1) (4985)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (4985)
  a=r 0 (4985)
  a+= 2 (4987)
  d=a (4989)
  *d++ (4990)
  (         goto while_219) (4991)
  lj 4869 (4991)
  (        :whileend_221:) (4994)
  (                    493:   return 0) (4994)
  (         t1 = 0) (4994)
  a=0 (4994)
  r=a 1 (4995)
  (         t2 = H[t0]〈〉) (4997)
  d=r 0 (4997)
  a=*d (4999)
  r=a 2 (5000)
  (         t0 = t0 - 1) (5002)
  a=r 0 (5002)
  a-- (5004)
  r=a 0 (5005)
  (         t0 = H[t0]〈〉) (5007)
  d=a (5007)
  a=*d (5008)
  r=a 0 (5009)
  (         goto find_label_ret_id) (5011)
  lj 62666 (5011)
  (insert return as it might not be done by the function:) (5014)
  (         t2 = H[t0]〈〉) (5014)
  d=a (5014)
  a=*d (5015)
  r=a 2 (5016)
  (         t0 = t0 - 1) (5018)
  a=r 0 (5018)
  a-- (5020)
  r=a 0 (5021)
  (         t0 = H[t0]〈〉) (5023)
  d=a (5023)
  a=*d (5024)
  r=a 0 (5025)
  (         goto find_label_ret_id) (5027)
  lj 62666 (5027)
  (         MarkTempVarEnd) (5030)
  (        :read_u32_from_n_bits_end~:) (5030)
  (                    495: def read_u8_from_byte_tail〈〉:  # return NONE for eof) (5030)
  (         goto read_u8_from_byte_tail_end~) (5030)
  lj 5187 (5030)
  (        :read_u8_from_byte_tail:) (5033)
  (         MarkTempVarStart) (5033)
  (                    496:   if bit_pos == 0:) (5033)
  (         t1 = H[t252+1]〈bit_pos〉 == 0) (5033)
  c=0 (5033)
  a=r 252 (5034)
  a++ (5036)
  d=a (5037)
  a=*d (5038)
  a==c (5039)
  a=0 (5040)
  jf 1 (5041)
  a++ (5043)
  r=a 1 (5044)
  (         ifN t1 goto else_229) (5046)
  a== 0 (5046)
  jf 3 (5048)
  lj 5076 (5050)
  (                    497:     return 0) (5053)
  (         t1 = 0) (5053)
  a=0 (5053)
  r=a 1 (5054)
  (         t2 = H[t0]〈〉) (5056)
  d=r 0 (5056)
  a=*d (5058)
  r=a 2 (5059)
  (         t0 = t0 - 1) (5061)
  a=r 0 (5061)
  a-- (5063)
  r=a 0 (5064)
  (         t0 = H[t0]〈〉) (5066)
  d=a (5066)
  a=*d (5067)
  r=a 0 (5068)
  (         goto find_label_ret_id) (5070)
  lj 62666 (5070)
  (         goto endif_230) (5073)
  lj 5170 (5073)
  (        :else_229:) (5076)
  (                    499:     if read_u32_from_n_bits〈8 - bit_pos〉:) (5076)
  (         t1 = 8 - H[t252+1]〈bit_pos〉) (5076)
  a=r 252 (5076)
  a++ (5078)
  d=a (5079)
  c=*d (5080)
  a= 8 (5081)
  a-=c (5083)
  r=a 1 (5084)
  (         H[t0+1]〈〉 = t0) (5086)
  a=r 0 (5086)
  a++ (5088)
  d=a (5089)
  a=r 0 (5090)
  *d=a (5092)
  (saved bsp, return id:) (5093)
  (         H[t0+2]〈〉 = 36) (5093)
  d++ (5093)
  *d= 36 (5094)
  (push arguments:) (5096)
  (         H[t0+3]〈〉 = t1) (5096)
  d++ (5096)
  a=r 1 (5097)
  *d=a (5099)
  (         t0 = t0 + 2) (5100)
  c= 2 (5100)
  a=r 0 (5102)
  a+=c (5104)
  r=a 0 (5105)
  (         goto read_u32_from_n_bits) (5107)
  lj 4857 (5107)
  (        :return_id_36:) (5110)
  (         t2 = t1) (5110)
  a=r 1 (5110)
  r=a 2 (5112)
  (         ifN t2 goto else_231) (5114)
  a== 0 (5114)
  jf 3 (5116)
  lj 5145 (5118)
  (                    500:       return NONE) (5121)
  (         t1 = 4294967295) (5121)
  a=0 (5121)
  a-- (5122)
  r=a 1 (5123)
  (         t2 = H[t0]〈〉) (5125)
  d=r 0 (5125)
  a=*d (5127)
  r=a 2 (5128)
  (         t0 = t0 - 1) (5130)
  a=r 0 (5130)
  a-- (5132)
  r=a 0 (5133)
  (         t0 = H[t0]〈〉) (5135)
  d=a (5135)
  a=*d (5136)
  r=a 0 (5137)
  (         goto find_label_ret_id) (5139)
  lj 62666 (5139)
  (         goto endif_232) (5142)
  lj 5145 (5142)
  (        :else_231:) (5145)
  (        :endif_232:) (5145)
  (                    501:     return read_u32_from_n_bits_result) (5145)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉) (5145)
  a=r 252 (5145)
  a+= 7 (5147)
  d=a (5149)
  a=*d (5150)
  r=a 1 (5151)
  (         t2 = H[t0]〈〉) (5153)
  d=r 0 (5153)
  a=*d (5155)
  r=a 2 (5156)
  (         t0 = t0 - 1) (5158)
  a=r 0 (5158)
  a-- (5160)
  r=a 0 (5161)
  (         t0 = H[t0]〈〉) (5163)
  d=a (5163)
  a=*d (5164)
  r=a 0 (5165)
  (         goto find_label_ret_id) (5167)
  lj 62666 (5167)
  (        :endif_230:) (5170)
  (insert return as it might not be done by the function:) (5170)
  (         t2 = H[t0]〈〉) (5170)
  d=r 0 (5170)
  a=*d (5172)
  r=a 2 (5173)
  (         t0 = t0 - 1) (5175)
  a=r 0 (5175)
  a-- (5177)
  r=a 0 (5178)
  (         t0 = H[t0]〈〉) (5180)
  d=a (5180)
  a=*d (5181)
  r=a 0 (5182)
  (         goto find_label_ret_id) (5184)
  lj 62666 (5184)
  (         MarkTempVarEnd) (5187)
  (        :read_u8_from_byte_tail_end~:) (5187)
  (                    503: read_u32_from_n_nibbles_result = 0) (5187)
  (         H[t0+8]〈read_u32_from_n_nibbles_result〉 = 0) (5187)
  a=r 0 (5187)
  a+= 8 (5189)
  d=a (5191)
  *d=0 (5192)
  (                    505: def read_u32_from_n_nibbles〈n〉:) (5193)
  (         goto read_u32_from_n_nibbles_end~) (5193)
  lj 5368 (5193)
  (        :read_u32_from_n_nibbles:) (5196)
  (         MarkTempVarStart) (5196)
  (Arg n at t0 + 1) (5196)
  (                    506:   global bit_pos, current_byte, global_bit_pos, read_u32_from_n_nibbles_result) (5196)
  (Global bit_pos via H[t252+1]) (5196)
  (Global current_byte via H[t252+2]) (5196)
  (Global global_bit_pos via H[t252+3]) (5196)
  (Global read_u32_from_n_nibbles_result via H[t252+8]) (5196)
  (                    507:   read_u32_from_n_nibbles_result = 0) (5196)
  (         H[t252+8]〈read_u32_from_n_nibbles_result〉 = 0) (5196)
  a=r 252 (5196)
  a+= 8 (5198)
  d=a (5200)
  *d=0 (5201)
  (                    508:   i = 0) (5202)
  (         H[t0+2]〈i〉 = 0) (5202)
  a=r 0 (5202)
  a+= 2 (5204)
  d=a (5206)
  *d=0 (5207)
  (                    509:   while i < n:) (5208)
  (        :while_233:) (5208)
  (         t1 = H[t0+2]〈i〉 < H[t0+1]〈n〉) (5208)
  a=r 0 (5208)
  a++ (5210)
  d=a (5211)
  c=*d (5212)
  d++ (5213)
  a=*d (5214)
  a<c (5215)
  a=0 (5216)
  jf 1 (5217)
  a++ (5219)
  r=a 1 (5220)
  (         ifN t1 goto whileend_235) (5222)
  a== 0 (5222)
  jf 3 (5224)
  lj 5332 (5226)
  (                    510:     if read_u8_from_nibble〈〉 == 0:) (5229)
  (         H[t0+4]〈〉 = t0) (5229)
  a=r 0 (5229)
  a+= 4 (5231)
  d=a (5233)
  a=r 0 (5234)
  *d=a (5236)
  (saved bsp, return id:) (5237)
  (         H[t0+5]〈〉 = 37) (5237)
  d++ (5237)
  *d= 37 (5238)
  (push arguments:) (5240)
  (         t0 = t0 + 5) (5240)
  c= 5 (5240)
  a+=c (5242)
  r=a 0 (5243)
  (         goto read_u8_from_nibble) (5245)
  lj 3792 (5245)
  (        :return_id_37:) (5248)
  (         t2 = t1) (5248)
  a=r 1 (5248)
  r=a 2 (5250)
  (         t1 = t2 == 0) (5252)
  c=0 (5252)
  a==c (5253)
  a=0 (5254)
  jf 1 (5255)
  a++ (5257)
  r=a 1 (5258)
  (         ifN t1 goto else_238) (5260)
  a== 0 (5260)
  jf 3 (5262)
  lj 5302 (5264)
  (                    511:       read_u32_from_n_nibbles_result = read_u32_from_n_nibbles_result | 〈read_u8_from_nibble_result  << 〈4 * i〉〉) (5267)
  (         t3 = 4 * H[t0+2]〈i〉) (5267)
  a=r 0 (5267)
  a+= 2 (5269)
  d=a (5271)
  c=*d (5272)
  a= 4 (5273)
  a*=c (5275)
  r=a 3 (5276)
  (         t2 = H[t252+5]〈read_u8_from_nibble_result〉 << t3) (5278)
  c=a (5278)
  a=r 252 (5279)
  a+= 5 (5281)
  d=a (5283)
  a=*d (5284)
  a<<=c (5285)
  r=a 2 (5286)
  (         t1 = H[t252+8]〈read_u32_from_n_nibbles_result〉 | t2) (5288)
  c=a (5288)
  a=r 252 (5289)
  a+= 8 (5291)
  d=a (5293)
  a=*d (5294)
  a|=c (5295)
  r=a 1 (5296)
  (         H[t252+8]〈read_u32_from_n_nibbles_result〉 = t1) (5298)
  *d=a (5298)
  (         goto endif_239) (5299)
  lj 5323 (5299)
  (        :else_238:) (5302)
  (                    513:       return 1) (5302)
  (         t1 = 1) (5302)
  a= 1 (5302)
  r=a 1 (5304)
  (         t2 = H[t0]〈〉) (5306)
  d=r 0 (5306)
  a=*d (5308)
  r=a 2 (5309)
  (         t0 = t0 - 1) (5311)
  a=r 0 (5311)
  a-- (5313)
  r=a 0 (5314)
  (         t0 = H[t0]〈〉) (5316)
  d=a (5316)
  a=*d (5317)
  r=a 0 (5318)
  (         goto find_label_ret_id) (5320)
  lj 62666 (5320)
  (        :endif_239:) (5323)
  (                    514:     i += 1) (5323)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (5323)
  a=r 0 (5323)
  a+= 2 (5325)
  d=a (5327)
  *d++ (5328)
  (         goto while_233) (5329)
  lj 5208 (5329)
  (        :whileend_235:) (5332)
  (                    515:   return 0) (5332)
  (         t1 = 0) (5332)
  a=0 (5332)
  r=a 1 (5333)
  (         t2 = H[t0]〈〉) (5335)
  d=r 0 (5335)
  a=*d (5337)
  r=a 2 (5338)
  (         t0 = t0 - 1) (5340)
  a=r 0 (5340)
  a-- (5342)
  r=a 0 (5343)
  (         t0 = H[t0]〈〉) (5345)
  d=a (5345)
  a=*d (5346)
  r=a 0 (5347)
  (         goto find_label_ret_id) (5349)
  lj 62666 (5349)
  (insert return as it might not be done by the function:) (5352)
  (         t2 = H[t0]〈〉) (5352)
  d=a (5352)
  a=*d (5353)
  r=a 2 (5354)
  (         t0 = t0 - 1) (5356)
  a=r 0 (5356)
  a-- (5358)
  r=a 0 (5359)
  (         t0 = H[t0]〈〉) (5361)
  d=a (5361)
  a=*d (5362)
  r=a 0 (5363)
  (         goto find_label_ret_id) (5365)
  lj 62666 (5365)
  (         MarkTempVarEnd) (5368)
  (        :read_u32_from_n_nibbles_end~:) (5368)
  (                    517: def read_fixed_length_string〈length〉:) (5368)
  (         goto read_fixed_length_string_end~) (5368)
  lj 5578 (5368)
  (        :read_fixed_length_string:) (5371)
  (         MarkTempVarStart) (5371)
  (Arg length at t0 + 1) (5371)
  (                    518:     my_string = alloc_pM〈length〉) (5371)
  (         H[t0+2]〈〉 = t0) (5371)
  a=r 0 (5371)
  a+= 2 (5373)
  d=a (5375)
  a=r 0 (5376)
  *d=a (5378)
  (saved bsp, return id:) (5379)
  (         H[t0+3]〈〉 = 38) (5379)
  d++ (5379)
  *d= 38 (5380)
  (push arguments:) (5382)
  (         H[t0+4]〈〉 = H[t0+1]〈length〉) (5382)
  a++ (5382)
  d=a (5383)
  c=*d (5384)
  a=r 0 (5385)
  a+= 4 (5387)
  d=a (5389)
  *d=c (5390)
  (         t0 = t0 + 3) (5391)
  c= 3 (5391)
  a=r 0 (5393)
  a+=c (5395)
  r=a 0 (5396)
  (         goto addr_alloc_pM) (5398)
  lj 323 (5398)
  (        :return_id_38:) (5401)
  (         t1 = t1 | 2147483648) (5401)
  a= 1 (5401)
  a<<= 31 (5403)
  c=a (5405)
  a=r 1 (5406)
  a|=c (5408)
  r=a 1 (5409)
  (         H[t0+2]〈my_string〉 = t1) (5411)
  a=r 0 (5411)
  a+= 2 (5413)
  d=a (5415)
  a=r 1 (5416)
  *d=a (5418)
  (                    519:     i = 0) (5419)
  (         H[t0+3]〈i〉 = 0) (5419)
  d++ (5419)
  *d=0 (5420)
  (                    520:     while i < length:) (5421)
  (        :while_240:) (5421)
  (         t1 = H[t0+3]〈i〉 < H[t0+1]〈length〉) (5421)
  a=r 0 (5421)
  a++ (5423)
  d=a (5424)
  c=*d (5425)
  a=r 0 (5426)
  a+= 3 (5428)
  d=a (5430)
  a=*d (5431)
  a<c (5432)
  a=0 (5433)
  jf 1 (5434)
  a++ (5436)
  r=a 1 (5437)
  (         ifN t1 goto whileend_242) (5439)
  a== 0 (5439)
  jf 3 (5441)
  lj 5537 (5443)
  (                    521:         t = read_u8〈〉) (5446)
  (         H[t0+4]〈〉 = t0) (5446)
  d++ (5446)
  a=r 0 (5447)
  *d=a (5449)
  (saved bsp, return id:) (5450)
  (         H[t0+5]〈〉 = 39) (5450)
  d++ (5450)
  *d= 39 (5451)
  (push arguments:) (5453)
  (         t0 = t0 + 5) (5453)
  c= 5 (5453)
  a+=c (5455)
  r=a 0 (5456)
  (         goto read_u8) (5458)
  lj 3373 (5458)
  (        :return_id_39:) (5461)
  (         H[t0+4]〈t〉 = t1) (5461)
  a=r 0 (5461)
  a+= 4 (5463)
  d=a (5465)
  a=r 1 (5466)
  *d=a (5468)
  (                    522:         if t == NONE:) (5469)
  (         t1 = H[t0+4]〈t〉 == 4294967295) (5469)
  c=0 (5469)
  c-- (5470)
  a=*d (5471)
  a==c (5472)
  a=0 (5473)
  jf 1 (5474)
  a++ (5476)
  r=a 1 (5477)
  (         ifN t1 goto else_245) (5479)
  a== 0 (5479)
  jf 3 (5481)
  lj 5510 (5483)
  (                    523:             return NONE) (5486)
  (         t1 = 4294967295) (5486)
  a=0 (5486)
  a-- (5487)
  r=a 1 (5488)
  (         t2 = H[t0]〈〉) (5490)
  d=r 0 (5490)
  a=*d (5492)
  r=a 2 (5493)
  (         t0 = t0 - 1) (5495)
  a=r 0 (5495)
  a-- (5497)
  r=a 0 (5498)
  (         t0 = H[t0]〈〉) (5500)
  d=a (5500)
  a=*d (5501)
  r=a 0 (5502)
  (         goto find_label_ret_id) (5504)
  lj 62666 (5504)
  (         goto endif_246) (5507)
  lj 5510 (5507)
  (        :else_245:) (5510)
  (        :endif_246:) (5510)
  (                    524:         my_string[i] = t) (5510)
  (         t1 = H[t0+2]〈my_string〉 & 2147483647) (5510)
  a=0 (5510)
  a-- (5511)
  a>>= 1 (5512)
  c=a (5514)
  a=r 0 (5515)
  a+= 2 (5517)
  d=a (5519)
  a=*d (5520)
  a&=c (5521)
  r=a 1 (5522)
  (         t1 = t1 + H[t0+3]〈i〉) (5524)
  d++ (5524)
  c=*d (5525)
  a+=c (5526)
  r=a 1 (5527)
  (         M[t1] = H[t0+4]〈t〉) (5529)
  c=a (5529)
  d++ (5530)
  *c=*d (5531)
  (                    525:         i += 1) (5532)
  (         H[t0+3]〈i〉 = H[t0+3]〈i〉 + 1) (5532)
  d-- (5532)
  *d++ (5533)
  (         goto while_240) (5534)
  lj 5421 (5534)
  (        :whileend_242:) (5537)
  (                    526:     return my_string) (5537)
  (         t1 = H[t0+2]〈my_string〉) (5537)
  a=r 0 (5537)
  a+= 2 (5539)
  d=a (5541)
  a=*d (5542)
  r=a 1 (5543)
  (         t2 = H[t0]〈〉) (5545)
  d=r 0 (5545)
  a=*d (5547)
  r=a 2 (5548)
  (         t0 = t0 - 1) (5550)
  a=r 0 (5550)
  a-- (5552)
  r=a 0 (5553)
  (         t0 = H[t0]〈〉) (5555)
  d=a (5555)
  a=*d (5556)
  r=a 0 (5557)
  (         goto find_label_ret_id) (5559)
  lj 62666 (5559)
  (insert return as it might not be done by the function:) (5562)
  (         t2 = H[t0]〈〉) (5562)
  d=a (5562)
  a=*d (5563)
  r=a 2 (5564)
  (         t0 = t0 - 1) (5566)
  a=r 0 (5566)
  a-- (5568)
  r=a 0 (5569)
  (         t0 = H[t0]〈〉) (5571)
  d=a (5571)
  a=*d (5572)
  r=a 0 (5573)
  (         goto find_label_ret_id) (5575)
  lj 62666 (5575)
  (         MarkTempVarEnd) (5578)
  (        :read_fixed_length_string_end~:) (5578)
  (                    536: def tree_from_raw_data〈buf, len_, last_symbol〉:) (5578)
  (         goto tree_from_raw_data_end~) (5578)
  lj 5693 (5578)
  (        :tree_from_raw_data:) (5581)
  (         MarkTempVarStart) (5581)
  (Arg buf at t0 + 1) (5581)
  (Arg len_ at t0 + 2) (5581)
  (Arg last_symbol at t0 + 3) (5581)
  (                    537:   arr = alloc_pH〈3〉) (5581)
  (         H[t0+4]〈〉 = t0) (5581)
  a=r 0 (5581)
  a+= 4 (5583)
  d=a (5585)
  a=r 0 (5586)
  *d=a (5588)
  (saved bsp, return id:) (5589)
  (         H[t0+5]〈〉 = 40) (5589)
  d++ (5589)
  *d= 40 (5590)
  (push arguments:) (5592)
  (         H[t0+6]〈〉 = 3) (5592)
  d++ (5592)
  *d= 3 (5593)
  (         t0 = t0 + 5) (5595)
  c= 5 (5595)
  a+=c (5597)
  r=a 0 (5598)
  (         goto addr_alloc_pH) (5600)
  lj 1446 (5600)
  (        :return_id_40:) (5603)
  (         H[t0+4]〈arr〉 = t1) (5603)
  a=r 0 (5603)
  a+= 4 (5605)
  d=a (5607)
  a=r 1 (5608)
  *d=a (5610)
  (                    538:   arr[0] = buf  # also 32 bit) (5611)
  (         t1 = H[t0+4]〈arr〉 + 0) (5611)
  c=0 (5611)
  a=*d (5612)
  a+=c (5613)
  r=a 1 (5614)
  (         H[t1]〈〉 = H[t0+1]〈buf〉) (5616)
  a=r 0 (5616)
  a++ (5618)
  d=a (5619)
  c=*d (5620)
  d=r 1 (5621)
  *d=c (5623)
  (                    539:   arr[1] = len_) (5624)
  (         t1 = t1 + 1) (5624)
  a=r 1 (5624)
  a++ (5626)
  r=a 1 (5627)
  (         H[t1]〈〉 = H[t0+2]〈len_〉) (5629)
  a=r 0 (5629)
  a+= 2 (5631)
  d=a (5633)
  c=*d (5634)
  d=r 1 (5635)
  *d=c (5637)
  (                    540:   arr[2] = last_symbol) (5638)
  (         t1 = t1 + 1) (5638)
  a=r 1 (5638)
  a++ (5640)
  r=a 1 (5641)
  (         H[t1]〈〉 = H[t0+3]〈last_symbol〉) (5643)
  a=r 0 (5643)
  a+= 3 (5645)
  d=a (5647)
  c=*d (5648)
  d=r 1 (5649)
  *d=c (5651)
  (                    541:   return arr) (5652)
  (         t1 = H[t0+4]〈arr〉) (5652)
  a=r 0 (5652)
  a+= 4 (5654)
  d=a (5656)
  a=*d (5657)
  r=a 1 (5658)
  (         t2 = H[t0]〈〉) (5660)
  d=r 0 (5660)
  a=*d (5662)
  r=a 2 (5663)
  (         t0 = t0 - 1) (5665)
  a=r 0 (5665)
  a-- (5667)
  r=a 0 (5668)
  (         t0 = H[t0]〈〉) (5670)
  d=a (5670)
  a=*d (5671)
  r=a 0 (5672)
  (         goto find_label_ret_id) (5674)
  lj 62666 (5674)
  (insert return as it might not be done by the function:) (5677)
  (         t2 = H[t0]〈〉) (5677)
  d=a (5677)
  a=*d (5678)
  r=a 2 (5679)
  (         t0 = t0 - 1) (5681)
  a=r 0 (5681)
  a-- (5683)
  r=a 0 (5684)
  (         t0 = H[t0]〈〉) (5686)
  d=a (5686)
  a=*d (5687)
  r=a 0 (5688)
  (         goto find_label_ret_id) (5690)
  lj 62666 (5690)
  (         MarkTempVarEnd) (5693)
  (        :tree_from_raw_data_end~:) (5693)
  (                    543: def tree_with_max_depth〈max_depth〉:) (5693)
  (         goto tree_with_max_depth_end~) (5693)
  lj 5869 (5693)
  (        :tree_with_max_depth:) (5696)
  (         MarkTempVarStart) (5696)
  (Arg max_depth at t0 + 1) (5696)
  (                    544:   len_ = 〈1 << 〈max_depth + 1〉〉 - 1) (5696)
  (         t3 = H[t0+1]〈max_depth〉 + 1) (5696)
  c= 1 (5696)
  a=r 0 (5698)
  a++ (5700)
  d=a (5701)
  a=*d (5702)
  a+=c (5703)
  r=a 3 (5704)
  (         t2 = 1 << t3) (5706)
  c=a (5706)
  a= 1 (5707)
  a<<=c (5709)
  r=a 2 (5710)
  (         t1 = t2 - 1) (5712)
  c= 1 (5712)
  a-=c (5714)
  r=a 1 (5715)
  (         H[t0+2]〈len_〉 = t1) (5717)
  d++ (5717)
  *d=a (5718)
  (                    546:   arr = alloc_pH〈len_〉) (5719)
  (         H[t0+3]〈〉 = t0) (5719)
  d++ (5719)
  a=r 0 (5720)
  *d=a (5722)
  (saved bsp, return id:) (5723)
  (         H[t0+4]〈〉 = 41) (5723)
  d++ (5723)
  *d= 41 (5724)
  (push arguments:) (5726)
  (         H[t0+5]〈〉 = H[t0+2]〈len_〉) (5726)
  a+= 2 (5726)
  d=a (5728)
  c=*d (5729)
  a=r 0 (5730)
  a+= 5 (5732)
  d=a (5734)
  *d=c (5735)
  (         t0 = t0 + 4) (5736)
  c= 4 (5736)
  a=r 0 (5738)
  a+=c (5740)
  r=a 0 (5741)
  (         goto addr_alloc_pH) (5743)
  lj 1446 (5743)
  (        :return_id_41:) (5746)
  (         H[t0+3]〈arr〉 = t1) (5746)
  a=r 0 (5746)
  a+= 3 (5748)
  d=a (5750)
  a=r 1 (5751)
  *d=a (5753)
  (                    547:   i = 0  # init all values with NONE) (5754)
  (         H[t0+4]〈i〉 = 0) (5754)
  d++ (5754)
  *d=0 (5755)
  (                    548:   while i < len_:) (5756)
  (        :while_247:) (5756)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈len_〉) (5756)
  a=r 0 (5756)
  a+= 2 (5758)
  d=a (5760)
  c=*d (5761)
  a=r 0 (5762)
  a+= 4 (5764)
  d=a (5766)
  a=*d (5767)
  a<c (5768)
  a=0 (5769)
  jf 1 (5770)
  a++ (5772)
  r=a 1 (5773)
  (         ifN t1 goto whileend_249) (5775)
  a== 0 (5775)
  jf 3 (5777)
  lj 5800 (5779)
  (                    549:     arr[i] = NONE) (5782)
  (         t1 = H[t0+3]〈arr〉 + H[t0+4]〈i〉) (5782)
  c=*d (5782)
  d-- (5783)
  a=*d (5784)
  a+=c (5785)
  r=a 1 (5786)
  (         H[t1]〈〉 = 4294967295) (5788)
  d=a (5788)
  *d=0 (5789)
  *d-- (5790)
  (                    550:     i += 1) (5791)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (5791)
  a=r 0 (5791)
  a+= 4 (5793)
  d=a (5795)
  *d++ (5796)
  (         goto while_247) (5797)
  lj 5756 (5797)
  (        :whileend_249:) (5800)
  (                    551:   return tree_from_raw_data〈arr, 0, NONE〉) (5800)
  (         H[t0+5]〈〉 = t0) (5800)
  a=r 0 (5800)
  a+= 5 (5802)
  d=a (5804)
  a=r 0 (5805)
  *d=a (5807)
  (saved bsp, return id:) (5808)
  (         H[t0+6]〈〉 = 42) (5808)
  d++ (5808)
  *d= 42 (5809)
  (push arguments:) (5811)
  (         H[t0+7]〈〉 = H[t0+3]〈arr〉) (5811)
  a+= 3 (5811)
  d=a (5813)
  c=*d (5814)
  a=r 0 (5815)
  a+= 7 (5817)
  d=a (5819)
  *d=c (5820)
  (         H[t0+8]〈〉 = 0) (5821)
  d++ (5821)
  *d=0 (5822)
  (         H[t0+9]〈〉 = 4294967295) (5823)
  d++ (5823)
  *d=0 (5824)
  *d-- (5825)
  (         t0 = t0 + 6) (5826)
  c= 6 (5826)
  a=r 0 (5828)
  a+=c (5830)
  r=a 0 (5831)
  (         goto tree_from_raw_data) (5833)
  lj 5581 (5833)
  (        :return_id_42:) (5836)
  (         t1 = t1) (5836)
  (         t2 = H[t0]〈〉) (5836)
  d=r 0 (5836)
  a=*d (5838)
  r=a 2 (5839)
  (         t0 = t0 - 1) (5841)
  a=r 0 (5841)
  a-- (5843)
  r=a 0 (5844)
  (         t0 = H[t0]〈〉) (5846)
  d=a (5846)
  a=*d (5847)
  r=a 0 (5848)
  (         goto find_label_ret_id) (5850)
  lj 62666 (5850)
  (insert return as it might not be done by the function:) (5853)
  (         t2 = H[t0]〈〉) (5853)
  d=a (5853)
  a=*d (5854)
  r=a 2 (5855)
  (         t0 = t0 - 1) (5857)
  a=r 0 (5857)
  a-- (5859)
  r=a 0 (5860)
  (         t0 = H[t0]〈〉) (5862)
  d=a (5862)
  a=*d (5863)
  r=a 0 (5864)
  (         goto find_label_ret_id) (5866)
  lj 62666 (5866)
  (         MarkTempVarEnd) (5869)
  (        :tree_with_max_depth_end~:) (5869)
  (                    553: def insert〈tree, code, symbol〉:  # code[0,1,0,1,0,1]) (5869)
  (         goto insert_end~) (5869)
  lj 6564 (5869)
  (        :insert:) (5872)
  (         MarkTempVarStart) (5872)
  (Arg tree at t0 + 1) (5872)
  (Arg code at t0 + 2) (5872)
  (Arg symbol at t0 + 3) (5872)
  (                    555:   tree[1] = tree[1] + 1) (5872)
  (         t2 = H[t0+1]〈tree〉 >> 31) (5872)
  c= 31 (5872)
  a=r 0 (5874)
  a++ (5876)
  d=a (5877)
  a=*d (5878)
  a>>=c (5879)
  r=a 2 (5880)
  (         if t2 goto isM_251) (5882)
  a== 0 (5882)
  jt 3 (5884)
  lj 5902 (5886)
  (         t2 = H[t0+1]〈tree〉 + 1) (5889)
  c= 1 (5889)
  a=*d (5891)
  a+=c (5892)
  r=a 2 (5893)
  (         t2 = H[t2]〈〉) (5895)
  d=a (5895)
  a=*d (5896)
  r=a 2 (5897)
  (         goto MorHdone_252) (5899)
  lj 5922 (5899)
  (        :isM_251:) (5902)
  (         t2 = H[t0+1]〈tree〉 & 2147483647) (5902)
  a=0 (5902)
  a-- (5903)
  a>>= 1 (5904)
  c=a (5906)
  a=r 0 (5907)
  a++ (5909)
  d=a (5910)
  a=*d (5911)
  a&=c (5912)
  r=a 2 (5913)
  (         t2 = t2 + 1) (5915)
  a++ (5915)
  r=a 2 (5916)
  (         t2 = M[t2]) (5918)
  b=a (5918)
  a=*b (5919)
  r=a 2 (5920)
  (        :MorHdone_252:) (5922)
  (         t1 = t2 + 1) (5922)
  c= 1 (5922)
  a=r 2 (5924)
  a+=c (5926)
  r=a 1 (5927)
  (         t2 = H[t0+1]〈tree〉 >> 31) (5929)
  c= 31 (5929)
  a=r 0 (5931)
  a++ (5933)
  d=a (5934)
  a=*d (5935)
  a>>=c (5936)
  r=a 2 (5937)
  (         if t2 goto isM_assign_253) (5939)
  a== 0 (5939)
  jt 3 (5941)
  lj 5959 (5943)
  (         t2 = H[t0+1]〈tree〉 + 1) (5946)
  c= 1 (5946)
  a=*d (5948)
  a+=c (5949)
  r=a 2 (5950)
  (         H[t2]〈〉 = t1) (5952)
  d=a (5952)
  a=r 1 (5953)
  *d=a (5955)
  (         goto MorHdone_assign_254) (5956)
  lj 5979 (5956)
  (        :isM_assign_253:) (5959)
  (         t2 = H[t0+1]〈tree〉 & 2147483647) (5959)
  a=0 (5959)
  a-- (5960)
  a>>= 1 (5961)
  c=a (5963)
  a=r 0 (5964)
  a++ (5966)
  d=a (5967)
  a=*d (5968)
  a&=c (5969)
  r=a 2 (5970)
  (         t2 = t2 + 1) (5972)
  a++ (5972)
  r=a 2 (5973)
  (         M[t2] = t1) (5975)
  c=a (5975)
  a=r 1 (5976)
  *c=a (5978)
  (        :MorHdone_assign_254:) (5979)
  (                    556:   tree[2] = symbol) (5979)
  (         t1 = H[t0+1]〈tree〉 >> 31) (5979)
  c= 31 (5979)
  a=r 0 (5981)
  a++ (5983)
  d=a (5984)
  a=*d (5985)
  a>>=c (5986)
  r=a 1 (5987)
  (         if t1 goto isM_assign_255) (5989)
  a== 0 (5989)
  jt 3 (5991)
  lj 6014 (5993)
  (         t1 = H[t0+1]〈tree〉 + 2) (5996)
  c= 2 (5996)
  a=*d (5998)
  a+=c (5999)
  r=a 1 (6000)
  (         H[t1]〈〉 = H[t0+3]〈symbol〉) (6002)
  a=r 0 (6002)
  a+= 3 (6004)
  d=a (6006)
  c=*d (6007)
  d=r 1 (6008)
  *d=c (6010)
  (         goto MorHdone_assign_256) (6011)
  lj 6039 (6011)
  (        :isM_assign_255:) (6014)
  (         t1 = H[t0+1]〈tree〉 & 2147483647) (6014)
  a=0 (6014)
  a-- (6015)
  a>>= 1 (6016)
  c=a (6018)
  a=r 0 (6019)
  a++ (6021)
  d=a (6022)
  a=*d (6023)
  a&=c (6024)
  r=a 1 (6025)
  (         t1 = t1 + 2) (6027)
  c= 2 (6027)
  a+=c (6029)
  r=a 1 (6030)
  (         M[t1] = H[t0+3]〈symbol〉) (6032)
  c=a (6032)
  a=r 0 (6033)
  a+= 3 (6035)
  d=a (6037)
  *c=*d (6038)
  (        :MorHdone_assign_256:) (6039)
  (                    557:   insert_at_index = 0) (6039)
  (         H[t0+4]〈insert_at_index〉 = 0) (6039)
  a=r 0 (6039)
  a+= 4 (6041)
  d=a (6043)
  *d=0 (6044)
  (                    558:   i = 0) (6045)
  (         H[t0+5]〈i〉 = 0) (6045)
  d++ (6045)
  *d=0 (6046)
  (                    559:   while i < len_pM〈code〉:) (6047)
  (        :while_257:) (6047)
  (         t2 = H[t0+2]〈code〉) (6047)
  a=r 0 (6047)
  a+= 2 (6049)
  d=a (6051)
  a=*d (6052)
  r=a 2 (6053)
  (         t2 = t2 & 2147483647) (6055)
  a=0 (6055)
  a-- (6056)
  a>>= 1 (6057)
  c=a (6059)
  a=r 2 (6060)
  a&=c (6062)
  r=a 2 (6063)
  (         t2 = t2 - 5) (6065)
  c= 5 (6065)
  a-=c (6067)
  r=a 2 (6068)
  (         t3 = M[t2] << 8) (6070)
  c= 8 (6070)
  b=a (6072)
  a=*b (6073)
  a<<=c (6074)
  r=a 3 (6075)
  (         t2 = t2 + 1) (6077)
  a=r 2 (6077)
  a++ (6079)
  r=a 2 (6080)
  (         t3 = t3 + M[t2]) (6082)
  b=a (6082)
  c=*b (6083)
  a=r 3 (6084)
  a+=c (6086)
  r=a 3 (6087)
  (         t3 = t3 << 8) (6089)
  c= 8 (6089)
  a<<=c (6091)
  r=a 3 (6092)
  (         t2 = t2 + 1) (6094)
  a=r 2 (6094)
  a++ (6096)
  r=a 2 (6097)
  (         t3 = t3 + M[t2]) (6099)
  b=a (6099)
  c=*b (6100)
  a=r 3 (6101)
  a+=c (6103)
  r=a 3 (6104)
  (         t3 = t3 << 8) (6106)
  c= 8 (6106)
  a<<=c (6108)
  r=a 3 (6109)
  (         t2 = t2 + 1) (6111)
  a=r 2 (6111)
  a++ (6113)
  r=a 2 (6114)
  (         t3 = t3 + M[t2]) (6116)
  b=a (6116)
  c=*b (6117)
  a=r 3 (6118)
  a+=c (6120)
  r=a 3 (6121)
  (         t1 = H[t0+5]〈i〉 < t3) (6123)
  c=a (6123)
  a=r 0 (6124)
  a+= 5 (6126)
  d=a (6128)
  a=*d (6129)
  a<c (6130)
  a=0 (6131)
  jf 1 (6132)
  a++ (6134)
  r=a 1 (6135)
  (         ifN t1 goto whileend_259) (6137)
  a== 0 (6137)
  jf 3 (6139)
  lj 6240 (6141)
  (                    560:     insert_at_index = 〈insert_at_index << 1〉 + code[i]) (6144)
  (         t2 = H[t0+4]〈insert_at_index〉 << 1) (6144)
  c= 1 (6144)
  d-- (6146)
  a=*d (6147)
  a<<=c (6148)
  r=a 2 (6149)
  (         t3 = H[t0+2]〈code〉 >> 31) (6151)
  c= 31 (6151)
  a=r 0 (6153)
  a+= 2 (6155)
  d=a (6157)
  a=*d (6158)
  a>>=c (6159)
  r=a 3 (6160)
  (         if t3 goto isM_261) (6162)
  a== 0 (6162)
  jt 3 (6164)
  lj 6191 (6166)
  (         t3 = H[t0+2]〈code〉 + H[t0+5]〈i〉) (6169)
  a=r 0 (6169)
  a+= 5 (6171)
  d=a (6173)
  c=*d (6174)
  a=r 0 (6175)
  a+= 2 (6177)
  d=a (6179)
  a=*d (6180)
  a+=c (6181)
  r=a 3 (6182)
  (         t3 = H[t3]〈〉) (6184)
  d=a (6184)
  a=*d (6185)
  r=a 3 (6186)
  (         goto MorHdone_262) (6188)
  lj 6220 (6188)
  (        :isM_261:) (6191)
  (         t3 = H[t0+2]〈code〉 & 2147483647) (6191)
  a=0 (6191)
  a-- (6192)
  a>>= 1 (6193)
  c=a (6195)
  a=r 0 (6196)
  a+= 2 (6198)
  d=a (6200)
  a=*d (6201)
  a&=c (6202)
  r=a 3 (6203)
  (         t3 = t3 + H[t0+5]〈i〉) (6205)
  a=r 0 (6205)
  a+= 5 (6207)
  d=a (6209)
  c=*d (6210)
  a=r 3 (6211)
  a+=c (6213)
  r=a 3 (6214)
  (         t3 = M[t3]) (6216)
  b=a (6216)
  a=*b (6217)
  r=a 3 (6218)
  (        :MorHdone_262:) (6220)
  (         t1 = t2 + t3) (6220)
  c=r 3 (6220)
  a=r 2 (6222)
  a+=c (6224)
  r=a 1 (6225)
  (         H[t0+4]〈insert_at_index〉 = t1) (6227)
  a=r 0 (6227)
  a+= 4 (6229)
  d=a (6231)
  a=r 1 (6232)
  *d=a (6234)
  (                    561:     i += 1) (6235)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (6235)
  d++ (6235)
  *d++ (6236)
  (         goto while_257) (6237)
  lj 6047 (6237)
  (        :whileend_259:) (6240)
  (                    562:   insert_at_index = 〈1 << len_pM〈code〉〉 - 1 + insert_at_index) (6240)
  (         t4 = H[t0+2]〈code〉) (6240)
  a=r 0 (6240)
  a+= 2 (6242)
  d=a (6244)
  a=*d (6245)
  r=a 4 (6246)
  (         t4 = t4 & 2147483647) (6248)
  a=0 (6248)
  a-- (6249)
  a>>= 1 (6250)
  c=a (6252)
  a=r 4 (6253)
  a&=c (6255)
  r=a 4 (6256)
  (         t4 = t4 - 5) (6258)
  c= 5 (6258)
  a-=c (6260)
  r=a 4 (6261)
  (         t5 = M[t4] << 8) (6263)
  c= 8 (6263)
  b=a (6265)
  a=*b (6266)
  a<<=c (6267)
  r=a 5 (6268)
  (         t4 = t4 + 1) (6270)
  a=r 4 (6270)
  a++ (6272)
  r=a 4 (6273)
  (         t5 = t5 + M[t4]) (6275)
  b=a (6275)
  c=*b (6276)
  a=r 5 (6277)
  a+=c (6279)
  r=a 5 (6280)
  (         t5 = t5 << 8) (6282)
  c= 8 (6282)
  a<<=c (6284)
  r=a 5 (6285)
  (         t4 = t4 + 1) (6287)
  a=r 4 (6287)
  a++ (6289)
  r=a 4 (6290)
  (         t5 = t5 + M[t4]) (6292)
  b=a (6292)
  c=*b (6293)
  a=r 5 (6294)
  a+=c (6296)
  r=a 5 (6297)
  (         t5 = t5 << 8) (6299)
  c= 8 (6299)
  a<<=c (6301)
  r=a 5 (6302)
  (         t4 = t4 + 1) (6304)
  a=r 4 (6304)
  a++ (6306)
  r=a 4 (6307)
  (         t5 = t5 + M[t4]) (6309)
  b=a (6309)
  c=*b (6310)
  a=r 5 (6311)
  a+=c (6313)
  r=a 5 (6314)
  (         t3 = 1 << t5) (6316)
  c=a (6316)
  a= 1 (6317)
  a<<=c (6319)
  r=a 3 (6320)
  (         t2 = t3 - 1) (6322)
  c= 1 (6322)
  a-=c (6324)
  r=a 2 (6325)
  (         t1 = t2 + H[t0+4]〈insert_at_index〉) (6327)
  a=r 0 (6327)
  a+= 4 (6329)
  d=a (6331)
  c=*d (6332)
  a=r 2 (6333)
  a+=c (6335)
  r=a 1 (6336)
  (         H[t0+4]〈insert_at_index〉 = t1) (6338)
  *d=a (6338)
  (                    563:   if insert_at_index > len_pH〈array_pH〈tree[0]〉〉 - 1:) (6339)
  (         t3 = H[t0+1]〈tree〉 >> 31) (6339)
  c= 31 (6339)
  a=r 0 (6341)
  a++ (6343)
  d=a (6344)
  a=*d (6345)
  a>>=c (6346)
  r=a 3 (6347)
  (         if t3 goto isM_264) (6349)
  a== 0 (6349)
  jt 3 (6351)
  lj 6368 (6353)
  (         t3 = H[t0+1]〈tree〉 + 0) (6356)
  c=0 (6356)
  a=*d (6357)
  a+=c (6358)
  r=a 3 (6359)
  (         t3 = H[t3]〈〉) (6361)
  d=a (6361)
  a=*d (6362)
  r=a 3 (6363)
  (         goto MorHdone_265) (6365)
  lj 6385 (6365)
  (        :isM_264:) (6368)
  (         t3 = H[t0+1]〈tree〉 & 2147483647) (6368)
  a=0 (6368)
  a-- (6369)
  a>>= 1 (6370)
  c=a (6372)
  a=r 0 (6373)
  a++ (6375)
  d=a (6376)
  a=*d (6377)
  a&=c (6378)
  r=a 3 (6379)
  (         t3 = t3 + 0) (6381)
  (         t3 = M[t3]) (6381)
  b=a (6381)
  a=*b (6382)
  r=a 3 (6383)
  (        :MorHdone_265:) (6385)
  (         t4 = t3) (6385)
  a=r 3 (6385)
  r=a 4 (6387)
  (         t4 = t4 - 2) (6389)
  c= 2 (6389)
  a-=c (6391)
  r=a 4 (6392)
  (         t2 = H[t4]〈〉 - 1) (6394)
  c= 1 (6394)
  d=a (6396)
  a=*d (6397)
  a-=c (6398)
  r=a 2 (6399)
  (         t1 = H[t0+4]〈insert_at_index〉 > t2) (6401)
  c=a (6401)
  a=r 0 (6402)
  a+= 4 (6404)
  d=a (6406)
  a=*d (6407)
  a>c (6408)
  a=0 (6409)
  jf 1 (6410)
  a++ (6412)
  r=a 1 (6413)
  (         ifN t1 goto else_266) (6415)
  a== 0 (6415)
  jf 3 (6417)
  lj 6426 (6419)
  (                    564:     error〈〉 # panic!〈〉) (6422)
  (         error) (6422)
  error (6422)
  (         goto endif_267) (6423)
  lj 6426 (6423)
  (        :else_266:) (6426)
  (        :endif_267:) (6426)
  (                    565:   tr = array_pH〈tree[0]〉) (6426)
  (         t1 = H[t0+1]〈tree〉 >> 31) (6426)
  c= 31 (6426)
  a=r 0 (6428)
  a++ (6430)
  d=a (6431)
  a=*d (6432)
  a>>=c (6433)
  r=a 1 (6434)
  (         if t1 goto isM_268) (6436)
  a== 0 (6436)
  jt 3 (6438)
  lj 6455 (6440)
  (         t1 = H[t0+1]〈tree〉 + 0) (6443)
  c=0 (6443)
  a=*d (6444)
  a+=c (6445)
  r=a 1 (6446)
  (         t1 = H[t1]〈〉) (6448)
  d=a (6448)
  a=*d (6449)
  r=a 1 (6450)
  (         goto MorHdone_269) (6452)
  lj 6472 (6452)
  (        :isM_268:) (6455)
  (         t1 = H[t0+1]〈tree〉 & 2147483647) (6455)
  a=0 (6455)
  a-- (6456)
  a>>= 1 (6457)
  c=a (6459)
  a=r 0 (6460)
  a++ (6462)
  d=a (6463)
  a=*d (6464)
  a&=c (6465)
  r=a 1 (6466)
  (         t1 = t1 + 0) (6468)
  (         t1 = M[t1]) (6468)
  b=a (6468)
  a=*b (6469)
  r=a 1 (6470)
  (        :MorHdone_269:) (6472)
  (         H[t0+6]〈tr〉 = t1) (6472)
  a=r 0 (6472)
  a+= 6 (6474)
  d=a (6476)
  a=r 1 (6477)
  *d=a (6479)
  (                    566:   tr[insert_at_index] = symbol) (6480)
  (         t1 = H[t0+6]〈tr〉 + H[t0+4]〈insert_at_index〉) (6480)
  a=r 0 (6480)
  a+= 4 (6482)
  d=a (6484)
  c=*d (6485)
  a=r 0 (6486)
  a+= 6 (6488)
  d=a (6490)
  a=*d (6491)
  a+=c (6492)
  r=a 1 (6493)
  (         H[t1]〈〉 = H[t0+3]〈symbol〉) (6495)
  a=r 0 (6495)
  a+= 3 (6497)
  d=a (6499)
  c=*d (6500)
  d=r 1 (6501)
  *d=c (6503)
  (                    567:   free_pM〈code〉) (6504)
  (         t1 = H[t0+2]〈code〉 & 2147483647) (6504)
  a=0 (6504)
  a-- (6505)
  a>>= 1 (6506)
  c=a (6508)
  a=r 0 (6509)
  a+= 2 (6511)
  d=a (6513)
  a=*d (6514)
  a&=c (6515)
  r=a 1 (6516)
  (         H[t0+7]〈〉 = t0) (6518)
  a=r 0 (6518)
  a+= 7 (6520)
  d=a (6522)
  a=r 0 (6523)
  *d=a (6525)
  (saved bsp, return id:) (6526)
  (         H[t0+8]〈〉 = 43) (6526)
  d++ (6526)
  *d= 43 (6527)
  (push arguments:) (6529)
  (         H[t0+9]〈〉 = t1) (6529)
  d++ (6529)
  a=r 1 (6530)
  *d=a (6532)
  (         t0 = t0 + 8) (6533)
  c= 8 (6533)
  a=r 0 (6535)
  a+=c (6537)
  r=a 0 (6538)
  (         goto addr_free_pM) (6540)
  lj 2406 (6540)
  (        :return_id_43:) (6543)
  (         t2 = t1) (6543)
  a=r 1 (6543)
  r=a 2 (6545)
  (insert return as it might not be done by the function:) (6547)
  (         t2 = H[t0]〈〉) (6547)
  d=r 0 (6547)
  a=*d (6549)
  r=a 2 (6550)
  (         t0 = t0 - 1) (6552)
  a=r 0 (6552)
  a-- (6554)
  r=a 0 (6555)
  (         t0 = H[t0]〈〉) (6557)
  d=a (6557)
  a=*d (6558)
  r=a 0 (6559)
  (         goto find_label_ret_id) (6561)
  lj 62666 (6561)
  (         MarkTempVarEnd) (6564)
  (        :insert_end~:) (6564)
  (                    570: def lookup〈tree〉:) (6564)
  (         goto lookup_end~) (6564)
  lj 6920 (6564)
  (        :lookup:) (6567)
  (         MarkTempVarStart) (6567)
  (Arg tree at t0 + 1) (6567)
  (                    571:   pseudo_code = 1) (6567)
  (         H[t0+2]〈pseudo_code〉 = 1) (6567)
  a=r 0 (6567)
  a+= 2 (6569)
  d=a (6571)
  *d= 1 (6572)
  (                    572:   len_ = len_pH〈array_pH〈tree[0]〉〉) (6574)
  (         t1 = H[t0+1]〈tree〉 >> 31) (6574)
  c= 31 (6574)
  d-- (6576)
  a=*d (6577)
  a>>=c (6578)
  r=a 1 (6579)
  (         if t1 goto isM_270) (6581)
  a== 0 (6581)
  jt 3 (6583)
  lj 6600 (6585)
  (         t1 = H[t0+1]〈tree〉 + 0) (6588)
  c=0 (6588)
  a=*d (6589)
  a+=c (6590)
  r=a 1 (6591)
  (         t1 = H[t1]〈〉) (6593)
  d=a (6593)
  a=*d (6594)
  r=a 1 (6595)
  (         goto MorHdone_271) (6597)
  lj 6617 (6597)
  (        :isM_270:) (6600)
  (         t1 = H[t0+1]〈tree〉 & 2147483647) (6600)
  a=0 (6600)
  a-- (6601)
  a>>= 1 (6602)
  c=a (6604)
  a=r 0 (6605)
  a++ (6607)
  d=a (6608)
  a=*d (6609)
  a&=c (6610)
  r=a 1 (6611)
  (         t1 = t1 + 0) (6613)
  (         t1 = M[t1]) (6613)
  b=a (6613)
  a=*b (6614)
  r=a 1 (6615)
  (        :MorHdone_271:) (6617)
  (         t2 = t1) (6617)
  a=r 1 (6617)
  r=a 2 (6619)
  (         t2 = t2 - 2) (6621)
  c= 2 (6621)
  a-=c (6623)
  r=a 2 (6624)
  (         H[t0+3]〈len_〉 = H[t2]〈〉) (6626)
  d=a (6626)
  c=*d (6627)
  a=r 0 (6628)
  a+= 3 (6630)
  d=a (6632)
  *d=c (6633)
  (                    573:   while True:) (6634)
  (        :while_272:) (6634)
  (         ifN 1 goto whileend_274) (6634)
  a= 1 (6634)
  a== 0 (6636)
  jf 3 (6638)
  lj 6903 (6640)
  (                    574:     if read_bit〈〉:) (6643)
  (         H[t0+4]〈〉 = t0) (6643)
  a=r 0 (6643)
  a+= 4 (6645)
  d=a (6647)
  a=r 0 (6648)
  *d=a (6650)
  (saved bsp, return id:) (6651)
  (         H[t0+5]〈〉 = 44) (6651)
  d++ (6651)
  *d= 44 (6652)
  (push arguments:) (6654)
  (         t0 = t0 + 5) (6654)
  c= 5 (6654)
  a+=c (6656)
  r=a 0 (6657)
  (         goto read_bit) (6659)
  lj 4578 (6659)
  (        :return_id_44:) (6662)
  (         ifN t1 goto else_275) (6662)
  a=r 1 (6662)
  a== 0 (6664)
  jf 3 (6666)
  lj 6695 (6668)
  (                    575:       return NONE) (6671)
  (         t1 = 4294967295) (6671)
  a=0 (6671)
  a-- (6672)
  r=a 1 (6673)
  (         t2 = H[t0]〈〉) (6675)
  d=r 0 (6675)
  a=*d (6677)
  r=a 2 (6678)
  (         t0 = t0 - 1) (6680)
  a=r 0 (6680)
  a-- (6682)
  r=a 0 (6683)
  (         t0 = H[t0]〈〉) (6685)
  d=a (6685)
  a=*d (6686)
  r=a 0 (6687)
  (         goto find_label_ret_id) (6689)
  lj 62666 (6689)
  (         goto endif_276) (6692)
  lj 6695 (6692)
  (        :else_275:) (6695)
  (        :endif_276:) (6695)
  (                    576:     pseudo_code = 〈pseudo_code << 1〉 + read_bit_result) (6695)
  (         t2 = H[t0+2]〈pseudo_code〉 << 1) (6695)
  c= 1 (6695)
  a=r 0 (6697)
  a+= 2 (6699)
  d=a (6701)
  a=*d (6702)
  a<<=c (6703)
  r=a 2 (6704)
  (         t1 = t2 + H[t252+6]〈read_bit_result〉) (6706)
  a=r 252 (6706)
  a+= 6 (6708)
  d=a (6710)
  c=*d (6711)
  a=r 2 (6712)
  a+=c (6714)
  r=a 1 (6715)
  (         H[t0+2]〈pseudo_code〉 = t1) (6717)
  a=r 0 (6717)
  a+= 2 (6719)
  d=a (6721)
  a=r 1 (6722)
  *d=a (6724)
  (                    577:     lookup_index = pseudo_code - 1) (6725)
  (         t1 = H[t0+2]〈pseudo_code〉 - 1) (6725)
  c= 1 (6725)
  a=*d (6727)
  a-=c (6728)
  r=a 1 (6729)
  (         H[t0+4]〈lookup_index〉 = t1) (6731)
  a=r 0 (6731)
  a+= 4 (6733)
  d=a (6735)
  a=r 1 (6736)
  *d=a (6738)
  (                    578:     if lookup_index > len_ - 1:) (6739)
  (         t2 = H[t0+3]〈len_〉 - 1) (6739)
  c= 1 (6739)
  d-- (6741)
  a=*d (6742)
  a-=c (6743)
  r=a 2 (6744)
  (         t1 = H[t0+4]〈lookup_index〉 > t2) (6746)
  c=a (6746)
  d++ (6747)
  a=*d (6748)
  a>c (6749)
  a=0 (6750)
  jf 1 (6751)
  a++ (6753)
  r=a 1 (6754)
  (         ifN t1 goto else_278) (6756)
  a== 0 (6756)
  jf 3 (6758)
  lj 6787 (6760)
  (                    579:       return NONE # None but anyway None is always leading to DecompressorError) (6763)
  (         t1 = 4294967295) (6763)
  a=0 (6763)
  a-- (6764)
  r=a 1 (6765)
  (         t2 = H[t0]〈〉) (6767)
  d=r 0 (6767)
  a=*d (6769)
  r=a 2 (6770)
  (         t0 = t0 - 1) (6772)
  a=r 0 (6772)
  a-- (6774)
  r=a 0 (6775)
  (         t0 = H[t0]〈〉) (6777)
  d=a (6777)
  a=*d (6778)
  r=a 0 (6779)
  (         goto find_label_ret_id) (6781)
  lj 62666 (6781)
  (         goto endif_279) (6784)
  lj 6787 (6784)
  (        :else_278:) (6787)
  (        :endif_279:) (6787)
  (                    580:     tr = array_pH〈tree[0]〉) (6787)
  (         t1 = H[t0+1]〈tree〉 >> 31) (6787)
  c= 31 (6787)
  a=r 0 (6789)
  a++ (6791)
  d=a (6792)
  a=*d (6793)
  a>>=c (6794)
  r=a 1 (6795)
  (         if t1 goto isM_280) (6797)
  a== 0 (6797)
  jt 3 (6799)
  lj 6816 (6801)
  (         t1 = H[t0+1]〈tree〉 + 0) (6804)
  c=0 (6804)
  a=*d (6805)
  a+=c (6806)
  r=a 1 (6807)
  (         t1 = H[t1]〈〉) (6809)
  d=a (6809)
  a=*d (6810)
  r=a 1 (6811)
  (         goto MorHdone_281) (6813)
  lj 6833 (6813)
  (        :isM_280:) (6816)
  (         t1 = H[t0+1]〈tree〉 & 2147483647) (6816)
  a=0 (6816)
  a-- (6817)
  a>>= 1 (6818)
  c=a (6820)
  a=r 0 (6821)
  a++ (6823)
  d=a (6824)
  a=*d (6825)
  a&=c (6826)
  r=a 1 (6827)
  (         t1 = t1 + 0) (6829)
  (         t1 = M[t1]) (6829)
  b=a (6829)
  a=*b (6830)
  r=a 1 (6831)
  (        :MorHdone_281:) (6833)
  (         H[t0+5]〈tr〉 = t1) (6833)
  a=r 0 (6833)
  a+= 5 (6835)
  d=a (6837)
  a=r 1 (6838)
  *d=a (6840)
  (                    581:     tmp_ = tr[lookup_index] # buf[lookup_index]) (6841)
  (         t1 = H[t0+5]〈tr〉 + H[t0+4]〈lookup_index〉) (6841)
  d-- (6841)
  c=*d (6842)
  d++ (6843)
  a=*d (6844)
  a+=c (6845)
  r=a 1 (6846)
  (         t1 = H[t1]〈〉) (6848)
  d=a (6848)
  a=*d (6849)
  r=a 1 (6850)
  (         H[t0+6]〈tmp_〉 = t1) (6852)
  a=r 0 (6852)
  a+= 6 (6854)
  d=a (6856)
  a=r 1 (6857)
  *d=a (6859)
  (                    582:     if tmp_ != NONE:) (6860)
  (         t1 = H[t0+6]〈tmp_〉 != 4294967295) (6860)
  c=0 (6860)
  c-- (6861)
  a=*d (6862)
  a==c (6863)
  a=0 (6864)
  jt 1 (6865)
  a++ (6867)
  r=a 1 (6868)
  (         ifN t1 goto else_283) (6870)
  a== 0 (6870)
  jf 3 (6872)
  lj 6900 (6874)
  (                    583:       return tmp_) (6877)
  (         t1 = H[t0+6]〈tmp_〉) (6877)
  a=*d (6877)
  r=a 1 (6878)
  (         t2 = H[t0]〈〉) (6880)
  d=r 0 (6880)
  a=*d (6882)
  r=a 2 (6883)
  (         t0 = t0 - 1) (6885)
  a=r 0 (6885)
  a-- (6887)
  r=a 0 (6888)
  (         t0 = H[t0]〈〉) (6890)
  d=a (6890)
  a=*d (6891)
  r=a 0 (6892)
  (         goto find_label_ret_id) (6894)
  lj 62666 (6894)
  (         goto endif_284) (6897)
  lj 6900 (6897)
  (        :else_283:) (6900)
  (        :endif_284:) (6900)
  (         goto while_272) (6900)
  lj 6634 (6900)
  (        :whileend_274:) (6903)
  (insert return as it might not be done by the function:) (6903)
  (         t2 = H[t0]〈〉) (6903)
  d=r 0 (6903)
  a=*d (6905)
  r=a 2 (6906)
  (         t0 = t0 - 1) (6908)
  a=r 0 (6908)
  a-- (6910)
  r=a 0 (6911)
  (         t0 = H[t0]〈〉) (6913)
  d=a (6913)
  a=*d (6914)
  r=a 0 (6915)
  (         goto find_label_ret_id) (6917)
  lj 62666 (6917)
  (         MarkTempVarEnd) (6920)
  (        :lookup_end~:) (6920)
  (                    585: def lookup_symbol〈tree〉:) (6920)
  (         goto lookup_symbol_end~) (6920)
  lj 7104 (6920)
  (        :lookup_symbol:) (6923)
  (         MarkTempVarStart) (6923)
  (Arg tree at t0 + 1) (6923)
  (                    586:   tree = array_pH〈tree〉) (6923)
  (         H[t0+1]〈tree〉 = H[t0+1]〈tree〉) (6923)
  a=r 0 (6923)
  a++ (6925)
  d=a (6926)
  c=*d (6927)
  (                    587:   if tree[1] == 0: # len == 0) (6928)
  (         t2 = H[t0+1]〈tree〉 + 1) (6928)
  c= 1 (6928)
  a=*d (6930)
  a+=c (6931)
  r=a 2 (6932)
  (         t2 = H[t2]〈〉) (6934)
  d=a (6934)
  a=*d (6935)
  r=a 2 (6936)
  (         t1 = t2 == 0) (6938)
  c=0 (6938)
  a==c (6939)
  a=0 (6940)
  jf 1 (6941)
  a++ (6943)
  r=a 1 (6944)
  (         ifN t1 goto else_286) (6946)
  a== 0 (6946)
  jf 3 (6948)
  lj 6977 (6950)
  (                    588:     return NONE  # None empty table) (6953)
  (         t1 = 4294967295) (6953)
  a=0 (6953)
  a-- (6954)
  r=a 1 (6955)
  (         t2 = H[t0]〈〉) (6957)
  d=r 0 (6957)
  a=*d (6959)
  r=a 2 (6960)
  (         t0 = t0 - 1) (6962)
  a=r 0 (6962)
  a-- (6964)
  r=a 0 (6965)
  (         t0 = H[t0]〈〉) (6967)
  d=a (6967)
  a=*d (6968)
  r=a 0 (6969)
  (         goto find_label_ret_id) (6971)
  lj 62666 (6971)
  (         goto endif_287) (6974)
  lj 6977 (6974)
  (        :else_286:) (6977)
  (        :endif_287:) (6977)
  (                    589:   if tree[1] == 1: # len == 1) (6977)
  (         t2 = H[t0+1]〈tree〉 + 1) (6977)
  c= 1 (6977)
  a=r 0 (6979)
  a++ (6981)
  d=a (6982)
  a=*d (6983)
  a+=c (6984)
  r=a 2 (6985)
  (         t2 = H[t2]〈〉) (6987)
  d=a (6987)
  a=*d (6988)
  r=a 2 (6989)
  (         t1 = t2 == 1) (6991)
  c= 1 (6991)
  a==c (6993)
  a=0 (6994)
  jf 1 (6995)
  a++ (6997)
  r=a 1 (6998)
  (         ifN t1 goto else_289) (7000)
  a== 0 (7000)
  jf 3 (7002)
  lj 7041 (7004)
  (                    590:     return tree[2] # last_symbol) (7007)
  (         t1 = H[t0+1]〈tree〉 + 2) (7007)
  c= 2 (7007)
  a=r 0 (7009)
  a++ (7011)
  d=a (7012)
  a=*d (7013)
  a+=c (7014)
  r=a 1 (7015)
  (         t1 = H[t1]〈〉) (7017)
  d=a (7017)
  a=*d (7018)
  r=a 1 (7019)
  (         t1 = t1) (7021)
  (         t2 = H[t0]〈〉) (7021)
  d=r 0 (7021)
  a=*d (7023)
  r=a 2 (7024)
  (         t0 = t0 - 1) (7026)
  a=r 0 (7026)
  a-- (7028)
  r=a 0 (7029)
  (         t0 = H[t0]〈〉) (7031)
  d=a (7031)
  a=*d (7032)
  r=a 0 (7033)
  (         goto find_label_ret_id) (7035)
  lj 62666 (7035)
  (         goto endif_290) (7038)
  lj 7041 (7038)
  (        :else_289:) (7041)
  (        :endif_290:) (7041)
  (                    591:   return lookup〈tree〉) (7041)
  (         H[t0+2]〈〉 = t0) (7041)
  a=r 0 (7041)
  a+= 2 (7043)
  d=a (7045)
  a=r 0 (7046)
  *d=a (7048)
  (saved bsp, return id:) (7049)
  (         H[t0+3]〈〉 = 45) (7049)
  d++ (7049)
  *d= 45 (7050)
  (push arguments:) (7052)
  (         H[t0+4]〈〉 = H[t0+1]〈tree〉) (7052)
  a++ (7052)
  d=a (7053)
  c=*d (7054)
  a=r 0 (7055)
  a+= 4 (7057)
  d=a (7059)
  *d=c (7060)
  (         t0 = t0 + 3) (7061)
  c= 3 (7061)
  a=r 0 (7063)
  a+=c (7065)
  r=a 0 (7066)
  (         goto lookup) (7068)
  lj 6567 (7068)
  (        :return_id_45:) (7071)
  (         t1 = t1) (7071)
  (         t2 = H[t0]〈〉) (7071)
  d=r 0 (7071)
  a=*d (7073)
  r=a 2 (7074)
  (         t0 = t0 - 1) (7076)
  a=r 0 (7076)
  a-- (7078)
  r=a 0 (7079)
  (         t0 = H[t0]〈〉) (7081)
  d=a (7081)
  a=*d (7082)
  r=a 0 (7083)
  (         goto find_label_ret_id) (7085)
  lj 62666 (7085)
  (insert return as it might not be done by the function:) (7088)
  (         t2 = H[t0]〈〉) (7088)
  d=a (7088)
  a=*d (7089)
  r=a 2 (7090)
  (         t0 = t0 - 1) (7092)
  a=r 0 (7092)
  a-- (7094)
  r=a 0 (7095)
  (         t0 = H[t0]〈〉) (7097)
  d=a (7097)
  a=*d (7098)
  r=a 0 (7099)
  (         goto find_label_ret_id) (7101)
  lj 62666 (7101)
  (         MarkTempVarEnd) (7104)
  (        :lookup_symbol_end~:) (7104)
  (                    595: def bit_string_from_code_and_length〈code, len_〉: # nr, nr) (7104)
  (         goto bit_string_from_code_and_length_end~) (7104)
  lj 7342 (7104)
  (        :bit_string_from_code_and_length:) (7107)
  (         MarkTempVarStart) (7107)
  (Arg code at t0 + 1) (7107)
  (Arg len_ at t0 + 2) (7107)
  (                    596:   bits = alloc_pM〈len_〉) (7107)
  (         H[t0+3]〈〉 = t0) (7107)
  a=r 0 (7107)
  a+= 3 (7109)
  d=a (7111)
  a=r 0 (7112)
  *d=a (7114)
  (saved bsp, return id:) (7115)
  (         H[t0+4]〈〉 = 46) (7115)
  d++ (7115)
  *d= 46 (7116)
  (push arguments:) (7118)
  (         H[t0+5]〈〉 = H[t0+2]〈len_〉) (7118)
  a+= 2 (7118)
  d=a (7120)
  c=*d (7121)
  a=r 0 (7122)
  a+= 5 (7124)
  d=a (7126)
  *d=c (7127)
  (         t0 = t0 + 4) (7128)
  c= 4 (7128)
  a=r 0 (7130)
  a+=c (7132)
  r=a 0 (7133)
  (         goto addr_alloc_pM) (7135)
  lj 323 (7135)
  (        :return_id_46:) (7138)
  (         t1 = t1 | 2147483648) (7138)
  a= 1 (7138)
  a<<= 31 (7140)
  c=a (7142)
  a=r 1 (7143)
  a|=c (7145)
  r=a 1 (7146)
  (         H[t0+3]〈bits〉 = t1) (7148)
  a=r 0 (7148)
  a+= 3 (7150)
  d=a (7152)
  a=r 1 (7153)
  *d=a (7155)
  (                    597:   i = 0) (7156)
  (         H[t0+4]〈i〉 = 0) (7156)
  d++ (7156)
  *d=0 (7157)
  (                    598:   while i < len_:  # all bits get set, no initialisation with zero needed) (7158)
  (        :while_291:) (7158)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈len_〉) (7158)
  a=r 0 (7158)
  a+= 2 (7160)
  d=a (7162)
  c=*d (7163)
  a=r 0 (7164)
  a+= 4 (7166)
  d=a (7168)
  a=*d (7169)
  a<c (7170)
  a=0 (7171)
  jf 1 (7172)
  a++ (7174)
  r=a 1 (7175)
  (         ifN t1 goto whileend_293) (7177)
  a== 0 (7177)
  jf 3 (7179)
  lj 7301 (7181)
  (                    599:     if 〈code >> i〉 & 1 == 1:) (7184)
  (         t3 = H[t0+1]〈code〉 >> H[t0+4]〈i〉) (7184)
  c=*d (7184)
  a=r 0 (7185)
  a++ (7187)
  d=a (7188)
  a=*d (7189)
  a>>=c (7190)
  r=a 3 (7191)
  (         t2 = t3 & 1) (7193)
  c= 1 (7193)
  a&=c (7195)
  r=a 2 (7196)
  (         t1 = t2 == 1) (7198)
  c= 1 (7198)
  a==c (7200)
  a=0 (7201)
  jf 1 (7202)
  a++ (7204)
  r=a 1 (7205)
  (         ifN t1 goto else_296) (7207)
  a== 0 (7207)
  jf 3 (7209)
  lj 7255 (7211)
  (                    600:       bits[len_ - i - 1] = 1) (7214)
  (         t2 = H[t0+2]〈len_〉 - H[t0+4]〈i〉) (7214)
  a=r 0 (7214)
  a+= 4 (7216)
  d=a (7218)
  c=*d (7219)
  a=r 0 (7220)
  a+= 2 (7222)
  d=a (7224)
  a=*d (7225)
  a-=c (7226)
  r=a 2 (7227)
  (         t1 = t2 - 1) (7229)
  c= 1 (7229)
  a-=c (7231)
  r=a 1 (7232)
  (         t2 = H[t0+3]〈bits〉 & 2147483647) (7234)
  a=0 (7234)
  a-- (7235)
  a>>= 1 (7236)
  c=a (7238)
  d++ (7239)
  a=*d (7240)
  a&=c (7241)
  r=a 2 (7242)
  (         t2 = t2 + t1) (7244)
  c=r 1 (7244)
  a+=c (7246)
  r=a 2 (7247)
  (         M[t2] = 1) (7249)
  c=a (7249)
  *c= 1 (7250)
  (         goto endif_297) (7252)
  lj 7292 (7252)
  (        :else_296:) (7255)
  (                    602:       bits[len_ - i - 1] = 0) (7255)
  (         t2 = H[t0+2]〈len_〉 - H[t0+4]〈i〉) (7255)
  a=r 0 (7255)
  a+= 4 (7257)
  d=a (7259)
  c=*d (7260)
  a=r 0 (7261)
  a+= 2 (7263)
  d=a (7265)
  a=*d (7266)
  a-=c (7267)
  r=a 2 (7268)
  (         t1 = t2 - 1) (7270)
  c= 1 (7270)
  a-=c (7272)
  r=a 1 (7273)
  (         t2 = H[t0+3]〈bits〉 & 2147483647) (7275)
  a=0 (7275)
  a-- (7276)
  a>>= 1 (7277)
  c=a (7279)
  d++ (7280)
  a=*d (7281)
  a&=c (7282)
  r=a 2 (7283)
  (         t2 = t2 + t1) (7285)
  c=r 1 (7285)
  a+=c (7287)
  r=a 2 (7288)
  (         M[t2] = 0) (7290)
  c=a (7290)
  *c=0 (7291)
  (        :endif_297:) (7292)
  (                    603:     i += 1) (7292)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (7292)
  a=r 0 (7292)
  a+= 4 (7294)
  d=a (7296)
  *d++ (7297)
  (         goto while_291) (7298)
  lj 7158 (7298)
  (        :whileend_293:) (7301)
  (                    604:   return bits) (7301)
  (         t1 = H[t0+3]〈bits〉) (7301)
  a=r 0 (7301)
  a+= 3 (7303)
  d=a (7305)
  a=*d (7306)
  r=a 1 (7307)
  (         t2 = H[t0]〈〉) (7309)
  d=r 0 (7309)
  a=*d (7311)
  r=a 2 (7312)
  (         t0 = t0 - 1) (7314)
  a=r 0 (7314)
  a-- (7316)
  r=a 0 (7317)
  (         t0 = H[t0]〈〉) (7319)
  d=a (7319)
  a=*d (7320)
  r=a 0 (7321)
  (         goto find_label_ret_id) (7323)
  lj 62666 (7323)
  (insert return as it might not be done by the function:) (7326)
  (         t2 = H[t0]〈〉) (7326)
  d=a (7326)
  a=*d (7327)
  r=a 2 (7328)
  (         t0 = t0 - 1) (7330)
  a=r 0 (7330)
  a-- (7332)
  r=a 0 (7333)
  (         t0 = H[t0]〈〉) (7335)
  d=a (7335)
  a=*d (7336)
  r=a 0 (7337)
  (         goto find_label_ret_id) (7339)
  lj 62666 (7339)
  (         MarkTempVarEnd) (7342)
  (        :bit_string_from_code_and_length_end~:) (7342)
  (                    606: def codes_from_lengths_and_symbols〈lengths, symbols〉: # [], [] -> tree) (7342)
  (         goto codes_from_lengths_and_symbols_end~) (7342)
  lj 8632 (7342)
  (        :codes_from_lengths_and_symbols:) (7345)
  (         MarkTempVarStart) (7345)
  (Arg lengths at t0 + 1) (7345)
  (Arg symbols at t0 + 2) (7345)
  (                    608:   max_length = 0) (7345)
  (         H[t0+3]〈max_length〉 = 0) (7345)
  a=r 0 (7345)
  a+= 3 (7347)
  d=a (7349)
  *d=0 (7350)
  (                    609:   i = 0) (7351)
  (         H[t0+4]〈i〉 = 0) (7351)
  d++ (7351)
  *d=0 (7352)
  (                    610:   while i < len_pM〈lengths〉:) (7353)
  (        :while_298:) (7353)
  (         t2 = H[t0+1]〈lengths〉) (7353)
  a=r 0 (7353)
  a++ (7355)
  d=a (7356)
  a=*d (7357)
  r=a 2 (7358)
  (         t2 = t2 & 2147483647) (7360)
  a=0 (7360)
  a-- (7361)
  a>>= 1 (7362)
  c=a (7364)
  a=r 2 (7365)
  a&=c (7367)
  r=a 2 (7368)
  (         t2 = t2 - 5) (7370)
  c= 5 (7370)
  a-=c (7372)
  r=a 2 (7373)
  (         t3 = M[t2] << 8) (7375)
  c= 8 (7375)
  b=a (7377)
  a=*b (7378)
  a<<=c (7379)
  r=a 3 (7380)
  (         t2 = t2 + 1) (7382)
  a=r 2 (7382)
  a++ (7384)
  r=a 2 (7385)
  (         t3 = t3 + M[t2]) (7387)
  b=a (7387)
  c=*b (7388)
  a=r 3 (7389)
  a+=c (7391)
  r=a 3 (7392)
  (         t3 = t3 << 8) (7394)
  c= 8 (7394)
  a<<=c (7396)
  r=a 3 (7397)
  (         t2 = t2 + 1) (7399)
  a=r 2 (7399)
  a++ (7401)
  r=a 2 (7402)
  (         t3 = t3 + M[t2]) (7404)
  b=a (7404)
  c=*b (7405)
  a=r 3 (7406)
  a+=c (7408)
  r=a 3 (7409)
  (         t3 = t3 << 8) (7411)
  c= 8 (7411)
  a<<=c (7413)
  r=a 3 (7414)
  (         t2 = t2 + 1) (7416)
  a=r 2 (7416)
  a++ (7418)
  r=a 2 (7419)
  (         t3 = t3 + M[t2]) (7421)
  b=a (7421)
  c=*b (7422)
  a=r 3 (7423)
  a+=c (7425)
  r=a 3 (7426)
  (         t1 = H[t0+4]〈i〉 < t3) (7428)
  c=a (7428)
  a=r 0 (7429)
  a+= 4 (7431)
  d=a (7433)
  a=*d (7434)
  a<c (7435)
  a=0 (7436)
  jf 1 (7437)
  a++ (7439)
  r=a 1 (7440)
  (         ifN t1 goto whileend_300) (7442)
  a== 0 (7442)
  jf 3 (7444)
  lj 7568 (7446)
  (                    611:     j = lengths[i]) (7449)
  (         t1 = H[t0+1]〈lengths〉 >> 31) (7449)
  c= 31 (7449)
  a=r 0 (7451)
  a++ (7453)
  d=a (7454)
  a=*d (7455)
  a>>=c (7456)
  r=a 1 (7457)
  (         if t1 goto isM_302) (7459)
  a== 0 (7459)
  jt 3 (7461)
  lj 7487 (7463)
  (         t1 = H[t0+1]〈lengths〉 + H[t0+4]〈i〉) (7466)
  a=r 0 (7466)
  a+= 4 (7468)
  d=a (7470)
  c=*d (7471)
  a=r 0 (7472)
  a++ (7474)
  d=a (7475)
  a=*d (7476)
  a+=c (7477)
  r=a 1 (7478)
  (         t1 = H[t1]〈〉) (7480)
  d=a (7480)
  a=*d (7481)
  r=a 1 (7482)
  (         goto MorHdone_303) (7484)
  lj 7515 (7484)
  (        :isM_302:) (7487)
  (         t1 = H[t0+1]〈lengths〉 & 2147483647) (7487)
  a=0 (7487)
  a-- (7488)
  a>>= 1 (7489)
  c=a (7491)
  a=r 0 (7492)
  a++ (7494)
  d=a (7495)
  a=*d (7496)
  a&=c (7497)
  r=a 1 (7498)
  (         t1 = t1 + H[t0+4]〈i〉) (7500)
  a=r 0 (7500)
  a+= 4 (7502)
  d=a (7504)
  c=*d (7505)
  a=r 1 (7506)
  a+=c (7508)
  r=a 1 (7509)
  (         t1 = M[t1]) (7511)
  b=a (7511)
  a=*b (7512)
  r=a 1 (7513)
  (        :MorHdone_303:) (7515)
  (         H[t0+5]〈j〉 = t1) (7515)
  a=r 0 (7515)
  a+= 5 (7517)
  d=a (7519)
  a=r 1 (7520)
  *d=a (7522)
  (                    612:     if j > max_length:) (7523)
  (         t1 = H[t0+5]〈j〉 > H[t0+3]〈max_length〉) (7523)
  a=r 0 (7523)
  a+= 3 (7525)
  d=a (7527)
  c=*d (7528)
  a=r 0 (7529)
  a+= 5 (7531)
  d=a (7533)
  a=*d (7534)
  a>c (7535)
  a=0 (7536)
  jf 1 (7537)
  a++ (7539)
  r=a 1 (7540)
  (         ifN t1 goto else_305) (7542)
  a== 0 (7542)
  jf 3 (7544)
  lj 7559 (7546)
  (                    613:       max_length = j) (7549)
  (         H[t0+3]〈max_length〉 = H[t0+5]〈j〉) (7549)
  c=*d (7549)
  a=r 0 (7550)
  a+= 3 (7552)
  d=a (7554)
  *d=c (7555)
  (         goto endif_306) (7556)
  lj 7559 (7556)
  (        :else_305:) (7559)
  (        :endif_306:) (7559)
  (                    614:     i += 1) (7559)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (7559)
  a=r 0 (7559)
  a+= 4 (7561)
  d=a (7563)
  *d++ (7564)
  (         goto while_298) (7565)
  lj 7353 (7565)
  (        :whileend_300:) (7568)
  (                    615:   bl_count = alloc_pH〈max_length + 1〉  # @TODO: maybe pM?) (7568)
  (         t1 = H[t0+3]〈max_length〉 + 1) (7568)
  c= 1 (7568)
  a=r 0 (7570)
  a+= 3 (7572)
  d=a (7574)
  a=*d (7575)
  a+=c (7576)
  r=a 1 (7577)
  (         H[t0+6]〈〉 = t0) (7579)
  a=r 0 (7579)
  a+= 6 (7581)
  d=a (7583)
  a=r 0 (7584)
  *d=a (7586)
  (saved bsp, return id:) (7587)
  (         H[t0+7]〈〉 = 47) (7587)
  d++ (7587)
  *d= 47 (7588)
  (push arguments:) (7590)
  (         H[t0+8]〈〉 = t1) (7590)
  d++ (7590)
  a=r 1 (7591)
  *d=a (7593)
  (         t0 = t0 + 7) (7594)
  c= 7 (7594)
  a=r 0 (7596)
  a+=c (7598)
  r=a 0 (7599)
  (         goto addr_alloc_pH) (7601)
  lj 1446 (7601)
  (        :return_id_47:) (7604)
  (         t2 = t1) (7604)
  a=r 1 (7604)
  r=a 2 (7606)
  (         H[t0+6]〈bl_count〉 = t2) (7608)
  a=r 0 (7608)
  a+= 6 (7610)
  d=a (7612)
  a=r 2 (7613)
  *d=a (7615)
  (                    616:   i = 0) (7616)
  (         H[t0+4]〈i〉 = 0) (7616)
  a=r 0 (7616)
  a+= 4 (7618)
  d=a (7620)
  *d=0 (7621)
  (                    617:   while i < max_length + 1:) (7622)
  (        :while_307:) (7622)
  (         t2 = H[t0+3]〈max_length〉 + 1) (7622)
  c= 1 (7622)
  a=r 0 (7624)
  a+= 3 (7626)
  d=a (7628)
  a=*d (7629)
  a+=c (7630)
  r=a 2 (7631)
  (         t1 = H[t0+4]〈i〉 < t2) (7633)
  c=a (7633)
  d++ (7634)
  a=*d (7635)
  a<c (7636)
  a=0 (7637)
  jf 1 (7638)
  a++ (7640)
  r=a 1 (7641)
  (         ifN t1 goto whileend_309) (7643)
  a== 0 (7643)
  jf 3 (7645)
  lj 7671 (7647)
  (                    618:     bl_count[i] = 0  # init) (7650)
  (         t1 = H[t0+6]〈bl_count〉 + H[t0+4]〈i〉) (7650)
  c=*d (7650)
  a=r 0 (7651)
  a+= 6 (7653)
  d=a (7655)
  a=*d (7656)
  a+=c (7657)
  r=a 1 (7658)
  (         H[t1]〈〉 = 0) (7660)
  d=a (7660)
  *d=0 (7661)
  (                    619:     i += 1) (7662)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (7662)
  a=r 0 (7662)
  a+= 4 (7664)
  d=a (7666)
  *d++ (7667)
  (         goto while_307) (7668)
  lj 7622 (7668)
  (        :whileend_309:) (7671)
  (                    620:   i = 0) (7671)
  (         H[t0+4]〈i〉 = 0) (7671)
  a=r 0 (7671)
  a+= 4 (7673)
  d=a (7675)
  *d=0 (7676)
  (                    621:   while i < len_pM〈lengths〉:) (7677)
  (        :while_311:) (7677)
  (         t2 = H[t0+1]〈lengths〉) (7677)
  a=r 0 (7677)
  a++ (7679)
  d=a (7680)
  a=*d (7681)
  r=a 2 (7682)
  (         t2 = t2 & 2147483647) (7684)
  a=0 (7684)
  a-- (7685)
  a>>= 1 (7686)
  c=a (7688)
  a=r 2 (7689)
  a&=c (7691)
  r=a 2 (7692)
  (         t2 = t2 - 5) (7694)
  c= 5 (7694)
  a-=c (7696)
  r=a 2 (7697)
  (         t3 = M[t2] << 8) (7699)
  c= 8 (7699)
  b=a (7701)
  a=*b (7702)
  a<<=c (7703)
  r=a 3 (7704)
  (         t2 = t2 + 1) (7706)
  a=r 2 (7706)
  a++ (7708)
  r=a 2 (7709)
  (         t3 = t3 + M[t2]) (7711)
  b=a (7711)
  c=*b (7712)
  a=r 3 (7713)
  a+=c (7715)
  r=a 3 (7716)
  (         t3 = t3 << 8) (7718)
  c= 8 (7718)
  a<<=c (7720)
  r=a 3 (7721)
  (         t2 = t2 + 1) (7723)
  a=r 2 (7723)
  a++ (7725)
  r=a 2 (7726)
  (         t3 = t3 + M[t2]) (7728)
  b=a (7728)
  c=*b (7729)
  a=r 3 (7730)
  a+=c (7732)
  r=a 3 (7733)
  (         t3 = t3 << 8) (7735)
  c= 8 (7735)
  a<<=c (7737)
  r=a 3 (7738)
  (         t2 = t2 + 1) (7740)
  a=r 2 (7740)
  a++ (7742)
  r=a 2 (7743)
  (         t3 = t3 + M[t2]) (7745)
  b=a (7745)
  c=*b (7746)
  a=r 3 (7747)
  a+=c (7749)
  r=a 3 (7750)
  (         t1 = H[t0+4]〈i〉 < t3) (7752)
  c=a (7752)
  a=r 0 (7753)
  a+= 4 (7755)
  d=a (7757)
  a=*d (7758)
  a<c (7759)
  a=0 (7760)
  jf 1 (7761)
  a++ (7763)
  r=a 1 (7764)
  (         ifN t1 goto whileend_313) (7766)
  a== 0 (7766)
  jf 3 (7768)
  lj 7886 (7770)
  (                    622:     j = lengths[i]) (7773)
  (         t1 = H[t0+1]〈lengths〉 >> 31) (7773)
  c= 31 (7773)
  a=r 0 (7775)
  a++ (7777)
  d=a (7778)
  a=*d (7779)
  a>>=c (7780)
  r=a 1 (7781)
  (         if t1 goto isM_315) (7783)
  a== 0 (7783)
  jt 3 (7785)
  lj 7811 (7787)
  (         t1 = H[t0+1]〈lengths〉 + H[t0+4]〈i〉) (7790)
  a=r 0 (7790)
  a+= 4 (7792)
  d=a (7794)
  c=*d (7795)
  a=r 0 (7796)
  a++ (7798)
  d=a (7799)
  a=*d (7800)
  a+=c (7801)
  r=a 1 (7802)
  (         t1 = H[t1]〈〉) (7804)
  d=a (7804)
  a=*d (7805)
  r=a 1 (7806)
  (         goto MorHdone_316) (7808)
  lj 7839 (7808)
  (        :isM_315:) (7811)
  (         t1 = H[t0+1]〈lengths〉 & 2147483647) (7811)
  a=0 (7811)
  a-- (7812)
  a>>= 1 (7813)
  c=a (7815)
  a=r 0 (7816)
  a++ (7818)
  d=a (7819)
  a=*d (7820)
  a&=c (7821)
  r=a 1 (7822)
  (         t1 = t1 + H[t0+4]〈i〉) (7824)
  a=r 0 (7824)
  a+= 4 (7826)
  d=a (7828)
  c=*d (7829)
  a=r 1 (7830)
  a+=c (7832)
  r=a 1 (7833)
  (         t1 = M[t1]) (7835)
  b=a (7835)
  a=*b (7836)
  r=a 1 (7837)
  (        :MorHdone_316:) (7839)
  (         H[t0+5]〈j〉 = t1) (7839)
  a=r 0 (7839)
  a+= 5 (7841)
  d=a (7843)
  a=r 1 (7844)
  *d=a (7846)
  (                    623:     bl_count[j] = bl_count[j] + 1) (7847)
  (         t2 = H[t0+6]〈bl_count〉 + H[t0+5]〈j〉) (7847)
  c=*d (7847)
  d++ (7848)
  a=*d (7849)
  a+=c (7850)
  r=a 2 (7851)
  (         t2 = H[t2]〈〉) (7853)
  d=a (7853)
  a=*d (7854)
  r=a 2 (7855)
  (         t1 = t2 + 1) (7857)
  c= 1 (7857)
  a+=c (7859)
  r=a 1 (7860)
  (         t2 = H[t0+6]〈bl_count〉 + H[t0+5]〈j〉) (7862)
  a=r 0 (7862)
  a+= 5 (7864)
  d=a (7866)
  c=*d (7867)
  d++ (7868)
  a=*d (7869)
  a+=c (7870)
  r=a 2 (7871)
  (         H[t2]〈〉 = t1) (7873)
  d=a (7873)
  a=r 1 (7874)
  *d=a (7876)
  (                    624:     i += 1) (7877)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (7877)
  a=r 0 (7877)
  a+= 4 (7879)
  d=a (7881)
  *d++ (7882)
  (         goto while_311) (7883)
  lj 7677 (7883)
  (        :whileend_313:) (7886)
  (                    625:   code = 0) (7886)
  (         H[t0+7]〈code〉 = 0) (7886)
  a=r 0 (7886)
  a+= 7 (7888)
  d=a (7890)
  *d=0 (7891)
  (                    626:   next_code = alloc_pH〈max_length + 1〉 # @TODO: maybe pM?) (7892)
  (         t1 = H[t0+3]〈max_length〉 + 1) (7892)
  c= 1 (7892)
  a=r 0 (7894)
  a+= 3 (7896)
  d=a (7898)
  a=*d (7899)
  a+=c (7900)
  r=a 1 (7901)
  (         H[t0+8]〈〉 = t0) (7903)
  a=r 0 (7903)
  a+= 8 (7905)
  d=a (7907)
  a=r 0 (7908)
  *d=a (7910)
  (saved bsp, return id:) (7911)
  (         H[t0+9]〈〉 = 48) (7911)
  d++ (7911)
  *d= 48 (7912)
  (push arguments:) (7914)
  (         H[t0+10]〈〉 = t1) (7914)
  d++ (7914)
  a=r 1 (7915)
  *d=a (7917)
  (         t0 = t0 + 9) (7918)
  c= 9 (7918)
  a=r 0 (7920)
  a+=c (7922)
  r=a 0 (7923)
  (         goto addr_alloc_pH) (7925)
  lj 1446 (7925)
  (        :return_id_48:) (7928)
  (         t2 = t1) (7928)
  a=r 1 (7928)
  r=a 2 (7930)
  (         H[t0+8]〈next_code〉 = t2) (7932)
  a=r 0 (7932)
  a+= 8 (7934)
  d=a (7936)
  a=r 2 (7937)
  *d=a (7939)
  (                    627:   next_code[0] = 0  # init, rest is in loop) (7940)
  (         t1 = H[t0+8]〈next_code〉 + 0) (7940)
  c=0 (7940)
  a=*d (7941)
  a+=c (7942)
  r=a 1 (7943)
  (         H[t1]〈〉 = 0) (7945)
  d=a (7945)
  *d=0 (7946)
  (                    628:   bits = 1) (7947)
  (         H[t0+9]〈bits〉 = 1) (7947)
  a=r 0 (7947)
  a+= 9 (7949)
  d=a (7951)
  *d= 1 (7952)
  (                    629:   while bits < max_length + 1:) (7954)
  (        :while_317:) (7954)
  (         t2 = H[t0+3]〈max_length〉 + 1) (7954)
  c= 1 (7954)
  a=r 0 (7956)
  a+= 3 (7958)
  d=a (7960)
  a=*d (7961)
  a+=c (7962)
  r=a 2 (7963)
  (         t1 = H[t0+9]〈bits〉 < t2) (7965)
  c=a (7965)
  a=r 0 (7966)
  a+= 9 (7968)
  d=a (7970)
  a=*d (7971)
  a<c (7972)
  a=0 (7973)
  jf 1 (7974)
  a++ (7976)
  r=a 1 (7977)
  (         ifN t1 goto whileend_319) (7979)
  a== 0 (7979)
  jf 3 (7981)
  lj 8047 (7983)
  (                    630:     code = 〈code + bl_count[bits - 1]〉 << 1) (7986)
  (         t3 = H[t0+9]〈bits〉 - 1) (7986)
  c= 1 (7986)
  a=*d (7988)
  a-=c (7989)
  r=a 3 (7990)
  (         t4 = H[t0+6]〈bl_count〉 + t3) (7992)
  c=a (7992)
  a=r 0 (7993)
  a+= 6 (7995)
  d=a (7997)
  a=*d (7998)
  a+=c (7999)
  r=a 4 (8000)
  (         t4 = H[t4]〈〉) (8002)
  d=a (8002)
  a=*d (8003)
  r=a 4 (8004)
  (         t2 = H[t0+7]〈code〉 + t4) (8006)
  c=a (8006)
  a=r 0 (8007)
  a+= 7 (8009)
  d=a (8011)
  a=*d (8012)
  a+=c (8013)
  r=a 2 (8014)
  (         t1 = t2 << 1) (8016)
  c= 1 (8016)
  a<<=c (8018)
  r=a 1 (8019)
  (         H[t0+7]〈code〉 = t1) (8021)
  *d=a (8021)
  (                    631:     next_code[bits] = code) (8022)
  (         t1 = H[t0+8]〈next_code〉 + H[t0+9]〈bits〉) (8022)
  a=r 0 (8022)
  a+= 9 (8024)
  d=a (8026)
  c=*d (8027)
  d-- (8028)
  a=*d (8029)
  a+=c (8030)
  r=a 1 (8031)
  (         H[t1]〈〉 = H[t0+7]〈code〉) (8033)
  d-- (8033)
  c=*d (8034)
  d=r 1 (8035)
  *d=c (8037)
  (                    632:     bits += 1) (8038)
  (         H[t0+9]〈bits〉 = H[t0+9]〈bits〉 + 1) (8038)
  a=r 0 (8038)
  a+= 9 (8040)
  d=a (8042)
  *d++ (8043)
  (         goto while_317) (8044)
  lj 7954 (8044)
  (        :whileend_319:) (8047)
  (                    633:   codes = tree_with_max_depth〈max_length〉) (8047)
  (         H[t0+11]〈〉 = t0) (8047)
  a=r 0 (8047)
  a+= 11 (8049)
  d=a (8051)
  a=r 0 (8052)
  *d=a (8054)
  (saved bsp, return id:) (8055)
  (         H[t0+12]〈〉 = 49) (8055)
  d++ (8055)
  *d= 49 (8056)
  (push arguments:) (8058)
  (         H[t0+13]〈〉 = H[t0+3]〈max_length〉) (8058)
  a+= 3 (8058)
  d=a (8060)
  c=*d (8061)
  a=r 0 (8062)
  a+= 13 (8064)
  d=a (8066)
  *d=c (8067)
  (         t0 = t0 + 12) (8068)
  c= 12 (8068)
  a=r 0 (8070)
  a+=c (8072)
  r=a 0 (8073)
  (         goto tree_with_max_depth) (8075)
  lj 5696 (8075)
  (        :return_id_49:) (8078)
  (         H[t0+10]〈codes〉 = t1) (8078)
  a=r 0 (8078)
  a+= 10 (8080)
  d=a (8082)
  a=r 1 (8083)
  *d=a (8085)
  (                    634:   i = 0) (8086)
  (         H[t0+4]〈i〉 = 0) (8086)
  a=r 0 (8086)
  a+= 4 (8088)
  d=a (8090)
  *d=0 (8091)
  (                    635:   while i < len_pM〈lengths〉:) (8092)
  (        :while_321:) (8092)
  (         t2 = H[t0+1]〈lengths〉) (8092)
  a=r 0 (8092)
  a++ (8094)
  d=a (8095)
  a=*d (8096)
  r=a 2 (8097)
  (         t2 = t2 & 2147483647) (8099)
  a=0 (8099)
  a-- (8100)
  a>>= 1 (8101)
  c=a (8103)
  a=r 2 (8104)
  a&=c (8106)
  r=a 2 (8107)
  (         t2 = t2 - 5) (8109)
  c= 5 (8109)
  a-=c (8111)
  r=a 2 (8112)
  (         t4 = M[t2] << 8) (8114)
  c= 8 (8114)
  b=a (8116)
  a=*b (8117)
  a<<=c (8118)
  r=a 4 (8119)
  (         t2 = t2 + 1) (8121)
  a=r 2 (8121)
  a++ (8123)
  r=a 2 (8124)
  (         t4 = t4 + M[t2]) (8126)
  b=a (8126)
  c=*b (8127)
  a=r 4 (8128)
  a+=c (8130)
  r=a 4 (8131)
  (         t4 = t4 << 8) (8133)
  c= 8 (8133)
  a<<=c (8135)
  r=a 4 (8136)
  (         t2 = t2 + 1) (8138)
  a=r 2 (8138)
  a++ (8140)
  r=a 2 (8141)
  (         t4 = t4 + M[t2]) (8143)
  b=a (8143)
  c=*b (8144)
  a=r 4 (8145)
  a+=c (8147)
  r=a 4 (8148)
  (         t4 = t4 << 8) (8150)
  c= 8 (8150)
  a<<=c (8152)
  r=a 4 (8153)
  (         t2 = t2 + 1) (8155)
  a=r 2 (8155)
  a++ (8157)
  r=a 2 (8158)
  (         t4 = t4 + M[t2]) (8160)
  b=a (8160)
  c=*b (8161)
  a=r 4 (8162)
  a+=c (8164)
  r=a 4 (8165)
  (         t1 = H[t0+4]〈i〉 < t4) (8167)
  c=a (8167)
  a=r 0 (8168)
  a+= 4 (8170)
  d=a (8172)
  a=*d (8173)
  a<c (8174)
  a=0 (8175)
  jf 1 (8176)
  a++ (8178)
  r=a 1 (8179)
  (         ifN t1 goto whileend_323) (8181)
  a== 0 (8181)
  jf 3 (8183)
  lj 8529 (8185)
  (                    636:     len_ = lengths[i]) (8188)
  (         t1 = H[t0+1]〈lengths〉 >> 31) (8188)
  c= 31 (8188)
  a=r 0 (8190)
  a++ (8192)
  d=a (8193)
  a=*d (8194)
  a>>=c (8195)
  r=a 1 (8196)
  (         if t1 goto isM_325) (8198)
  a== 0 (8198)
  jt 3 (8200)
  lj 8226 (8202)
  (         t1 = H[t0+1]〈lengths〉 + H[t0+4]〈i〉) (8205)
  a=r 0 (8205)
  a+= 4 (8207)
  d=a (8209)
  c=*d (8210)
  a=r 0 (8211)
  a++ (8213)
  d=a (8214)
  a=*d (8215)
  a+=c (8216)
  r=a 1 (8217)
  (         t1 = H[t1]〈〉) (8219)
  d=a (8219)
  a=*d (8220)
  r=a 1 (8221)
  (         goto MorHdone_326) (8223)
  lj 8254 (8223)
  (        :isM_325:) (8226)
  (         t1 = H[t0+1]〈lengths〉 & 2147483647) (8226)
  a=0 (8226)
  a-- (8227)
  a>>= 1 (8228)
  c=a (8230)
  a=r 0 (8231)
  a++ (8233)
  d=a (8234)
  a=*d (8235)
  a&=c (8236)
  r=a 1 (8237)
  (         t1 = t1 + H[t0+4]〈i〉) (8239)
  a=r 0 (8239)
  a+= 4 (8241)
  d=a (8243)
  c=*d (8244)
  a=r 1 (8245)
  a+=c (8247)
  r=a 1 (8248)
  (         t1 = M[t1]) (8250)
  b=a (8250)
  a=*b (8251)
  r=a 1 (8252)
  (        :MorHdone_326:) (8254)
  (         H[t0+11]〈len_〉 = t1) (8254)
  a=r 0 (8254)
  a+= 11 (8256)
  d=a (8258)
  a=r 1 (8259)
  *d=a (8261)
  (                    637:     if len_ > 0 or max_length == 0:) (8262)
  (         t2 = H[t0+11]〈len_〉 > 0) (8262)
  c=0 (8262)
  a=*d (8263)
  a>c (8264)
  a=0 (8265)
  jf 1 (8266)
  a++ (8268)
  r=a 2 (8269)
  (         t4 = H[t0+3]〈max_length〉 == 0) (8271)
  c=0 (8271)
  a=r 0 (8272)
  a+= 3 (8274)
  d=a (8276)
  a=*d (8277)
  a==c (8278)
  a=0 (8279)
  jf 1 (8280)
  a++ (8282)
  r=a 4 (8283)
  (         t1 = t2 or t4) (8285)
  c=a (8285)
  a=r 2 (8286)
  a== 0 (8288)
  jf 1 (8290)
  a=c (8292)
  r=a 1 (8293)
  (         ifN t1 goto else_329) (8295)
  a== 0 (8295)
  jf 3 (8297)
  lj 8520 (8299)
  (                    638:       insert〈codes, bit_string_from_code_and_length〈next_code[len_], len_〉, symbols[i]〉) (8302)
  (         t1 = H[t0+8]〈next_code〉 + H[t0+11]〈len_〉) (8302)
  a=r 0 (8302)
  a+= 11 (8304)
  d=a (8306)
  c=*d (8307)
  a=r 0 (8308)
  a+= 8 (8310)
  d=a (8312)
  a=*d (8313)
  a+=c (8314)
  r=a 1 (8315)
  (         t1 = H[t1]〈〉) (8317)
  d=a (8317)
  a=*d (8318)
  r=a 1 (8319)
  (         H[t0+13]〈〉 = t0) (8321)
  a=r 0 (8321)
  a+= 13 (8323)
  d=a (8325)
  a=r 0 (8326)
  *d=a (8328)
  (saved bsp, return id:) (8329)
  (         H[t0+14]〈〉 = 50) (8329)
  d++ (8329)
  *d= 50 (8330)
  (push arguments:) (8332)
  (         H[t0+15]〈〉 = t1) (8332)
  d++ (8332)
  a=r 1 (8333)
  *d=a (8335)
  (         H[t0+16]〈〉 = H[t0+11]〈len_〉) (8336)
  a=r 0 (8336)
  a+= 11 (8338)
  d=a (8340)
  c=*d (8341)
  a=r 0 (8342)
  a+= 16 (8344)
  d=a (8346)
  *d=c (8347)
  (         t0 = t0 + 14) (8348)
  c= 14 (8348)
  a=r 0 (8350)
  a+=c (8352)
  r=a 0 (8353)
  (         goto bit_string_from_code_and_length) (8355)
  lj 7107 (8355)
  (        :return_id_50:) (8358)
  (         t2 = t1) (8358)
  a=r 1 (8358)
  r=a 2 (8360)
  (         t1 = H[t0+2]〈symbols〉 >> 31) (8362)
  c= 31 (8362)
  a=r 0 (8364)
  a+= 2 (8366)
  d=a (8368)
  a=*d (8369)
  a>>=c (8370)
  r=a 1 (8371)
  (         if t1 goto isM_331) (8373)
  a== 0 (8373)
  jt 3 (8375)
  lj 8402 (8377)
  (         t1 = H[t0+2]〈symbols〉 + H[t0+4]〈i〉) (8380)
  a=r 0 (8380)
  a+= 4 (8382)
  d=a (8384)
  c=*d (8385)
  a=r 0 (8386)
  a+= 2 (8388)
  d=a (8390)
  a=*d (8391)
  a+=c (8392)
  r=a 1 (8393)
  (         t1 = H[t1]〈〉) (8395)
  d=a (8395)
  a=*d (8396)
  r=a 1 (8397)
  (         goto MorHdone_332) (8399)
  lj 8431 (8399)
  (        :isM_331:) (8402)
  (         t1 = H[t0+2]〈symbols〉 & 2147483647) (8402)
  a=0 (8402)
  a-- (8403)
  a>>= 1 (8404)
  c=a (8406)
  a=r 0 (8407)
  a+= 2 (8409)
  d=a (8411)
  a=*d (8412)
  a&=c (8413)
  r=a 1 (8414)
  (         t1 = t1 + H[t0+4]〈i〉) (8416)
  a=r 0 (8416)
  a+= 4 (8418)
  d=a (8420)
  c=*d (8421)
  a=r 1 (8422)
  a+=c (8424)
  r=a 1 (8425)
  (         t1 = M[t1]) (8427)
  b=a (8427)
  a=*b (8428)
  r=a 1 (8429)
  (        :MorHdone_332:) (8431)
  (         H[t0+13]〈〉 = t0) (8431)
  a=r 0 (8431)
  a+= 13 (8433)
  d=a (8435)
  a=r 0 (8436)
  *d=a (8438)
  (saved bsp, return id:) (8439)
  (         H[t0+14]〈〉 = 51) (8439)
  d++ (8439)
  *d= 51 (8440)
  (push arguments:) (8442)
  (         H[t0+15]〈〉 = H[t0+10]〈codes〉) (8442)
  a+= 10 (8442)
  d=a (8444)
  c=*d (8445)
  a=r 0 (8446)
  a+= 15 (8448)
  d=a (8450)
  *d=c (8451)
  (         H[t0+16]〈〉 = t2) (8452)
  d++ (8452)
  a=r 2 (8453)
  *d=a (8455)
  (         H[t0+17]〈〉 = t1) (8456)
  d++ (8456)
  a=r 1 (8457)
  *d=a (8459)
  (         t0 = t0 + 14) (8460)
  c= 14 (8460)
  a=r 0 (8462)
  a+=c (8464)
  r=a 0 (8465)
  (         goto insert) (8467)
  lj 5872 (8467)
  (        :return_id_51:) (8470)
  (         t4 = t1) (8470)
  a=r 1 (8470)
  r=a 4 (8472)
  (                    639:       next_code[len_] = next_code[len_] + 1) (8474)
  (         t2 = H[t0+8]〈next_code〉 + H[t0+11]〈len_〉) (8474)
  a=r 0 (8474)
  a+= 11 (8476)
  d=a (8478)
  c=*d (8479)
  a=r 0 (8480)
  a+= 8 (8482)
  d=a (8484)
  a=*d (8485)
  a+=c (8486)
  r=a 2 (8487)
  (         t2 = H[t2]〈〉) (8489)
  d=a (8489)
  a=*d (8490)
  r=a 2 (8491)
  (         t1 = t2 + 1) (8493)
  c= 1 (8493)
  a+=c (8495)
  r=a 1 (8496)
  (         t2 = H[t0+8]〈next_code〉 + H[t0+11]〈len_〉) (8498)
  a=r 0 (8498)
  a+= 11 (8500)
  d=a (8502)
  c=*d (8503)
  a=r 0 (8504)
  a+= 8 (8506)
  d=a (8508)
  a=*d (8509)
  a+=c (8510)
  r=a 2 (8511)
  (         H[t2]〈〉 = t1) (8513)
  d=a (8513)
  a=r 1 (8514)
  *d=a (8516)
  (         goto endif_330) (8517)
  lj 8520 (8517)
  (        :else_329:) (8520)
  (        :endif_330:) (8520)
  (                    640:     i += 1) (8520)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (8520)
  a=r 0 (8520)
  a+= 4 (8522)
  d=a (8524)
  *d++ (8525)
  (         goto while_321) (8526)
  lj 8092 (8526)
  (        :whileend_323:) (8529)
  (                    641:   free_pH〈bl_count〉) (8529)
  (         H[t0+13]〈〉 = t0) (8529)
  a=r 0 (8529)
  a+= 13 (8531)
  d=a (8533)
  a=r 0 (8534)
  *d=a (8536)
  (saved bsp, return id:) (8537)
  (         H[t0+14]〈〉 = 52) (8537)
  d++ (8537)
  *d= 52 (8538)
  (push arguments:) (8540)
  (         H[t0+15]〈〉 = H[t0+6]〈bl_count〉) (8540)
  a+= 6 (8540)
  d=a (8542)
  c=*d (8543)
  a=r 0 (8544)
  a+= 15 (8546)
  d=a (8548)
  *d=c (8549)
  (         t0 = t0 + 14) (8550)
  c= 14 (8550)
  a=r 0 (8552)
  a+=c (8554)
  r=a 0 (8555)
  (         goto addr_free_pH) (8557)
  lj 2913 (8557)
  (        :return_id_52:) (8560)
  (                    642:   free_pH〈next_code〉) (8560)
  (         H[t0+13]〈〉 = t0) (8560)
  a=r 0 (8560)
  a+= 13 (8562)
  d=a (8564)
  a=r 0 (8565)
  *d=a (8567)
  (saved bsp, return id:) (8568)
  (         H[t0+14]〈〉 = 53) (8568)
  d++ (8568)
  *d= 53 (8569)
  (push arguments:) (8571)
  (         H[t0+15]〈〉 = H[t0+8]〈next_code〉) (8571)
  a+= 8 (8571)
  d=a (8573)
  c=*d (8574)
  a=r 0 (8575)
  a+= 15 (8577)
  d=a (8579)
  *d=c (8580)
  (         t0 = t0 + 14) (8581)
  c= 14 (8581)
  a=r 0 (8583)
  a+=c (8585)
  r=a 0 (8586)
  (         goto addr_free_pH) (8588)
  lj 2913 (8588)
  (        :return_id_53:) (8591)
  (                    643:   return codes) (8591)
  (         t1 = H[t0+10]〈codes〉) (8591)
  a=r 0 (8591)
  a+= 10 (8593)
  d=a (8595)
  a=*d (8596)
  r=a 1 (8597)
  (         t2 = H[t0]〈〉) (8599)
  d=r 0 (8599)
  a=*d (8601)
  r=a 2 (8602)
  (         t0 = t0 - 1) (8604)
  a=r 0 (8604)
  a-- (8606)
  r=a 0 (8607)
  (         t0 = H[t0]〈〉) (8609)
  d=a (8609)
  a=*d (8610)
  r=a 0 (8611)
  (         goto find_label_ret_id) (8613)
  lj 62666 (8613)
  (insert return as it might not be done by the function:) (8616)
  (         t2 = H[t0]〈〉) (8616)
  d=a (8616)
  a=*d (8617)
  r=a 2 (8618)
  (         t0 = t0 - 1) (8620)
  a=r 0 (8620)
  a-- (8622)
  r=a 0 (8623)
  (         t0 = H[t0]〈〉) (8625)
  d=a (8625)
  a=*d (8626)
  r=a 0 (8627)
  (         goto find_label_ret_id) (8629)
  lj 62666 (8629)
  (         MarkTempVarEnd) (8632)
  (        :codes_from_lengths_and_symbols_end~:) (8632)
  (                    645: def codes_from_lengths〈lengths〉: # [] -> Tree) (8632)
  (         goto codes_from_lengths_end~) (8632)
  lj 8975 (8632)
  (        :codes_from_lengths:) (8635)
  (         MarkTempVarStart) (8635)
  (Arg lengths at t0 + 1) (8635)
  (                    647:   symbols = alloc_pH〈len_pM〈lengths〉〉) (8635)
  (         t1 = H[t0+1]〈lengths〉) (8635)
  a=r 0 (8635)
  a++ (8637)
  d=a (8638)
  a=*d (8639)
  r=a 1 (8640)
  (         t1 = t1 & 2147483647) (8642)
  a=0 (8642)
  a-- (8643)
  a>>= 1 (8644)
  c=a (8646)
  a=r 1 (8647)
  a&=c (8649)
  r=a 1 (8650)
  (         t1 = t1 - 5) (8652)
  c= 5 (8652)
  a-=c (8654)
  r=a 1 (8655)
  (         t2 = M[t1] << 8) (8657)
  c= 8 (8657)
  b=a (8659)
  a=*b (8660)
  a<<=c (8661)
  r=a 2 (8662)
  (         t1 = t1 + 1) (8664)
  a=r 1 (8664)
  a++ (8666)
  r=a 1 (8667)
  (         t2 = t2 + M[t1]) (8669)
  b=a (8669)
  c=*b (8670)
  a=r 2 (8671)
  a+=c (8673)
  r=a 2 (8674)
  (         t2 = t2 << 8) (8676)
  c= 8 (8676)
  a<<=c (8678)
  r=a 2 (8679)
  (         t1 = t1 + 1) (8681)
  a=r 1 (8681)
  a++ (8683)
  r=a 1 (8684)
  (         t2 = t2 + M[t1]) (8686)
  b=a (8686)
  c=*b (8687)
  a=r 2 (8688)
  a+=c (8690)
  r=a 2 (8691)
  (         t2 = t2 << 8) (8693)
  c= 8 (8693)
  a<<=c (8695)
  r=a 2 (8696)
  (         t1 = t1 + 1) (8698)
  a=r 1 (8698)
  a++ (8700)
  r=a 1 (8701)
  (         t2 = t2 + M[t1]) (8703)
  b=a (8703)
  c=*b (8704)
  a=r 2 (8705)
  a+=c (8707)
  r=a 2 (8708)
  (         H[t0+2]〈〉 = t0) (8710)
  d++ (8710)
  a=r 0 (8711)
  *d=a (8713)
  (saved bsp, return id:) (8714)
  (         H[t0+3]〈〉 = 54) (8714)
  d++ (8714)
  *d= 54 (8715)
  (push arguments:) (8717)
  (         H[t0+4]〈〉 = t2) (8717)
  d++ (8717)
  a=r 2 (8718)
  *d=a (8720)
  (         t0 = t0 + 3) (8721)
  c= 3 (8721)
  a=r 0 (8723)
  a+=c (8725)
  r=a 0 (8726)
  (         goto addr_alloc_pH) (8728)
  lj 1446 (8728)
  (        :return_id_54:) (8731)
  (         H[t0+2]〈symbols〉 = t1) (8731)
  a=r 0 (8731)
  a+= 2 (8733)
  d=a (8735)
  a=r 1 (8736)
  *d=a (8738)
  (                    648:   i = 0) (8739)
  (         H[t0+3]〈i〉 = 0) (8739)
  d++ (8739)
  *d=0 (8740)
  (                    649:   while i < len_pM〈lengths〉:) (8741)
  (        :while_333:) (8741)
  (         t2 = H[t0+1]〈lengths〉) (8741)
  a=r 0 (8741)
  a++ (8743)
  d=a (8744)
  a=*d (8745)
  r=a 2 (8746)
  (         t2 = t2 & 2147483647) (8748)
  a=0 (8748)
  a-- (8749)
  a>>= 1 (8750)
  c=a (8752)
  a=r 2 (8753)
  a&=c (8755)
  r=a 2 (8756)
  (         t2 = t2 - 5) (8758)
  c= 5 (8758)
  a-=c (8760)
  r=a 2 (8761)
  (         t3 = M[t2] << 8) (8763)
  c= 8 (8763)
  b=a (8765)
  a=*b (8766)
  a<<=c (8767)
  r=a 3 (8768)
  (         t2 = t2 + 1) (8770)
  a=r 2 (8770)
  a++ (8772)
  r=a 2 (8773)
  (         t3 = t3 + M[t2]) (8775)
  b=a (8775)
  c=*b (8776)
  a=r 3 (8777)
  a+=c (8779)
  r=a 3 (8780)
  (         t3 = t3 << 8) (8782)
  c= 8 (8782)
  a<<=c (8784)
  r=a 3 (8785)
  (         t2 = t2 + 1) (8787)
  a=r 2 (8787)
  a++ (8789)
  r=a 2 (8790)
  (         t3 = t3 + M[t2]) (8792)
  b=a (8792)
  c=*b (8793)
  a=r 3 (8794)
  a+=c (8796)
  r=a 3 (8797)
  (         t3 = t3 << 8) (8799)
  c= 8 (8799)
  a<<=c (8801)
  r=a 3 (8802)
  (         t2 = t2 + 1) (8804)
  a=r 2 (8804)
  a++ (8806)
  r=a 2 (8807)
  (         t3 = t3 + M[t2]) (8809)
  b=a (8809)
  c=*b (8810)
  a=r 3 (8811)
  a+=c (8813)
  r=a 3 (8814)
  (         t1 = H[t0+3]〈i〉 < t3) (8816)
  c=a (8816)
  a=r 0 (8817)
  a+= 3 (8819)
  d=a (8821)
  a=*d (8822)
  a<c (8823)
  a=0 (8824)
  jf 1 (8825)
  a++ (8827)
  r=a 1 (8828)
  (         ifN t1 goto whileend_335) (8830)
  a== 0 (8830)
  jf 3 (8832)
  lj 8857 (8834)
  (                    650:     symbols[i] = i) (8837)
  (         t1 = H[t0+2]〈symbols〉 + H[t0+3]〈i〉) (8837)
  c=*d (8837)
  d-- (8838)
  a=*d (8839)
  a+=c (8840)
  r=a 1 (8841)
  (         H[t1]〈〉 = H[t0+3]〈i〉) (8843)
  d++ (8843)
  c=*d (8844)
  d=r 1 (8845)
  *d=c (8847)
  (                    651:     i += 1) (8848)
  (         H[t0+3]〈i〉 = H[t0+3]〈i〉 + 1) (8848)
  a=r 0 (8848)
  a+= 3 (8850)
  d=a (8852)
  *d++ (8853)
  (         goto while_333) (8854)
  lj 8741 (8854)
  (        :whileend_335:) (8857)
  (                    652:   ret = codes_from_lengths_and_symbols〈lengths, symbols〉) (8857)
  (         H[t0+4]〈〉 = t0) (8857)
  a=r 0 (8857)
  a+= 4 (8859)
  d=a (8861)
  a=r 0 (8862)
  *d=a (8864)
  (saved bsp, return id:) (8865)
  (         H[t0+5]〈〉 = 55) (8865)
  d++ (8865)
  *d= 55 (8866)
  (push arguments:) (8868)
  (         H[t0+6]〈〉 = H[t0+1]〈lengths〉) (8868)
  a++ (8868)
  d=a (8869)
  c=*d (8870)
  a=r 0 (8871)
  a+= 6 (8873)
  d=a (8875)
  *d=c (8876)
  (         H[t0+7]〈〉 = H[t0+2]〈symbols〉) (8877)
  a=r 0 (8877)
  a+= 2 (8879)
  d=a (8881)
  c=*d (8882)
  a=r 0 (8883)
  a+= 7 (8885)
  d=a (8887)
  *d=c (8888)
  (         t0 = t0 + 5) (8889)
  c= 5 (8889)
  a=r 0 (8891)
  a+=c (8893)
  r=a 0 (8894)
  (         goto codes_from_lengths_and_symbols) (8896)
  lj 7345 (8896)
  (        :return_id_55:) (8899)
  (         H[t0+4]〈ret〉 = t1) (8899)
  a=r 0 (8899)
  a+= 4 (8901)
  d=a (8903)
  a=r 1 (8904)
  *d=a (8906)
  (                    653:   free_pH〈symbols〉) (8907)
  (         H[t0+5]〈〉 = t0) (8907)
  d++ (8907)
  a=r 0 (8908)
  *d=a (8910)
  (saved bsp, return id:) (8911)
  (         H[t0+6]〈〉 = 56) (8911)
  d++ (8911)
  *d= 56 (8912)
  (push arguments:) (8914)
  (         H[t0+7]〈〉 = H[t0+2]〈symbols〉) (8914)
  a+= 2 (8914)
  d=a (8916)
  c=*d (8917)
  a=r 0 (8918)
  a+= 7 (8920)
  d=a (8922)
  *d=c (8923)
  (         t0 = t0 + 6) (8924)
  c= 6 (8924)
  a=r 0 (8926)
  a+=c (8928)
  r=a 0 (8929)
  (         goto addr_free_pH) (8931)
  lj 2913 (8931)
  (        :return_id_56:) (8934)
  (                    654:   return ret) (8934)
  (         t1 = H[t0+4]〈ret〉) (8934)
  a=r 0 (8934)
  a+= 4 (8936)
  d=a (8938)
  a=*d (8939)
  r=a 1 (8940)
  (         t2 = H[t0]〈〉) (8942)
  d=r 0 (8942)
  a=*d (8944)
  r=a 2 (8945)
  (         t0 = t0 - 1) (8947)
  a=r 0 (8947)
  a-- (8949)
  r=a 0 (8950)
  (         t0 = H[t0]〈〉) (8952)
  d=a (8952)
  a=*d (8953)
  r=a 0 (8954)
  (         goto find_label_ret_id) (8956)
  lj 62666 (8956)
  (insert return as it might not be done by the function:) (8959)
  (         t2 = H[t0]〈〉) (8959)
  d=a (8959)
  a=*d (8960)
  r=a 2 (8961)
  (         t0 = t0 - 1) (8963)
  a=r 0 (8963)
  a-- (8965)
  r=a 0 (8966)
  (         t0 = H[t0]〈〉) (8968)
  d=a (8968)
  a=*d (8969)
  r=a 0 (8970)
  (         goto find_label_ret_id) (8972)
  lj 62666 (8972)
  (         MarkTempVarEnd) (8975)
  (        :codes_from_lengths_end~:) (8975)
  (                    658: def uppercase_all〈base_word〉:) (8975)
  (         goto uppercase_all_end~) (8975)
  lj 9836 (8975)
  (        :uppercase_all:) (8978)
  (         MarkTempVarStart) (8978)
  (Arg base_word at t0 + 1) (8978)
  (                    659:   base_word = array_pM〈base_word〉) (8978)
  (         H[t0+1]〈base_word〉 = H[t0+1]〈base_word〉) (8978)
  a=r 0 (8978)
  a++ (8980)
  d=a (8981)
  c=*d (8982)
  (                    660:   l = len_pM〈base_word〉) (8983)
  (         t1 = H[t0+1]〈base_word〉) (8983)
  a=*d (8983)
  r=a 1 (8984)
  (         t1 = t1 & 2147483647) (8986)
  a=0 (8986)
  a-- (8987)
  a>>= 1 (8988)
  c=a (8990)
  a=r 1 (8991)
  a&=c (8993)
  r=a 1 (8994)
  (         t1 = t1 - 5) (8996)
  c= 5 (8996)
  a-=c (8998)
  r=a 1 (8999)
  (         t2 = M[t1] << 8) (9001)
  c= 8 (9001)
  b=a (9003)
  a=*b (9004)
  a<<=c (9005)
  r=a 2 (9006)
  (         t1 = t1 + 1) (9008)
  a=r 1 (9008)
  a++ (9010)
  r=a 1 (9011)
  (         t2 = t2 + M[t1]) (9013)
  b=a (9013)
  c=*b (9014)
  a=r 2 (9015)
  a+=c (9017)
  r=a 2 (9018)
  (         t2 = t2 << 8) (9020)
  c= 8 (9020)
  a<<=c (9022)
  r=a 2 (9023)
  (         t1 = t1 + 1) (9025)
  a=r 1 (9025)
  a++ (9027)
  r=a 1 (9028)
  (         t2 = t2 + M[t1]) (9030)
  b=a (9030)
  c=*b (9031)
  a=r 2 (9032)
  a+=c (9034)
  r=a 2 (9035)
  (         t2 = t2 << 8) (9037)
  c= 8 (9037)
  a<<=c (9039)
  r=a 2 (9040)
  (         t1 = t1 + 1) (9042)
  a=r 1 (9042)
  a++ (9044)
  r=a 1 (9045)
  (         t2 = t2 + M[t1]) (9047)
  b=a (9047)
  c=*b (9048)
  a=r 2 (9049)
  a+=c (9051)
  r=a 2 (9052)
  (         H[t0+2]〈l〉 = t2) (9054)
  d++ (9054)
  *d=a (9055)
  (                    661:   v = alloc_pM〈l〉) (9056)
  (         H[t0+3]〈〉 = t0) (9056)
  d++ (9056)
  a=r 0 (9057)
  *d=a (9059)
  (saved bsp, return id:) (9060)
  (         H[t0+4]〈〉 = 57) (9060)
  d++ (9060)
  *d= 57 (9061)
  (push arguments:) (9063)
  (         H[t0+5]〈〉 = H[t0+2]〈l〉) (9063)
  a+= 2 (9063)
  d=a (9065)
  c=*d (9066)
  a=r 0 (9067)
  a+= 5 (9069)
  d=a (9071)
  *d=c (9072)
  (         t0 = t0 + 4) (9073)
  c= 4 (9073)
  a=r 0 (9075)
  a+=c (9077)
  r=a 0 (9078)
  (         goto addr_alloc_pM) (9080)
  lj 323 (9080)
  (        :return_id_57:) (9083)
  (         t1 = t1 | 2147483648) (9083)
  a= 1 (9083)
  a<<= 31 (9085)
  c=a (9087)
  a=r 1 (9088)
  a|=c (9090)
  r=a 1 (9091)
  (         H[t0+3]〈v〉 = t1) (9093)
  a=r 0 (9093)
  a+= 3 (9095)
  d=a (9097)
  a=r 1 (9098)
  *d=a (9100)
  (                    662:   i = 0) (9101)
  (         H[t0+4]〈i〉 = 0) (9101)
  d++ (9101)
  *d=0 (9102)
  (                    663:   while i < l:) (9103)
  (        :while_337:) (9103)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈l〉) (9103)
  a=r 0 (9103)
  a+= 2 (9105)
  d=a (9107)
  c=*d (9108)
  a=r 0 (9109)
  a+= 4 (9111)
  d=a (9113)
  a=*d (9114)
  a<c (9115)
  a=0 (9116)
  jf 1 (9117)
  a++ (9119)
  r=a 1 (9120)
  (         ifN t1 goto whileend_339) (9122)
  a== 0 (9122)
  jf 3 (9124)
  lj 9795 (9126)
  (                    664:     b = base_word[i]) (9129)
  (         t1 = H[t0+1]〈base_word〉 & 2147483647) (9129)
  a=0 (9129)
  a-- (9130)
  a>>= 1 (9131)
  c=a (9133)
  a=r 0 (9134)
  a++ (9136)
  d=a (9137)
  a=*d (9138)
  a&=c (9139)
  r=a 1 (9140)
  (         t1 = t1 + H[t0+4]〈i〉) (9142)
  a=r 0 (9142)
  a+= 4 (9144)
  d=a (9146)
  c=*d (9147)
  a=r 1 (9148)
  a+=c (9150)
  r=a 1 (9151)
  (         t1 = M[t1]) (9153)
  b=a (9153)
  a=*b (9154)
  r=a 1 (9155)
  (         H[t0+5]〈b〉 = t1) (9157)
  d++ (9157)
  *d=a (9158)
  (                    665:     if 〈b >= 0 and b <= 96〉 or 〈b >= 123 and b <= 191〉:) (9159)
  (         t3 = H[t0+5]〈b〉 >= 0) (9159)
  c=0 (9159)
  a=*d (9160)
  a==c (9161)
  jt 4 (9162)
  a>c (9164)
  a=0 (9165)
  jf 2 (9166)
  a= 1 (9168)
  r=a 3 (9170)
  (         t4 = H[t0+5]〈b〉 <= 96) (9172)
  c= 96 (9172)
  a=*d (9174)
  a==c (9175)
  jt 4 (9176)
  a<c (9178)
  a=0 (9179)
  jf 2 (9180)
  a= 1 (9182)
  r=a 4 (9184)
  (         t2 = t3 and t4) (9186)
  c=a (9186)
  a=r 3 (9187)
  a== 0 (9189)
  jt 1 (9191)
  a=c (9193)
  r=a 2 (9194)
  (         t4 = H[t0+5]〈b〉 >= 123) (9196)
  c= 123 (9196)
  a=*d (9198)
  a==c (9199)
  jt 4 (9200)
  a>c (9202)
  a=0 (9203)
  jf 2 (9204)
  a= 1 (9206)
  r=a 4 (9208)
  (         t5 = H[t0+5]〈b〉 <= 191) (9210)
  c= 191 (9210)
  a=*d (9212)
  a==c (9213)
  jt 4 (9214)
  a<c (9216)
  a=0 (9217)
  jf 2 (9218)
  a= 1 (9220)
  r=a 5 (9222)
  (         t3 = t4 and t5) (9224)
  c=a (9224)
  a=r 4 (9225)
  a== 0 (9227)
  jt 1 (9229)
  a=c (9231)
  r=a 3 (9232)
  (         t1 = t2 or t3) (9234)
  c=a (9234)
  a=r 2 (9235)
  a== 0 (9237)
  jf 1 (9239)
  a=c (9241)
  r=a 1 (9242)
  (         ifN t1 goto else_345) (9244)
  a== 0 (9244)
  jf 3 (9246)
  lj 9278 (9248)
  (                    666:       v[i] = b) (9251)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (9251)
  a=0 (9251)
  a-- (9252)
  a>>= 1 (9253)
  c=a (9255)
  a=r 0 (9256)
  a+= 3 (9258)
  d=a (9260)
  a=*d (9261)
  a&=c (9262)
  r=a 1 (9263)
  (         t1 = t1 + H[t0+4]〈i〉) (9265)
  d++ (9265)
  c=*d (9266)
  a+=c (9267)
  r=a 1 (9268)
  (         M[t1] = H[t0+5]〈b〉) (9270)
  c=a (9270)
  d++ (9271)
  *c=*d (9272)
  (                    667:       i += 1) (9273)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9273)
  d-- (9273)
  *d++ (9274)
  (         goto endif_346) (9275)
  lj 9792 (9275)
  (        :else_345:) (9278)
  (                    668:     elif b >= 97 and b <= 122:) (9278)
  (         t2 = H[t0+5]〈b〉 >= 97) (9278)
  c= 97 (9278)
  a=r 0 (9280)
  a+= 5 (9282)
  d=a (9284)
  a=*d (9285)
  a==c (9286)
  jt 4 (9287)
  a>c (9289)
  a=0 (9290)
  jf 2 (9291)
  a= 1 (9293)
  r=a 2 (9295)
  (         t3 = H[t0+5]〈b〉 <= 122) (9297)
  c= 122 (9297)
  a=*d (9299)
  a==c (9300)
  jt 4 (9301)
  a<c (9303)
  a=0 (9304)
  jf 2 (9305)
  a= 1 (9307)
  r=a 3 (9309)
  (         t1 = t2 and t3) (9311)
  c=a (9311)
  a=r 2 (9312)
  a== 0 (9314)
  jt 1 (9316)
  a=c (9318)
  r=a 1 (9319)
  (         ifN t1 goto else_349) (9321)
  a== 0 (9321)
  jf 3 (9323)
  lj 9361 (9325)
  (                    669:       v[i] = b ^ 32) (9328)
  (         t1 = H[t0+5]〈b〉 ^ 32) (9328)
  c= 32 (9328)
  a=*d (9330)
  a^=c (9331)
  r=a 1 (9332)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (9334)
  a=0 (9334)
  a-- (9335)
  a>>= 1 (9336)
  c=a (9338)
  a=r 0 (9339)
  a+= 3 (9341)
  d=a (9343)
  a=*d (9344)
  a&=c (9345)
  r=a 2 (9346)
  (         t2 = t2 + H[t0+4]〈i〉) (9348)
  d++ (9348)
  c=*d (9349)
  a+=c (9350)
  r=a 2 (9351)
  (         M[t2] = t1) (9353)
  c=a (9353)
  a=r 1 (9354)
  *c=a (9356)
  (                    670:       i += 1) (9357)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9357)
  *d++ (9357)
  (         goto endif_350) (9358)
  lj 9792 (9358)
  (        :else_349:) (9361)
  (                    671:     elif b >= 192 and b <= 223:) (9361)
  (         t2 = H[t0+5]〈b〉 >= 192) (9361)
  c= 192 (9361)
  a=r 0 (9363)
  a+= 5 (9365)
  d=a (9367)
  a=*d (9368)
  a==c (9369)
  jt 4 (9370)
  a>c (9372)
  a=0 (9373)
  jf 2 (9374)
  a= 1 (9376)
  r=a 2 (9378)
  (         t3 = H[t0+5]〈b〉 <= 223) (9380)
  c= 223 (9380)
  a=*d (9382)
  a==c (9383)
  jt 4 (9384)
  a<c (9386)
  a=0 (9387)
  jf 2 (9388)
  a= 1 (9390)
  r=a 3 (9392)
  (         t1 = t2 and t3) (9394)
  c=a (9394)
  a=r 2 (9395)
  a== 0 (9397)
  jt 1 (9399)
  a=c (9401)
  r=a 1 (9402)
  (         ifN t1 goto else_353) (9404)
  a== 0 (9404)
  jf 3 (9406)
  lj 9525 (9408)
  (                    672:       v[i] = b) (9411)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (9411)
  a=0 (9411)
  a-- (9412)
  a>>= 1 (9413)
  c=a (9415)
  a=r 0 (9416)
  a+= 3 (9418)
  d=a (9420)
  a=*d (9421)
  a&=c (9422)
  r=a 1 (9423)
  (         t1 = t1 + H[t0+4]〈i〉) (9425)
  d++ (9425)
  c=*d (9426)
  a+=c (9427)
  r=a 1 (9428)
  (         M[t1] = H[t0+5]〈b〉) (9430)
  c=a (9430)
  d++ (9431)
  *c=*d (9432)
  (                    673:       i += 1) (9433)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9433)
  d-- (9433)
  *d++ (9434)
  (                    674:       if i < l:) (9435)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈l〉) (9435)
  a=r 0 (9435)
  a+= 2 (9437)
  d=a (9439)
  c=*d (9440)
  a=r 0 (9441)
  a+= 4 (9443)
  d=a (9445)
  a=*d (9446)
  a<c (9447)
  a=0 (9448)
  jf 1 (9449)
  a++ (9451)
  r=a 1 (9452)
  (         ifN t1 goto else_356) (9454)
  a== 0 (9454)
  jf 3 (9456)
  lj 9516 (9458)
  (                    675:         v[i] = base_word[i] ^ 32) (9461)
  (         t2 = H[t0+1]〈base_word〉 & 2147483647) (9461)
  a=0 (9461)
  a-- (9462)
  a>>= 1 (9463)
  c=a (9465)
  a=r 0 (9466)
  a++ (9468)
  d=a (9469)
  a=*d (9470)
  a&=c (9471)
  r=a 2 (9472)
  (         t2 = t2 + H[t0+4]〈i〉) (9474)
  a=r 0 (9474)
  a+= 4 (9476)
  d=a (9478)
  c=*d (9479)
  a=r 2 (9480)
  a+=c (9482)
  r=a 2 (9483)
  (         t2 = M[t2]) (9485)
  b=a (9485)
  a=*b (9486)
  r=a 2 (9487)
  (         t1 = t2 ^ 32) (9489)
  c= 32 (9489)
  a^=c (9491)
  r=a 1 (9492)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (9494)
  a=0 (9494)
  a-- (9495)
  a>>= 1 (9496)
  c=a (9498)
  d-- (9499)
  a=*d (9500)
  a&=c (9501)
  r=a 2 (9502)
  (         t2 = t2 + H[t0+4]〈i〉) (9504)
  d++ (9504)
  c=*d (9505)
  a+=c (9506)
  r=a 2 (9507)
  (         M[t2] = t1) (9509)
  c=a (9509)
  a=r 1 (9510)
  *c=a (9512)
  (         goto endif_357) (9513)
  lj 9516 (9513)
  (        :else_356:) (9516)
  (        :endif_357:) (9516)
  (                    676:       i += 1) (9516)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9516)
  a=r 0 (9516)
  a+= 4 (9518)
  d=a (9520)
  *d++ (9521)
  (         goto endif_354) (9522)
  lj 9792 (9522)
  (        :else_353:) (9525)
  (                    677:     elif b >= 224 and b <= 255:) (9525)
  (         t2 = H[t0+5]〈b〉 >= 224) (9525)
  c= 224 (9525)
  a=r 0 (9527)
  a+= 5 (9529)
  d=a (9531)
  a=*d (9532)
  a==c (9533)
  jt 4 (9534)
  a>c (9536)
  a=0 (9537)
  jf 2 (9538)
  a= 1 (9540)
  r=a 2 (9542)
  (         t3 = H[t0+5]〈b〉 <= 255) (9544)
  c= 255 (9544)
  a=*d (9546)
  a==c (9547)
  jt 4 (9548)
  a<c (9550)
  a=0 (9551)
  jf 2 (9552)
  a= 1 (9554)
  r=a 3 (9556)
  (         t1 = t2 and t3) (9558)
  c=a (9558)
  a=r 2 (9559)
  a== 0 (9561)
  jt 1 (9563)
  a=c (9565)
  r=a 1 (9566)
  (         ifN t1 goto else_360) (9568)
  a== 0 (9568)
  jf 3 (9570)
  lj 9771 (9572)
  (                    678:       v[i] = b) (9575)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (9575)
  a=0 (9575)
  a-- (9576)
  a>>= 1 (9577)
  c=a (9579)
  a=r 0 (9580)
  a+= 3 (9582)
  d=a (9584)
  a=*d (9585)
  a&=c (9586)
  r=a 1 (9587)
  (         t1 = t1 + H[t0+4]〈i〉) (9589)
  d++ (9589)
  c=*d (9590)
  a+=c (9591)
  r=a 1 (9592)
  (         M[t1] = H[t0+5]〈b〉) (9594)
  c=a (9594)
  d++ (9595)
  *c=*d (9596)
  (                    679:       i += 1) (9597)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9597)
  d-- (9597)
  *d++ (9598)
  (                    680:       if i < l:) (9599)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈l〉) (9599)
  a=r 0 (9599)
  a+= 2 (9601)
  d=a (9603)
  c=*d (9604)
  a=r 0 (9605)
  a+= 4 (9607)
  d=a (9609)
  a=*d (9610)
  a<c (9611)
  a=0 (9612)
  jf 1 (9613)
  a++ (9615)
  r=a 1 (9616)
  (         ifN t1 goto else_363) (9618)
  a== 0 (9618)
  jf 3 (9620)
  lj 9675 (9622)
  (                    681:         v[i] = base_word[i]) (9625)
  (         t1 = H[t0+1]〈base_word〉 & 2147483647) (9625)
  a=0 (9625)
  a-- (9626)
  a>>= 1 (9627)
  c=a (9629)
  a=r 0 (9630)
  a++ (9632)
  d=a (9633)
  a=*d (9634)
  a&=c (9635)
  r=a 1 (9636)
  (         t1 = t1 + H[t0+4]〈i〉) (9638)
  a=r 0 (9638)
  a+= 4 (9640)
  d=a (9642)
  c=*d (9643)
  a=r 1 (9644)
  a+=c (9646)
  r=a 1 (9647)
  (         t1 = M[t1]) (9649)
  b=a (9649)
  a=*b (9650)
  r=a 1 (9651)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (9653)
  a=0 (9653)
  a-- (9654)
  a>>= 1 (9655)
  c=a (9657)
  d-- (9658)
  a=*d (9659)
  a&=c (9660)
  r=a 2 (9661)
  (         t2 = t2 + H[t0+4]〈i〉) (9663)
  d++ (9663)
  c=*d (9664)
  a+=c (9665)
  r=a 2 (9666)
  (         M[t2] = t1) (9668)
  c=a (9668)
  a=r 1 (9669)
  *c=a (9671)
  (         goto endif_364) (9672)
  lj 9675 (9672)
  (        :else_363:) (9675)
  (        :endif_364:) (9675)
  (                    682:       i += 1) (9675)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9675)
  a=r 0 (9675)
  a+= 4 (9677)
  d=a (9679)
  *d++ (9680)
  (                    683:       if i < l:) (9681)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈l〉) (9681)
  a=r 0 (9681)
  a+= 2 (9683)
  d=a (9685)
  c=*d (9686)
  a=r 0 (9687)
  a+= 4 (9689)
  d=a (9691)
  a=*d (9692)
  a<c (9693)
  a=0 (9694)
  jf 1 (9695)
  a++ (9697)
  r=a 1 (9698)
  (         ifN t1 goto else_366) (9700)
  a== 0 (9700)
  jf 3 (9702)
  lj 9762 (9704)
  (                    684:         v[i] = base_word[i] ^ 5) (9707)
  (         t2 = H[t0+1]〈base_word〉 & 2147483647) (9707)
  a=0 (9707)
  a-- (9708)
  a>>= 1 (9709)
  c=a (9711)
  a=r 0 (9712)
  a++ (9714)
  d=a (9715)
  a=*d (9716)
  a&=c (9717)
  r=a 2 (9718)
  (         t2 = t2 + H[t0+4]〈i〉) (9720)
  a=r 0 (9720)
  a+= 4 (9722)
  d=a (9724)
  c=*d (9725)
  a=r 2 (9726)
  a+=c (9728)
  r=a 2 (9729)
  (         t2 = M[t2]) (9731)
  b=a (9731)
  a=*b (9732)
  r=a 2 (9733)
  (         t1 = t2 ^ 5) (9735)
  c= 5 (9735)
  a^=c (9737)
  r=a 1 (9738)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (9740)
  a=0 (9740)
  a-- (9741)
  a>>= 1 (9742)
  c=a (9744)
  d-- (9745)
  a=*d (9746)
  a&=c (9747)
  r=a 2 (9748)
  (         t2 = t2 + H[t0+4]〈i〉) (9750)
  d++ (9750)
  c=*d (9751)
  a+=c (9752)
  r=a 2 (9753)
  (         M[t2] = t1) (9755)
  c=a (9755)
  a=r 1 (9756)
  *c=a (9758)
  (         goto endif_367) (9759)
  lj 9762 (9759)
  (        :else_366:) (9762)
  (        :endif_367:) (9762)
  (                    685:       i += 1) (9762)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (9762)
  a=r 0 (9762)
  a+= 4 (9764)
  d=a (9766)
  *d++ (9767)
  (         goto endif_361) (9768)
  lj 9792 (9768)
  (        :else_360:) (9771)
  (                    687:       return NONE # unreachable) (9771)
  (         t1 = 4294967295) (9771)
  a=0 (9771)
  a-- (9772)
  r=a 1 (9773)
  (         t2 = H[t0]〈〉) (9775)
  d=r 0 (9775)
  a=*d (9777)
  r=a 2 (9778)
  (         t0 = t0 - 1) (9780)
  a=r 0 (9780)
  a-- (9782)
  r=a 0 (9783)
  (         t0 = H[t0]〈〉) (9785)
  d=a (9785)
  a=*d (9786)
  r=a 0 (9787)
  (         goto find_label_ret_id) (9789)
  lj 62666 (9789)
  (        :endif_361:) (9792)
  (        :endif_354:) (9792)
  (        :endif_350:) (9792)
  (        :endif_346:) (9792)
  (         goto while_337) (9792)
  lj 9103 (9792)
  (        :whileend_339:) (9795)
  (                    688:   return v) (9795)
  (         t1 = H[t0+3]〈v〉) (9795)
  a=r 0 (9795)
  a+= 3 (9797)
  d=a (9799)
  a=*d (9800)
  r=a 1 (9801)
  (         t2 = H[t0]〈〉) (9803)
  d=r 0 (9803)
  a=*d (9805)
  r=a 2 (9806)
  (         t0 = t0 - 1) (9808)
  a=r 0 (9808)
  a-- (9810)
  r=a 0 (9811)
  (         t0 = H[t0]〈〉) (9813)
  d=a (9813)
  a=*d (9814)
  r=a 0 (9815)
  (         goto find_label_ret_id) (9817)
  lj 62666 (9817)
  (insert return as it might not be done by the function:) (9820)
  (         t2 = H[t0]〈〉) (9820)
  d=a (9820)
  a=*d (9821)
  r=a 2 (9822)
  (         t0 = t0 - 1) (9824)
  a=r 0 (9824)
  a-- (9826)
  r=a 0 (9827)
  (         t0 = H[t0]〈〉) (9829)
  d=a (9829)
  a=*d (9830)
  r=a 0 (9831)
  (         goto find_label_ret_id) (9833)
  lj 62666 (9833)
  (         MarkTempVarEnd) (9836)
  (        :uppercase_all_end~:) (9836)
  (                    690: def uppercase_first〈base_word〉:) (9836)
  (         goto uppercase_first_end~) (9836)
  lj 10760 (9836)
  (        :uppercase_first:) (9839)
  (         MarkTempVarStart) (9839)
  (Arg base_word at t0 + 1) (9839)
  (                    691:   base_word = array_pM〈base_word〉) (9839)
  (         H[t0+1]〈base_word〉 = H[t0+1]〈base_word〉) (9839)
  a=r 0 (9839)
  a++ (9841)
  d=a (9842)
  c=*d (9843)
  (                    692:   l = len_pM〈base_word〉) (9844)
  (         t1 = H[t0+1]〈base_word〉) (9844)
  a=*d (9844)
  r=a 1 (9845)
  (         t1 = t1 & 2147483647) (9847)
  a=0 (9847)
  a-- (9848)
  a>>= 1 (9849)
  c=a (9851)
  a=r 1 (9852)
  a&=c (9854)
  r=a 1 (9855)
  (         t1 = t1 - 5) (9857)
  c= 5 (9857)
  a-=c (9859)
  r=a 1 (9860)
  (         t2 = M[t1] << 8) (9862)
  c= 8 (9862)
  b=a (9864)
  a=*b (9865)
  a<<=c (9866)
  r=a 2 (9867)
  (         t1 = t1 + 1) (9869)
  a=r 1 (9869)
  a++ (9871)
  r=a 1 (9872)
  (         t2 = t2 + M[t1]) (9874)
  b=a (9874)
  c=*b (9875)
  a=r 2 (9876)
  a+=c (9878)
  r=a 2 (9879)
  (         t2 = t2 << 8) (9881)
  c= 8 (9881)
  a<<=c (9883)
  r=a 2 (9884)
  (         t1 = t1 + 1) (9886)
  a=r 1 (9886)
  a++ (9888)
  r=a 1 (9889)
  (         t2 = t2 + M[t1]) (9891)
  b=a (9891)
  c=*b (9892)
  a=r 2 (9893)
  a+=c (9895)
  r=a 2 (9896)
  (         t2 = t2 << 8) (9898)
  c= 8 (9898)
  a<<=c (9900)
  r=a 2 (9901)
  (         t1 = t1 + 1) (9903)
  a=r 1 (9903)
  a++ (9905)
  r=a 1 (9906)
  (         t2 = t2 + M[t1]) (9908)
  b=a (9908)
  c=*b (9909)
  a=r 2 (9910)
  a+=c (9912)
  r=a 2 (9913)
  (         H[t0+2]〈l〉 = t2) (9915)
  d++ (9915)
  *d=a (9916)
  (                    693:   if l == 0:) (9917)
  (         t1 = H[t0+2]〈l〉 == 0) (9917)
  c=0 (9917)
  a=*d (9918)
  a==c (9919)
  a=0 (9920)
  jf 1 (9921)
  a++ (9923)
  r=a 1 (9924)
  (         ifN t1 goto else_369) (9926)
  a== 0 (9926)
  jf 3 (9928)
  lj 9980 (9930)
  (                    694:     return alloc_pM〈0〉) (9933)
  (         H[t0+3]〈〉 = t0) (9933)
  d++ (9933)
  a=r 0 (9934)
  *d=a (9936)
  (saved bsp, return id:) (9937)
  (         H[t0+4]〈〉 = 58) (9937)
  d++ (9937)
  *d= 58 (9938)
  (push arguments:) (9940)
  (         H[t0+5]〈〉 = 0) (9940)
  d++ (9940)
  *d=0 (9941)
  (         t0 = t0 + 4) (9942)
  c= 4 (9942)
  a+=c (9944)
  r=a 0 (9945)
  (         goto addr_alloc_pM) (9947)
  lj 323 (9947)
  (        :return_id_58:) (9950)
  (         t1 = t1 | 2147483648) (9950)
  a= 1 (9950)
  a<<= 31 (9952)
  c=a (9954)
  a=r 1 (9955)
  a|=c (9957)
  r=a 1 (9958)
  (         t1 = t1) (9960)
  (         t2 = H[t0]〈〉) (9960)
  d=r 0 (9960)
  a=*d (9962)
  r=a 2 (9963)
  (         t0 = t0 - 1) (9965)
  a=r 0 (9965)
  a-- (9967)
  r=a 0 (9968)
  (         t0 = H[t0]〈〉) (9970)
  d=a (9970)
  a=*d (9971)
  r=a 0 (9972)
  (         goto find_label_ret_id) (9974)
  lj 62666 (9974)
  (         goto endif_370) (9977)
  lj 9980 (9977)
  (        :else_369:) (9980)
  (        :endif_370:) (9980)
  (                    695:   v = alloc_pM〈l〉) (9980)
  (         H[t0+3]〈〉 = t0) (9980)
  a=r 0 (9980)
  a+= 3 (9982)
  d=a (9984)
  a=r 0 (9985)
  *d=a (9987)
  (saved bsp, return id:) (9988)
  (         H[t0+4]〈〉 = 59) (9988)
  d++ (9988)
  *d= 59 (9989)
  (push arguments:) (9991)
  (         H[t0+5]〈〉 = H[t0+2]〈l〉) (9991)
  a+= 2 (9991)
  d=a (9993)
  c=*d (9994)
  a=r 0 (9995)
  a+= 5 (9997)
  d=a (9999)
  *d=c (10000)
  (         t0 = t0 + 4) (10001)
  c= 4 (10001)
  a=r 0 (10003)
  a+=c (10005)
  r=a 0 (10006)
  (         goto addr_alloc_pM) (10008)
  lj 323 (10008)
  (        :return_id_59:) (10011)
  (         t1 = t1 | 2147483648) (10011)
  a= 1 (10011)
  a<<= 31 (10013)
  c=a (10015)
  a=r 1 (10016)
  a|=c (10018)
  r=a 1 (10019)
  (         H[t0+3]〈v〉 = t1) (10021)
  a=r 0 (10021)
  a+= 3 (10023)
  d=a (10025)
  a=r 1 (10026)
  *d=a (10028)
  (                    696:   i = 0) (10029)
  (         H[t0+4]〈i〉 = 0) (10029)
  d++ (10029)
  *d=0 (10030)
  (                    697:   b = base_word[0]) (10031)
  (         t1 = H[t0+1]〈base_word〉 & 2147483647) (10031)
  a=0 (10031)
  a-- (10032)
  a>>= 1 (10033)
  c=a (10035)
  a=r 0 (10036)
  a++ (10038)
  d=a (10039)
  a=*d (10040)
  a&=c (10041)
  r=a 1 (10042)
  (         t1 = t1 + 0) (10044)
  (         t1 = M[t1]) (10044)
  b=a (10044)
  a=*b (10045)
  r=a 1 (10046)
  (         H[t0+5]〈b〉 = t1) (10048)
  a=r 0 (10048)
  a+= 5 (10050)
  d=a (10052)
  a=r 1 (10053)
  *d=a (10055)
  (                    698:   if 〈b >= 1 and b <= 96〉 or 〈b >= 123 and b <= 191〉:) (10056)
  (         t3 = H[t0+5]〈b〉 >= 1) (10056)
  c= 1 (10056)
  a=*d (10058)
  a==c (10059)
  jt 4 (10060)
  a>c (10062)
  a=0 (10063)
  jf 2 (10064)
  a= 1 (10066)
  r=a 3 (10068)
  (         t4 = H[t0+5]〈b〉 <= 96) (10070)
  c= 96 (10070)
  a=*d (10072)
  a==c (10073)
  jt 4 (10074)
  a<c (10076)
  a=0 (10077)
  jf 2 (10078)
  a= 1 (10080)
  r=a 4 (10082)
  (         t2 = t3 and t4) (10084)
  c=a (10084)
  a=r 3 (10085)
  a== 0 (10087)
  jt 1 (10089)
  a=c (10091)
  r=a 2 (10092)
  (         t4 = H[t0+5]〈b〉 >= 123) (10094)
  c= 123 (10094)
  a=*d (10096)
  a==c (10097)
  jt 4 (10098)
  a>c (10100)
  a=0 (10101)
  jf 2 (10102)
  a= 1 (10104)
  r=a 4 (10106)
  (         t5 = H[t0+5]〈b〉 <= 191) (10108)
  c= 191 (10108)
  a=*d (10110)
  a==c (10111)
  jt 4 (10112)
  a<c (10114)
  a=0 (10115)
  jf 2 (10116)
  a= 1 (10118)
  r=a 5 (10120)
  (         t3 = t4 and t5) (10122)
  c=a (10122)
  a=r 4 (10123)
  a== 0 (10125)
  jt 1 (10127)
  a=c (10129)
  r=a 3 (10130)
  (         t1 = t2 or t3) (10132)
  c=a (10132)
  a=r 2 (10133)
  a== 0 (10135)
  jf 1 (10137)
  a=c (10139)
  r=a 1 (10140)
  (         ifN t1 goto else_375) (10142)
  a== 0 (10142)
  jf 3 (10144)
  lj 10176 (10146)
  (                    699:     v[0] = b) (10149)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (10149)
  a=0 (10149)
  a-- (10150)
  a>>= 1 (10151)
  c=a (10153)
  a=r 0 (10154)
  a+= 3 (10156)
  d=a (10158)
  a=*d (10159)
  a&=c (10160)
  r=a 1 (10161)
  (         t1 = t1 + 0) (10163)
  (         M[t1] = H[t0+5]〈b〉) (10163)
  c=a (10163)
  a=r 0 (10164)
  a+= 5 (10166)
  d=a (10168)
  *c=*d (10169)
  (                    700:     i = 1) (10170)
  (         H[t0+4]〈i〉 = 1) (10170)
  d-- (10170)
  *d= 1 (10171)
  (         goto endif_376) (10173)
  lj 10642 (10173)
  (        :else_375:) (10176)
  (                    701:   elif b >= 97 and b <= 122:) (10176)
  (         t2 = H[t0+5]〈b〉 >= 97) (10176)
  c= 97 (10176)
  a=r 0 (10178)
  a+= 5 (10180)
  d=a (10182)
  a=*d (10183)
  a==c (10184)
  jt 4 (10185)
  a>c (10187)
  a=0 (10188)
  jf 2 (10189)
  a= 1 (10191)
  r=a 2 (10193)
  (         t3 = H[t0+5]〈b〉 <= 122) (10195)
  c= 122 (10195)
  a=*d (10197)
  a==c (10198)
  jt 4 (10199)
  a<c (10201)
  a=0 (10202)
  jf 2 (10203)
  a= 1 (10205)
  r=a 3 (10207)
  (         t1 = t2 and t3) (10209)
  c=a (10209)
  a=r 2 (10210)
  a== 0 (10212)
  jt 1 (10214)
  a=c (10216)
  r=a 1 (10217)
  (         ifN t1 goto else_379) (10219)
  a== 0 (10219)
  jf 3 (10221)
  lj 10256 (10223)
  (                    702:     v[0] = b ^ 32) (10226)
  (         t1 = H[t0+5]〈b〉 ^ 32) (10226)
  c= 32 (10226)
  a=*d (10228)
  a^=c (10229)
  r=a 1 (10230)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (10232)
  a=0 (10232)
  a-- (10233)
  a>>= 1 (10234)
  c=a (10236)
  a=r 0 (10237)
  a+= 3 (10239)
  d=a (10241)
  a=*d (10242)
  a&=c (10243)
  r=a 2 (10244)
  (         t2 = t2 + 0) (10246)
  (         M[t2] = t1) (10246)
  c=a (10246)
  a=r 1 (10247)
  *c=a (10249)
  (                    703:     i = 1) (10250)
  (         H[t0+4]〈i〉 = 1) (10250)
  d++ (10250)
  *d= 1 (10251)
  (         goto endif_380) (10253)
  lj 10642 (10253)
  (        :else_379:) (10256)
  (                    704:   elif b >= 192 and b <= 223:) (10256)
  (         t2 = H[t0+5]〈b〉 >= 192) (10256)
  c= 192 (10256)
  a=r 0 (10258)
  a+= 5 (10260)
  d=a (10262)
  a=*d (10263)
  a==c (10264)
  jt 4 (10265)
  a>c (10267)
  a=0 (10268)
  jf 2 (10269)
  a= 1 (10271)
  r=a 2 (10273)
  (         t3 = H[t0+5]〈b〉 <= 223) (10275)
  c= 223 (10275)
  a=*d (10277)
  a==c (10278)
  jt 4 (10279)
  a<c (10281)
  a=0 (10282)
  jf 2 (10283)
  a= 1 (10285)
  r=a 3 (10287)
  (         t1 = t2 and t3) (10289)
  c=a (10289)
  a=r 2 (10290)
  a== 0 (10292)
  jt 1 (10294)
  a=c (10296)
  r=a 1 (10297)
  (         ifN t1 goto else_383) (10299)
  a== 0 (10299)
  jf 3 (10301)
  lj 10405 (10303)
  (                    705:     v[0] = b) (10306)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (10306)
  a=0 (10306)
  a-- (10307)
  a>>= 1 (10308)
  c=a (10310)
  a=r 0 (10311)
  a+= 3 (10313)
  d=a (10315)
  a=*d (10316)
  a&=c (10317)
  r=a 1 (10318)
  (         t1 = t1 + 0) (10320)
  (         M[t1] = H[t0+5]〈b〉) (10320)
  c=a (10320)
  a=r 0 (10321)
  a+= 5 (10323)
  d=a (10325)
  *c=*d (10326)
  (                    706:     if 1 < l:) (10327)
  (         t1 = 1 < H[t0+2]〈l〉) (10327)
  a=r 0 (10327)
  a+= 2 (10329)
  d=a (10331)
  c=*d (10332)
  a= 1 (10333)
  a<c (10335)
  a=0 (10336)
  jf 1 (10337)
  a++ (10339)
  r=a 1 (10340)
  (         ifN t1 goto else_386) (10342)
  a== 0 (10342)
  jf 3 (10344)
  lj 10395 (10346)
  (                    707:       v[1] = base_word[1] ^ 32) (10349)
  (         t2 = H[t0+1]〈base_word〉 & 2147483647) (10349)
  a=0 (10349)
  a-- (10350)
  a>>= 1 (10351)
  c=a (10353)
  d-- (10354)
  a=*d (10355)
  a&=c (10356)
  r=a 2 (10357)
  (         t2 = t2 + 1) (10359)
  a++ (10359)
  r=a 2 (10360)
  (         t2 = M[t2]) (10362)
  b=a (10362)
  a=*b (10363)
  r=a 2 (10364)
  (         t1 = t2 ^ 32) (10366)
  c= 32 (10366)
  a^=c (10368)
  r=a 1 (10369)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (10371)
  a=0 (10371)
  a-- (10372)
  a>>= 1 (10373)
  c=a (10375)
  a=r 0 (10376)
  a+= 3 (10378)
  d=a (10380)
  a=*d (10381)
  a&=c (10382)
  r=a 2 (10383)
  (         t2 = t2 + 1) (10385)
  a++ (10385)
  r=a 2 (10386)
  (         M[t2] = t1) (10388)
  c=a (10388)
  a=r 1 (10389)
  *c=a (10391)
  (         goto endif_387) (10392)
  lj 10395 (10392)
  (        :else_386:) (10395)
  (        :endif_387:) (10395)
  (                    708:     i = 2) (10395)
  (         H[t0+4]〈i〉 = 2) (10395)
  a=r 0 (10395)
  a+= 4 (10397)
  d=a (10399)
  *d= 2 (10400)
  (         goto endif_384) (10402)
  lj 10642 (10402)
  (        :else_383:) (10405)
  (                    709:   elif b >= 224 and b <= 255:) (10405)
  (         t2 = H[t0+5]〈b〉 >= 224) (10405)
  c= 224 (10405)
  a=r 0 (10407)
  a+= 5 (10409)
  d=a (10411)
  a=*d (10412)
  a==c (10413)
  jt 4 (10414)
  a>c (10416)
  a=0 (10417)
  jf 2 (10418)
  a= 1 (10420)
  r=a 2 (10422)
  (         t3 = H[t0+5]〈b〉 <= 255) (10424)
  c= 255 (10424)
  a=*d (10426)
  a==c (10427)
  jt 4 (10428)
  a<c (10430)
  a=0 (10431)
  jf 2 (10432)
  a= 1 (10434)
  r=a 3 (10436)
  (         t1 = t2 and t3) (10438)
  c=a (10438)
  a=r 2 (10439)
  a== 0 (10441)
  jt 1 (10443)
  a=c (10445)
  r=a 1 (10446)
  (         ifN t1 goto else_390) (10448)
  a== 0 (10448)
  jf 3 (10450)
  lj 10621 (10452)
  (                    710:     v[0] = b) (10455)
  (         t1 = H[t0+3]〈v〉 & 2147483647) (10455)
  a=0 (10455)
  a-- (10456)
  a>>= 1 (10457)
  c=a (10459)
  a=r 0 (10460)
  a+= 3 (10462)
  d=a (10464)
  a=*d (10465)
  a&=c (10466)
  r=a 1 (10467)
  (         t1 = t1 + 0) (10469)
  (         M[t1] = H[t0+5]〈b〉) (10469)
  c=a (10469)
  a=r 0 (10470)
  a+= 5 (10472)
  d=a (10474)
  *c=*d (10475)
  (                    711:     if 1 < l:) (10476)
  (         t1 = 1 < H[t0+2]〈l〉) (10476)
  a=r 0 (10476)
  a+= 2 (10478)
  d=a (10480)
  c=*d (10481)
  a= 1 (10482)
  a<c (10484)
  a=0 (10485)
  jf 1 (10486)
  a++ (10488)
  r=a 1 (10489)
  (         ifN t1 goto else_393) (10491)
  a== 0 (10491)
  jf 3 (10493)
  lj 10539 (10495)
  (                    712:       v[1] = base_word[1]) (10498)
  (         t1 = H[t0+1]〈base_word〉 & 2147483647) (10498)
  a=0 (10498)
  a-- (10499)
  a>>= 1 (10500)
  c=a (10502)
  d-- (10503)
  a=*d (10504)
  a&=c (10505)
  r=a 1 (10506)
  (         t1 = t1 + 1) (10508)
  a++ (10508)
  r=a 1 (10509)
  (         t1 = M[t1]) (10511)
  b=a (10511)
  a=*b (10512)
  r=a 1 (10513)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (10515)
  a=0 (10515)
  a-- (10516)
  a>>= 1 (10517)
  c=a (10519)
  a=r 0 (10520)
  a+= 3 (10522)
  d=a (10524)
  a=*d (10525)
  a&=c (10526)
  r=a 2 (10527)
  (         t2 = t2 + 1) (10529)
  a++ (10529)
  r=a 2 (10530)
  (         M[t2] = t1) (10532)
  c=a (10532)
  a=r 1 (10533)
  *c=a (10535)
  (         goto endif_394) (10536)
  lj 10539 (10536)
  (        :else_393:) (10539)
  (        :endif_394:) (10539)
  (                    713:     if 2 < l:) (10539)
  (         t1 = 2 < H[t0+2]〈l〉) (10539)
  a=r 0 (10539)
  a+= 2 (10541)
  d=a (10543)
  c=*d (10544)
  a= 2 (10545)
  a<c (10547)
  a=0 (10548)
  jf 1 (10549)
  a++ (10551)
  r=a 1 (10552)
  (         ifN t1 goto else_396) (10554)
  a== 0 (10554)
  jf 3 (10556)
  lj 10611 (10558)
  (                    714:       v[2] = base_word[2] ^ 5) (10561)
  (         t2 = H[t0+1]〈base_word〉 & 2147483647) (10561)
  a=0 (10561)
  a-- (10562)
  a>>= 1 (10563)
  c=a (10565)
  d-- (10566)
  a=*d (10567)
  a&=c (10568)
  r=a 2 (10569)
  (         t2 = t2 + 2) (10571)
  c= 2 (10571)
  a+=c (10573)
  r=a 2 (10574)
  (         t2 = M[t2]) (10576)
  b=a (10576)
  a=*b (10577)
  r=a 2 (10578)
  (         t1 = t2 ^ 5) (10580)
  c= 5 (10580)
  a^=c (10582)
  r=a 1 (10583)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (10585)
  a=0 (10585)
  a-- (10586)
  a>>= 1 (10587)
  c=a (10589)
  a=r 0 (10590)
  a+= 3 (10592)
  d=a (10594)
  a=*d (10595)
  a&=c (10596)
  r=a 2 (10597)
  (         t2 = t2 + 2) (10599)
  c= 2 (10599)
  a+=c (10601)
  r=a 2 (10602)
  (         M[t2] = t1) (10604)
  c=a (10604)
  a=r 1 (10605)
  *c=a (10607)
  (         goto endif_397) (10608)
  lj 10611 (10608)
  (        :else_396:) (10611)
  (        :endif_397:) (10611)
  (                    715:     i = 3) (10611)
  (         H[t0+4]〈i〉 = 3) (10611)
  a=r 0 (10611)
  a+= 4 (10613)
  d=a (10615)
  *d= 3 (10616)
  (         goto endif_391) (10618)
  lj 10642 (10618)
  (        :else_390:) (10621)
  (                    717:     return NONE # unreachable) (10621)
  (         t1 = 4294967295) (10621)
  a=0 (10621)
  a-- (10622)
  r=a 1 (10623)
  (         t2 = H[t0]〈〉) (10625)
  d=r 0 (10625)
  a=*d (10627)
  r=a 2 (10628)
  (         t0 = t0 - 1) (10630)
  a=r 0 (10630)
  a-- (10632)
  r=a 0 (10633)
  (         t0 = H[t0]〈〉) (10635)
  d=a (10635)
  a=*d (10636)
  r=a 0 (10637)
  (         goto find_label_ret_id) (10639)
  lj 62666 (10639)
  (        :endif_391:) (10642)
  (        :endif_384:) (10642)
  (        :endif_380:) (10642)
  (        :endif_376:) (10642)
  (                    718:   while i < l:) (10642)
  (        :while_398:) (10642)
  (         t1 = H[t0+4]〈i〉 < H[t0+2]〈l〉) (10642)
  a=r 0 (10642)
  a+= 2 (10644)
  d=a (10646)
  c=*d (10647)
  a=r 0 (10648)
  a+= 4 (10650)
  d=a (10652)
  a=*d (10653)
  a<c (10654)
  a=0 (10655)
  jf 1 (10656)
  a++ (10658)
  r=a 1 (10659)
  (         ifN t1 goto whileend_400) (10661)
  a== 0 (10661)
  jf 3 (10663)
  lj 10719 (10665)
  (                    719:     v[i] = base_word[i]) (10668)
  (         t1 = H[t0+1]〈base_word〉 & 2147483647) (10668)
  a=0 (10668)
  a-- (10669)
  a>>= 1 (10670)
  c=a (10672)
  a=r 0 (10673)
  a++ (10675)
  d=a (10676)
  a=*d (10677)
  a&=c (10678)
  r=a 1 (10679)
  (         t1 = t1 + H[t0+4]〈i〉) (10681)
  a=r 0 (10681)
  a+= 4 (10683)
  d=a (10685)
  c=*d (10686)
  a=r 1 (10687)
  a+=c (10689)
  r=a 1 (10690)
  (         t1 = M[t1]) (10692)
  b=a (10692)
  a=*b (10693)
  r=a 1 (10694)
  (         t2 = H[t0+3]〈v〉 & 2147483647) (10696)
  a=0 (10696)
  a-- (10697)
  a>>= 1 (10698)
  c=a (10700)
  d-- (10701)
  a=*d (10702)
  a&=c (10703)
  r=a 2 (10704)
  (         t2 = t2 + H[t0+4]〈i〉) (10706)
  d++ (10706)
  c=*d (10707)
  a+=c (10708)
  r=a 2 (10709)
  (         M[t2] = t1) (10711)
  c=a (10711)
  a=r 1 (10712)
  *c=a (10714)
  (                    720:     i += 1) (10715)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (10715)
  *d++ (10715)
  (         goto while_398) (10716)
  lj 10642 (10716)
  (        :whileend_400:) (10719)
  (                    721:   return v) (10719)
  (         t1 = H[t0+3]〈v〉) (10719)
  a=r 0 (10719)
  a+= 3 (10721)
  d=a (10723)
  a=*d (10724)
  r=a 1 (10725)
  (         t2 = H[t0]〈〉) (10727)
  d=r 0 (10727)
  a=*d (10729)
  r=a 2 (10730)
  (         t0 = t0 - 1) (10732)
  a=r 0 (10732)
  a-- (10734)
  r=a 0 (10735)
  (         t0 = H[t0]〈〉) (10737)
  d=a (10737)
  a=*d (10738)
  r=a 0 (10739)
  (         goto find_label_ret_id) (10741)
  lj 62666 (10741)
  (insert return as it might not be done by the function:) (10744)
  (         t2 = H[t0]〈〉) (10744)
  d=a (10744)
  a=*d (10745)
  r=a 2 (10746)
  (         t0 = t0 - 1) (10748)
  a=r 0 (10748)
  a-- (10750)
  r=a 0 (10751)
  (         t0 = H[t0]〈〉) (10753)
  d=a (10753)
  a=*d (10754)
  r=a 0 (10755)
  (         goto find_label_ret_id) (10757)
  lj 62666 (10757)
  (         MarkTempVarEnd) (10760)
  (        :uppercase_first_end~:) (10760)
  (                    723: def transformation〈id_, base_word〉:) (10760)
  (         goto transformation_end~) (10760)
  lj 29010 (10760)
  (        :transformation:) (10763)
  (         MarkTempVarStart) (10763)
  (Arg id_ at t0 + 1) (10763)
  (Arg base_word at t0 + 2) (10763)
  (                    726:   base_word = array_pM〈base_word〉) (10763)
  (         H[t0+2]〈base_word〉 = H[t0+2]〈base_word〉) (10763)
  a=r 0 (10763)
  a+= 2 (10765)
  d=a (10767)
  c=*d (10768)
  (                    727:   l = len_pM〈base_word〉) (10769)
  (         t1 = H[t0+2]〈base_word〉) (10769)
  a=*d (10769)
  r=a 1 (10770)
  (         t1 = t1 & 2147483647) (10772)
  a=0 (10772)
  a-- (10773)
  a>>= 1 (10774)
  c=a (10776)
  a=r 1 (10777)
  a&=c (10779)
  r=a 1 (10780)
  (         t1 = t1 - 5) (10782)
  c= 5 (10782)
  a-=c (10784)
  r=a 1 (10785)
  (         t2 = M[t1] << 8) (10787)
  c= 8 (10787)
  b=a (10789)
  a=*b (10790)
  a<<=c (10791)
  r=a 2 (10792)
  (         t1 = t1 + 1) (10794)
  a=r 1 (10794)
  a++ (10796)
  r=a 1 (10797)
  (         t2 = t2 + M[t1]) (10799)
  b=a (10799)
  c=*b (10800)
  a=r 2 (10801)
  a+=c (10803)
  r=a 2 (10804)
  (         t2 = t2 << 8) (10806)
  c= 8 (10806)
  a<<=c (10808)
  r=a 2 (10809)
  (         t1 = t1 + 1) (10811)
  a=r 1 (10811)
  a++ (10813)
  r=a 1 (10814)
  (         t2 = t2 + M[t1]) (10816)
  b=a (10816)
  c=*b (10817)
  a=r 2 (10818)
  a+=c (10820)
  r=a 2 (10821)
  (         t2 = t2 << 8) (10823)
  c= 8 (10823)
  a<<=c (10825)
  r=a 2 (10826)
  (         t1 = t1 + 1) (10828)
  a=r 1 (10828)
  a++ (10830)
  r=a 1 (10831)
  (         t2 = t2 + M[t1]) (10833)
  b=a (10833)
  c=*b (10834)
  a=r 2 (10835)
  a+=c (10837)
  r=a 2 (10838)
  (         H[t0+3]〈l〉 = t2) (10840)
  d++ (10840)
  *d=a (10841)
  (                    728:   i = 0) (10842)
  (         H[t0+4]〈i〉 = 0) (10842)
  d++ (10842)
  *d=0 (10843)
  (                    729:   if id_ == 0:) (10844)
  (         t1 = H[t0+1]〈id_〉 == 0) (10844)
  c=0 (10844)
  a=r 0 (10845)
  a++ (10847)
  d=a (10848)
  a=*d (10849)
  a==c (10850)
  a=0 (10851)
  jf 1 (10852)
  a++ (10854)
  r=a 1 (10855)
  (         ifN t1 goto else_403) (10857)
  a== 0 (10857)
  jf 3 (10859)
  lj 10888 (10861)
  (                    730:     return base_word) (10864)
  (         t1 = H[t0+2]〈base_word〉) (10864)
  d++ (10864)
  a=*d (10865)
  r=a 1 (10866)
  (         t2 = H[t0]〈〉) (10868)
  d=r 0 (10868)
  a=*d (10870)
  r=a 2 (10871)
  (         t0 = t0 - 1) (10873)
  a=r 0 (10873)
  a-- (10875)
  r=a 0 (10876)
  (         t0 = H[t0]〈〉) (10878)
  d=a (10878)
  a=*d (10879)
  r=a 0 (10880)
  (         goto find_label_ret_id) (10882)
  lj 62666 (10882)
  (         goto endif_404) (10885)
  lj 28969 (10885)
  (        :else_403:) (10888)
  (                    731:   elif id_ == 1 or id_ == 19 or id_ == 20 or id_ == 22 or id_ == 24 or id_ == 36 or id_ == 51 or id_ == 57 or id_ == 76:  # 1 hinten an) (10888)
  (         t9 = H[t0+1]〈id_〉 == 1) (10888)
  c= 1 (10888)
  a=r 0 (10890)
  a++ (10892)
  d=a (10893)
  a=*d (10894)
  a==c (10895)
  a=0 (10896)
  jf 1 (10897)
  a++ (10899)
  r=a 9 (10900)
  (         t10 = H[t0+1]〈id_〉 == 19) (10902)
  c= 19 (10902)
  a=*d (10904)
  a==c (10905)
  a=0 (10906)
  jf 1 (10907)
  a++ (10909)
  r=a 10 (10910)
  (         t8 = t9 or t10) (10912)
  c=a (10912)
  a=r 9 (10913)
  a== 0 (10915)
  jf 1 (10917)
  a=c (10919)
  r=a 8 (10920)
  (         t9 = H[t0+1]〈id_〉 == 20) (10922)
  c= 20 (10922)
  a=*d (10924)
  a==c (10925)
  a=0 (10926)
  jf 1 (10927)
  a++ (10929)
  r=a 9 (10930)
  (         t7 = t8 or t9) (10932)
  c=a (10932)
  a=r 8 (10933)
  a== 0 (10935)
  jf 1 (10937)
  a=c (10939)
  r=a 7 (10940)
  (         t8 = H[t0+1]〈id_〉 == 22) (10942)
  c= 22 (10942)
  a=*d (10944)
  a==c (10945)
  a=0 (10946)
  jf 1 (10947)
  a++ (10949)
  r=a 8 (10950)
  (         t6 = t7 or t8) (10952)
  c=a (10952)
  a=r 7 (10953)
  a== 0 (10955)
  jf 1 (10957)
  a=c (10959)
  r=a 6 (10960)
  (         t7 = H[t0+1]〈id_〉 == 24) (10962)
  c= 24 (10962)
  a=*d (10964)
  a==c (10965)
  a=0 (10966)
  jf 1 (10967)
  a++ (10969)
  r=a 7 (10970)
  (         t5 = t6 or t7) (10972)
  c=a (10972)
  a=r 6 (10973)
  a== 0 (10975)
  jf 1 (10977)
  a=c (10979)
  r=a 5 (10980)
  (         t6 = H[t0+1]〈id_〉 == 36) (10982)
  c= 36 (10982)
  a=*d (10984)
  a==c (10985)
  a=0 (10986)
  jf 1 (10987)
  a++ (10989)
  r=a 6 (10990)
  (         t4 = t5 or t6) (10992)
  c=a (10992)
  a=r 5 (10993)
  a== 0 (10995)
  jf 1 (10997)
  a=c (10999)
  r=a 4 (11000)
  (         t5 = H[t0+1]〈id_〉 == 51) (11002)
  c= 51 (11002)
  a=*d (11004)
  a==c (11005)
  a=0 (11006)
  jf 1 (11007)
  a++ (11009)
  r=a 5 (11010)
  (         t3 = t4 or t5) (11012)
  c=a (11012)
  a=r 4 (11013)
  a== 0 (11015)
  jf 1 (11017)
  a=c (11019)
  r=a 3 (11020)
  (         t4 = H[t0+1]〈id_〉 == 57) (11022)
  c= 57 (11022)
  a=*d (11024)
  a==c (11025)
  a=0 (11026)
  jf 1 (11027)
  a++ (11029)
  r=a 4 (11030)
  (         t2 = t3 or t4) (11032)
  c=a (11032)
  a=r 3 (11033)
  a== 0 (11035)
  jf 1 (11037)
  a=c (11039)
  r=a 2 (11040)
  (         t3 = H[t0+1]〈id_〉 == 76) (11042)
  c= 76 (11042)
  a=*d (11044)
  a==c (11045)
  a=0 (11046)
  jf 1 (11047)
  a++ (11049)
  r=a 3 (11050)
  (         t1 = t2 or t3) (11052)
  c=a (11052)
  a=r 2 (11053)
  a== 0 (11055)
  jf 1 (11057)
  a=c (11059)
  r=a 1 (11060)
  (         ifN t1 goto else_414) (11062)
  a== 0 (11062)
  jf 3 (11064)
  lj 11618 (11066)
  (                    732:     v = alloc_pM〈l+1〉) (11069)
  (         t1 = H[t0+3]〈l〉 + 1) (11069)
  c= 1 (11069)
  a=r 0 (11071)
  a+= 3 (11073)
  d=a (11075)
  a=*d (11076)
  a+=c (11077)
  r=a 1 (11078)
  (         H[t0+5]〈〉 = t0) (11080)
  a=r 0 (11080)
  a+= 5 (11082)
  d=a (11084)
  a=r 0 (11085)
  *d=a (11087)
  (saved bsp, return id:) (11088)
  (         H[t0+6]〈〉 = 60) (11088)
  d++ (11088)
  *d= 60 (11089)
  (push arguments:) (11091)
  (         H[t0+7]〈〉 = t1) (11091)
  d++ (11091)
  a=r 1 (11092)
  *d=a (11094)
  (         t0 = t0 + 6) (11095)
  c= 6 (11095)
  a=r 0 (11097)
  a+=c (11099)
  r=a 0 (11100)
  (         goto addr_alloc_pM) (11102)
  lj 323 (11102)
  (        :return_id_60:) (11105)
  (         t2 = t1) (11105)
  a=r 1 (11105)
  r=a 2 (11107)
  (         t2 = t2 | 2147483648) (11109)
  a= 1 (11109)
  a<<= 31 (11111)
  c=a (11113)
  a=r 2 (11114)
  a|=c (11116)
  r=a 2 (11117)
  (         H[t0+5]〈v〉 = t2) (11119)
  a=r 0 (11119)
  a+= 5 (11121)
  d=a (11123)
  a=r 2 (11124)
  *d=a (11126)
  (                    733:     while i < l:) (11127)
  (        :while_416:) (11127)
  (         t1 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (11127)
  a=r 0 (11127)
  a+= 3 (11129)
  d=a (11131)
  c=*d (11132)
  d++ (11133)
  a=*d (11134)
  a<c (11135)
  a=0 (11136)
  jf 1 (11137)
  a++ (11139)
  r=a 1 (11140)
  (         ifN t1 goto whileend_418) (11142)
  a== 0 (11142)
  jf 3 (11144)
  lj 11201 (11146)
  (                    734:       v[i] = base_word[i]) (11149)
  (         t1 = H[t0+2]〈base_word〉 & 2147483647) (11149)
  a=0 (11149)
  a-- (11150)
  a>>= 1 (11151)
  c=a (11153)
  a=r 0 (11154)
  a+= 2 (11156)
  d=a (11158)
  a=*d (11159)
  a&=c (11160)
  r=a 1 (11161)
  (         t1 = t1 + H[t0+4]〈i〉) (11163)
  a=r 0 (11163)
  a+= 4 (11165)
  d=a (11167)
  c=*d (11168)
  a=r 1 (11169)
  a+=c (11171)
  r=a 1 (11172)
  (         t1 = M[t1]) (11174)
  b=a (11174)
  a=*b (11175)
  r=a 1 (11176)
  (         t2 = H[t0+5]〈v〉 & 2147483647) (11178)
  a=0 (11178)
  a-- (11179)
  a>>= 1 (11180)
  c=a (11182)
  d++ (11183)
  a=*d (11184)
  a&=c (11185)
  r=a 2 (11186)
  (         t2 = t2 + H[t0+4]〈i〉) (11188)
  d-- (11188)
  c=*d (11189)
  a+=c (11190)
  r=a 2 (11191)
  (         M[t2] = t1) (11193)
  c=a (11193)
  a=r 1 (11194)
  *c=a (11196)
  (                    735:       i += 1) (11197)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (11197)
  *d++ (11197)
  (         goto while_416) (11198)
  lj 11127 (11198)
  (        :whileend_418:) (11201)
  (                    736:     if id_ == 1:) (11201)
  (         t1 = H[t0+1]〈id_〉 == 1) (11201)
  c= 1 (11201)
  a=r 0 (11203)
  a++ (11205)
  d=a (11206)
  a=*d (11207)
  a==c (11208)
  a=0 (11209)
  jf 1 (11210)
  a++ (11212)
  r=a 1 (11213)
  (         ifN t1 goto else_421) (11215)
  a== 0 (11215)
  jf 3 (11217)
  lj 11247 (11219)
  (                    737:       v[i] = 0x20) (11222)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11222)
  a=0 (11222)
  a-- (11223)
  a>>= 1 (11224)
  c=a (11226)
  a=r 0 (11227)
  a+= 5 (11229)
  d=a (11231)
  a=*d (11232)
  a&=c (11233)
  r=a 1 (11234)
  (         t1 = t1 + H[t0+4]〈i〉) (11236)
  d-- (11236)
  c=*d (11237)
  a+=c (11238)
  r=a 1 (11239)
  (         M[t1] = 32) (11241)
  c=a (11241)
  *c= 32 (11242)
  (         goto endif_422) (11244)
  lj 11615 (11244)
  (        :else_421:) (11247)
  (                    738:     elif id_ == 19:) (11247)
  (         t1 = H[t0+1]〈id_〉 == 19) (11247)
  c= 19 (11247)
  a=r 0 (11249)
  a++ (11251)
  d=a (11252)
  a=*d (11253)
  a==c (11254)
  a=0 (11255)
  jf 1 (11256)
  a++ (11258)
  r=a 1 (11259)
  (         ifN t1 goto else_424) (11261)
  a== 0 (11261)
  jf 3 (11263)
  lj 11293 (11265)
  (                    739:       v[i] = 0x22) (11268)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11268)
  a=0 (11268)
  a-- (11269)
  a>>= 1 (11270)
  c=a (11272)
  a=r 0 (11273)
  a+= 5 (11275)
  d=a (11277)
  a=*d (11278)
  a&=c (11279)
  r=a 1 (11280)
  (         t1 = t1 + H[t0+4]〈i〉) (11282)
  d-- (11282)
  c=*d (11283)
  a+=c (11284)
  r=a 1 (11285)
  (         M[t1] = 34) (11287)
  c=a (11287)
  *c= 34 (11288)
  (         goto endif_425) (11290)
  lj 11615 (11290)
  (        :else_424:) (11293)
  (                    740:     elif id_ == 20:) (11293)
  (         t1 = H[t0+1]〈id_〉 == 20) (11293)
  c= 20 (11293)
  a=r 0 (11295)
  a++ (11297)
  d=a (11298)
  a=*d (11299)
  a==c (11300)
  a=0 (11301)
  jf 1 (11302)
  a++ (11304)
  r=a 1 (11305)
  (         ifN t1 goto else_427) (11307)
  a== 0 (11307)
  jf 3 (11309)
  lj 11339 (11311)
  (                    741:       v[i] = 0x2e) (11314)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11314)
  a=0 (11314)
  a-- (11315)
  a>>= 1 (11316)
  c=a (11318)
  a=r 0 (11319)
  a+= 5 (11321)
  d=a (11323)
  a=*d (11324)
  a&=c (11325)
  r=a 1 (11326)
  (         t1 = t1 + H[t0+4]〈i〉) (11328)
  d-- (11328)
  c=*d (11329)
  a+=c (11330)
  r=a 1 (11331)
  (         M[t1] = 46) (11333)
  c=a (11333)
  *c= 46 (11334)
  (         goto endif_428) (11336)
  lj 11615 (11336)
  (        :else_427:) (11339)
  (                    742:     elif id_ == 22:) (11339)
  (         t1 = H[t0+1]〈id_〉 == 22) (11339)
  c= 22 (11339)
  a=r 0 (11341)
  a++ (11343)
  d=a (11344)
  a=*d (11345)
  a==c (11346)
  a=0 (11347)
  jf 1 (11348)
  a++ (11350)
  r=a 1 (11351)
  (         ifN t1 goto else_430) (11353)
  a== 0 (11353)
  jf 3 (11355)
  lj 11385 (11357)
  (                    743:       v[i] = 0x0a) (11360)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11360)
  a=0 (11360)
  a-- (11361)
  a>>= 1 (11362)
  c=a (11364)
  a=r 0 (11365)
  a+= 5 (11367)
  d=a (11369)
  a=*d (11370)
  a&=c (11371)
  r=a 1 (11372)
  (         t1 = t1 + H[t0+4]〈i〉) (11374)
  d-- (11374)
  c=*d (11375)
  a+=c (11376)
  r=a 1 (11377)
  (         M[t1] = 10) (11379)
  c=a (11379)
  *c= 10 (11380)
  (         goto endif_431) (11382)
  lj 11615 (11382)
  (        :else_430:) (11385)
  (                    744:     elif id_ == 24:) (11385)
  (         t1 = H[t0+1]〈id_〉 == 24) (11385)
  c= 24 (11385)
  a=r 0 (11387)
  a++ (11389)
  d=a (11390)
  a=*d (11391)
  a==c (11392)
  a=0 (11393)
  jf 1 (11394)
  a++ (11396)
  r=a 1 (11397)
  (         ifN t1 goto else_433) (11399)
  a== 0 (11399)
  jf 3 (11401)
  lj 11431 (11403)
  (                    745:       v[i] = 0x5d) (11406)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11406)
  a=0 (11406)
  a-- (11407)
  a>>= 1 (11408)
  c=a (11410)
  a=r 0 (11411)
  a+= 5 (11413)
  d=a (11415)
  a=*d (11416)
  a&=c (11417)
  r=a 1 (11418)
  (         t1 = t1 + H[t0+4]〈i〉) (11420)
  d-- (11420)
  c=*d (11421)
  a+=c (11422)
  r=a 1 (11423)
  (         M[t1] = 93) (11425)
  c=a (11425)
  *c= 93 (11426)
  (         goto endif_434) (11428)
  lj 11615 (11428)
  (        :else_433:) (11431)
  (                    746:     elif id_ == 36:) (11431)
  (         t1 = H[t0+1]〈id_〉 == 36) (11431)
  c= 36 (11431)
  a=r 0 (11433)
  a++ (11435)
  d=a (11436)
  a=*d (11437)
  a==c (11438)
  a=0 (11439)
  jf 1 (11440)
  a++ (11442)
  r=a 1 (11443)
  (         ifN t1 goto else_436) (11445)
  a== 0 (11445)
  jf 3 (11447)
  lj 11477 (11449)
  (                    747:       v[i] = 0x27) (11452)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11452)
  a=0 (11452)
  a-- (11453)
  a>>= 1 (11454)
  c=a (11456)
  a=r 0 (11457)
  a+= 5 (11459)
  d=a (11461)
  a=*d (11462)
  a&=c (11463)
  r=a 1 (11464)
  (         t1 = t1 + H[t0+4]〈i〉) (11466)
  d-- (11466)
  c=*d (11467)
  a+=c (11468)
  r=a 1 (11469)
  (         M[t1] = 39) (11471)
  c=a (11471)
  *c= 39 (11472)
  (         goto endif_437) (11474)
  lj 11615 (11474)
  (        :else_436:) (11477)
  (                    748:     elif id_ == 51:) (11477)
  (         t1 = H[t0+1]〈id_〉 == 51) (11477)
  c= 51 (11477)
  a=r 0 (11479)
  a++ (11481)
  d=a (11482)
  a=*d (11483)
  a==c (11484)
  a=0 (11485)
  jf 1 (11486)
  a++ (11488)
  r=a 1 (11489)
  (         ifN t1 goto else_439) (11491)
  a== 0 (11491)
  jf 3 (11493)
  lj 11523 (11495)
  (                    749:       v[i] = 0x3a) (11498)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11498)
  a=0 (11498)
  a-- (11499)
  a>>= 1 (11500)
  c=a (11502)
  a=r 0 (11503)
  a+= 5 (11505)
  d=a (11507)
  a=*d (11508)
  a&=c (11509)
  r=a 1 (11510)
  (         t1 = t1 + H[t0+4]〈i〉) (11512)
  d-- (11512)
  c=*d (11513)
  a+=c (11514)
  r=a 1 (11515)
  (         M[t1] = 58) (11517)
  c=a (11517)
  *c= 58 (11518)
  (         goto endif_440) (11520)
  lj 11615 (11520)
  (        :else_439:) (11523)
  (                    750:     elif id_ == 57:) (11523)
  (         t1 = H[t0+1]〈id_〉 == 57) (11523)
  c= 57 (11523)
  a=r 0 (11525)
  a++ (11527)
  d=a (11528)
  a=*d (11529)
  a==c (11530)
  a=0 (11531)
  jf 1 (11532)
  a++ (11534)
  r=a 1 (11535)
  (         ifN t1 goto else_442) (11537)
  a== 0 (11537)
  jf 3 (11539)
  lj 11569 (11541)
  (                    751:       v[i] = 0x28) (11544)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11544)
  a=0 (11544)
  a-- (11545)
  a>>= 1 (11546)
  c=a (11548)
  a=r 0 (11549)
  a+= 5 (11551)
  d=a (11553)
  a=*d (11554)
  a&=c (11555)
  r=a 1 (11556)
  (         t1 = t1 + H[t0+4]〈i〉) (11558)
  d-- (11558)
  c=*d (11559)
  a+=c (11560)
  r=a 1 (11561)
  (         M[t1] = 40) (11563)
  c=a (11563)
  *c= 40 (11564)
  (         goto endif_443) (11566)
  lj 11615 (11566)
  (        :else_442:) (11569)
  (                    752:     elif id_ == 76:) (11569)
  (         t1 = H[t0+1]〈id_〉 == 76) (11569)
  c= 76 (11569)
  a=r 0 (11571)
  a++ (11573)
  d=a (11574)
  a=*d (11575)
  a==c (11576)
  a=0 (11577)
  jf 1 (11578)
  a++ (11580)
  r=a 1 (11581)
  (         ifN t1 goto else_445) (11583)
  a== 0 (11583)
  jf 3 (11585)
  lj 11615 (11587)
  (                    753:       v[i] = 0x2c) (11590)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11590)
  a=0 (11590)
  a-- (11591)
  a>>= 1 (11592)
  c=a (11594)
  a=r 0 (11595)
  a+= 5 (11597)
  d=a (11599)
  a=*d (11600)
  a&=c (11601)
  r=a 1 (11602)
  (         t1 = t1 + H[t0+4]〈i〉) (11604)
  d-- (11604)
  c=*d (11605)
  a+=c (11606)
  r=a 1 (11607)
  (         M[t1] = 44) (11609)
  c=a (11609)
  *c= 44 (11610)
  (         goto endif_446) (11612)
  lj 11615 (11612)
  (        :else_445:) (11615)
  (        :endif_446:) (11615)
  (        :endif_443:) (11615)
  (        :endif_440:) (11615)
  (        :endif_437:) (11615)
  (        :endif_434:) (11615)
  (        :endif_431:) (11615)
  (        :endif_428:) (11615)
  (        :endif_425:) (11615)
  (        :endif_422:) (11615)
  (         goto endif_415) (11615)
  lj 28969 (11615)
  (        :else_414:) (11618)
  (                    754:   elif id_ == 2 or id_ == 67 or id_ == 71 or id_ == 77 or id_ == 89 or id_ == 103:  # 1 vorne 1 hinten an) (11618)
  (         t6 = H[t0+1]〈id_〉 == 2) (11618)
  c= 2 (11618)
  a=r 0 (11620)
  a++ (11622)
  d=a (11623)
  a=*d (11624)
  a==c (11625)
  a=0 (11626)
  jf 1 (11627)
  a++ (11629)
  r=a 6 (11630)
  (         t7 = H[t0+1]〈id_〉 == 67) (11632)
  c= 67 (11632)
  a=*d (11634)
  a==c (11635)
  a=0 (11636)
  jf 1 (11637)
  a++ (11639)
  r=a 7 (11640)
  (         t5 = t6 or t7) (11642)
  c=a (11642)
  a=r 6 (11643)
  a== 0 (11645)
  jf 1 (11647)
  a=c (11649)
  r=a 5 (11650)
  (         t6 = H[t0+1]〈id_〉 == 71) (11652)
  c= 71 (11652)
  a=*d (11654)
  a==c (11655)
  a=0 (11656)
  jf 1 (11657)
  a++ (11659)
  r=a 6 (11660)
  (         t4 = t5 or t6) (11662)
  c=a (11662)
  a=r 5 (11663)
  a== 0 (11665)
  jf 1 (11667)
  a=c (11669)
  r=a 4 (11670)
  (         t5 = H[t0+1]〈id_〉 == 77) (11672)
  c= 77 (11672)
  a=*d (11674)
  a==c (11675)
  a=0 (11676)
  jf 1 (11677)
  a++ (11679)
  r=a 5 (11680)
  (         t3 = t4 or t5) (11682)
  c=a (11682)
  a=r 4 (11683)
  a== 0 (11685)
  jf 1 (11687)
  a=c (11689)
  r=a 3 (11690)
  (         t4 = H[t0+1]〈id_〉 == 89) (11692)
  c= 89 (11692)
  a=*d (11694)
  a==c (11695)
  a=0 (11696)
  jf 1 (11697)
  a++ (11699)
  r=a 4 (11700)
  (         t2 = t3 or t4) (11702)
  c=a (11702)
  a=r 3 (11703)
  a== 0 (11705)
  jf 1 (11707)
  a=c (11709)
  r=a 2 (11710)
  (         t3 = H[t0+1]〈id_〉 == 103) (11712)
  c= 103 (11712)
  a=*d (11714)
  a==c (11715)
  a=0 (11716)
  jf 1 (11717)
  a++ (11719)
  r=a 3 (11720)
  (         t1 = t2 or t3) (11722)
  c=a (11722)
  a=r 2 (11723)
  a== 0 (11725)
  jf 1 (11727)
  a=c (11729)
  r=a 1 (11730)
  (         ifN t1 goto else_453) (11732)
  a== 0 (11732)
  jf 3 (11734)
  lj 12284 (11736)
  (                    755:     v = alloc_pM〈l+2〉) (11739)
  (         t1 = H[t0+3]〈l〉 + 2) (11739)
  c= 2 (11739)
  a=r 0 (11741)
  a+= 3 (11743)
  d=a (11745)
  a=*d (11746)
  a+=c (11747)
  r=a 1 (11748)
  (         H[t0+6]〈〉 = t0) (11750)
  a=r 0 (11750)
  a+= 6 (11752)
  d=a (11754)
  a=r 0 (11755)
  *d=a (11757)
  (saved bsp, return id:) (11758)
  (         H[t0+7]〈〉 = 61) (11758)
  d++ (11758)
  *d= 61 (11759)
  (push arguments:) (11761)
  (         H[t0+8]〈〉 = t1) (11761)
  d++ (11761)
  a=r 1 (11762)
  *d=a (11764)
  (         t0 = t0 + 7) (11765)
  c= 7 (11765)
  a=r 0 (11767)
  a+=c (11769)
  r=a 0 (11770)
  (         goto addr_alloc_pM) (11772)
  lj 323 (11772)
  (        :return_id_61:) (11775)
  (         t2 = t1) (11775)
  a=r 1 (11775)
  r=a 2 (11777)
  (         t2 = t2 | 2147483648) (11779)
  a= 1 (11779)
  a<<= 31 (11781)
  c=a (11783)
  a=r 2 (11784)
  a|=c (11786)
  r=a 2 (11787)
  (         H[t0+5]〈v〉 = t2) (11789)
  a=r 0 (11789)
  a+= 5 (11791)
  d=a (11793)
  a=r 2 (11794)
  *d=a (11796)
  (                    756:     if id_ == 2 or id_ == 71 or id_ == 89 or id_ == 103:) (11797)
  (         t4 = H[t0+1]〈id_〉 == 2) (11797)
  c= 2 (11797)
  a=r 0 (11799)
  a++ (11801)
  d=a (11802)
  a=*d (11803)
  a==c (11804)
  a=0 (11805)
  jf 1 (11806)
  a++ (11808)
  r=a 4 (11809)
  (         t5 = H[t0+1]〈id_〉 == 71) (11811)
  c= 71 (11811)
  a=*d (11813)
  a==c (11814)
  a=0 (11815)
  jf 1 (11816)
  a++ (11818)
  r=a 5 (11819)
  (         t3 = t4 or t5) (11821)
  c=a (11821)
  a=r 4 (11822)
  a== 0 (11824)
  jf 1 (11826)
  a=c (11828)
  r=a 3 (11829)
  (         t4 = H[t0+1]〈id_〉 == 89) (11831)
  c= 89 (11831)
  a=*d (11833)
  a==c (11834)
  a=0 (11835)
  jf 1 (11836)
  a++ (11838)
  r=a 4 (11839)
  (         t2 = t3 or t4) (11841)
  c=a (11841)
  a=r 3 (11842)
  a== 0 (11844)
  jf 1 (11846)
  a=c (11848)
  r=a 2 (11849)
  (         t3 = H[t0+1]〈id_〉 == 103) (11851)
  c= 103 (11851)
  a=*d (11853)
  a==c (11854)
  a=0 (11855)
  jf 1 (11856)
  a++ (11858)
  r=a 3 (11859)
  (         t1 = t2 or t3) (11861)
  c=a (11861)
  a=r 2 (11862)
  a== 0 (11864)
  jf 1 (11866)
  a=c (11868)
  r=a 1 (11869)
  (         ifN t1 goto else_459) (11871)
  a== 0 (11871)
  jf 3 (11873)
  lj 11903 (11875)
  (                    757:       v[i] = 0x20) (11878)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11878)
  a=0 (11878)
  a-- (11879)
  a>>= 1 (11880)
  c=a (11882)
  a=r 0 (11883)
  a+= 5 (11885)
  d=a (11887)
  a=*d (11888)
  a&=c (11889)
  r=a 1 (11890)
  (         t1 = t1 + H[t0+4]〈i〉) (11892)
  d-- (11892)
  c=*d (11893)
  a+=c (11894)
  r=a 1 (11895)
  (         M[t1] = 32) (11897)
  c=a (11897)
  *c= 32 (11898)
  (         goto endif_460) (11900)
  lj 11969 (11900)
  (        :else_459:) (11903)
  (                    758:     elif id_ == 67 or id_ == 77:) (11903)
  (         t2 = H[t0+1]〈id_〉 == 67) (11903)
  c= 67 (11903)
  a=r 0 (11905)
  a++ (11907)
  d=a (11908)
  a=*d (11909)
  a==c (11910)
  a=0 (11911)
  jf 1 (11912)
  a++ (11914)
  r=a 2 (11915)
  (         t3 = H[t0+1]〈id_〉 == 77) (11917)
  c= 77 (11917)
  a=*d (11919)
  a==c (11920)
  a=0 (11921)
  jf 1 (11922)
  a++ (11924)
  r=a 3 (11925)
  (         t1 = t2 or t3) (11927)
  c=a (11927)
  a=r 2 (11928)
  a== 0 (11930)
  jf 1 (11932)
  a=c (11934)
  r=a 1 (11935)
  (         ifN t1 goto else_463) (11937)
  a== 0 (11937)
  jf 3 (11939)
  lj 11969 (11941)
  (                    759:       v[i] = 0x2e) (11944)
  (         t1 = H[t0+5]〈v〉 & 2147483647) (11944)
  a=0 (11944)
  a-- (11945)
  a>>= 1 (11946)
  c=a (11948)
  a=r 0 (11949)
  a+= 5 (11951)
  d=a (11953)
  a=*d (11954)
  a&=c (11955)
  r=a 1 (11956)
  (         t1 = t1 + H[t0+4]〈i〉) (11958)
  d-- (11958)
  c=*d (11959)
  a+=c (11960)
  r=a 1 (11961)
  (         M[t1] = 46) (11963)
  c=a (11963)
  *c= 46 (11964)
  (         goto endif_464) (11966)
  lj 11969 (11966)
  (        :else_463:) (11969)
  (        :endif_464:) (11969)
  (        :endif_460:) (11969)
  (                    760:     i += 1) (11969)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (11969)
  a=r 0 (11969)
  a+= 4 (11971)
  d=a (11973)
  *d++ (11974)
  (                    761:     while i <= l:) (11975)
  (        :while_465:) (11975)
  (         t1 = H[t0+4]〈i〉 <= H[t0+3]〈l〉) (11975)
  a=r 0 (11975)
  a+= 3 (11977)
  d=a (11979)
  c=*d (11980)
  d++ (11981)
  a=*d (11982)
  a==c (11983)
  jt 4 (11984)
  a<c (11986)
  a=0 (11987)
  jf 2 (11988)
  a= 1 (11990)
  r=a 1 (11992)
  (         ifN t1 goto whileend_467) (11994)
  a== 0 (11994)
  jf 3 (11996)
  lj 12057 (11998)
  (                    762:       v[i] = base_word[i-1]) (12001)
  (         t1 = H[t0+4]〈i〉 - 1) (12001)
  c= 1 (12001)
  a=*d (12003)
  a-=c (12004)
  r=a 1 (12005)
  (         t2 = H[t0+2]〈base_word〉 & 2147483647) (12007)
  a=0 (12007)
  a-- (12008)
  a>>= 1 (12009)
  c=a (12011)
  a=r 0 (12012)
  a+= 2 (12014)
  d=a (12016)
  a=*d (12017)
  a&=c (12018)
  r=a 2 (12019)
  (         t2 = t2 + t1) (12021)
  c=r 1 (12021)
  a+=c (12023)
  r=a 2 (12024)
  (         t2 = M[t2]) (12026)
  b=a (12026)
  a=*b (12027)
  r=a 2 (12028)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (12030)
  a=0 (12030)
  a-- (12031)
  a>>= 1 (12032)
  c=a (12034)
  a=r 0 (12035)
  a+= 5 (12037)
  d=a (12039)
  a=*d (12040)
  a&=c (12041)
  r=a 3 (12042)
  (         t3 = t3 + H[t0+4]〈i〉) (12044)
  d-- (12044)
  c=*d (12045)
  a+=c (12046)
  r=a 3 (12047)
  (         M[t3] = t2) (12049)
  c=a (12049)
  a=r 2 (12050)
  *c=a (12052)
  (                    763:       i += 1) (12053)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (12053)
  *d++ (12053)
  (         goto while_465) (12054)
  lj 11975 (12054)
  (        :whileend_467:) (12057)
  (                    764:     if id_ == 2 or id_ == 77:) (12057)
  (         t3 = H[t0+1]〈id_〉 == 2) (12057)
  c= 2 (12057)
  a=r 0 (12059)
  a++ (12061)
  d=a (12062)
  a=*d (12063)
  a==c (12064)
  a=0 (12065)
  jf 1 (12066)
  a++ (12068)
  r=a 3 (12069)
  (         t4 = H[t0+1]〈id_〉 == 77) (12071)
  c= 77 (12071)
  a=*d (12073)
  a==c (12074)
  a=0 (12075)
  jf 1 (12076)
  a++ (12078)
  r=a 4 (12079)
  (         t2 = t3 or t4) (12081)
  c=a (12081)
  a=r 3 (12082)
  a== 0 (12084)
  jf 1 (12086)
  a=c (12088)
  r=a 2 (12089)
  (         ifN t2 goto else_471) (12091)
  a== 0 (12091)
  jf 3 (12093)
  lj 12123 (12095)
  (                    765:       v[i] = 0x20) (12098)
  (         t2 = H[t0+5]〈v〉 & 2147483647) (12098)
  a=0 (12098)
  a-- (12099)
  a>>= 1 (12100)
  c=a (12102)
  a=r 0 (12103)
  a+= 5 (12105)
  d=a (12107)
  a=*d (12108)
  a&=c (12109)
  r=a 2 (12110)
  (         t2 = t2 + H[t0+4]〈i〉) (12112)
  d-- (12112)
  c=*d (12113)
  a+=c (12114)
  r=a 2 (12115)
  (         M[t2] = 32) (12117)
  c=a (12117)
  *c= 32 (12118)
  (         goto endif_472) (12120)
  lj 12281 (12120)
  (        :else_471:) (12123)
  (                    766:     elif id_ == 67 or id_ == 89:) (12123)
  (         t3 = H[t0+1]〈id_〉 == 67) (12123)
  c= 67 (12123)
  a=r 0 (12125)
  a++ (12127)
  d=a (12128)
  a=*d (12129)
  a==c (12130)
  a=0 (12131)
  jf 1 (12132)
  a++ (12134)
  r=a 3 (12135)
  (         t4 = H[t0+1]〈id_〉 == 89) (12137)
  c= 89 (12137)
  a=*d (12139)
  a==c (12140)
  a=0 (12141)
  jf 1 (12142)
  a++ (12144)
  r=a 4 (12145)
  (         t2 = t3 or t4) (12147)
  c=a (12147)
  a=r 3 (12148)
  a== 0 (12150)
  jf 1 (12152)
  a=c (12154)
  r=a 2 (12155)
  (         ifN t2 goto else_475) (12157)
  a== 0 (12157)
  jf 3 (12159)
  lj 12189 (12161)
  (                    767:       v[i] = 0x28) (12164)
  (         t2 = H[t0+5]〈v〉 & 2147483647) (12164)
  a=0 (12164)
  a-- (12165)
  a>>= 1 (12166)
  c=a (12168)
  a=r 0 (12169)
  a+= 5 (12171)
  d=a (12173)
  a=*d (12174)
  a&=c (12175)
  r=a 2 (12176)
  (         t2 = t2 + H[t0+4]〈i〉) (12178)
  d-- (12178)
  c=*d (12179)
  a+=c (12180)
  r=a 2 (12181)
  (         M[t2] = 40) (12183)
  c=a (12183)
  *c= 40 (12184)
  (         goto endif_476) (12186)
  lj 12281 (12186)
  (        :else_475:) (12189)
  (                    768:     elif id_ == 71:) (12189)
  (         t2 = H[t0+1]〈id_〉 == 71) (12189)
  c= 71 (12189)
  a=r 0 (12191)
  a++ (12193)
  d=a (12194)
  a=*d (12195)
  a==c (12196)
  a=0 (12197)
  jf 1 (12198)
  a++ (12200)
  r=a 2 (12201)
  (         ifN t2 goto else_478) (12203)
  a== 0 (12203)
  jf 3 (12205)
  lj 12235 (12207)
  (                    769:       v[i] = 0x2e) (12210)
  (         t2 = H[t0+5]〈v〉 & 2147483647) (12210)
  a=0 (12210)
  a-- (12211)
  a>>= 1 (12212)
  c=a (12214)
  a=r 0 (12215)
  a+= 5 (12217)
  d=a (12219)
  a=*d (12220)
  a&=c (12221)
  r=a 2 (12222)
  (         t2 = t2 + H[t0+4]〈i〉) (12224)
  d-- (12224)
  c=*d (12225)
  a+=c (12226)
  r=a 2 (12227)
  (         M[t2] = 46) (12229)
  c=a (12229)
  *c= 46 (12230)
  (         goto endif_479) (12232)
  lj 12281 (12232)
  (        :else_478:) (12235)
  (                    770:     elif id_ == 103:) (12235)
  (         t2 = H[t0+1]〈id_〉 == 103) (12235)
  c= 103 (12235)
  a=r 0 (12237)
  a++ (12239)
  d=a (12240)
  a=*d (12241)
  a==c (12242)
  a=0 (12243)
  jf 1 (12244)
  a++ (12246)
  r=a 2 (12247)
  (         ifN t2 goto else_481) (12249)
  a== 0 (12249)
  jf 3 (12251)
  lj 12281 (12253)
  (                    771:       v[i] = 0x2c) (12256)
  (         t2 = H[t0+5]〈v〉 & 2147483647) (12256)
  a=0 (12256)
  a-- (12257)
  a>>= 1 (12258)
  c=a (12260)
  a=r 0 (12261)
  a+= 5 (12263)
  d=a (12265)
  a=*d (12266)
  a&=c (12267)
  r=a 2 (12268)
  (         t2 = t2 + H[t0+4]〈i〉) (12270)
  d-- (12270)
  c=*d (12271)
  a+=c (12272)
  r=a 2 (12273)
  (         M[t2] = 44) (12275)
  c=a (12275)
  *c= 44 (12276)
  (         goto endif_482) (12278)
  lj 12281 (12278)
  (        :else_481:) (12281)
  (        :endif_482:) (12281)
  (        :endif_479:) (12281)
  (        :endif_476:) (12281)
  (        :endif_472:) (12281)
  (         goto endif_454) (12281)
  lj 28969 (12281)
  (        :else_453:) (12284)
  (                    772:   elif id_ == 3 or id_ == 11 or id_ == 26 or id_ == 34 or id_ == 39 or id_ == 40 or id_ == 54 or id_ == 55:) (12284)
  (         t9 = H[t0+1]〈id_〉 == 3) (12284)
  c= 3 (12284)
  a=r 0 (12286)
  a++ (12288)
  d=a (12289)
  a=*d (12290)
  a==c (12291)
  a=0 (12292)
  jf 1 (12293)
  a++ (12295)
  r=a 9 (12296)
  (         t10 = H[t0+1]〈id_〉 == 11) (12298)
  c= 11 (12298)
  a=*d (12300)
  a==c (12301)
  a=0 (12302)
  jf 1 (12303)
  a++ (12305)
  r=a 10 (12306)
  (         t8 = t9 or t10) (12308)
  c=a (12308)
  a=r 9 (12309)
  a== 0 (12311)
  jf 1 (12313)
  a=c (12315)
  r=a 8 (12316)
  (         t9 = H[t0+1]〈id_〉 == 26) (12318)
  c= 26 (12318)
  a=*d (12320)
  a==c (12321)
  a=0 (12322)
  jf 1 (12323)
  a++ (12325)
  r=a 9 (12326)
  (         t7 = t8 or t9) (12328)
  c=a (12328)
  a=r 8 (12329)
  a== 0 (12331)
  jf 1 (12333)
  a=c (12335)
  r=a 7 (12336)
  (         t8 = H[t0+1]〈id_〉 == 34) (12338)
  c= 34 (12338)
  a=*d (12340)
  a==c (12341)
  a=0 (12342)
  jf 1 (12343)
  a++ (12345)
  r=a 8 (12346)
  (         t6 = t7 or t8) (12348)
  c=a (12348)
  a=r 7 (12349)
  a== 0 (12351)
  jf 1 (12353)
  a=c (12355)
  r=a 6 (12356)
  (         t7 = H[t0+1]〈id_〉 == 39) (12358)
  c= 39 (12358)
  a=*d (12360)
  a==c (12361)
  a=0 (12362)
  jf 1 (12363)
  a++ (12365)
  r=a 7 (12366)
  (         t5 = t6 or t7) (12368)
  c=a (12368)
  a=r 6 (12369)
  a== 0 (12371)
  jf 1 (12373)
  a=c (12375)
  r=a 5 (12376)
  (         t6 = H[t0+1]〈id_〉 == 40) (12378)
  c= 40 (12378)
  a=*d (12380)
  a==c (12381)
  a=0 (12382)
  jf 1 (12383)
  a++ (12385)
  r=a 6 (12386)
  (         t4 = t5 or t6) (12388)
  c=a (12388)
  a=r 5 (12389)
  a== 0 (12391)
  jf 1 (12393)
  a=c (12395)
  r=a 4 (12396)
  (         t5 = H[t0+1]〈id_〉 == 54) (12398)
  c= 54 (12398)
  a=*d (12400)
  a==c (12401)
  a=0 (12402)
  jf 1 (12403)
  a++ (12405)
  r=a 5 (12406)
  (         t3 = t4 or t5) (12408)
  c=a (12408)
  a=r 4 (12409)
  a== 0 (12411)
  jf 1 (12413)
  a=c (12415)
  r=a 3 (12416)
  (         t4 = H[t0+1]〈id_〉 == 55) (12418)
  c= 55 (12418)
  a=*d (12420)
  a==c (12421)
  a=0 (12422)
  jf 1 (12423)
  a++ (12425)
  r=a 4 (12426)
  (         t2 = t3 or t4) (12428)
  c=a (12428)
  a=r 3 (12429)
  a== 0 (12431)
  jf 1 (12433)
  a=c (12435)
  r=a 2 (12436)
  (         ifN t2 goto else_491) (12438)
  a== 0 (12438)
  jf 3 (12440)
  lj 12906 (12442)
  (                    773:     if id_ == 3:) (12445)
  (         t2 = H[t0+1]〈id_〉 == 3) (12445)
  c= 3 (12445)
  a=*d (12447)
  a==c (12448)
  a=0 (12449)
  jf 1 (12450)
  a++ (12452)
  r=a 2 (12453)
  (         ifN t2 goto else_494) (12455)
  a== 0 (12455)
  jf 3 (12457)
  lj 12472 (12459)
  (                    774:       j = 1) (12462)
  (         H[t0+6]〈j〉 = 1) (12462)
  a=r 0 (12462)
  a+= 6 (12464)
  d=a (12466)
  *d= 1 (12467)
  (         goto endif_495) (12469)
  lj 12689 (12469)
  (        :else_494:) (12472)
  (                    775:     elif id_ == 11:) (12472)
  (         t2 = H[t0+1]〈id_〉 == 11) (12472)
  c= 11 (12472)
  a=r 0 (12474)
  a++ (12476)
  d=a (12477)
  a=*d (12478)
  a==c (12479)
  a=0 (12480)
  jf 1 (12481)
  a++ (12483)
  r=a 2 (12484)
  (         ifN t2 goto else_497) (12486)
  a== 0 (12486)
  jf 3 (12488)
  lj 12503 (12490)
  (                    776:       j = 2) (12493)
  (         H[t0+6]〈j〉 = 2) (12493)
  a=r 0 (12493)
  a+= 6 (12495)
  d=a (12497)
  *d= 2 (12498)
  (         goto endif_498) (12500)
  lj 12689 (12500)
  (        :else_497:) (12503)
  (                    777:     elif id_ == 26:) (12503)
  (         t2 = H[t0+1]〈id_〉 == 26) (12503)
  c= 26 (12503)
  a=r 0 (12505)
  a++ (12507)
  d=a (12508)
  a=*d (12509)
  a==c (12510)
  a=0 (12511)
  jf 1 (12512)
  a++ (12514)
  r=a 2 (12515)
  (         ifN t2 goto else_500) (12517)
  a== 0 (12517)
  jf 3 (12519)
  lj 12534 (12521)
  (                    778:       j = 3) (12524)
  (         H[t0+6]〈j〉 = 3) (12524)
  a=r 0 (12524)
  a+= 6 (12526)
  d=a (12528)
  *d= 3 (12529)
  (         goto endif_501) (12531)
  lj 12689 (12531)
  (        :else_500:) (12534)
  (                    779:     elif id_ == 34:) (12534)
  (         t2 = H[t0+1]〈id_〉 == 34) (12534)
  c= 34 (12534)
  a=r 0 (12536)
  a++ (12538)
  d=a (12539)
  a=*d (12540)
  a==c (12541)
  a=0 (12542)
  jf 1 (12543)
  a++ (12545)
  r=a 2 (12546)
  (         ifN t2 goto else_503) (12548)
  a== 0 (12548)
  jf 3 (12550)
  lj 12565 (12552)
  (                    780:       j = 4) (12555)
  (         H[t0+6]〈j〉 = 4) (12555)
  a=r 0 (12555)
  a+= 6 (12557)
  d=a (12559)
  *d= 4 (12560)
  (         goto endif_504) (12562)
  lj 12689 (12562)
  (        :else_503:) (12565)
  (                    781:     elif id_ == 39:) (12565)
  (         t2 = H[t0+1]〈id_〉 == 39) (12565)
  c= 39 (12565)
  a=r 0 (12567)
  a++ (12569)
  d=a (12570)
  a=*d (12571)
  a==c (12572)
  a=0 (12573)
  jf 1 (12574)
  a++ (12576)
  r=a 2 (12577)
  (         ifN t2 goto else_506) (12579)
  a== 0 (12579)
  jf 3 (12581)
  lj 12596 (12583)
  (                    782:       j = 5) (12586)
  (         H[t0+6]〈j〉 = 5) (12586)
  a=r 0 (12586)
  a+= 6 (12588)
  d=a (12590)
  *d= 5 (12591)
  (         goto endif_507) (12593)
  lj 12689 (12593)
  (        :else_506:) (12596)
  (                    783:     elif id_ == 40:) (12596)
  (         t2 = H[t0+1]〈id_〉 == 40) (12596)
  c= 40 (12596)
  a=r 0 (12598)
  a++ (12600)
  d=a (12601)
  a=*d (12602)
  a==c (12603)
  a=0 (12604)
  jf 1 (12605)
  a++ (12607)
  r=a 2 (12608)
  (         ifN t2 goto else_509) (12610)
  a== 0 (12610)
  jf 3 (12612)
  lj 12627 (12614)
  (                    784:       j = 6) (12617)
  (         H[t0+6]〈j〉 = 6) (12617)
  a=r 0 (12617)
  a+= 6 (12619)
  d=a (12621)
  *d= 6 (12622)
  (         goto endif_510) (12624)
  lj 12689 (12624)
  (        :else_509:) (12627)
  (                    785:     elif id_ == 54:) (12627)
  (         t2 = H[t0+1]〈id_〉 == 54) (12627)
  c= 54 (12627)
  a=r 0 (12629)
  a++ (12631)
  d=a (12632)
  a=*d (12633)
  a==c (12634)
  a=0 (12635)
  jf 1 (12636)
  a++ (12638)
  r=a 2 (12639)
  (         ifN t2 goto else_512) (12641)
  a== 0 (12641)
  jf 3 (12643)
  lj 12658 (12645)
  (                    786:       j = 9) (12648)
  (         H[t0+6]〈j〉 = 9) (12648)
  a=r 0 (12648)
  a+= 6 (12650)
  d=a (12652)
  *d= 9 (12653)
  (         goto endif_513) (12655)
  lj 12689 (12655)
  (        :else_512:) (12658)
  (                    787:     elif id_ == 55:) (12658)
  (         t2 = H[t0+1]〈id_〉 == 55) (12658)
  c= 55 (12658)
  a=r 0 (12660)
  a++ (12662)
  d=a (12663)
  a=*d (12664)
  a==c (12665)
  a=0 (12666)
  jf 1 (12667)
  a++ (12669)
  r=a 2 (12670)
  (         ifN t2 goto else_515) (12672)
  a== 0 (12672)
  jf 3 (12674)
  lj 12689 (12676)
  (                    788:       j = 7) (12679)
  (         H[t0+6]〈j〉 = 7) (12679)
  a=r 0 (12679)
  a+= 6 (12681)
  d=a (12683)
  *d= 7 (12684)
  (         goto endif_516) (12686)
  lj 12689 (12686)
  (        :else_515:) (12689)
  (        :endif_516:) (12689)
  (        :endif_513:) (12689)
  (        :endif_510:) (12689)
  (        :endif_507:) (12689)
  (        :endif_504:) (12689)
  (        :endif_501:) (12689)
  (        :endif_498:) (12689)
  (        :endif_495:) (12689)
  (                    789:     if l-1 < j:) (12689)
  (         t3 = H[t0+3]〈l〉 - 1) (12689)
  c= 1 (12689)
  a=r 0 (12691)
  a+= 3 (12693)
  d=a (12695)
  a=*d (12696)
  a-=c (12697)
  r=a 3 (12698)
  (         t2 = t3 < H[t0+6]〈j〉) (12700)
  a=r 0 (12700)
  a+= 6 (12702)
  d=a (12704)
  c=*d (12705)
  a=r 3 (12706)
  a<c (12708)
  a=0 (12709)
  jf 1 (12710)
  a++ (12712)
  r=a 2 (12713)
  (         ifN t2 goto else_518) (12715)
  a== 0 (12715)
  jf 3 (12717)
  lj 12744 (12719)
  (                    790:       j = l-1) (12722)
  (         t2 = H[t0+3]〈l〉 - 1) (12722)
  c= 1 (12722)
  a=r 0 (12724)
  a+= 3 (12726)
  d=a (12728)
  a=*d (12729)
  a-=c (12730)
  r=a 2 (12731)
  (         H[t0+6]〈j〉 = t2) (12733)
  a=r 0 (12733)
  a+= 6 (12735)
  d=a (12737)
  a=r 2 (12738)
  *d=a (12740)
  (         goto endif_519) (12741)
  lj 12744 (12741)
  (        :else_518:) (12744)
  (        :endif_519:) (12744)
  (                    791:     v = alloc_pM〈l-j〉) (12744)
  (         t2 = H[t0+3]〈l〉 - H[t0+6]〈j〉) (12744)
  a=r 0 (12744)
  a+= 6 (12746)
  d=a (12748)
  c=*d (12749)
  a=r 0 (12750)
  a+= 3 (12752)
  d=a (12754)
  a=*d (12755)
  a-=c (12756)
  r=a 2 (12757)
  (         H[t0+8]〈〉 = t0) (12759)
  a=r 0 (12759)
  a+= 8 (12761)
  d=a (12763)
  a=r 0 (12764)
  *d=a (12766)
  (saved bsp, return id:) (12767)
  (         H[t0+9]〈〉 = 62) (12767)
  d++ (12767)
  *d= 62 (12768)
  (push arguments:) (12770)
  (         H[t0+10]〈〉 = t2) (12770)
  d++ (12770)
  a=r 2 (12771)
  *d=a (12773)
  (         t0 = t0 + 9) (12774)
  c= 9 (12774)
  a=r 0 (12776)
  a+=c (12778)
  r=a 0 (12779)
  (         goto addr_alloc_pM) (12781)
  lj 323 (12781)
  (        :return_id_62:) (12784)
  (         t3 = t1) (12784)
  a=r 1 (12784)
  r=a 3 (12786)
  (         t3 = t3 | 2147483648) (12788)
  a= 1 (12788)
  a<<= 31 (12790)
  c=a (12792)
  a=r 3 (12793)
  a|=c (12795)
  r=a 3 (12796)
  (         H[t0+5]〈v〉 = t3) (12798)
  a=r 0 (12798)
  a+= 5 (12800)
  d=a (12802)
  a=r 3 (12803)
  *d=a (12805)
  (                    792:     while i < l-j:) (12806)
  (        :while_520:) (12806)
  (         t3 = H[t0+3]〈l〉 - H[t0+6]〈j〉) (12806)
  a=r 0 (12806)
  a+= 6 (12808)
  d=a (12810)
  c=*d (12811)
  a=r 0 (12812)
  a+= 3 (12814)
  d=a (12816)
  a=*d (12817)
  a-=c (12818)
  r=a 3 (12819)
  (         t2 = H[t0+4]〈i〉 < t3) (12821)
  c=a (12821)
  d++ (12822)
  a=*d (12823)
  a<c (12824)
  a=0 (12825)
  jf 1 (12826)
  a++ (12828)
  r=a 2 (12829)
  (         ifN t2 goto whileend_522) (12831)
  a== 0 (12831)
  jf 3 (12833)
  lj 12903 (12835)
  (                    793:       v[i] = base_word[i+j]) (12838)
  (         t2 = H[t0+4]〈i〉 + H[t0+6]〈j〉) (12838)
  a=r 0 (12838)
  a+= 6 (12840)
  d=a (12842)
  c=*d (12843)
  a=r 0 (12844)
  a+= 4 (12846)
  d=a (12848)
  a=*d (12849)
  a+=c (12850)
  r=a 2 (12851)
  (         t3 = H[t0+2]〈base_word〉 & 2147483647) (12853)
  a=0 (12853)
  a-- (12854)
  a>>= 1 (12855)
  c=a (12857)
  a=r 0 (12858)
  a+= 2 (12860)
  d=a (12862)
  a=*d (12863)
  a&=c (12864)
  r=a 3 (12865)
  (         t3 = t3 + t2) (12867)
  c=r 2 (12867)
  a+=c (12869)
  r=a 3 (12870)
  (         t3 = M[t3]) (12872)
  b=a (12872)
  a=*b (12873)
  r=a 3 (12874)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (12876)
  a=0 (12876)
  a-- (12877)
  a>>= 1 (12878)
  c=a (12880)
  a=r 0 (12881)
  a+= 5 (12883)
  d=a (12885)
  a=*d (12886)
  a&=c (12887)
  r=a 4 (12888)
  (         t4 = t4 + H[t0+4]〈i〉) (12890)
  d-- (12890)
  c=*d (12891)
  a+=c (12892)
  r=a 4 (12893)
  (         M[t4] = t3) (12895)
  c=a (12895)
  a=r 3 (12896)
  *c=a (12898)
  (                    794:       i += 1) (12899)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (12899)
  *d++ (12899)
  (         goto while_520) (12900)
  lj 12806 (12900)
  (        :whileend_522:) (12903)
  (         goto endif_492) (12903)
  lj 28969 (12903)
  (        :else_491:) (12906)
  (                    795:   elif id_ == 4 or id_ == 66 or id_ == 74 or id_ == 78 or id_ == 79 or id_ == 99:  # upper first 1 hinten an) (12906)
  (         t8 = H[t0+1]〈id_〉 == 4) (12906)
  c= 4 (12906)
  a=r 0 (12908)
  a++ (12910)
  d=a (12911)
  a=*d (12912)
  a==c (12913)
  a=0 (12914)
  jf 1 (12915)
  a++ (12917)
  r=a 8 (12918)
  (         t9 = H[t0+1]〈id_〉 == 66) (12920)
  c= 66 (12920)
  a=*d (12922)
  a==c (12923)
  a=0 (12924)
  jf 1 (12925)
  a++ (12927)
  r=a 9 (12928)
  (         t7 = t8 or t9) (12930)
  c=a (12930)
  a=r 8 (12931)
  a== 0 (12933)
  jf 1 (12935)
  a=c (12937)
  r=a 7 (12938)
  (         t8 = H[t0+1]〈id_〉 == 74) (12940)
  c= 74 (12940)
  a=*d (12942)
  a==c (12943)
  a=0 (12944)
  jf 1 (12945)
  a++ (12947)
  r=a 8 (12948)
  (         t6 = t7 or t8) (12950)
  c=a (12950)
  a=r 7 (12951)
  a== 0 (12953)
  jf 1 (12955)
  a=c (12957)
  r=a 6 (12958)
  (         t7 = H[t0+1]〈id_〉 == 78) (12960)
  c= 78 (12960)
  a=*d (12962)
  a==c (12963)
  a=0 (12964)
  jf 1 (12965)
  a++ (12967)
  r=a 7 (12968)
  (         t5 = t6 or t7) (12970)
  c=a (12970)
  a=r 6 (12971)
  a== 0 (12973)
  jf 1 (12975)
  a=c (12977)
  r=a 5 (12978)
  (         t6 = H[t0+1]〈id_〉 == 79) (12980)
  c= 79 (12980)
  a=*d (12982)
  a==c (12983)
  a=0 (12984)
  jf 1 (12985)
  a++ (12987)
  r=a 6 (12988)
  (         t4 = t5 or t6) (12990)
  c=a (12990)
  a=r 5 (12991)
  a== 0 (12993)
  jf 1 (12995)
  a=c (12997)
  r=a 4 (12998)
  (         t5 = H[t0+1]〈id_〉 == 99) (13000)
  c= 99 (13000)
  a=*d (13002)
  a==c (13003)
  a=0 (13004)
  jf 1 (13005)
  a++ (13007)
  r=a 5 (13008)
  (         t3 = t4 or t5) (13010)
  c=a (13010)
  a=r 4 (13011)
  a== 0 (13013)
  jf 1 (13015)
  a=c (13017)
  r=a 3 (13018)
  (         ifN t3 goto else_530) (13020)
  a== 0 (13020)
  jf 3 (13022)
  lj 13640 (13024)
  (                    796:     u = uppercase_first〈base_word〉) (13027)
  (         H[t0+9]〈〉 = t0) (13027)
  a=r 0 (13027)
  a+= 9 (13029)
  d=a (13031)
  a=r 0 (13032)
  *d=a (13034)
  (saved bsp, return id:) (13035)
  (         H[t0+10]〈〉 = 63) (13035)
  d++ (13035)
  *d= 63 (13036)
  (push arguments:) (13038)
  (         H[t0+11]〈〉 = H[t0+2]〈base_word〉) (13038)
  a+= 2 (13038)
  d=a (13040)
  c=*d (13041)
  a=r 0 (13042)
  a+= 11 (13044)
  d=a (13046)
  *d=c (13047)
  (         t0 = t0 + 10) (13048)
  c= 10 (13048)
  a=r 0 (13050)
  a+=c (13052)
  r=a 0 (13053)
  (         goto uppercase_first) (13055)
  lj 9839 (13055)
  (        :return_id_63:) (13058)
  (         t3 = t1) (13058)
  a=r 1 (13058)
  r=a 3 (13060)
  (         H[t0+7]〈u〉 = t3) (13062)
  a=r 0 (13062)
  a+= 7 (13064)
  d=a (13066)
  a=r 3 (13067)
  *d=a (13069)
  (                    797:     j = len_pM〈u〉) (13070)
  (         t3 = H[t0+7]〈u〉) (13070)
  a=*d (13070)
  r=a 3 (13071)
  (         t3 = t3 & 2147483647) (13073)
  a=0 (13073)
  a-- (13074)
  a>>= 1 (13075)
  c=a (13077)
  a=r 3 (13078)
  a&=c (13080)
  r=a 3 (13081)
  (         t3 = t3 - 5) (13083)
  c= 5 (13083)
  a-=c (13085)
  r=a 3 (13086)
  (         t4 = M[t3] << 8) (13088)
  c= 8 (13088)
  b=a (13090)
  a=*b (13091)
  a<<=c (13092)
  r=a 4 (13093)
  (         t3 = t3 + 1) (13095)
  a=r 3 (13095)
  a++ (13097)
  r=a 3 (13098)
  (         t4 = t4 + M[t3]) (13100)
  b=a (13100)
  c=*b (13101)
  a=r 4 (13102)
  a+=c (13104)
  r=a 4 (13105)
  (         t4 = t4 << 8) (13107)
  c= 8 (13107)
  a<<=c (13109)
  r=a 4 (13110)
  (         t3 = t3 + 1) (13112)
  a=r 3 (13112)
  a++ (13114)
  r=a 3 (13115)
  (         t4 = t4 + M[t3]) (13117)
  b=a (13117)
  c=*b (13118)
  a=r 4 (13119)
  a+=c (13121)
  r=a 4 (13122)
  (         t4 = t4 << 8) (13124)
  c= 8 (13124)
  a<<=c (13126)
  r=a 4 (13127)
  (         t3 = t3 + 1) (13129)
  a=r 3 (13129)
  a++ (13131)
  r=a 3 (13132)
  (         t4 = t4 + M[t3]) (13134)
  b=a (13134)
  c=*b (13135)
  a=r 4 (13136)
  a+=c (13138)
  r=a 4 (13139)
  (         H[t0+6]〈j〉 = t4) (13141)
  d-- (13141)
  *d=a (13142)
  (                    798:     v = alloc_pM〈j+1〉) (13143)
  (         t3 = H[t0+6]〈j〉 + 1) (13143)
  c= 1 (13143)
  a=*d (13145)
  a+=c (13146)
  r=a 3 (13147)
  (         H[t0+10]〈〉 = t0) (13149)
  a=r 0 (13149)
  a+= 10 (13151)
  d=a (13153)
  a=r 0 (13154)
  *d=a (13156)
  (saved bsp, return id:) (13157)
  (         H[t0+11]〈〉 = 64) (13157)
  d++ (13157)
  *d= 64 (13158)
  (push arguments:) (13160)
  (         H[t0+12]〈〉 = t3) (13160)
  d++ (13160)
  a=r 3 (13161)
  *d=a (13163)
  (         t0 = t0 + 11) (13164)
  c= 11 (13164)
  a=r 0 (13166)
  a+=c (13168)
  r=a 0 (13169)
  (         goto addr_alloc_pM) (13171)
  lj 323 (13171)
  (        :return_id_64:) (13174)
  (         t4 = t1) (13174)
  a=r 1 (13174)
  r=a 4 (13176)
  (         t4 = t4 | 2147483648) (13178)
  a= 1 (13178)
  a<<= 31 (13180)
  c=a (13182)
  a=r 4 (13183)
  a|=c (13185)
  r=a 4 (13186)
  (         H[t0+5]〈v〉 = t4) (13188)
  a=r 0 (13188)
  a+= 5 (13190)
  d=a (13192)
  a=r 4 (13193)
  *d=a (13195)
  (                    799:     while i < j:) (13196)
  (        :while_532:) (13196)
  (         t3 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (13196)
  a=r 0 (13196)
  a+= 6 (13198)
  d=a (13200)
  c=*d (13201)
  a=r 0 (13202)
  a+= 4 (13204)
  d=a (13206)
  a=*d (13207)
  a<c (13208)
  a=0 (13209)
  jf 1 (13210)
  a++ (13212)
  r=a 3 (13213)
  (         ifN t3 goto whileend_534) (13215)
  a== 0 (13215)
  jf 3 (13217)
  lj 13318 (13219)
  (                    800:       v[i] = u[i]) (13222)
  (         t3 = H[t0+7]〈u〉 >> 31) (13222)
  c= 31 (13222)
  a=r 0 (13224)
  a+= 7 (13226)
  d=a (13228)
  a=*d (13229)
  a>>=c (13230)
  r=a 3 (13231)
  (         if t3 goto isM_536) (13233)
  a== 0 (13233)
  jt 3 (13235)
  lj 13262 (13237)
  (         t3 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (13240)
  a=r 0 (13240)
  a+= 4 (13242)
  d=a (13244)
  c=*d (13245)
  a=r 0 (13246)
  a+= 7 (13248)
  d=a (13250)
  a=*d (13251)
  a+=c (13252)
  r=a 3 (13253)
  (         t3 = H[t3]〈〉) (13255)
  d=a (13255)
  a=*d (13256)
  r=a 3 (13257)
  (         goto MorHdone_537) (13259)
  lj 13291 (13259)
  (        :isM_536:) (13262)
  (         t3 = H[t0+7]〈u〉 & 2147483647) (13262)
  a=0 (13262)
  a-- (13263)
  a>>= 1 (13264)
  c=a (13266)
  a=r 0 (13267)
  a+= 7 (13269)
  d=a (13271)
  a=*d (13272)
  a&=c (13273)
  r=a 3 (13274)
  (         t3 = t3 + H[t0+4]〈i〉) (13276)
  a=r 0 (13276)
  a+= 4 (13278)
  d=a (13280)
  c=*d (13281)
  a=r 3 (13282)
  a+=c (13284)
  r=a 3 (13285)
  (         t3 = M[t3]) (13287)
  b=a (13287)
  a=*b (13288)
  r=a 3 (13289)
  (        :MorHdone_537:) (13291)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (13291)
  a=0 (13291)
  a-- (13292)
  a>>= 1 (13293)
  c=a (13295)
  a=r 0 (13296)
  a+= 5 (13298)
  d=a (13300)
  a=*d (13301)
  a&=c (13302)
  r=a 4 (13303)
  (         t4 = t4 + H[t0+4]〈i〉) (13305)
  d-- (13305)
  c=*d (13306)
  a+=c (13307)
  r=a 4 (13308)
  (         M[t4] = t3) (13310)
  c=a (13310)
  a=r 3 (13311)
  *c=a (13313)
  (                    801:       i += 1) (13314)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (13314)
  *d++ (13314)
  (         goto while_532) (13315)
  lj 13196 (13315)
  (        :whileend_534:) (13318)
  (                    802:     if id_ == 4:) (13318)
  (         t3 = H[t0+1]〈id_〉 == 4) (13318)
  c= 4 (13318)
  a=r 0 (13320)
  a++ (13322)
  d=a (13323)
  a=*d (13324)
  a==c (13325)
  a=0 (13326)
  jf 1 (13327)
  a++ (13329)
  r=a 3 (13330)
  (         ifN t3 goto else_539) (13332)
  a== 0 (13332)
  jf 3 (13334)
  lj 13364 (13336)
  (                    803:       v[i] = 0x20) (13339)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13339)
  a=0 (13339)
  a-- (13340)
  a>>= 1 (13341)
  c=a (13343)
  a=r 0 (13344)
  a+= 5 (13346)
  d=a (13348)
  a=*d (13349)
  a&=c (13350)
  r=a 3 (13351)
  (         t3 = t3 + H[t0+4]〈i〉) (13353)
  d-- (13353)
  c=*d (13354)
  a+=c (13355)
  r=a 3 (13356)
  (         M[t3] = 32) (13358)
  c=a (13358)
  *c= 32 (13359)
  (         goto endif_540) (13361)
  lj 13594 (13361)
  (        :else_539:) (13364)
  (                    804:     elif id_ == 66:) (13364)
  (         t3 = H[t0+1]〈id_〉 == 66) (13364)
  c= 66 (13364)
  a=r 0 (13366)
  a++ (13368)
  d=a (13369)
  a=*d (13370)
  a==c (13371)
  a=0 (13372)
  jf 1 (13373)
  a++ (13375)
  r=a 3 (13376)
  (         ifN t3 goto else_542) (13378)
  a== 0 (13378)
  jf 3 (13380)
  lj 13410 (13382)
  (                    805:       v[i] = 0x22) (13385)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13385)
  a=0 (13385)
  a-- (13386)
  a>>= 1 (13387)
  c=a (13389)
  a=r 0 (13390)
  a+= 5 (13392)
  d=a (13394)
  a=*d (13395)
  a&=c (13396)
  r=a 3 (13397)
  (         t3 = t3 + H[t0+4]〈i〉) (13399)
  d-- (13399)
  c=*d (13400)
  a+=c (13401)
  r=a 3 (13402)
  (         M[t3] = 34) (13404)
  c=a (13404)
  *c= 34 (13405)
  (         goto endif_543) (13407)
  lj 13594 (13407)
  (        :else_542:) (13410)
  (                    806:     elif id_ == 74:) (13410)
  (         t3 = H[t0+1]〈id_〉 == 74) (13410)
  c= 74 (13410)
  a=r 0 (13412)
  a++ (13414)
  d=a (13415)
  a=*d (13416)
  a==c (13417)
  a=0 (13418)
  jf 1 (13419)
  a++ (13421)
  r=a 3 (13422)
  (         ifN t3 goto else_545) (13424)
  a== 0 (13424)
  jf 3 (13426)
  lj 13456 (13428)
  (                    807:       v[i] = 0x27) (13431)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13431)
  a=0 (13431)
  a-- (13432)
  a>>= 1 (13433)
  c=a (13435)
  a=r 0 (13436)
  a+= 5 (13438)
  d=a (13440)
  a=*d (13441)
  a&=c (13442)
  r=a 3 (13443)
  (         t3 = t3 + H[t0+4]〈i〉) (13445)
  d-- (13445)
  c=*d (13446)
  a+=c (13447)
  r=a 3 (13448)
  (         M[t3] = 39) (13450)
  c=a (13450)
  *c= 39 (13451)
  (         goto endif_546) (13453)
  lj 13594 (13453)
  (        :else_545:) (13456)
  (                    808:     elif id_ == 78:) (13456)
  (         t3 = H[t0+1]〈id_〉 == 78) (13456)
  c= 78 (13456)
  a=r 0 (13458)
  a++ (13460)
  d=a (13461)
  a=*d (13462)
  a==c (13463)
  a=0 (13464)
  jf 1 (13465)
  a++ (13467)
  r=a 3 (13468)
  (         ifN t3 goto else_548) (13470)
  a== 0 (13470)
  jf 3 (13472)
  lj 13502 (13474)
  (                    809:       v[i] = 0x28) (13477)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13477)
  a=0 (13477)
  a-- (13478)
  a>>= 1 (13479)
  c=a (13481)
  a=r 0 (13482)
  a+= 5 (13484)
  d=a (13486)
  a=*d (13487)
  a&=c (13488)
  r=a 3 (13489)
  (         t3 = t3 + H[t0+4]〈i〉) (13491)
  d-- (13491)
  c=*d (13492)
  a+=c (13493)
  r=a 3 (13494)
  (         M[t3] = 40) (13496)
  c=a (13496)
  *c= 40 (13497)
  (         goto endif_549) (13499)
  lj 13594 (13499)
  (        :else_548:) (13502)
  (                    810:     elif id_ == 79:) (13502)
  (         t3 = H[t0+1]〈id_〉 == 79) (13502)
  c= 79 (13502)
  a=r 0 (13504)
  a++ (13506)
  d=a (13507)
  a=*d (13508)
  a==c (13509)
  a=0 (13510)
  jf 1 (13511)
  a++ (13513)
  r=a 3 (13514)
  (         ifN t3 goto else_551) (13516)
  a== 0 (13516)
  jf 3 (13518)
  lj 13548 (13520)
  (                    811:       v[i] = 0x2e) (13523)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13523)
  a=0 (13523)
  a-- (13524)
  a>>= 1 (13525)
  c=a (13527)
  a=r 0 (13528)
  a+= 5 (13530)
  d=a (13532)
  a=*d (13533)
  a&=c (13534)
  r=a 3 (13535)
  (         t3 = t3 + H[t0+4]〈i〉) (13537)
  d-- (13537)
  c=*d (13538)
  a+=c (13539)
  r=a 3 (13540)
  (         M[t3] = 46) (13542)
  c=a (13542)
  *c= 46 (13543)
  (         goto endif_552) (13545)
  lj 13594 (13545)
  (        :else_551:) (13548)
  (                    812:     elif id_ == 99:) (13548)
  (         t3 = H[t0+1]〈id_〉 == 99) (13548)
  c= 99 (13548)
  a=r 0 (13550)
  a++ (13552)
  d=a (13553)
  a=*d (13554)
  a==c (13555)
  a=0 (13556)
  jf 1 (13557)
  a++ (13559)
  r=a 3 (13560)
  (         ifN t3 goto else_554) (13562)
  a== 0 (13562)
  jf 3 (13564)
  lj 13594 (13566)
  (                    813:       v[i] = 0x2c) (13569)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13569)
  a=0 (13569)
  a-- (13570)
  a>>= 1 (13571)
  c=a (13573)
  a=r 0 (13574)
  a+= 5 (13576)
  d=a (13578)
  a=*d (13579)
  a&=c (13580)
  r=a 3 (13581)
  (         t3 = t3 + H[t0+4]〈i〉) (13583)
  d-- (13583)
  c=*d (13584)
  a+=c (13585)
  r=a 3 (13586)
  (         M[t3] = 44) (13588)
  c=a (13588)
  *c= 44 (13589)
  (         goto endif_555) (13591)
  lj 13594 (13591)
  (        :else_554:) (13594)
  (        :endif_555:) (13594)
  (        :endif_552:) (13594)
  (        :endif_549:) (13594)
  (        :endif_546:) (13594)
  (        :endif_543:) (13594)
  (        :endif_540:) (13594)
  (                    814:     free_pM〈u〉) (13594)
  (         t3 = H[t0+7]〈u〉 & 2147483647) (13594)
  a=0 (13594)
  a-- (13595)
  a>>= 1 (13596)
  c=a (13598)
  a=r 0 (13599)
  a+= 7 (13601)
  d=a (13603)
  a=*d (13604)
  a&=c (13605)
  r=a 3 (13606)
  (         H[t0+10]〈〉 = t0) (13608)
  a=r 0 (13608)
  a+= 10 (13610)
  d=a (13612)
  a=r 0 (13613)
  *d=a (13615)
  (saved bsp, return id:) (13616)
  (         H[t0+11]〈〉 = 65) (13616)
  d++ (13616)
  *d= 65 (13617)
  (push arguments:) (13619)
  (         H[t0+12]〈〉 = t3) (13619)
  d++ (13619)
  a=r 3 (13620)
  *d=a (13622)
  (         t0 = t0 + 11) (13623)
  c= 11 (13623)
  a=r 0 (13625)
  a+=c (13627)
  r=a 0 (13628)
  (         goto addr_free_pM) (13630)
  lj 2406 (13630)
  (        :return_id_65:) (13633)
  (         t4 = t1) (13633)
  a=r 1 (13633)
  r=a 4 (13635)
  (         goto endif_531) (13637)
  lj 28969 (13637)
  (        :else_530:) (13640)
  (                    815:   elif id_ == 5 or id_ == 10 or id_ == 25 or id_ == 80 or id_ == 93:  # 5 hinten an) (13640)
  (         t7 = H[t0+1]〈id_〉 == 5) (13640)
  c= 5 (13640)
  a=r 0 (13642)
  a++ (13644)
  d=a (13645)
  a=*d (13646)
  a==c (13647)
  a=0 (13648)
  jf 1 (13649)
  a++ (13651)
  r=a 7 (13652)
  (         t8 = H[t0+1]〈id_〉 == 10) (13654)
  c= 10 (13654)
  a=*d (13656)
  a==c (13657)
  a=0 (13658)
  jf 1 (13659)
  a++ (13661)
  r=a 8 (13662)
  (         t6 = t7 or t8) (13664)
  c=a (13664)
  a=r 7 (13665)
  a== 0 (13667)
  jf 1 (13669)
  a=c (13671)
  r=a 6 (13672)
  (         t7 = H[t0+1]〈id_〉 == 25) (13674)
  c= 25 (13674)
  a=*d (13676)
  a==c (13677)
  a=0 (13678)
  jf 1 (13679)
  a++ (13681)
  r=a 7 (13682)
  (         t5 = t6 or t7) (13684)
  c=a (13684)
  a=r 6 (13685)
  a== 0 (13687)
  jf 1 (13689)
  a=c (13691)
  r=a 5 (13692)
  (         t6 = H[t0+1]〈id_〉 == 80) (13694)
  c= 80 (13694)
  a=*d (13696)
  a==c (13697)
  a=0 (13698)
  jf 1 (13699)
  a++ (13701)
  r=a 6 (13702)
  (         t4 = t5 or t6) (13704)
  c=a (13704)
  a=r 5 (13705)
  a== 0 (13707)
  jf 1 (13709)
  a=c (13711)
  r=a 4 (13712)
  (         t5 = H[t0+1]〈id_〉 == 93) (13714)
  c= 93 (13714)
  a=*d (13716)
  a==c (13717)
  a=0 (13718)
  jf 1 (13719)
  a++ (13721)
  r=a 5 (13722)
  (         t3 = t4 or t5) (13724)
  c=a (13724)
  a=r 4 (13725)
  a== 0 (13727)
  jf 1 (13729)
  a=c (13731)
  r=a 3 (13732)
  (         ifN t3 goto else_561) (13734)
  a== 0 (13734)
  jf 3 (13736)
  lj 14650 (13738)
  (                    816:     v = alloc_pM〈l+5〉) (13741)
  (         t3 = H[t0+3]〈l〉 + 5) (13741)
  c= 5 (13741)
  a=r 0 (13743)
  a+= 3 (13745)
  d=a (13747)
  a=*d (13748)
  a+=c (13749)
  r=a 3 (13750)
  (         H[t0+10]〈〉 = t0) (13752)
  a=r 0 (13752)
  a+= 10 (13754)
  d=a (13756)
  a=r 0 (13757)
  *d=a (13759)
  (saved bsp, return id:) (13760)
  (         H[t0+11]〈〉 = 66) (13760)
  d++ (13760)
  *d= 66 (13761)
  (push arguments:) (13763)
  (         H[t0+12]〈〉 = t3) (13763)
  d++ (13763)
  a=r 3 (13764)
  *d=a (13766)
  (         t0 = t0 + 11) (13767)
  c= 11 (13767)
  a=r 0 (13769)
  a+=c (13771)
  r=a 0 (13772)
  (         goto addr_alloc_pM) (13774)
  lj 323 (13774)
  (        :return_id_66:) (13777)
  (         t4 = t1) (13777)
  a=r 1 (13777)
  r=a 4 (13779)
  (         t4 = t4 | 2147483648) (13781)
  a= 1 (13781)
  a<<= 31 (13783)
  c=a (13785)
  a=r 4 (13786)
  a|=c (13788)
  r=a 4 (13789)
  (         H[t0+5]〈v〉 = t4) (13791)
  a=r 0 (13791)
  a+= 5 (13793)
  d=a (13795)
  a=r 4 (13796)
  *d=a (13798)
  (                    817:     while i < l:) (13799)
  (        :while_563:) (13799)
  (         t3 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (13799)
  a=r 0 (13799)
  a+= 3 (13801)
  d=a (13803)
  c=*d (13804)
  d++ (13805)
  a=*d (13806)
  a<c (13807)
  a=0 (13808)
  jf 1 (13809)
  a++ (13811)
  r=a 3 (13812)
  (         ifN t3 goto whileend_565) (13814)
  a== 0 (13814)
  jf 3 (13816)
  lj 13873 (13818)
  (                    818:       v[i] = base_word[i]) (13821)
  (         t3 = H[t0+2]〈base_word〉 & 2147483647) (13821)
  a=0 (13821)
  a-- (13822)
  a>>= 1 (13823)
  c=a (13825)
  a=r 0 (13826)
  a+= 2 (13828)
  d=a (13830)
  a=*d (13831)
  a&=c (13832)
  r=a 3 (13833)
  (         t3 = t3 + H[t0+4]〈i〉) (13835)
  a=r 0 (13835)
  a+= 4 (13837)
  d=a (13839)
  c=*d (13840)
  a=r 3 (13841)
  a+=c (13843)
  r=a 3 (13844)
  (         t3 = M[t3]) (13846)
  b=a (13846)
  a=*b (13847)
  r=a 3 (13848)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (13850)
  a=0 (13850)
  a-- (13851)
  a>>= 1 (13852)
  c=a (13854)
  d++ (13855)
  a=*d (13856)
  a&=c (13857)
  r=a 4 (13858)
  (         t4 = t4 + H[t0+4]〈i〉) (13860)
  d-- (13860)
  c=*d (13861)
  a+=c (13862)
  r=a 4 (13863)
  (         M[t4] = t3) (13865)
  c=a (13865)
  a=r 3 (13866)
  *c=a (13868)
  (                    819:       i += 1) (13869)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (13869)
  *d++ (13869)
  (         goto while_563) (13870)
  lj 13799 (13870)
  (        :whileend_565:) (13873)
  (                    820:     if id_ == 93:) (13873)
  (         t3 = H[t0+1]〈id_〉 == 93) (13873)
  c= 93 (13873)
  a=r 0 (13875)
  a++ (13877)
  d=a (13878)
  a=*d (13879)
  a==c (13880)
  a=0 (13881)
  jf 1 (13882)
  a++ (13884)
  r=a 3 (13885)
  (         ifN t3 goto else_568) (13887)
  a== 0 (13887)
  jf 3 (13889)
  lj 13919 (13891)
  (                    821:       v[i] = 0x6c) (13894)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13894)
  a=0 (13894)
  a-- (13895)
  a>>= 1 (13896)
  c=a (13898)
  a=r 0 (13899)
  a+= 5 (13901)
  d=a (13903)
  a=*d (13904)
  a&=c (13905)
  r=a 3 (13906)
  (         t3 = t3 + H[t0+4]〈i〉) (13908)
  d-- (13908)
  c=*d (13909)
  a+=c (13910)
  r=a 3 (13911)
  (         M[t3] = 108) (13913)
  c=a (13913)
  *c= 108 (13914)
  (         goto endif_569) (13916)
  lj 13941 (13916)
  (        :else_568:) (13919)
  (                    823:       v[i] = 0x20) (13919)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13919)
  a=0 (13919)
  a-- (13920)
  a>>= 1 (13921)
  c=a (13923)
  a=r 0 (13924)
  a+= 5 (13926)
  d=a (13928)
  a=*d (13929)
  a&=c (13930)
  r=a 3 (13931)
  (         t3 = t3 + H[t0+4]〈i〉) (13933)
  d-- (13933)
  c=*d (13934)
  a+=c (13935)
  r=a 3 (13936)
  (         M[t3] = 32) (13938)
  c=a (13938)
  *c= 32 (13939)
  (        :endif_569:) (13941)
  (                    824:     i += 1) (13941)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (13941)
  a=r 0 (13941)
  a+= 4 (13943)
  d=a (13945)
  *d++ (13946)
  (                    825:     if id_ == 5:) (13947)
  (         t3 = H[t0+1]〈id_〉 == 5) (13947)
  c= 5 (13947)
  a=r 0 (13949)
  a++ (13951)
  d=a (13952)
  a=*d (13953)
  a==c (13954)
  a=0 (13955)
  jf 1 (13956)
  a++ (13958)
  r=a 3 (13959)
  (         ifN t3 goto else_571) (13961)
  a== 0 (13961)
  jf 3 (13963)
  lj 13993 (13965)
  (                    826:       v[i] = 0x74) (13968)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (13968)
  a=0 (13968)
  a-- (13969)
  a>>= 1 (13970)
  c=a (13972)
  a=r 0 (13973)
  a+= 5 (13975)
  d=a (13977)
  a=*d (13978)
  a&=c (13979)
  r=a 3 (13980)
  (         t3 = t3 + H[t0+4]〈i〉) (13982)
  d-- (13982)
  c=*d (13983)
  a+=c (13984)
  r=a 3 (13985)
  (         M[t3] = 116) (13987)
  c=a (13987)
  *c= 116 (13988)
  (         goto endif_572) (13990)
  lj 14177 (13990)
  (        :else_571:) (13993)
  (                    827:     elif id_ == 10:) (13993)
  (         t3 = H[t0+1]〈id_〉 == 10) (13993)
  c= 10 (13993)
  a=r 0 (13995)
  a++ (13997)
  d=a (13998)
  a=*d (13999)
  a==c (14000)
  a=0 (14001)
  jf 1 (14002)
  a++ (14004)
  r=a 3 (14005)
  (         ifN t3 goto else_574) (14007)
  a== 0 (14007)
  jf 3 (14009)
  lj 14039 (14011)
  (                    828:       v[i] = 0x61) (14014)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14014)
  a=0 (14014)
  a-- (14015)
  a>>= 1 (14016)
  c=a (14018)
  a=r 0 (14019)
  a+= 5 (14021)
  d=a (14023)
  a=*d (14024)
  a&=c (14025)
  r=a 3 (14026)
  (         t3 = t3 + H[t0+4]〈i〉) (14028)
  d-- (14028)
  c=*d (14029)
  a+=c (14030)
  r=a 3 (14031)
  (         M[t3] = 97) (14033)
  c=a (14033)
  *c= 97 (14034)
  (         goto endif_575) (14036)
  lj 14177 (14036)
  (        :else_574:) (14039)
  (                    829:     elif id_ == 25:) (14039)
  (         t3 = H[t0+1]〈id_〉 == 25) (14039)
  c= 25 (14039)
  a=r 0 (14041)
  a++ (14043)
  d=a (14044)
  a=*d (14045)
  a==c (14046)
  a=0 (14047)
  jf 1 (14048)
  a++ (14050)
  r=a 3 (14051)
  (         ifN t3 goto else_577) (14053)
  a== 0 (14053)
  jf 3 (14055)
  lj 14085 (14057)
  (                    830:       v[i] = 0x66) (14060)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14060)
  a=0 (14060)
  a-- (14061)
  a>>= 1 (14062)
  c=a (14064)
  a=r 0 (14065)
  a+= 5 (14067)
  d=a (14069)
  a=*d (14070)
  a&=c (14071)
  r=a 3 (14072)
  (         t3 = t3 + H[t0+4]〈i〉) (14074)
  d-- (14074)
  c=*d (14075)
  a+=c (14076)
  r=a 3 (14077)
  (         M[t3] = 102) (14079)
  c=a (14079)
  *c= 102 (14080)
  (         goto endif_578) (14082)
  lj 14177 (14082)
  (        :else_577:) (14085)
  (                    831:     elif id_ == 80:) (14085)
  (         t3 = H[t0+1]〈id_〉 == 80) (14085)
  c= 80 (14085)
  a=r 0 (14087)
  a++ (14089)
  d=a (14090)
  a=*d (14091)
  a==c (14092)
  a=0 (14093)
  jf 1 (14094)
  a++ (14096)
  r=a 3 (14097)
  (         ifN t3 goto else_580) (14099)
  a== 0 (14099)
  jf 3 (14101)
  lj 14131 (14103)
  (                    832:       v[i] = 0x6e) (14106)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14106)
  a=0 (14106)
  a-- (14107)
  a>>= 1 (14108)
  c=a (14110)
  a=r 0 (14111)
  a+= 5 (14113)
  d=a (14115)
  a=*d (14116)
  a&=c (14117)
  r=a 3 (14118)
  (         t3 = t3 + H[t0+4]〈i〉) (14120)
  d-- (14120)
  c=*d (14121)
  a+=c (14122)
  r=a 3 (14123)
  (         M[t3] = 110) (14125)
  c=a (14125)
  *c= 110 (14126)
  (         goto endif_581) (14128)
  lj 14177 (14128)
  (        :else_580:) (14131)
  (                    833:     elif id_ == 93:) (14131)
  (         t3 = H[t0+1]〈id_〉 == 93) (14131)
  c= 93 (14131)
  a=r 0 (14133)
  a++ (14135)
  d=a (14136)
  a=*d (14137)
  a==c (14138)
  a=0 (14139)
  jf 1 (14140)
  a++ (14142)
  r=a 3 (14143)
  (         ifN t3 goto else_583) (14145)
  a== 0 (14145)
  jf 3 (14147)
  lj 14177 (14149)
  (                    834:       v[i] = 0x65) (14152)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14152)
  a=0 (14152)
  a-- (14153)
  a>>= 1 (14154)
  c=a (14156)
  a=r 0 (14157)
  a+= 5 (14159)
  d=a (14161)
  a=*d (14162)
  a&=c (14163)
  r=a 3 (14164)
  (         t3 = t3 + H[t0+4]〈i〉) (14166)
  d-- (14166)
  c=*d (14167)
  a+=c (14168)
  r=a 3 (14169)
  (         M[t3] = 101) (14171)
  c=a (14171)
  *c= 101 (14172)
  (         goto endif_584) (14174)
  lj 14177 (14174)
  (        :else_583:) (14177)
  (        :endif_584:) (14177)
  (        :endif_581:) (14177)
  (        :endif_578:) (14177)
  (        :endif_575:) (14177)
  (        :endif_572:) (14177)
  (                    835:     i += 1) (14177)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (14177)
  a=r 0 (14177)
  a+= 4 (14179)
  d=a (14181)
  *d++ (14182)
  (                    836:     if id_ == 5:) (14183)
  (         t3 = H[t0+1]〈id_〉 == 5) (14183)
  c= 5 (14183)
  a=r 0 (14185)
  a++ (14187)
  d=a (14188)
  a=*d (14189)
  a==c (14190)
  a=0 (14191)
  jf 1 (14192)
  a++ (14194)
  r=a 3 (14195)
  (         ifN t3 goto else_586) (14197)
  a== 0 (14197)
  jf 3 (14199)
  lj 14229 (14201)
  (                    837:       v[i] = 0x68) (14204)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14204)
  a=0 (14204)
  a-- (14205)
  a>>= 1 (14206)
  c=a (14208)
  a=r 0 (14209)
  a+= 5 (14211)
  d=a (14213)
  a=*d (14214)
  a&=c (14215)
  r=a 3 (14216)
  (         t3 = t3 + H[t0+4]〈i〉) (14218)
  d-- (14218)
  c=*d (14219)
  a+=c (14220)
  r=a 3 (14221)
  (         M[t3] = 104) (14223)
  c=a (14223)
  *c= 104 (14224)
  (         goto endif_587) (14226)
  lj 14387 (14226)
  (        :else_586:) (14229)
  (                    838:     elif id_ == 10:) (14229)
  (         t3 = H[t0+1]〈id_〉 == 10) (14229)
  c= 10 (14229)
  a=r 0 (14231)
  a++ (14233)
  d=a (14234)
  a=*d (14235)
  a==c (14236)
  a=0 (14237)
  jf 1 (14238)
  a++ (14240)
  r=a 3 (14241)
  (         ifN t3 goto else_589) (14243)
  a== 0 (14243)
  jf 3 (14245)
  lj 14275 (14247)
  (                    839:       v[i] = 0x6e) (14250)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14250)
  a=0 (14250)
  a-- (14251)
  a>>= 1 (14252)
  c=a (14254)
  a=r 0 (14255)
  a+= 5 (14257)
  d=a (14259)
  a=*d (14260)
  a&=c (14261)
  r=a 3 (14262)
  (         t3 = t3 + H[t0+4]〈i〉) (14264)
  d-- (14264)
  c=*d (14265)
  a+=c (14266)
  r=a 3 (14267)
  (         M[t3] = 110) (14269)
  c=a (14269)
  *c= 110 (14270)
  (         goto endif_590) (14272)
  lj 14387 (14272)
  (        :else_589:) (14275)
  (                    840:     elif id_ == 25 or id_ == 80:) (14275)
  (         t4 = H[t0+1]〈id_〉 == 25) (14275)
  c= 25 (14275)
  a=r 0 (14277)
  a++ (14279)
  d=a (14280)
  a=*d (14281)
  a==c (14282)
  a=0 (14283)
  jf 1 (14284)
  a++ (14286)
  r=a 4 (14287)
  (         t5 = H[t0+1]〈id_〉 == 80) (14289)
  c= 80 (14289)
  a=*d (14291)
  a==c (14292)
  a=0 (14293)
  jf 1 (14294)
  a++ (14296)
  r=a 5 (14297)
  (         t3 = t4 or t5) (14299)
  c=a (14299)
  a=r 4 (14300)
  a== 0 (14302)
  jf 1 (14304)
  a=c (14306)
  r=a 3 (14307)
  (         ifN t3 goto else_593) (14309)
  a== 0 (14309)
  jf 3 (14311)
  lj 14341 (14313)
  (                    841:       v[i] = 0x6f) (14316)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14316)
  a=0 (14316)
  a-- (14317)
  a>>= 1 (14318)
  c=a (14320)
  a=r 0 (14321)
  a+= 5 (14323)
  d=a (14325)
  a=*d (14326)
  a&=c (14327)
  r=a 3 (14328)
  (         t3 = t3 + H[t0+4]〈i〉) (14330)
  d-- (14330)
  c=*d (14331)
  a+=c (14332)
  r=a 3 (14333)
  (         M[t3] = 111) (14335)
  c=a (14335)
  *c= 111 (14336)
  (         goto endif_594) (14338)
  lj 14387 (14338)
  (        :else_593:) (14341)
  (                    842:     elif id_ == 93:) (14341)
  (         t3 = H[t0+1]〈id_〉 == 93) (14341)
  c= 93 (14341)
  a=r 0 (14343)
  a++ (14345)
  d=a (14346)
  a=*d (14347)
  a==c (14348)
  a=0 (14349)
  jf 1 (14350)
  a++ (14352)
  r=a 3 (14353)
  (         ifN t3 goto else_596) (14355)
  a== 0 (14355)
  jf 3 (14357)
  lj 14387 (14359)
  (                    843:       v[i] = 0x73) (14362)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14362)
  a=0 (14362)
  a-- (14363)
  a>>= 1 (14364)
  c=a (14366)
  a=r 0 (14367)
  a+= 5 (14369)
  d=a (14371)
  a=*d (14372)
  a&=c (14373)
  r=a 3 (14374)
  (         t3 = t3 + H[t0+4]〈i〉) (14376)
  d-- (14376)
  c=*d (14377)
  a+=c (14378)
  r=a 3 (14379)
  (         M[t3] = 115) (14381)
  c=a (14381)
  *c= 115 (14382)
  (         goto endif_597) (14384)
  lj 14387 (14384)
  (        :else_596:) (14387)
  (        :endif_597:) (14387)
  (        :endif_594:) (14387)
  (        :endif_590:) (14387)
  (        :endif_587:) (14387)
  (                    844:     i += 1) (14387)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (14387)
  a=r 0 (14387)
  a+= 4 (14389)
  d=a (14391)
  *d++ (14392)
  (                    845:     if id_ == 5:) (14393)
  (         t3 = H[t0+1]〈id_〉 == 5) (14393)
  c= 5 (14393)
  a=r 0 (14395)
  a++ (14397)
  d=a (14398)
  a=*d (14399)
  a==c (14400)
  a=0 (14401)
  jf 1 (14402)
  a++ (14404)
  r=a 3 (14405)
  (         ifN t3 goto else_599) (14407)
  a== 0 (14407)
  jf 3 (14409)
  lj 14439 (14411)
  (                    846:       v[i] = 0x65) (14414)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14414)
  a=0 (14414)
  a-- (14415)
  a>>= 1 (14416)
  c=a (14418)
  a=r 0 (14419)
  a+= 5 (14421)
  d=a (14423)
  a=*d (14424)
  a&=c (14425)
  r=a 3 (14426)
  (         t3 = t3 + H[t0+4]〈i〉) (14428)
  d-- (14428)
  c=*d (14429)
  a+=c (14430)
  r=a 3 (14431)
  (         M[t3] = 101) (14433)
  c=a (14433)
  *c= 101 (14434)
  (         goto endif_600) (14436)
  lj 14623 (14436)
  (        :else_599:) (14439)
  (                    847:     elif id_ == 10:) (14439)
  (         t3 = H[t0+1]〈id_〉 == 10) (14439)
  c= 10 (14439)
  a=r 0 (14441)
  a++ (14443)
  d=a (14444)
  a=*d (14445)
  a==c (14446)
  a=0 (14447)
  jf 1 (14448)
  a++ (14450)
  r=a 3 (14451)
  (         ifN t3 goto else_602) (14453)
  a== 0 (14453)
  jf 3 (14455)
  lj 14485 (14457)
  (                    848:       v[i] = 0x64) (14460)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14460)
  a=0 (14460)
  a-- (14461)
  a>>= 1 (14462)
  c=a (14464)
  a=r 0 (14465)
  a+= 5 (14467)
  d=a (14469)
  a=*d (14470)
  a&=c (14471)
  r=a 3 (14472)
  (         t3 = t3 + H[t0+4]〈i〉) (14474)
  d-- (14474)
  c=*d (14475)
  a+=c (14476)
  r=a 3 (14477)
  (         M[t3] = 100) (14479)
  c=a (14479)
  *c= 100 (14480)
  (         goto endif_603) (14482)
  lj 14623 (14482)
  (        :else_602:) (14485)
  (                    849:     elif id_ == 25:) (14485)
  (         t3 = H[t0+1]〈id_〉 == 25) (14485)
  c= 25 (14485)
  a=r 0 (14487)
  a++ (14489)
  d=a (14490)
  a=*d (14491)
  a==c (14492)
  a=0 (14493)
  jf 1 (14494)
  a++ (14496)
  r=a 3 (14497)
  (         ifN t3 goto else_605) (14499)
  a== 0 (14499)
  jf 3 (14501)
  lj 14531 (14503)
  (                    850:       v[i] = 0x72) (14506)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14506)
  a=0 (14506)
  a-- (14507)
  a>>= 1 (14508)
  c=a (14510)
  a=r 0 (14511)
  a+= 5 (14513)
  d=a (14515)
  a=*d (14516)
  a&=c (14517)
  r=a 3 (14518)
  (         t3 = t3 + H[t0+4]〈i〉) (14520)
  d-- (14520)
  c=*d (14521)
  a+=c (14522)
  r=a 3 (14523)
  (         M[t3] = 114) (14525)
  c=a (14525)
  *c= 114 (14526)
  (         goto endif_606) (14528)
  lj 14623 (14528)
  (        :else_605:) (14531)
  (                    851:     elif id_ == 80:) (14531)
  (         t3 = H[t0+1]〈id_〉 == 80) (14531)
  c= 80 (14531)
  a=r 0 (14533)
  a++ (14535)
  d=a (14536)
  a=*d (14537)
  a==c (14538)
  a=0 (14539)
  jf 1 (14540)
  a++ (14542)
  r=a 3 (14543)
  (         ifN t3 goto else_608) (14545)
  a== 0 (14545)
  jf 3 (14547)
  lj 14577 (14549)
  (                    852:       v[i] = 0x74) (14552)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14552)
  a=0 (14552)
  a-- (14553)
  a>>= 1 (14554)
  c=a (14556)
  a=r 0 (14557)
  a+= 5 (14559)
  d=a (14561)
  a=*d (14562)
  a&=c (14563)
  r=a 3 (14564)
  (         t3 = t3 + H[t0+4]〈i〉) (14566)
  d-- (14566)
  c=*d (14567)
  a+=c (14568)
  r=a 3 (14569)
  (         M[t3] = 116) (14571)
  c=a (14571)
  *c= 116 (14572)
  (         goto endif_609) (14574)
  lj 14623 (14574)
  (        :else_608:) (14577)
  (                    853:     elif id_ == 93:) (14577)
  (         t3 = H[t0+1]〈id_〉 == 93) (14577)
  c= 93 (14577)
  a=r 0 (14579)
  a++ (14581)
  d=a (14582)
  a=*d (14583)
  a==c (14584)
  a=0 (14585)
  jf 1 (14586)
  a++ (14588)
  r=a 3 (14589)
  (         ifN t3 goto else_611) (14591)
  a== 0 (14591)
  jf 3 (14593)
  lj 14623 (14595)
  (                    854:       v[i] = 0x73) (14598)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14598)
  a=0 (14598)
  a-- (14599)
  a>>= 1 (14600)
  c=a (14602)
  a=r 0 (14603)
  a+= 5 (14605)
  d=a (14607)
  a=*d (14608)
  a&=c (14609)
  r=a 3 (14610)
  (         t3 = t3 + H[t0+4]〈i〉) (14612)
  d-- (14612)
  c=*d (14613)
  a+=c (14614)
  r=a 3 (14615)
  (         M[t3] = 115) (14617)
  c=a (14617)
  *c= 115 (14618)
  (         goto endif_612) (14620)
  lj 14623 (14620)
  (        :else_611:) (14623)
  (        :endif_612:) (14623)
  (        :endif_609:) (14623)
  (        :endif_606:) (14623)
  (        :endif_603:) (14623)
  (        :endif_600:) (14623)
  (                    855:     i += 1) (14623)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (14623)
  a=r 0 (14623)
  a+= 4 (14625)
  d=a (14627)
  *d++ (14628)
  (                    856:     v[i] = 0x20) (14629)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14629)
  a=0 (14629)
  a-- (14630)
  a>>= 1 (14631)
  c=a (14633)
  d++ (14634)
  a=*d (14635)
  a&=c (14636)
  r=a 3 (14637)
  (         t3 = t3 + H[t0+4]〈i〉) (14639)
  d-- (14639)
  c=*d (14640)
  a+=c (14641)
  r=a 3 (14642)
  (         M[t3] = 32) (14644)
  c=a (14644)
  *c= 32 (14645)
  (         goto endif_562) (14647)
  lj 28969 (14647)
  (        :else_561:) (14650)
  (                    857:   elif id_ == 6 or id_ == 32:  # 1 vorne an) (14650)
  (         t4 = H[t0+1]〈id_〉 == 6) (14650)
  c= 6 (14650)
  a=r 0 (14652)
  a++ (14654)
  d=a (14655)
  a=*d (14656)
  a==c (14657)
  a=0 (14658)
  jf 1 (14659)
  a++ (14661)
  r=a 4 (14662)
  (         t5 = H[t0+1]〈id_〉 == 32) (14664)
  c= 32 (14664)
  a=*d (14666)
  a==c (14667)
  a=0 (14668)
  jf 1 (14669)
  a++ (14671)
  r=a 5 (14672)
  (         t3 = t4 or t5) (14674)
  c=a (14674)
  a=r 4 (14675)
  a== 0 (14677)
  jf 1 (14679)
  a=c (14681)
  r=a 3 (14682)
  (         ifN t3 goto else_615) (14684)
  a== 0 (14684)
  jf 3 (14686)
  lj 14932 (14688)
  (                    858:     v = alloc_pM〈l+1〉) (14691)
  (         t3 = H[t0+3]〈l〉 + 1) (14691)
  c= 1 (14691)
  a=r 0 (14693)
  a+= 3 (14695)
  d=a (14697)
  a=*d (14698)
  a+=c (14699)
  r=a 3 (14700)
  (         H[t0+10]〈〉 = t0) (14702)
  a=r 0 (14702)
  a+= 10 (14704)
  d=a (14706)
  a=r 0 (14707)
  *d=a (14709)
  (saved bsp, return id:) (14710)
  (         H[t0+11]〈〉 = 67) (14710)
  d++ (14710)
  *d= 67 (14711)
  (push arguments:) (14713)
  (         H[t0+12]〈〉 = t3) (14713)
  d++ (14713)
  a=r 3 (14714)
  *d=a (14716)
  (         t0 = t0 + 11) (14717)
  c= 11 (14717)
  a=r 0 (14719)
  a+=c (14721)
  r=a 0 (14722)
  (         goto addr_alloc_pM) (14724)
  lj 323 (14724)
  (        :return_id_67:) (14727)
  (         t4 = t1) (14727)
  a=r 1 (14727)
  r=a 4 (14729)
  (         t4 = t4 | 2147483648) (14731)
  a= 1 (14731)
  a<<= 31 (14733)
  c=a (14735)
  a=r 4 (14736)
  a|=c (14738)
  r=a 4 (14739)
  (         H[t0+5]〈v〉 = t4) (14741)
  a=r 0 (14741)
  a+= 5 (14743)
  d=a (14745)
  a=r 4 (14746)
  *d=a (14748)
  (                    859:     if id_ == 6:) (14749)
  (         t3 = H[t0+1]〈id_〉 == 6) (14749)
  c= 6 (14749)
  a=r 0 (14751)
  a++ (14753)
  d=a (14754)
  a=*d (14755)
  a==c (14756)
  a=0 (14757)
  jf 1 (14758)
  a++ (14760)
  r=a 3 (14761)
  (         ifN t3 goto else_618) (14763)
  a== 0 (14763)
  jf 3 (14765)
  lj 14795 (14767)
  (                    860:       v[i] = 0x20) (14770)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14770)
  a=0 (14770)
  a-- (14771)
  a>>= 1 (14772)
  c=a (14774)
  a=r 0 (14775)
  a+= 5 (14777)
  d=a (14779)
  a=*d (14780)
  a&=c (14781)
  r=a 3 (14782)
  (         t3 = t3 + H[t0+4]〈i〉) (14784)
  d-- (14784)
  c=*d (14785)
  a+=c (14786)
  r=a 3 (14787)
  (         M[t3] = 32) (14789)
  c=a (14789)
  *c= 32 (14790)
  (         goto endif_619) (14792)
  lj 14841 (14792)
  (        :else_618:) (14795)
  (                    861:     elif id_ == 32:) (14795)
  (         t3 = H[t0+1]〈id_〉 == 32) (14795)
  c= 32 (14795)
  a=r 0 (14797)
  a++ (14799)
  d=a (14800)
  a=*d (14801)
  a==c (14802)
  a=0 (14803)
  jf 1 (14804)
  a++ (14806)
  r=a 3 (14807)
  (         ifN t3 goto else_621) (14809)
  a== 0 (14809)
  jf 3 (14811)
  lj 14841 (14813)
  (                    862:       v[i] = 0x2e) (14816)
  (         t3 = H[t0+5]〈v〉 & 2147483647) (14816)
  a=0 (14816)
  a-- (14817)
  a>>= 1 (14818)
  c=a (14820)
  a=r 0 (14821)
  a+= 5 (14823)
  d=a (14825)
  a=*d (14826)
  a&=c (14827)
  r=a 3 (14828)
  (         t3 = t3 + H[t0+4]〈i〉) (14830)
  d-- (14830)
  c=*d (14831)
  a+=c (14832)
  r=a 3 (14833)
  (         M[t3] = 46) (14835)
  c=a (14835)
  *c= 46 (14836)
  (         goto endif_622) (14838)
  lj 14841 (14838)
  (        :else_621:) (14841)
  (        :endif_622:) (14841)
  (        :endif_619:) (14841)
  (                    863:     i += 1) (14841)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (14841)
  a=r 0 (14841)
  a+= 4 (14843)
  d=a (14845)
  *d++ (14846)
  (                    864:     while i <= l:) (14847)
  (        :while_623:) (14847)
  (         t3 = H[t0+4]〈i〉 <= H[t0+3]〈l〉) (14847)
  a=r 0 (14847)
  a+= 3 (14849)
  d=a (14851)
  c=*d (14852)
  d++ (14853)
  a=*d (14854)
  a==c (14855)
  jt 4 (14856)
  a<c (14858)
  a=0 (14859)
  jf 2 (14860)
  a= 1 (14862)
  r=a 3 (14864)
  (         ifN t3 goto whileend_625) (14866)
  a== 0 (14866)
  jf 3 (14868)
  lj 14929 (14870)
  (                    865:       v[i] = base_word[i-1]) (14873)
  (         t3 = H[t0+4]〈i〉 - 1) (14873)
  c= 1 (14873)
  a=*d (14875)
  a-=c (14876)
  r=a 3 (14877)
  (         t4 = H[t0+2]〈base_word〉 & 2147483647) (14879)
  a=0 (14879)
  a-- (14880)
  a>>= 1 (14881)
  c=a (14883)
  a=r 0 (14884)
  a+= 2 (14886)
  d=a (14888)
  a=*d (14889)
  a&=c (14890)
  r=a 4 (14891)
  (         t4 = t4 + t3) (14893)
  c=r 3 (14893)
  a+=c (14895)
  r=a 4 (14896)
  (         t4 = M[t4]) (14898)
  b=a (14898)
  a=*b (14899)
  r=a 4 (14900)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (14902)
  a=0 (14902)
  a-- (14903)
  a>>= 1 (14904)
  c=a (14906)
  a=r 0 (14907)
  a+= 5 (14909)
  d=a (14911)
  a=*d (14912)
  a&=c (14913)
  r=a 5 (14914)
  (         t5 = t5 + H[t0+4]〈i〉) (14916)
  d-- (14916)
  c=*d (14917)
  a+=c (14918)
  r=a 5 (14919)
  (         M[t5] = t4) (14921)
  c=a (14921)
  a=r 4 (14922)
  *c=a (14924)
  (                    866:       i += 1) (14925)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (14925)
  *d++ (14925)
  (         goto while_623) (14926)
  lj 14847 (14926)
  (        :whileend_625:) (14929)
  (         goto endif_616) (14929)
  lj 28969 (14929)
  (        :else_615:) (14932)
  (                    867:   elif id_ == 7 or id_ == 13 or id_ == 18:  # 2 vorne an 1 hinten an) (14932)
  (         t6 = H[t0+1]〈id_〉 == 7) (14932)
  c= 7 (14932)
  a=r 0 (14934)
  a++ (14936)
  d=a (14937)
  a=*d (14938)
  a==c (14939)
  a=0 (14940)
  jf 1 (14941)
  a++ (14943)
  r=a 6 (14944)
  (         t7 = H[t0+1]〈id_〉 == 13) (14946)
  c= 13 (14946)
  a=*d (14948)
  a==c (14949)
  a=0 (14950)
  jf 1 (14951)
  a++ (14953)
  r=a 7 (14954)
  (         t5 = t6 or t7) (14956)
  c=a (14956)
  a=r 6 (14957)
  a== 0 (14959)
  jf 1 (14961)
  a=c (14963)
  r=a 5 (14964)
  (         t6 = H[t0+1]〈id_〉 == 18) (14966)
  c= 18 (14966)
  a=*d (14968)
  a==c (14969)
  a=0 (14970)
  jf 1 (14971)
  a++ (14973)
  r=a 6 (14974)
  (         t4 = t5 or t6) (14976)
  c=a (14976)
  a=r 5 (14977)
  a== 0 (14979)
  jf 1 (14981)
  a=c (14983)
  r=a 4 (14984)
  (         ifN t4 goto else_630) (14986)
  a== 0 (14986)
  jf 3 (14988)
  lj 15323 (14990)
  (                    868:     v = alloc_pM〈l+3〉) (14993)
  (         t4 = H[t0+3]〈l〉 + 3) (14993)
  c= 3 (14993)
  a=r 0 (14995)
  a+= 3 (14997)
  d=a (14999)
  a=*d (15000)
  a+=c (15001)
  r=a 4 (15002)
  (         H[t0+11]〈〉 = t0) (15004)
  a=r 0 (15004)
  a+= 11 (15006)
  d=a (15008)
  a=r 0 (15009)
  *d=a (15011)
  (saved bsp, return id:) (15012)
  (         H[t0+12]〈〉 = 68) (15012)
  d++ (15012)
  *d= 68 (15013)
  (push arguments:) (15015)
  (         H[t0+13]〈〉 = t4) (15015)
  d++ (15015)
  a=r 4 (15016)
  *d=a (15018)
  (         t0 = t0 + 12) (15019)
  c= 12 (15019)
  a=r 0 (15021)
  a+=c (15023)
  r=a 0 (15024)
  (         goto addr_alloc_pM) (15026)
  lj 323 (15026)
  (        :return_id_68:) (15029)
  (         t5 = t1) (15029)
  a=r 1 (15029)
  r=a 5 (15031)
  (         t5 = t5 | 2147483648) (15033)
  a= 1 (15033)
  a<<= 31 (15035)
  c=a (15037)
  a=r 5 (15038)
  a|=c (15040)
  r=a 5 (15041)
  (         H[t0+5]〈v〉 = t5) (15043)
  a=r 0 (15043)
  a+= 5 (15045)
  d=a (15047)
  a=r 5 (15048)
  *d=a (15050)
  (                    869:     if id_ == 7:) (15051)
  (         t4 = H[t0+1]〈id_〉 == 7) (15051)
  c= 7 (15051)
  a=r 0 (15053)
  a++ (15055)
  d=a (15056)
  a=*d (15057)
  a==c (15058)
  a=0 (15059)
  jf 1 (15060)
  a++ (15062)
  r=a 4 (15063)
  (         ifN t4 goto else_633) (15065)
  a== 0 (15065)
  jf 3 (15067)
  lj 15097 (15069)
  (                    870:       v[i] = 0x73) (15072)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (15072)
  a=0 (15072)
  a-- (15073)
  a>>= 1 (15074)
  c=a (15076)
  a=r 0 (15077)
  a+= 5 (15079)
  d=a (15081)
  a=*d (15082)
  a&=c (15083)
  r=a 4 (15084)
  (         t4 = t4 + H[t0+4]〈i〉) (15086)
  d-- (15086)
  c=*d (15087)
  a+=c (15088)
  r=a 4 (15089)
  (         M[t4] = 115) (15091)
  c=a (15091)
  *c= 115 (15092)
  (         goto endif_634) (15094)
  lj 15189 (15094)
  (        :else_633:) (15097)
  (                    871:     elif id_ == 13:) (15097)
  (         t4 = H[t0+1]〈id_〉 == 13) (15097)
  c= 13 (15097)
  a=r 0 (15099)
  a++ (15101)
  d=a (15102)
  a=*d (15103)
  a==c (15104)
  a=0 (15105)
  jf 1 (15106)
  a++ (15108)
  r=a 4 (15109)
  (         ifN t4 goto else_636) (15111)
  a== 0 (15111)
  jf 3 (15113)
  lj 15143 (15115)
  (                    872:       v[i] = 0x2c) (15118)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (15118)
  a=0 (15118)
  a-- (15119)
  a>>= 1 (15120)
  c=a (15122)
  a=r 0 (15123)
  a+= 5 (15125)
  d=a (15127)
  a=*d (15128)
  a&=c (15129)
  r=a 4 (15130)
  (         t4 = t4 + H[t0+4]〈i〉) (15132)
  d-- (15132)
  c=*d (15133)
  a+=c (15134)
  r=a 4 (15135)
  (         M[t4] = 44) (15137)
  c=a (15137)
  *c= 44 (15138)
  (         goto endif_637) (15140)
  lj 15189 (15140)
  (        :else_636:) (15143)
  (                    873:     elif id_ == 18:) (15143)
  (         t4 = H[t0+1]〈id_〉 == 18) (15143)
  c= 18 (15143)
  a=r 0 (15145)
  a++ (15147)
  d=a (15148)
  a=*d (15149)
  a==c (15150)
  a=0 (15151)
  jf 1 (15152)
  a++ (15154)
  r=a 4 (15155)
  (         ifN t4 goto else_639) (15157)
  a== 0 (15157)
  jf 3 (15159)
  lj 15189 (15161)
  (                    874:       v[i] = 0x65) (15164)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (15164)
  a=0 (15164)
  a-- (15165)
  a>>= 1 (15166)
  c=a (15168)
  a=r 0 (15169)
  a+= 5 (15171)
  d=a (15173)
  a=*d (15174)
  a&=c (15175)
  r=a 4 (15176)
  (         t4 = t4 + H[t0+4]〈i〉) (15178)
  d-- (15178)
  c=*d (15179)
  a+=c (15180)
  r=a 4 (15181)
  (         M[t4] = 101) (15183)
  c=a (15183)
  *c= 101 (15184)
  (         goto endif_640) (15186)
  lj 15189 (15186)
  (        :else_639:) (15189)
  (        :endif_640:) (15189)
  (        :endif_637:) (15189)
  (        :endif_634:) (15189)
  (                    875:     i += 1) (15189)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (15189)
  a=r 0 (15189)
  a+= 4 (15191)
  d=a (15193)
  *d++ (15194)
  (                    876:     v[i] = 0x20) (15195)
  (         t4 = H[t0+5]〈v〉 & 2147483647) (15195)
  a=0 (15195)
  a-- (15196)
  a>>= 1 (15197)
  c=a (15199)
  d++ (15200)
  a=*d (15201)
  a&=c (15202)
  r=a 4 (15203)
  (         t4 = t4 + H[t0+4]〈i〉) (15205)
  d-- (15205)
  c=*d (15206)
  a+=c (15207)
  r=a 4 (15208)
  (         M[t4] = 32) (15210)
  c=a (15210)
  *c= 32 (15211)
  (                    877:     i += 1) (15213)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (15213)
  *d++ (15213)
  (                    878:     l += 1) (15214)
  (         H[t0+3]〈l〉 = H[t0+3]〈l〉 + 1) (15214)
  d-- (15214)
  *d++ (15215)
  (                    879:     while i <= l:) (15216)
  (        :while_641:) (15216)
  (         t4 = H[t0+4]〈i〉 <= H[t0+3]〈l〉) (15216)
  a=r 0 (15216)
  a+= 3 (15218)
  d=a (15220)
  c=*d (15221)
  d++ (15222)
  a=*d (15223)
  a==c (15224)
  jt 4 (15225)
  a<c (15227)
  a=0 (15228)
  jf 2 (15229)
  a= 1 (15231)
  r=a 4 (15233)
  (         ifN t4 goto whileend_643) (15235)
  a== 0 (15235)
  jf 3 (15237)
  lj 15298 (15239)
  (                    880:       v[i] = base_word[i-2]) (15242)
  (         t4 = H[t0+4]〈i〉 - 2) (15242)
  c= 2 (15242)
  a=*d (15244)
  a-=c (15245)
  r=a 4 (15246)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (15248)
  a=0 (15248)
  a-- (15249)
  a>>= 1 (15250)
  c=a (15252)
  a=r 0 (15253)
  a+= 2 (15255)
  d=a (15257)
  a=*d (15258)
  a&=c (15259)
  r=a 5 (15260)
  (         t5 = t5 + t4) (15262)
  c=r 4 (15262)
  a+=c (15264)
  r=a 5 (15265)
  (         t5 = M[t5]) (15267)
  b=a (15267)
  a=*b (15268)
  r=a 5 (15269)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (15271)
  a=0 (15271)
  a-- (15272)
  a>>= 1 (15273)
  c=a (15275)
  a=r 0 (15276)
  a+= 5 (15278)
  d=a (15280)
  a=*d (15281)
  a&=c (15282)
  r=a 6 (15283)
  (         t6 = t6 + H[t0+4]〈i〉) (15285)
  d-- (15285)
  c=*d (15286)
  a+=c (15287)
  r=a 6 (15288)
  (         M[t6] = t5) (15290)
  c=a (15290)
  a=r 5 (15291)
  *c=a (15293)
  (                    881:       i += 1) (15294)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (15294)
  *d++ (15294)
  (         goto while_641) (15295)
  lj 15216 (15295)
  (        :whileend_643:) (15298)
  (                    882:     v[i] = 0x20) (15298)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15298)
  a=0 (15298)
  a-- (15299)
  a>>= 1 (15300)
  c=a (15302)
  a=r 0 (15303)
  a+= 5 (15305)
  d=a (15307)
  a=*d (15308)
  a&=c (15309)
  r=a 5 (15310)
  (         t5 = t5 + H[t0+4]〈i〉) (15312)
  d-- (15312)
  c=*d (15313)
  a+=c (15314)
  r=a 5 (15315)
  (         M[t5] = 32) (15317)
  c=a (15317)
  *c= 32 (15318)
  (         goto endif_631) (15320)
  lj 28969 (15320)
  (        :else_630:) (15323)
  (                    883:   elif id_ == 8 or id_ == 16 or id_ == 17 or id_ == 38 or id_ == 45 or id_ == 46 or id_ == 47 or id_ == 60 or id_ == 90 or id_ == 92 or id_ == 95 or id_ == 100 or id_ == 106:  # 4 hinten an) (15323)
  (         t17 = H[t0+1]〈id_〉 == 8) (15323)
  c= 8 (15323)
  a=r 0 (15325)
  a++ (15327)
  d=a (15328)
  a=*d (15329)
  a==c (15330)
  a=0 (15331)
  jf 1 (15332)
  a++ (15334)
  r=a 17 (15335)
  (         t18 = H[t0+1]〈id_〉 == 16) (15337)
  c= 16 (15337)
  a=*d (15339)
  a==c (15340)
  a=0 (15341)
  jf 1 (15342)
  a++ (15344)
  r=a 18 (15345)
  (         t16 = t17 or t18) (15347)
  c=a (15347)
  a=r 17 (15348)
  a== 0 (15350)
  jf 1 (15352)
  a=c (15354)
  r=a 16 (15355)
  (         t17 = H[t0+1]〈id_〉 == 17) (15357)
  c= 17 (15357)
  a=*d (15359)
  a==c (15360)
  a=0 (15361)
  jf 1 (15362)
  a++ (15364)
  r=a 17 (15365)
  (         t15 = t16 or t17) (15367)
  c=a (15367)
  a=r 16 (15368)
  a== 0 (15370)
  jf 1 (15372)
  a=c (15374)
  r=a 15 (15375)
  (         t16 = H[t0+1]〈id_〉 == 38) (15377)
  c= 38 (15377)
  a=*d (15379)
  a==c (15380)
  a=0 (15381)
  jf 1 (15382)
  a++ (15384)
  r=a 16 (15385)
  (         t14 = t15 or t16) (15387)
  c=a (15387)
  a=r 15 (15388)
  a== 0 (15390)
  jf 1 (15392)
  a=c (15394)
  r=a 14 (15395)
  (         t15 = H[t0+1]〈id_〉 == 45) (15397)
  c= 45 (15397)
  a=*d (15399)
  a==c (15400)
  a=0 (15401)
  jf 1 (15402)
  a++ (15404)
  r=a 15 (15405)
  (         t13 = t14 or t15) (15407)
  c=a (15407)
  a=r 14 (15408)
  a== 0 (15410)
  jf 1 (15412)
  a=c (15414)
  r=a 13 (15415)
  (         t14 = H[t0+1]〈id_〉 == 46) (15417)
  c= 46 (15417)
  a=*d (15419)
  a==c (15420)
  a=0 (15421)
  jf 1 (15422)
  a++ (15424)
  r=a 14 (15425)
  (         t12 = t13 or t14) (15427)
  c=a (15427)
  a=r 13 (15428)
  a== 0 (15430)
  jf 1 (15432)
  a=c (15434)
  r=a 12 (15435)
  (         t13 = H[t0+1]〈id_〉 == 47) (15437)
  c= 47 (15437)
  a=*d (15439)
  a==c (15440)
  a=0 (15441)
  jf 1 (15442)
  a++ (15444)
  r=a 13 (15445)
  (         t11 = t12 or t13) (15447)
  c=a (15447)
  a=r 12 (15448)
  a== 0 (15450)
  jf 1 (15452)
  a=c (15454)
  r=a 11 (15455)
  (         t12 = H[t0+1]〈id_〉 == 60) (15457)
  c= 60 (15457)
  a=*d (15459)
  a==c (15460)
  a=0 (15461)
  jf 1 (15462)
  a++ (15464)
  r=a 12 (15465)
  (         t10 = t11 or t12) (15467)
  c=a (15467)
  a=r 11 (15468)
  a== 0 (15470)
  jf 1 (15472)
  a=c (15474)
  r=a 10 (15475)
  (         t11 = H[t0+1]〈id_〉 == 90) (15477)
  c= 90 (15477)
  a=*d (15479)
  a==c (15480)
  a=0 (15481)
  jf 1 (15482)
  a++ (15484)
  r=a 11 (15485)
  (         t9 = t10 or t11) (15487)
  c=a (15487)
  a=r 10 (15488)
  a== 0 (15490)
  jf 1 (15492)
  a=c (15494)
  r=a 9 (15495)
  (         t10 = H[t0+1]〈id_〉 == 92) (15497)
  c= 92 (15497)
  a=*d (15499)
  a==c (15500)
  a=0 (15501)
  jf 1 (15502)
  a++ (15504)
  r=a 10 (15505)
  (         t8 = t9 or t10) (15507)
  c=a (15507)
  a=r 9 (15508)
  a== 0 (15510)
  jf 1 (15512)
  a=c (15514)
  r=a 8 (15515)
  (         t9 = H[t0+1]〈id_〉 == 95) (15517)
  c= 95 (15517)
  a=*d (15519)
  a==c (15520)
  a=0 (15521)
  jf 1 (15522)
  a++ (15524)
  r=a 9 (15525)
  (         t7 = t8 or t9) (15527)
  c=a (15527)
  a=r 8 (15528)
  a== 0 (15530)
  jf 1 (15532)
  a=c (15534)
  r=a 7 (15535)
  (         t8 = H[t0+1]〈id_〉 == 100) (15537)
  c= 100 (15537)
  a=*d (15539)
  a==c (15540)
  a=0 (15541)
  jf 1 (15542)
  a++ (15544)
  r=a 8 (15545)
  (         t6 = t7 or t8) (15547)
  c=a (15547)
  a=r 7 (15548)
  a== 0 (15550)
  jf 1 (15552)
  a=c (15554)
  r=a 6 (15555)
  (         t7 = H[t0+1]〈id_〉 == 106) (15557)
  c= 106 (15557)
  a=*d (15559)
  a==c (15560)
  a=0 (15561)
  jf 1 (15562)
  a++ (15564)
  r=a 7 (15565)
  (         t5 = t6 or t7) (15567)
  c=a (15567)
  a=r 6 (15568)
  a== 0 (15570)
  jf 1 (15572)
  a=c (15574)
  r=a 5 (15575)
  (         ifN t5 goto else_658) (15577)
  a== 0 (15577)
  jf 3 (15579)
  lj 17021 (15581)
  (                    884:     v = alloc_pM〈l+4〉) (15584)
  (         t5 = H[t0+3]〈l〉 + 4) (15584)
  c= 4 (15584)
  a=r 0 (15586)
  a+= 3 (15588)
  d=a (15590)
  a=*d (15591)
  a+=c (15592)
  r=a 5 (15593)
  (         H[t0+12]〈〉 = t0) (15595)
  a=r 0 (15595)
  a+= 12 (15597)
  d=a (15599)
  a=r 0 (15600)
  *d=a (15602)
  (saved bsp, return id:) (15603)
  (         H[t0+13]〈〉 = 69) (15603)
  d++ (15603)
  *d= 69 (15604)
  (push arguments:) (15606)
  (         H[t0+14]〈〉 = t5) (15606)
  d++ (15606)
  a=r 5 (15607)
  *d=a (15609)
  (         t0 = t0 + 13) (15610)
  c= 13 (15610)
  a=r 0 (15612)
  a+=c (15614)
  r=a 0 (15615)
  (         goto addr_alloc_pM) (15617)
  lj 323 (15617)
  (        :return_id_69:) (15620)
  (         t6 = t1) (15620)
  a=r 1 (15620)
  r=a 6 (15622)
  (         t6 = t6 | 2147483648) (15624)
  a= 1 (15624)
  a<<= 31 (15626)
  c=a (15628)
  a=r 6 (15629)
  a|=c (15631)
  r=a 6 (15632)
  (         H[t0+5]〈v〉 = t6) (15634)
  a=r 0 (15634)
  a+= 5 (15636)
  d=a (15638)
  a=r 6 (15639)
  *d=a (15641)
  (                    885:     while i < l:) (15642)
  (        :while_660:) (15642)
  (         t5 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (15642)
  a=r 0 (15642)
  a+= 3 (15644)
  d=a (15646)
  c=*d (15647)
  d++ (15648)
  a=*d (15649)
  a<c (15650)
  a=0 (15651)
  jf 1 (15652)
  a++ (15654)
  r=a 5 (15655)
  (         ifN t5 goto whileend_662) (15657)
  a== 0 (15657)
  jf 3 (15659)
  lj 15716 (15661)
  (                    886:       v[i] = base_word[i]) (15664)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (15664)
  a=0 (15664)
  a-- (15665)
  a>>= 1 (15666)
  c=a (15668)
  a=r 0 (15669)
  a+= 2 (15671)
  d=a (15673)
  a=*d (15674)
  a&=c (15675)
  r=a 5 (15676)
  (         t5 = t5 + H[t0+4]〈i〉) (15678)
  a=r 0 (15678)
  a+= 4 (15680)
  d=a (15682)
  c=*d (15683)
  a=r 5 (15684)
  a+=c (15686)
  r=a 5 (15687)
  (         t5 = M[t5]) (15689)
  b=a (15689)
  a=*b (15690)
  r=a 5 (15691)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (15693)
  a=0 (15693)
  a-- (15694)
  a>>= 1 (15695)
  c=a (15697)
  d++ (15698)
  a=*d (15699)
  a&=c (15700)
  r=a 6 (15701)
  (         t6 = t6 + H[t0+4]〈i〉) (15703)
  d-- (15703)
  c=*d (15704)
  a+=c (15705)
  r=a 6 (15706)
  (         M[t6] = t5) (15708)
  c=a (15708)
  a=r 5 (15709)
  *c=a (15711)
  (                    887:       i += 1) (15712)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (15712)
  *d++ (15712)
  (         goto while_660) (15713)
  lj 15642 (15713)
  (        :whileend_662:) (15716)
  (                    888:     if id_ == 90:) (15716)
  (         t5 = H[t0+1]〈id_〉 == 90) (15716)
  c= 90 (15716)
  a=r 0 (15718)
  a++ (15720)
  d=a (15721)
  a=*d (15722)
  a==c (15723)
  a=0 (15724)
  jf 1 (15725)
  a++ (15727)
  r=a 5 (15728)
  (         ifN t5 goto else_665) (15730)
  a== 0 (15730)
  jf 3 (15732)
  lj 15762 (15734)
  (                    889:       v[i] = 0x66) (15737)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15737)
  a=0 (15737)
  a-- (15738)
  a>>= 1 (15739)
  c=a (15741)
  a=r 0 (15742)
  a+= 5 (15744)
  d=a (15746)
  a=*d (15747)
  a&=c (15748)
  r=a 5 (15749)
  (         t5 = t5 + H[t0+4]〈i〉) (15751)
  d-- (15751)
  c=*d (15752)
  a+=c (15753)
  r=a 5 (15754)
  (         M[t5] = 102) (15756)
  c=a (15756)
  *c= 102 (15757)
  (         goto endif_666) (15759)
  lj 15942 (15759)
  (        :else_665:) (15762)
  (                    890:     elif id_ == 92 or id_ == 100:) (15762)
  (         t6 = H[t0+1]〈id_〉 == 92) (15762)
  c= 92 (15762)
  a=r 0 (15764)
  a++ (15766)
  d=a (15767)
  a=*d (15768)
  a==c (15769)
  a=0 (15770)
  jf 1 (15771)
  a++ (15773)
  r=a 6 (15774)
  (         t7 = H[t0+1]〈id_〉 == 100) (15776)
  c= 100 (15776)
  a=*d (15778)
  a==c (15779)
  a=0 (15780)
  jf 1 (15781)
  a++ (15783)
  r=a 7 (15784)
  (         t5 = t6 or t7) (15786)
  c=a (15786)
  a=r 6 (15787)
  a== 0 (15789)
  jf 1 (15791)
  a=c (15793)
  r=a 5 (15794)
  (         ifN t5 goto else_669) (15796)
  a== 0 (15796)
  jf 3 (15798)
  lj 15828 (15800)
  (                    891:       v[i] = 0x69) (15803)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15803)
  a=0 (15803)
  a-- (15804)
  a>>= 1 (15805)
  c=a (15807)
  a=r 0 (15808)
  a+= 5 (15810)
  d=a (15812)
  a=*d (15813)
  a&=c (15814)
  r=a 5 (15815)
  (         t5 = t5 + H[t0+4]〈i〉) (15817)
  d-- (15817)
  c=*d (15818)
  a+=c (15819)
  r=a 5 (15820)
  (         M[t5] = 105) (15822)
  c=a (15822)
  *c= 105 (15823)
  (         goto endif_670) (15825)
  lj 15942 (15825)
  (        :else_669:) (15828)
  (                    892:     elif id_ == 95:) (15828)
  (         t5 = H[t0+1]〈id_〉 == 95) (15828)
  c= 95 (15828)
  a=r 0 (15830)
  a++ (15832)
  d=a (15833)
  a=*d (15834)
  a==c (15835)
  a=0 (15836)
  jf 1 (15837)
  a++ (15839)
  r=a 5 (15840)
  (         ifN t5 goto else_672) (15842)
  a== 0 (15842)
  jf 3 (15844)
  lj 15874 (15846)
  (                    893:       v[i] = 0x65) (15849)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15849)
  a=0 (15849)
  a-- (15850)
  a>>= 1 (15851)
  c=a (15853)
  a=r 0 (15854)
  a+= 5 (15856)
  d=a (15858)
  a=*d (15859)
  a&=c (15860)
  r=a 5 (15861)
  (         t5 = t5 + H[t0+4]〈i〉) (15863)
  d-- (15863)
  c=*d (15864)
  a+=c (15865)
  r=a 5 (15866)
  (         M[t5] = 101) (15868)
  c=a (15868)
  *c= 101 (15869)
  (         goto endif_673) (15871)
  lj 15942 (15871)
  (        :else_672:) (15874)
  (                    894:     elif id_ == 106:) (15874)
  (         t5 = H[t0+1]〈id_〉 == 106) (15874)
  c= 106 (15874)
  a=r 0 (15876)
  a++ (15878)
  d=a (15879)
  a=*d (15880)
  a==c (15881)
  a=0 (15882)
  jf 1 (15883)
  a++ (15885)
  r=a 5 (15886)
  (         ifN t5 goto else_675) (15888)
  a== 0 (15888)
  jf 3 (15890)
  lj 15920 (15892)
  (                    895:       v[i] = 0x6f) (15895)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15895)
  a=0 (15895)
  a-- (15896)
  a>>= 1 (15897)
  c=a (15899)
  a=r 0 (15900)
  a+= 5 (15902)
  d=a (15904)
  a=*d (15905)
  a&=c (15906)
  r=a 5 (15907)
  (         t5 = t5 + H[t0+4]〈i〉) (15909)
  d-- (15909)
  c=*d (15910)
  a+=c (15911)
  r=a 5 (15912)
  (         M[t5] = 111) (15914)
  c=a (15914)
  *c= 111 (15915)
  (         goto endif_676) (15917)
  lj 15942 (15917)
  (        :else_675:) (15920)
  (                    897:       v[i] = 0x20) (15920)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15920)
  a=0 (15920)
  a-- (15921)
  a>>= 1 (15922)
  c=a (15924)
  a=r 0 (15925)
  a+= 5 (15927)
  d=a (15929)
  a=*d (15930)
  a&=c (15931)
  r=a 5 (15932)
  (         t5 = t5 + H[t0+4]〈i〉) (15934)
  d-- (15934)
  c=*d (15935)
  a+=c (15936)
  r=a 5 (15937)
  (         M[t5] = 32) (15939)
  c=a (15939)
  *c= 32 (15940)
  (        :endif_676:) (15942)
  (        :endif_673:) (15942)
  (        :endif_670:) (15942)
  (        :endif_666:) (15942)
  (                    898:     i += 1) (15942)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (15942)
  a=r 0 (15942)
  a+= 4 (15944)
  d=a (15946)
  *d++ (15947)
  (                    899:     if id_ == 8:) (15948)
  (         t5 = H[t0+1]〈id_〉 == 8) (15948)
  c= 8 (15948)
  a=r 0 (15950)
  a++ (15952)
  d=a (15953)
  a=*d (15954)
  a==c (15955)
  a=0 (15956)
  jf 1 (15957)
  a++ (15959)
  r=a 5 (15960)
  (         ifN t5 goto else_678) (15962)
  a== 0 (15962)
  jf 3 (15964)
  lj 15994 (15966)
  (                    900:       v[i] = 0x6f) (15969)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (15969)
  a=0 (15969)
  a-- (15970)
  a>>= 1 (15971)
  c=a (15973)
  a=r 0 (15974)
  a+= 5 (15976)
  d=a (15978)
  a=*d (15979)
  a&=c (15980)
  r=a 5 (15981)
  (         t5 = t5 + H[t0+4]〈i〉) (15983)
  d-- (15983)
  c=*d (15984)
  a+=c (15985)
  r=a 5 (15986)
  (         M[t5] = 111) (15988)
  c=a (15988)
  *c= 111 (15989)
  (         goto endif_679) (15991)
  lj 16494 (15991)
  (        :else_678:) (15994)
  (                    901:     elif id_ == 16:) (15994)
  (         t5 = H[t0+1]〈id_〉 == 16) (15994)
  c= 16 (15994)
  a=r 0 (15996)
  a++ (15998)
  d=a (15999)
  a=*d (16000)
  a==c (16001)
  a=0 (16002)
  jf 1 (16003)
  a++ (16005)
  r=a 5 (16006)
  (         ifN t5 goto else_681) (16008)
  a== 0 (16008)
  jf 3 (16010)
  lj 16040 (16012)
  (                    902:       v[i] = 0x69) (16015)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16015)
  a=0 (16015)
  a-- (16016)
  a>>= 1 (16017)
  c=a (16019)
  a=r 0 (16020)
  a+= 5 (16022)
  d=a (16024)
  a=*d (16025)
  a&=c (16026)
  r=a 5 (16027)
  (         t5 = t5 + H[t0+4]〈i〉) (16029)
  d-- (16029)
  c=*d (16030)
  a+=c (16031)
  r=a 5 (16032)
  (         M[t5] = 105) (16034)
  c=a (16034)
  *c= 105 (16035)
  (         goto endif_682) (16037)
  lj 16494 (16037)
  (        :else_681:) (16040)
  (                    903:     elif id_ == 17:) (16040)
  (         t5 = H[t0+1]〈id_〉 == 17) (16040)
  c= 17 (16040)
  a=r 0 (16042)
  a++ (16044)
  d=a (16045)
  a=*d (16046)
  a==c (16047)
  a=0 (16048)
  jf 1 (16049)
  a++ (16051)
  r=a 5 (16052)
  (         ifN t5 goto else_684) (16054)
  a== 0 (16054)
  jf 3 (16056)
  lj 16086 (16058)
  (                    904:       v[i] = 0x74) (16061)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16061)
  a=0 (16061)
  a-- (16062)
  a>>= 1 (16063)
  c=a (16065)
  a=r 0 (16066)
  a+= 5 (16068)
  d=a (16070)
  a=*d (16071)
  a&=c (16072)
  r=a 5 (16073)
  (         t5 = t5 + H[t0+4]〈i〉) (16075)
  d-- (16075)
  c=*d (16076)
  a+=c (16077)
  r=a 5 (16078)
  (         M[t5] = 116) (16080)
  c=a (16080)
  *c= 116 (16081)
  (         goto endif_685) (16083)
  lj 16494 (16083)
  (        :else_684:) (16086)
  (                    905:     elif id_ == 38:) (16086)
  (         t5 = H[t0+1]〈id_〉 == 38) (16086)
  c= 38 (16086)
  a=r 0 (16088)
  a++ (16090)
  d=a (16091)
  a=*d (16092)
  a==c (16093)
  a=0 (16094)
  jf 1 (16095)
  a++ (16097)
  r=a 5 (16098)
  (         ifN t5 goto else_687) (16100)
  a== 0 (16100)
  jf 3 (16102)
  lj 16132 (16104)
  (                    906:       v[i] = 0x62) (16107)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16107)
  a=0 (16107)
  a-- (16108)
  a>>= 1 (16109)
  c=a (16111)
  a=r 0 (16112)
  a+= 5 (16114)
  d=a (16116)
  a=*d (16117)
  a&=c (16118)
  r=a 5 (16119)
  (         t5 = t5 + H[t0+4]〈i〉) (16121)
  d-- (16121)
  c=*d (16122)
  a+=c (16123)
  r=a 5 (16124)
  (         M[t5] = 98) (16126)
  c=a (16126)
  *c= 98 (16127)
  (         goto endif_688) (16129)
  lj 16494 (16129)
  (        :else_687:) (16132)
  (                    907:     elif id_ == 45:) (16132)
  (         t5 = H[t0+1]〈id_〉 == 45) (16132)
  c= 45 (16132)
  a=r 0 (16134)
  a++ (16136)
  d=a (16137)
  a=*d (16138)
  a==c (16139)
  a=0 (16140)
  jf 1 (16141)
  a++ (16143)
  r=a 5 (16144)
  (         ifN t5 goto else_690) (16146)
  a== 0 (16146)
  jf 3 (16148)
  lj 16178 (16150)
  (                    908:       v[i] = 0x6f) (16153)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16153)
  a=0 (16153)
  a-- (16154)
  a>>= 1 (16155)
  c=a (16157)
  a=r 0 (16158)
  a+= 5 (16160)
  d=a (16162)
  a=*d (16163)
  a&=c (16164)
  r=a 5 (16165)
  (         t5 = t5 + H[t0+4]〈i〉) (16167)
  d-- (16167)
  c=*d (16168)
  a+=c (16169)
  r=a 5 (16170)
  (         M[t5] = 111) (16172)
  c=a (16172)
  *c= 111 (16173)
  (         goto endif_691) (16175)
  lj 16494 (16175)
  (        :else_690:) (16178)
  (                    909:     elif id_ == 46 or id_ == 60:) (16178)
  (         t6 = H[t0+1]〈id_〉 == 46) (16178)
  c= 46 (16178)
  a=r 0 (16180)
  a++ (16182)
  d=a (16183)
  a=*d (16184)
  a==c (16185)
  a=0 (16186)
  jf 1 (16187)
  a++ (16189)
  r=a 6 (16190)
  (         t7 = H[t0+1]〈id_〉 == 60) (16192)
  c= 60 (16192)
  a=*d (16194)
  a==c (16195)
  a=0 (16196)
  jf 1 (16197)
  a++ (16199)
  r=a 7 (16200)
  (         t5 = t6 or t7) (16202)
  c=a (16202)
  a=r 6 (16203)
  a== 0 (16205)
  jf 1 (16207)
  a=c (16209)
  r=a 5 (16210)
  (         ifN t5 goto else_694) (16212)
  a== 0 (16212)
  jf 3 (16214)
  lj 16244 (16216)
  (                    910:       v[i] = 0x61) (16219)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16219)
  a=0 (16219)
  a-- (16220)
  a>>= 1 (16221)
  c=a (16223)
  a=r 0 (16224)
  a+= 5 (16226)
  d=a (16228)
  a=*d (16229)
  a&=c (16230)
  r=a 5 (16231)
  (         t5 = t5 + H[t0+4]〈i〉) (16233)
  d-- (16233)
  c=*d (16234)
  a+=c (16235)
  r=a 5 (16236)
  (         M[t5] = 97) (16238)
  c=a (16238)
  *c= 97 (16239)
  (         goto endif_695) (16241)
  lj 16494 (16241)
  (        :else_694:) (16244)
  (                    911:     elif id_ == 47:) (16244)
  (         t5 = H[t0+1]〈id_〉 == 47) (16244)
  c= 47 (16244)
  a=r 0 (16246)
  a++ (16248)
  d=a (16249)
  a=*d (16250)
  a==c (16251)
  a=0 (16252)
  jf 1 (16253)
  a++ (16255)
  r=a 5 (16256)
  (         ifN t5 goto else_697) (16258)
  a== 0 (16258)
  jf 3 (16260)
  lj 16290 (16262)
  (                    912:       v[i] = 0x69) (16265)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16265)
  a=0 (16265)
  a-- (16266)
  a>>= 1 (16267)
  c=a (16269)
  a=r 0 (16270)
  a+= 5 (16272)
  d=a (16274)
  a=*d (16275)
  a&=c (16276)
  r=a 5 (16277)
  (         t5 = t5 + H[t0+4]〈i〉) (16279)
  d-- (16279)
  c=*d (16280)
  a+=c (16281)
  r=a 5 (16282)
  (         M[t5] = 105) (16284)
  c=a (16284)
  *c= 105 (16285)
  (         goto endif_698) (16287)
  lj 16494 (16287)
  (        :else_697:) (16290)
  (                    913:     elif id_ == 90 or id_ == 106:) (16290)
  (         t6 = H[t0+1]〈id_〉 == 90) (16290)
  c= 90 (16290)
  a=r 0 (16292)
  a++ (16294)
  d=a (16295)
  a=*d (16296)
  a==c (16297)
  a=0 (16298)
  jf 1 (16299)
  a++ (16301)
  r=a 6 (16302)
  (         t7 = H[t0+1]〈id_〉 == 106) (16304)
  c= 106 (16304)
  a=*d (16306)
  a==c (16307)
  a=0 (16308)
  jf 1 (16309)
  a++ (16311)
  r=a 7 (16312)
  (         t5 = t6 or t7) (16314)
  c=a (16314)
  a=r 6 (16315)
  a== 0 (16317)
  jf 1 (16319)
  a=c (16321)
  r=a 5 (16322)
  (         ifN t5 goto else_701) (16324)
  a== 0 (16324)
  jf 3 (16326)
  lj 16356 (16328)
  (                    914:       v[i] = 0x75) (16331)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16331)
  a=0 (16331)
  a-- (16332)
  a>>= 1 (16333)
  c=a (16335)
  a=r 0 (16336)
  a+= 5 (16338)
  d=a (16340)
  a=*d (16341)
  a&=c (16342)
  r=a 5 (16343)
  (         t5 = t5 + H[t0+4]〈i〉) (16345)
  d-- (16345)
  c=*d (16346)
  a+=c (16347)
  r=a 5 (16348)
  (         M[t5] = 117) (16350)
  c=a (16350)
  *c= 117 (16351)
  (         goto endif_702) (16353)
  lj 16494 (16353)
  (        :else_701:) (16356)
  (                    915:     elif id_ == 92:) (16356)
  (         t5 = H[t0+1]〈id_〉 == 92) (16356)
  c= 92 (16356)
  a=r 0 (16358)
  a++ (16360)
  d=a (16361)
  a=*d (16362)
  a==c (16363)
  a=0 (16364)
  jf 1 (16365)
  a++ (16367)
  r=a 5 (16368)
  (         ifN t5 goto else_704) (16370)
  a== 0 (16370)
  jf 3 (16372)
  lj 16402 (16374)
  (                    916:       v[i] = 0x76) (16377)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16377)
  a=0 (16377)
  a-- (16378)
  a>>= 1 (16379)
  c=a (16381)
  a=r 0 (16382)
  a+= 5 (16384)
  d=a (16386)
  a=*d (16387)
  a&=c (16388)
  r=a 5 (16389)
  (         t5 = t5 + H[t0+4]〈i〉) (16391)
  d-- (16391)
  c=*d (16392)
  a+=c (16393)
  r=a 5 (16394)
  (         M[t5] = 118) (16396)
  c=a (16396)
  *c= 118 (16397)
  (         goto endif_705) (16399)
  lj 16494 (16399)
  (        :else_704:) (16402)
  (                    917:     elif id_ == 95:) (16402)
  (         t5 = H[t0+1]〈id_〉 == 95) (16402)
  c= 95 (16402)
  a=r 0 (16404)
  a++ (16406)
  d=a (16407)
  a=*d (16408)
  a==c (16409)
  a=0 (16410)
  jf 1 (16411)
  a++ (16413)
  r=a 5 (16414)
  (         ifN t5 goto else_707) (16416)
  a== 0 (16416)
  jf 3 (16418)
  lj 16448 (16420)
  (                    918:       v[i] = 0x73) (16423)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16423)
  a=0 (16423)
  a-- (16424)
  a>>= 1 (16425)
  c=a (16427)
  a=r 0 (16428)
  a+= 5 (16430)
  d=a (16432)
  a=*d (16433)
  a&=c (16434)
  r=a 5 (16435)
  (         t5 = t5 + H[t0+4]〈i〉) (16437)
  d-- (16437)
  c=*d (16438)
  a+=c (16439)
  r=a 5 (16440)
  (         M[t5] = 115) (16442)
  c=a (16442)
  *c= 115 (16443)
  (         goto endif_708) (16445)
  lj 16494 (16445)
  (        :else_707:) (16448)
  (                    919:     elif id_ == 100:) (16448)
  (         t5 = H[t0+1]〈id_〉 == 100) (16448)
  c= 100 (16448)
  a=r 0 (16450)
  a++ (16452)
  d=a (16453)
  a=*d (16454)
  a==c (16455)
  a=0 (16456)
  jf 1 (16457)
  a++ (16459)
  r=a 5 (16460)
  (         ifN t5 goto else_710) (16462)
  a== 0 (16462)
  jf 3 (16464)
  lj 16494 (16466)
  (                    920:       v[i] = 0x7a) (16469)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16469)
  a=0 (16469)
  a-- (16470)
  a>>= 1 (16471)
  c=a (16473)
  a=r 0 (16474)
  a+= 5 (16476)
  d=a (16478)
  a=*d (16479)
  a&=c (16480)
  r=a 5 (16481)
  (         t5 = t5 + H[t0+4]〈i〉) (16483)
  d-- (16483)
  c=*d (16484)
  a+=c (16485)
  r=a 5 (16486)
  (         M[t5] = 122) (16488)
  c=a (16488)
  *c= 122 (16489)
  (         goto endif_711) (16491)
  lj 16494 (16491)
  (        :else_710:) (16494)
  (        :endif_711:) (16494)
  (        :endif_708:) (16494)
  (        :endif_705:) (16494)
  (        :endif_702:) (16494)
  (        :endif_698:) (16494)
  (        :endif_695:) (16494)
  (        :endif_691:) (16494)
  (        :endif_688:) (16494)
  (        :endif_685:) (16494)
  (        :endif_682:) (16494)
  (        :endif_679:) (16494)
  (                    921:     i += 1) (16494)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (16494)
  a=r 0 (16494)
  a+= 4 (16496)
  d=a (16498)
  *d++ (16499)
  (                    922:     if id_ == 8:) (16500)
  (         t5 = H[t0+1]〈id_〉 == 8) (16500)
  c= 8 (16500)
  a=r 0 (16502)
  a++ (16504)
  d=a (16505)
  a=*d (16506)
  a==c (16507)
  a=0 (16508)
  jf 1 (16509)
  a++ (16511)
  r=a 5 (16512)
  (         ifN t5 goto else_713) (16514)
  a== 0 (16514)
  jf 3 (16516)
  lj 16546 (16518)
  (                    923:       v[i] = 0x66) (16521)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16521)
  a=0 (16521)
  a-- (16522)
  a>>= 1 (16523)
  c=a (16525)
  a=r 0 (16526)
  a+= 5 (16528)
  d=a (16530)
  a=*d (16531)
  a&=c (16532)
  r=a 5 (16533)
  (         t5 = t5 + H[t0+4]〈i〉) (16535)
  d-- (16535)
  c=*d (16536)
  a+=c (16537)
  r=a 5 (16538)
  (         M[t5] = 102) (16540)
  c=a (16540)
  *c= 102 (16541)
  (         goto endif_714) (16543)
  lj 16994 (16543)
  (        :else_713:) (16546)
  (                    924:     elif id_ == 16:) (16546)
  (         t5 = H[t0+1]〈id_〉 == 16) (16546)
  c= 16 (16546)
  a=r 0 (16548)
  a++ (16550)
  d=a (16551)
  a=*d (16552)
  a==c (16553)
  a=0 (16554)
  jf 1 (16555)
  a++ (16557)
  r=a 5 (16558)
  (         ifN t5 goto else_716) (16560)
  a== 0 (16560)
  jf 3 (16562)
  lj 16592 (16564)
  (                    925:       v[i] = 0x6e) (16567)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16567)
  a=0 (16567)
  a-- (16568)
  a>>= 1 (16569)
  c=a (16571)
  a=r 0 (16572)
  a+= 5 (16574)
  d=a (16576)
  a=*d (16577)
  a&=c (16578)
  r=a 5 (16579)
  (         t5 = t5 + H[t0+4]〈i〉) (16581)
  d-- (16581)
  c=*d (16582)
  a+=c (16583)
  r=a 5 (16584)
  (         M[t5] = 110) (16586)
  c=a (16586)
  *c= 110 (16587)
  (         goto endif_717) (16589)
  lj 16994 (16589)
  (        :else_716:) (16592)
  (                    926:     elif id_ == 17:) (16592)
  (         t5 = H[t0+1]〈id_〉 == 17) (16592)
  c= 17 (16592)
  a=r 0 (16594)
  a++ (16596)
  d=a (16597)
  a=*d (16598)
  a==c (16599)
  a=0 (16600)
  jf 1 (16601)
  a++ (16603)
  r=a 5 (16604)
  (         ifN t5 goto else_719) (16606)
  a== 0 (16606)
  jf 3 (16608)
  lj 16638 (16610)
  (                    927:       v[i] = 0x6f) (16613)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16613)
  a=0 (16613)
  a-- (16614)
  a>>= 1 (16615)
  c=a (16617)
  a=r 0 (16618)
  a+= 5 (16620)
  d=a (16622)
  a=*d (16623)
  a&=c (16624)
  r=a 5 (16625)
  (         t5 = t5 + H[t0+4]〈i〉) (16627)
  d-- (16627)
  c=*d (16628)
  a+=c (16629)
  r=a 5 (16630)
  (         M[t5] = 111) (16632)
  c=a (16632)
  *c= 111 (16633)
  (         goto endif_720) (16635)
  lj 16994 (16635)
  (        :else_719:) (16638)
  (                    928:     elif id_ == 38:) (16638)
  (         t5 = H[t0+1]〈id_〉 == 38) (16638)
  c= 38 (16638)
  a=r 0 (16640)
  a++ (16642)
  d=a (16643)
  a=*d (16644)
  a==c (16645)
  a=0 (16646)
  jf 1 (16647)
  a++ (16649)
  r=a 5 (16650)
  (         ifN t5 goto else_722) (16652)
  a== 0 (16652)
  jf 3 (16654)
  lj 16684 (16656)
  (                    929:       v[i] = 0x79) (16659)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16659)
  a=0 (16659)
  a-- (16660)
  a>>= 1 (16661)
  c=a (16663)
  a=r 0 (16664)
  a+= 5 (16666)
  d=a (16668)
  a=*d (16669)
  a&=c (16670)
  r=a 5 (16671)
  (         t5 = t5 + H[t0+4]〈i〉) (16673)
  d-- (16673)
  c=*d (16674)
  a+=c (16675)
  r=a 5 (16676)
  (         M[t5] = 121) (16678)
  c=a (16678)
  *c= 121 (16679)
  (         goto endif_723) (16681)
  lj 16994 (16681)
  (        :else_722:) (16684)
  (                    930:     elif id_ == 45:) (16684)
  (         t5 = H[t0+1]〈id_〉 == 45) (16684)
  c= 45 (16684)
  a=r 0 (16686)
  a++ (16688)
  d=a (16689)
  a=*d (16690)
  a==c (16691)
  a=0 (16692)
  jf 1 (16693)
  a++ (16695)
  r=a 5 (16696)
  (         ifN t5 goto else_725) (16698)
  a== 0 (16698)
  jf 3 (16700)
  lj 16730 (16702)
  (                    931:       v[i] = 0x6e) (16705)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16705)
  a=0 (16705)
  a-- (16706)
  a>>= 1 (16707)
  c=a (16709)
  a=r 0 (16710)
  a+= 5 (16712)
  d=a (16714)
  a=*d (16715)
  a&=c (16716)
  r=a 5 (16717)
  (         t5 = t5 + H[t0+4]〈i〉) (16719)
  d-- (16719)
  c=*d (16720)
  a+=c (16721)
  r=a 5 (16722)
  (         M[t5] = 110) (16724)
  c=a (16724)
  *c= 110 (16725)
  (         goto endif_726) (16727)
  lj 16994 (16727)
  (        :else_725:) (16730)
  (                    932:     elif id_ == 46 or id_ == 47 or id_ == 106:) (16730)
  (         t7 = H[t0+1]〈id_〉 == 46) (16730)
  c= 46 (16730)
  a=r 0 (16732)
  a++ (16734)
  d=a (16735)
  a=*d (16736)
  a==c (16737)
  a=0 (16738)
  jf 1 (16739)
  a++ (16741)
  r=a 7 (16742)
  (         t8 = H[t0+1]〈id_〉 == 47) (16744)
  c= 47 (16744)
  a=*d (16746)
  a==c (16747)
  a=0 (16748)
  jf 1 (16749)
  a++ (16751)
  r=a 8 (16752)
  (         t6 = t7 or t8) (16754)
  c=a (16754)
  a=r 7 (16755)
  a== 0 (16757)
  jf 1 (16759)
  a=c (16761)
  r=a 6 (16762)
  (         t7 = H[t0+1]〈id_〉 == 106) (16764)
  c= 106 (16764)
  a=*d (16766)
  a==c (16767)
  a=0 (16768)
  jf 1 (16769)
  a++ (16771)
  r=a 7 (16772)
  (         t5 = t6 or t7) (16774)
  c=a (16774)
  a=r 6 (16775)
  a== 0 (16777)
  jf 1 (16779)
  a=c (16781)
  r=a 5 (16782)
  (         ifN t5 goto else_730) (16784)
  a== 0 (16784)
  jf 3 (16786)
  lj 16816 (16788)
  (                    933:       v[i] = 0x73) (16791)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16791)
  a=0 (16791)
  a-- (16792)
  a>>= 1 (16793)
  c=a (16795)
  a=r 0 (16796)
  a+= 5 (16798)
  d=a (16800)
  a=*d (16801)
  a&=c (16802)
  r=a 5 (16803)
  (         t5 = t5 + H[t0+4]〈i〉) (16805)
  d-- (16805)
  c=*d (16806)
  a+=c (16807)
  r=a 5 (16808)
  (         M[t5] = 115) (16810)
  c=a (16810)
  *c= 115 (16811)
  (         goto endif_731) (16813)
  lj 16994 (16813)
  (        :else_730:) (16816)
  (                    934:     elif id_ == 60 or id_ == 95:) (16816)
  (         t6 = H[t0+1]〈id_〉 == 60) (16816)
  c= 60 (16816)
  a=r 0 (16818)
  a++ (16820)
  d=a (16821)
  a=*d (16822)
  a==c (16823)
  a=0 (16824)
  jf 1 (16825)
  a++ (16827)
  r=a 6 (16828)
  (         t7 = H[t0+1]〈id_〉 == 95) (16830)
  c= 95 (16830)
  a=*d (16832)
  a==c (16833)
  a=0 (16834)
  jf 1 (16835)
  a++ (16837)
  r=a 7 (16838)
  (         t5 = t6 or t7) (16840)
  c=a (16840)
  a=r 6 (16841)
  a== 0 (16843)
  jf 1 (16845)
  a=c (16847)
  r=a 5 (16848)
  (         ifN t5 goto else_734) (16850)
  a== 0 (16850)
  jf 3 (16852)
  lj 16882 (16854)
  (                    935:       v[i] = 0x74) (16857)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16857)
  a=0 (16857)
  a-- (16858)
  a>>= 1 (16859)
  c=a (16861)
  a=r 0 (16862)
  a+= 5 (16864)
  d=a (16866)
  a=*d (16867)
  a&=c (16868)
  r=a 5 (16869)
  (         t5 = t5 + H[t0+4]〈i〉) (16871)
  d-- (16871)
  c=*d (16872)
  a+=c (16873)
  r=a 5 (16874)
  (         M[t5] = 116) (16876)
  c=a (16876)
  *c= 116 (16877)
  (         goto endif_735) (16879)
  lj 16994 (16879)
  (        :else_734:) (16882)
  (                    936:     elif id_ == 90:) (16882)
  (         t5 = H[t0+1]〈id_〉 == 90) (16882)
  c= 90 (16882)
  a=r 0 (16884)
  a++ (16886)
  d=a (16887)
  a=*d (16888)
  a==c (16889)
  a=0 (16890)
  jf 1 (16891)
  a++ (16893)
  r=a 5 (16894)
  (         ifN t5 goto else_737) (16896)
  a== 0 (16896)
  jf 3 (16898)
  lj 16928 (16900)
  (                    937:       v[i] = 0x6c) (16903)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16903)
  a=0 (16903)
  a-- (16904)
  a>>= 1 (16905)
  c=a (16907)
  a=r 0 (16908)
  a+= 5 (16910)
  d=a (16912)
  a=*d (16913)
  a&=c (16914)
  r=a 5 (16915)
  (         t5 = t5 + H[t0+4]〈i〉) (16917)
  d-- (16917)
  c=*d (16918)
  a+=c (16919)
  r=a 5 (16920)
  (         M[t5] = 108) (16922)
  c=a (16922)
  *c= 108 (16923)
  (         goto endif_738) (16925)
  lj 16994 (16925)
  (        :else_737:) (16928)
  (                    938:     elif id_ == 92 or id_ == 100:) (16928)
  (         t6 = H[t0+1]〈id_〉 == 92) (16928)
  c= 92 (16928)
  a=r 0 (16930)
  a++ (16932)
  d=a (16933)
  a=*d (16934)
  a==c (16935)
  a=0 (16936)
  jf 1 (16937)
  a++ (16939)
  r=a 6 (16940)
  (         t7 = H[t0+1]〈id_〉 == 100) (16942)
  c= 100 (16942)
  a=*d (16944)
  a==c (16945)
  a=0 (16946)
  jf 1 (16947)
  a++ (16949)
  r=a 7 (16950)
  (         t5 = t6 or t7) (16952)
  c=a (16952)
  a=r 6 (16953)
  a== 0 (16955)
  jf 1 (16957)
  a=c (16959)
  r=a 5 (16960)
  (         ifN t5 goto else_741) (16962)
  a== 0 (16962)
  jf 3 (16964)
  lj 16994 (16966)
  (                    939:       v[i] = 0x65) (16969)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (16969)
  a=0 (16969)
  a-- (16970)
  a>>= 1 (16971)
  c=a (16973)
  a=r 0 (16974)
  a+= 5 (16976)
  d=a (16978)
  a=*d (16979)
  a&=c (16980)
  r=a 5 (16981)
  (         t5 = t5 + H[t0+4]〈i〉) (16983)
  d-- (16983)
  c=*d (16984)
  a+=c (16985)
  r=a 5 (16986)
  (         M[t5] = 101) (16988)
  c=a (16988)
  *c= 101 (16989)
  (         goto endif_742) (16991)
  lj 16994 (16991)
  (        :else_741:) (16994)
  (        :endif_742:) (16994)
  (        :endif_738:) (16994)
  (        :endif_735:) (16994)
  (        :endif_731:) (16994)
  (        :endif_726:) (16994)
  (        :endif_723:) (16994)
  (        :endif_720:) (16994)
  (        :endif_717:) (16994)
  (        :endif_714:) (16994)
  (                    940:     i += 1) (16994)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (16994)
  a=r 0 (16994)
  a+= 4 (16996)
  d=a (16998)
  *d++ (16999)
  (                    941:     v[i] = 0x20) (17000)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (17000)
  a=0 (17000)
  a-- (17001)
  a>>= 1 (17002)
  c=a (17004)
  d++ (17005)
  a=*d (17006)
  a&=c (17007)
  r=a 5 (17008)
  (         t5 = t5 + H[t0+4]〈i〉) (17010)
  d-- (17010)
  c=*d (17011)
  a+=c (17012)
  r=a 5 (17013)
  (         M[t5] = 32) (17015)
  c=a (17015)
  *c= 32 (17016)
  (         goto endif_659) (17018)
  lj 28969 (17018)
  (        :else_658:) (17021)
  (                    942:   elif id_ == 9:) (17021)
  (         t5 = H[t0+1]〈id_〉 == 9) (17021)
  c= 9 (17021)
  a=r 0 (17023)
  a++ (17025)
  d=a (17026)
  a=*d (17027)
  a==c (17028)
  a=0 (17029)
  jf 1 (17030)
  a++ (17032)
  r=a 5 (17033)
  (         ifN t5 goto else_744) (17035)
  a== 0 (17035)
  jf 3 (17037)
  lj 17088 (17039)
  (                    943:     v = uppercase_first〈base_word〉) (17042)
  (         H[t0+12]〈〉 = t0) (17042)
  a=r 0 (17042)
  a+= 12 (17044)
  d=a (17046)
  a=r 0 (17047)
  *d=a (17049)
  (saved bsp, return id:) (17050)
  (         H[t0+13]〈〉 = 70) (17050)
  d++ (17050)
  *d= 70 (17051)
  (push arguments:) (17053)
  (         H[t0+14]〈〉 = H[t0+2]〈base_word〉) (17053)
  a+= 2 (17053)
  d=a (17055)
  c=*d (17056)
  a=r 0 (17057)
  a+= 14 (17059)
  d=a (17061)
  *d=c (17062)
  (         t0 = t0 + 13) (17063)
  c= 13 (17063)
  a=r 0 (17065)
  a+=c (17067)
  r=a 0 (17068)
  (         goto uppercase_first) (17070)
  lj 9839 (17070)
  (        :return_id_70:) (17073)
  (         t5 = t1) (17073)
  a=r 1 (17073)
  r=a 5 (17075)
  (         H[t0+5]〈v〉 = t5) (17077)
  a=r 0 (17077)
  a+= 5 (17079)
  d=a (17081)
  a=r 5 (17082)
  *d=a (17084)
  (         goto endif_745) (17085)
  lj 28969 (17085)
  (        :else_744:) (17088)
  (                    944:   elif id_ == 12 or id_ == 23 or id_ == 27 or id_ == 42 or id_ == 48 or id_ == 56 or id_ == 59 or id_ == 63 or id_ == 64:) (17088)
  (         t13 = H[t0+1]〈id_〉 == 12) (17088)
  c= 12 (17088)
  a=r 0 (17090)
  a++ (17092)
  d=a (17093)
  a=*d (17094)
  a==c (17095)
  a=0 (17096)
  jf 1 (17097)
  a++ (17099)
  r=a 13 (17100)
  (         t14 = H[t0+1]〈id_〉 == 23) (17102)
  c= 23 (17102)
  a=*d (17104)
  a==c (17105)
  a=0 (17106)
  jf 1 (17107)
  a++ (17109)
  r=a 14 (17110)
  (         t12 = t13 or t14) (17112)
  c=a (17112)
  a=r 13 (17113)
  a== 0 (17115)
  jf 1 (17117)
  a=c (17119)
  r=a 12 (17120)
  (         t13 = H[t0+1]〈id_〉 == 27) (17122)
  c= 27 (17122)
  a=*d (17124)
  a==c (17125)
  a=0 (17126)
  jf 1 (17127)
  a++ (17129)
  r=a 13 (17130)
  (         t11 = t12 or t13) (17132)
  c=a (17132)
  a=r 12 (17133)
  a== 0 (17135)
  jf 1 (17137)
  a=c (17139)
  r=a 11 (17140)
  (         t12 = H[t0+1]〈id_〉 == 42) (17142)
  c= 42 (17142)
  a=*d (17144)
  a==c (17145)
  a=0 (17146)
  jf 1 (17147)
  a++ (17149)
  r=a 12 (17150)
  (         t10 = t11 or t12) (17152)
  c=a (17152)
  a=r 11 (17153)
  a== 0 (17155)
  jf 1 (17157)
  a=c (17159)
  r=a 10 (17160)
  (         t11 = H[t0+1]〈id_〉 == 48) (17162)
  c= 48 (17162)
  a=*d (17164)
  a==c (17165)
  a=0 (17166)
  jf 1 (17167)
  a++ (17169)
  r=a 11 (17170)
  (         t9 = t10 or t11) (17172)
  c=a (17172)
  a=r 10 (17173)
  a== 0 (17175)
  jf 1 (17177)
  a=c (17179)
  r=a 9 (17180)
  (         t10 = H[t0+1]〈id_〉 == 56) (17182)
  c= 56 (17182)
  a=*d (17184)
  a==c (17185)
  a=0 (17186)
  jf 1 (17187)
  a++ (17189)
  r=a 10 (17190)
  (         t8 = t9 or t10) (17192)
  c=a (17192)
  a=r 9 (17193)
  a== 0 (17195)
  jf 1 (17197)
  a=c (17199)
  r=a 8 (17200)
  (         t9 = H[t0+1]〈id_〉 == 59) (17202)
  c= 59 (17202)
  a=*d (17204)
  a==c (17205)
  a=0 (17206)
  jf 1 (17207)
  a++ (17209)
  r=a 9 (17210)
  (         t7 = t8 or t9) (17212)
  c=a (17212)
  a=r 8 (17213)
  a== 0 (17215)
  jf 1 (17217)
  a=c (17219)
  r=a 7 (17220)
  (         t8 = H[t0+1]〈id_〉 == 63) (17222)
  c= 63 (17222)
  a=*d (17224)
  a==c (17225)
  a=0 (17226)
  jf 1 (17227)
  a++ (17229)
  r=a 8 (17230)
  (         t6 = t7 or t8) (17232)
  c=a (17232)
  a=r 7 (17233)
  a== 0 (17235)
  jf 1 (17237)
  a=c (17239)
  r=a 6 (17240)
  (         t7 = H[t0+1]〈id_〉 == 64) (17242)
  c= 64 (17242)
  a=*d (17244)
  a==c (17245)
  a=0 (17246)
  jf 1 (17247)
  a++ (17249)
  r=a 7 (17250)
  (         t5 = t6 or t7) (17252)
  c=a (17252)
  a=r 6 (17253)
  a== 0 (17255)
  jf 1 (17257)
  a=c (17259)
  r=a 5 (17260)
  (         ifN t5 goto else_755) (17262)
  a== 0 (17262)
  jf 3 (17264)
  lj 18024 (17266)
  (                    945:     if id_ == 12:) (17269)
  (         t5 = H[t0+1]〈id_〉 == 12) (17269)
  c= 12 (17269)
  a=*d (17271)
  a==c (17272)
  a=0 (17273)
  jf 1 (17274)
  a++ (17276)
  r=a 5 (17277)
  (         ifN t5 goto else_758) (17279)
  a== 0 (17279)
  jf 3 (17281)
  lj 17296 (17283)
  (                    946:       j = 1) (17286)
  (         H[t0+6]〈j〉 = 1) (17286)
  a=r 0 (17286)
  a+= 6 (17288)
  d=a (17290)
  *d= 1 (17291)
  (         goto endif_759) (17293)
  lj 17544 (17293)
  (        :else_758:) (17296)
  (                    947:     elif id_ == 23:) (17296)
  (         t5 = H[t0+1]〈id_〉 == 23) (17296)
  c= 23 (17296)
  a=r 0 (17298)
  a++ (17300)
  d=a (17301)
  a=*d (17302)
  a==c (17303)
  a=0 (17304)
  jf 1 (17305)
  a++ (17307)
  r=a 5 (17308)
  (         ifN t5 goto else_761) (17310)
  a== 0 (17310)
  jf 3 (17312)
  lj 17327 (17314)
  (                    948:       j = 3) (17317)
  (         H[t0+6]〈j〉 = 3) (17317)
  a=r 0 (17317)
  a+= 6 (17319)
  d=a (17321)
  *d= 3 (17322)
  (         goto endif_762) (17324)
  lj 17544 (17324)
  (        :else_761:) (17327)
  (                    949:     elif id_ == 27:) (17327)
  (         t5 = H[t0+1]〈id_〉 == 27) (17327)
  c= 27 (17327)
  a=r 0 (17329)
  a++ (17331)
  d=a (17332)
  a=*d (17333)
  a==c (17334)
  a=0 (17335)
  jf 1 (17336)
  a++ (17338)
  r=a 5 (17339)
  (         ifN t5 goto else_764) (17341)
  a== 0 (17341)
  jf 3 (17343)
  lj 17358 (17345)
  (                    950:       j = 2) (17348)
  (         H[t0+6]〈j〉 = 2) (17348)
  a=r 0 (17348)
  a+= 6 (17350)
  d=a (17352)
  *d= 2 (17353)
  (         goto endif_765) (17355)
  lj 17544 (17355)
  (        :else_764:) (17358)
  (                    951:     elif id_ == 42:) (17358)
  (         t5 = H[t0+1]〈id_〉 == 42) (17358)
  c= 42 (17358)
  a=r 0 (17360)
  a++ (17362)
  d=a (17363)
  a=*d (17364)
  a==c (17365)
  a=0 (17366)
  jf 1 (17367)
  a++ (17369)
  r=a 5 (17370)
  (         ifN t5 goto else_767) (17372)
  a== 0 (17372)
  jf 3 (17374)
  lj 17389 (17376)
  (                    952:       j = 4) (17379)
  (         H[t0+6]〈j〉 = 4) (17379)
  a=r 0 (17379)
  a+= 6 (17381)
  d=a (17383)
  *d= 4 (17384)
  (         goto endif_768) (17386)
  lj 17544 (17386)
  (        :else_767:) (17389)
  (                    953:     elif id_ == 48:) (17389)
  (         t5 = H[t0+1]〈id_〉 == 48) (17389)
  c= 48 (17389)
  a=r 0 (17391)
  a++ (17393)
  d=a (17394)
  a=*d (17395)
  a==c (17396)
  a=0 (17397)
  jf 1 (17398)
  a++ (17400)
  r=a 5 (17401)
  (         ifN t5 goto else_770) (17403)
  a== 0 (17403)
  jf 3 (17405)
  lj 17420 (17407)
  (                    954:       j = 7) (17410)
  (         H[t0+6]〈j〉 = 7) (17410)
  a=r 0 (17410)
  a+= 6 (17412)
  d=a (17414)
  *d= 7 (17415)
  (         goto endif_771) (17417)
  lj 17544 (17417)
  (        :else_770:) (17420)
  (                    955:     elif id_ == 56:) (17420)
  (         t5 = H[t0+1]〈id_〉 == 56) (17420)
  c= 56 (17420)
  a=r 0 (17422)
  a++ (17424)
  d=a (17425)
  a=*d (17426)
  a==c (17427)
  a=0 (17428)
  jf 1 (17429)
  a++ (17431)
  r=a 5 (17432)
  (         ifN t5 goto else_773) (17434)
  a== 0 (17434)
  jf 3 (17436)
  lj 17451 (17438)
  (                    956:       j = 6) (17441)
  (         H[t0+6]〈j〉 = 6) (17441)
  a=r 0 (17441)
  a+= 6 (17443)
  d=a (17445)
  *d= 6 (17446)
  (         goto endif_774) (17448)
  lj 17544 (17448)
  (        :else_773:) (17451)
  (                    957:     elif id_ == 59:) (17451)
  (         t5 = H[t0+1]〈id_〉 == 59) (17451)
  c= 59 (17451)
  a=r 0 (17453)
  a++ (17455)
  d=a (17456)
  a=*d (17457)
  a==c (17458)
  a=0 (17459)
  jf 1 (17460)
  a++ (17462)
  r=a 5 (17463)
  (         ifN t5 goto else_776) (17465)
  a== 0 (17465)
  jf 3 (17467)
  lj 17482 (17469)
  (                    958:       j = 8) (17472)
  (         H[t0+6]〈j〉 = 8) (17472)
  a=r 0 (17472)
  a+= 6 (17474)
  d=a (17476)
  *d= 8 (17477)
  (         goto endif_777) (17479)
  lj 17544 (17479)
  (        :else_776:) (17482)
  (                    959:     elif id_ == 63:) (17482)
  (         t5 = H[t0+1]〈id_〉 == 63) (17482)
  c= 63 (17482)
  a=r 0 (17484)
  a++ (17486)
  d=a (17487)
  a=*d (17488)
  a==c (17489)
  a=0 (17490)
  jf 1 (17491)
  a++ (17493)
  r=a 5 (17494)
  (         ifN t5 goto else_779) (17496)
  a== 0 (17496)
  jf 3 (17498)
  lj 17513 (17500)
  (                    960:       j = 5) (17503)
  (         H[t0+6]〈j〉 = 5) (17503)
  a=r 0 (17503)
  a+= 6 (17505)
  d=a (17507)
  *d= 5 (17508)
  (         goto endif_780) (17510)
  lj 17544 (17510)
  (        :else_779:) (17513)
  (                    961:     elif id_ == 64:) (17513)
  (         t5 = H[t0+1]〈id_〉 == 64) (17513)
  c= 64 (17513)
  a=r 0 (17515)
  a++ (17517)
  d=a (17518)
  a=*d (17519)
  a==c (17520)
  a=0 (17521)
  jf 1 (17522)
  a++ (17524)
  r=a 5 (17525)
  (         ifN t5 goto else_782) (17527)
  a== 0 (17527)
  jf 3 (17529)
  lj 17544 (17531)
  (                    962:       j = 9) (17534)
  (         H[t0+6]〈j〉 = 9) (17534)
  a=r 0 (17534)
  a+= 6 (17536)
  d=a (17538)
  *d= 9 (17539)
  (         goto endif_783) (17541)
  lj 17544 (17541)
  (        :else_782:) (17544)
  (        :endif_783:) (17544)
  (        :endif_780:) (17544)
  (        :endif_777:) (17544)
  (        :endif_774:) (17544)
  (        :endif_771:) (17544)
  (        :endif_768:) (17544)
  (        :endif_765:) (17544)
  (        :endif_762:) (17544)
  (        :endif_759:) (17544)
  (                    963:     if l > j:) (17544)
  (         t5 = H[t0+3]〈l〉 > H[t0+6]〈j〉) (17544)
  a=r 0 (17544)
  a+= 6 (17546)
  d=a (17548)
  c=*d (17549)
  a=r 0 (17550)
  a+= 3 (17552)
  d=a (17554)
  a=*d (17555)
  a>c (17556)
  a=0 (17557)
  jf 1 (17558)
  a++ (17560)
  r=a 5 (17561)
  (         ifN t5 goto else_785) (17563)
  a== 0 (17563)
  jf 3 (17565)
  lj 17580 (17567)
  (                    964:       j = l) (17570)
  (         H[t0+6]〈j〉 = H[t0+3]〈l〉) (17570)
  c=*d (17570)
  a=r 0 (17571)
  a+= 6 (17573)
  d=a (17575)
  *d=c (17576)
  (         goto endif_786) (17577)
  lj 17580 (17577)
  (        :else_785:) (17580)
  (        :endif_786:) (17580)
  (                    965:     if id_ == 12:) (17580)
  (         t5 = H[t0+1]〈id_〉 == 12) (17580)
  c= 12 (17580)
  a=r 0 (17582)
  a++ (17584)
  d=a (17585)
  a=*d (17586)
  a==c (17587)
  a=0 (17588)
  jf 1 (17589)
  a++ (17591)
  r=a 5 (17592)
  (         ifN t5 goto else_788) (17594)
  a== 0 (17594)
  jf 3 (17596)
  lj 17610 (17598)
  (                    966:       j -= 1) (17601)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 1) (17601)
  a=r 0 (17601)
  a+= 6 (17603)
  d=a (17605)
  *d-- (17606)
  (         goto endif_789) (17607)
  lj 17890 (17607)
  (        :else_788:) (17610)
  (                    967:     elif id_ == 23:) (17610)
  (         t5 = H[t0+1]〈id_〉 == 23) (17610)
  c= 23 (17610)
  a=r 0 (17612)
  a++ (17614)
  d=a (17615)
  a=*d (17616)
  a==c (17617)
  a=0 (17618)
  jf 1 (17619)
  a++ (17621)
  r=a 5 (17622)
  (         ifN t5 goto else_791) (17624)
  a== 0 (17624)
  jf 3 (17626)
  lj 17645 (17628)
  (                    968:       j -= 3) (17631)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 3) (17631)
  c= 3 (17631)
  a=r 0 (17633)
  a+= 6 (17635)
  d=a (17637)
  a=*d (17638)
  a-=c (17639)
  c=a (17640)
  *d=c (17641)
  (         goto endif_792) (17642)
  lj 17890 (17642)
  (        :else_791:) (17645)
  (                    969:     elif id_ == 27:) (17645)
  (         t5 = H[t0+1]〈id_〉 == 27) (17645)
  c= 27 (17645)
  a=r 0 (17647)
  a++ (17649)
  d=a (17650)
  a=*d (17651)
  a==c (17652)
  a=0 (17653)
  jf 1 (17654)
  a++ (17656)
  r=a 5 (17657)
  (         ifN t5 goto else_794) (17659)
  a== 0 (17659)
  jf 3 (17661)
  lj 17680 (17663)
  (                    970:       j -= 2) (17666)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 2) (17666)
  c= 2 (17666)
  a=r 0 (17668)
  a+= 6 (17670)
  d=a (17672)
  a=*d (17673)
  a-=c (17674)
  c=a (17675)
  *d=c (17676)
  (         goto endif_795) (17677)
  lj 17890 (17677)
  (        :else_794:) (17680)
  (                    971:     elif id_ == 42:) (17680)
  (         t5 = H[t0+1]〈id_〉 == 42) (17680)
  c= 42 (17680)
  a=r 0 (17682)
  a++ (17684)
  d=a (17685)
  a=*d (17686)
  a==c (17687)
  a=0 (17688)
  jf 1 (17689)
  a++ (17691)
  r=a 5 (17692)
  (         ifN t5 goto else_797) (17694)
  a== 0 (17694)
  jf 3 (17696)
  lj 17715 (17698)
  (                    972:       j -= 4) (17701)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 4) (17701)
  c= 4 (17701)
  a=r 0 (17703)
  a+= 6 (17705)
  d=a (17707)
  a=*d (17708)
  a-=c (17709)
  c=a (17710)
  *d=c (17711)
  (         goto endif_798) (17712)
  lj 17890 (17712)
  (        :else_797:) (17715)
  (                    973:     elif id_ == 48:) (17715)
  (         t5 = H[t0+1]〈id_〉 == 48) (17715)
  c= 48 (17715)
  a=r 0 (17717)
  a++ (17719)
  d=a (17720)
  a=*d (17721)
  a==c (17722)
  a=0 (17723)
  jf 1 (17724)
  a++ (17726)
  r=a 5 (17727)
  (         ifN t5 goto else_800) (17729)
  a== 0 (17729)
  jf 3 (17731)
  lj 17750 (17733)
  (                    974:       j -= 7) (17736)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 7) (17736)
  c= 7 (17736)
  a=r 0 (17738)
  a+= 6 (17740)
  d=a (17742)
  a=*d (17743)
  a-=c (17744)
  c=a (17745)
  *d=c (17746)
  (         goto endif_801) (17747)
  lj 17890 (17747)
  (        :else_800:) (17750)
  (                    975:     elif id_ == 56:) (17750)
  (         t5 = H[t0+1]〈id_〉 == 56) (17750)
  c= 56 (17750)
  a=r 0 (17752)
  a++ (17754)
  d=a (17755)
  a=*d (17756)
  a==c (17757)
  a=0 (17758)
  jf 1 (17759)
  a++ (17761)
  r=a 5 (17762)
  (         ifN t5 goto else_803) (17764)
  a== 0 (17764)
  jf 3 (17766)
  lj 17785 (17768)
  (                    976:       j -= 6) (17771)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 6) (17771)
  c= 6 (17771)
  a=r 0 (17773)
  a+= 6 (17775)
  d=a (17777)
  a=*d (17778)
  a-=c (17779)
  c=a (17780)
  *d=c (17781)
  (         goto endif_804) (17782)
  lj 17890 (17782)
  (        :else_803:) (17785)
  (                    977:     elif id_ == 59:) (17785)
  (         t5 = H[t0+1]〈id_〉 == 59) (17785)
  c= 59 (17785)
  a=r 0 (17787)
  a++ (17789)
  d=a (17790)
  a=*d (17791)
  a==c (17792)
  a=0 (17793)
  jf 1 (17794)
  a++ (17796)
  r=a 5 (17797)
  (         ifN t5 goto else_806) (17799)
  a== 0 (17799)
  jf 3 (17801)
  lj 17820 (17803)
  (                    978:       j -= 8) (17806)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 8) (17806)
  c= 8 (17806)
  a=r 0 (17808)
  a+= 6 (17810)
  d=a (17812)
  a=*d (17813)
  a-=c (17814)
  c=a (17815)
  *d=c (17816)
  (         goto endif_807) (17817)
  lj 17890 (17817)
  (        :else_806:) (17820)
  (                    979:     elif id_ == 63:) (17820)
  (         t5 = H[t0+1]〈id_〉 == 63) (17820)
  c= 63 (17820)
  a=r 0 (17822)
  a++ (17824)
  d=a (17825)
  a=*d (17826)
  a==c (17827)
  a=0 (17828)
  jf 1 (17829)
  a++ (17831)
  r=a 5 (17832)
  (         ifN t5 goto else_809) (17834)
  a== 0 (17834)
  jf 3 (17836)
  lj 17855 (17838)
  (                    980:       j -= 5) (17841)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 5) (17841)
  c= 5 (17841)
  a=r 0 (17843)
  a+= 6 (17845)
  d=a (17847)
  a=*d (17848)
  a-=c (17849)
  c=a (17850)
  *d=c (17851)
  (         goto endif_810) (17852)
  lj 17890 (17852)
  (        :else_809:) (17855)
  (                    981:     elif id_ == 64:) (17855)
  (         t5 = H[t0+1]〈id_〉 == 64) (17855)
  c= 64 (17855)
  a=r 0 (17857)
  a++ (17859)
  d=a (17860)
  a=*d (17861)
  a==c (17862)
  a=0 (17863)
  jf 1 (17864)
  a++ (17866)
  r=a 5 (17867)
  (         ifN t5 goto else_812) (17869)
  a== 0 (17869)
  jf 3 (17871)
  lj 17890 (17873)
  (                    982:       j -= 9) (17876)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 9) (17876)
  c= 9 (17876)
  a=r 0 (17878)
  a+= 6 (17880)
  d=a (17882)
  a=*d (17883)
  a-=c (17884)
  c=a (17885)
  *d=c (17886)
  (         goto endif_813) (17887)
  lj 17890 (17887)
  (        :else_812:) (17890)
  (        :endif_813:) (17890)
  (        :endif_810:) (17890)
  (        :endif_807:) (17890)
  (        :endif_804:) (17890)
  (        :endif_801:) (17890)
  (        :endif_798:) (17890)
  (        :endif_795:) (17890)
  (        :endif_792:) (17890)
  (        :endif_789:) (17890)
  (                    983:     v = alloc_pM〈j〉) (17890)
  (         H[t0+12]〈〉 = t0) (17890)
  a=r 0 (17890)
  a+= 12 (17892)
  d=a (17894)
  a=r 0 (17895)
  *d=a (17897)
  (saved bsp, return id:) (17898)
  (         H[t0+13]〈〉 = 71) (17898)
  d++ (17898)
  *d= 71 (17899)
  (push arguments:) (17901)
  (         H[t0+14]〈〉 = H[t0+6]〈j〉) (17901)
  a+= 6 (17901)
  d=a (17903)
  c=*d (17904)
  a=r 0 (17905)
  a+= 14 (17907)
  d=a (17909)
  *d=c (17910)
  (         t0 = t0 + 13) (17911)
  c= 13 (17911)
  a=r 0 (17913)
  a+=c (17915)
  r=a 0 (17916)
  (         goto addr_alloc_pM) (17918)
  lj 323 (17918)
  (        :return_id_71:) (17921)
  (         t5 = t1) (17921)
  a=r 1 (17921)
  r=a 5 (17923)
  (         t5 = t5 | 2147483648) (17925)
  a= 1 (17925)
  a<<= 31 (17927)
  c=a (17929)
  a=r 5 (17930)
  a|=c (17932)
  r=a 5 (17933)
  (         H[t0+5]〈v〉 = t5) (17935)
  a=r 0 (17935)
  a+= 5 (17937)
  d=a (17939)
  a=r 5 (17940)
  *d=a (17942)
  (                    984:     while i < j:) (17943)
  (        :while_814:) (17943)
  (         t5 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (17943)
  a=r 0 (17943)
  a+= 6 (17945)
  d=a (17947)
  c=*d (17948)
  a=r 0 (17949)
  a+= 4 (17951)
  d=a (17953)
  a=*d (17954)
  a<c (17955)
  a=0 (17956)
  jf 1 (17957)
  a++ (17959)
  r=a 5 (17960)
  (         ifN t5 goto whileend_816) (17962)
  a== 0 (17962)
  jf 3 (17964)
  lj 18021 (17966)
  (                    985:       v[i] = base_word[i]) (17969)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (17969)
  a=0 (17969)
  a-- (17970)
  a>>= 1 (17971)
  c=a (17973)
  a=r 0 (17974)
  a+= 2 (17976)
  d=a (17978)
  a=*d (17979)
  a&=c (17980)
  r=a 5 (17981)
  (         t5 = t5 + H[t0+4]〈i〉) (17983)
  a=r 0 (17983)
  a+= 4 (17985)
  d=a (17987)
  c=*d (17988)
  a=r 5 (17989)
  a+=c (17991)
  r=a 5 (17992)
  (         t5 = M[t5]) (17994)
  b=a (17994)
  a=*b (17995)
  r=a 5 (17996)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (17998)
  a=0 (17998)
  a-- (17999)
  a>>= 1 (18000)
  c=a (18002)
  d++ (18003)
  a=*d (18004)
  a&=c (18005)
  r=a 6 (18006)
  (         t6 = t6 + H[t0+4]〈i〉) (18008)
  d-- (18008)
  c=*d (18009)
  a+=c (18010)
  r=a 6 (18011)
  (         M[t6] = t5) (18013)
  c=a (18013)
  a=r 5 (18014)
  *c=a (18016)
  (                    986:       i += 1) (18017)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (18017)
  *d++ (18017)
  (         goto while_814) (18018)
  lj 17943 (18018)
  (        :whileend_816:) (18021)
  (         goto endif_756) (18021)
  lj 28969 (18021)
  (        :else_755:) (18024)
  (                    987:   elif id_ == 14 or id_ == 21 or id_ == 31 or id_ == 50 or id_ == 70 or id_ == 86:  # 2 hinten an) (18024)
  (         t10 = H[t0+1]〈id_〉 == 14) (18024)
  c= 14 (18024)
  a=r 0 (18026)
  a++ (18028)
  d=a (18029)
  a=*d (18030)
  a==c (18031)
  a=0 (18032)
  jf 1 (18033)
  a++ (18035)
  r=a 10 (18036)
  (         t11 = H[t0+1]〈id_〉 == 21) (18038)
  c= 21 (18038)
  a=*d (18040)
  a==c (18041)
  a=0 (18042)
  jf 1 (18043)
  a++ (18045)
  r=a 11 (18046)
  (         t9 = t10 or t11) (18048)
  c=a (18048)
  a=r 10 (18049)
  a== 0 (18051)
  jf 1 (18053)
  a=c (18055)
  r=a 9 (18056)
  (         t10 = H[t0+1]〈id_〉 == 31) (18058)
  c= 31 (18058)
  a=*d (18060)
  a==c (18061)
  a=0 (18062)
  jf 1 (18063)
  a++ (18065)
  r=a 10 (18066)
  (         t8 = t9 or t10) (18068)
  c=a (18068)
  a=r 9 (18069)
  a== 0 (18071)
  jf 1 (18073)
  a=c (18075)
  r=a 8 (18076)
  (         t9 = H[t0+1]〈id_〉 == 50) (18078)
  c= 50 (18078)
  a=*d (18080)
  a==c (18081)
  a=0 (18082)
  jf 1 (18083)
  a++ (18085)
  r=a 9 (18086)
  (         t7 = t8 or t9) (18088)
  c=a (18088)
  a=r 8 (18089)
  a== 0 (18091)
  jf 1 (18093)
  a=c (18095)
  r=a 7 (18096)
  (         t8 = H[t0+1]〈id_〉 == 70) (18098)
  c= 70 (18098)
  a=*d (18100)
  a==c (18101)
  a=0 (18102)
  jf 1 (18103)
  a++ (18105)
  r=a 8 (18106)
  (         t6 = t7 or t8) (18108)
  c=a (18108)
  a=r 7 (18109)
  a== 0 (18111)
  jf 1 (18113)
  a=c (18115)
  r=a 6 (18116)
  (         t7 = H[t0+1]〈id_〉 == 86) (18118)
  c= 86 (18118)
  a=*d (18120)
  a==c (18121)
  a=0 (18122)
  jf 1 (18123)
  a++ (18125)
  r=a 7 (18126)
  (         t5 = t6 or t7) (18128)
  c=a (18128)
  a=r 6 (18129)
  a== 0 (18131)
  jf 1 (18133)
  a=c (18135)
  r=a 5 (18136)
  (         ifN t5 goto else_824) (18138)
  a== 0 (18138)
  jf 3 (18140)
  lj 18786 (18142)
  (                    988:     v = alloc_pM〈l+2〉) (18145)
  (         t5 = H[t0+3]〈l〉 + 2) (18145)
  c= 2 (18145)
  a=r 0 (18147)
  a+= 3 (18149)
  d=a (18151)
  a=*d (18152)
  a+=c (18153)
  r=a 5 (18154)
  (         H[t0+12]〈〉 = t0) (18156)
  a=r 0 (18156)
  a+= 12 (18158)
  d=a (18160)
  a=r 0 (18161)
  *d=a (18163)
  (saved bsp, return id:) (18164)
  (         H[t0+13]〈〉 = 72) (18164)
  d++ (18164)
  *d= 72 (18165)
  (push arguments:) (18167)
  (         H[t0+14]〈〉 = t5) (18167)
  d++ (18167)
  a=r 5 (18168)
  *d=a (18170)
  (         t0 = t0 + 13) (18171)
  c= 13 (18171)
  a=r 0 (18173)
  a+=c (18175)
  r=a 0 (18176)
  (         goto addr_alloc_pM) (18178)
  lj 323 (18178)
  (        :return_id_72:) (18181)
  (         t6 = t1) (18181)
  a=r 1 (18181)
  r=a 6 (18183)
  (         t6 = t6 | 2147483648) (18185)
  a= 1 (18185)
  a<<= 31 (18187)
  c=a (18189)
  a=r 6 (18190)
  a|=c (18192)
  r=a 6 (18193)
  (         H[t0+5]〈v〉 = t6) (18195)
  a=r 0 (18195)
  a+= 5 (18197)
  d=a (18199)
  a=r 6 (18200)
  *d=a (18202)
  (                    989:     while i < l:) (18203)
  (        :while_826:) (18203)
  (         t5 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (18203)
  a=r 0 (18203)
  a+= 3 (18205)
  d=a (18207)
  c=*d (18208)
  d++ (18209)
  a=*d (18210)
  a<c (18211)
  a=0 (18212)
  jf 1 (18213)
  a++ (18215)
  r=a 5 (18216)
  (         ifN t5 goto whileend_828) (18218)
  a== 0 (18218)
  jf 3 (18220)
  lj 18277 (18222)
  (                    990:       v[i] = base_word[i]) (18225)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (18225)
  a=0 (18225)
  a-- (18226)
  a>>= 1 (18227)
  c=a (18229)
  a=r 0 (18230)
  a+= 2 (18232)
  d=a (18234)
  a=*d (18235)
  a&=c (18236)
  r=a 5 (18237)
  (         t5 = t5 + H[t0+4]〈i〉) (18239)
  a=r 0 (18239)
  a+= 4 (18241)
  d=a (18243)
  c=*d (18244)
  a=r 5 (18245)
  a+=c (18247)
  r=a 5 (18248)
  (         t5 = M[t5]) (18250)
  b=a (18250)
  a=*b (18251)
  r=a 5 (18252)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (18254)
  a=0 (18254)
  a-- (18255)
  a>>= 1 (18256)
  c=a (18258)
  d++ (18259)
  a=*d (18260)
  a&=c (18261)
  r=a 6 (18262)
  (         t6 = t6 + H[t0+4]〈i〉) (18264)
  d-- (18264)
  c=*d (18265)
  a+=c (18266)
  r=a 6 (18267)
  (         M[t6] = t5) (18269)
  c=a (18269)
  a=r 5 (18270)
  *c=a (18272)
  (                    991:       i += 1) (18273)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (18273)
  *d++ (18273)
  (         goto while_826) (18274)
  lj 18203 (18274)
  (        :whileend_828:) (18277)
  (                    992:     if id_ == 14:) (18277)
  (         t5 = H[t0+1]〈id_〉 == 14) (18277)
  c= 14 (18277)
  a=r 0 (18279)
  a++ (18281)
  d=a (18282)
  a=*d (18283)
  a==c (18284)
  a=0 (18285)
  jf 1 (18286)
  a++ (18288)
  r=a 5 (18289)
  (         ifN t5 goto else_831) (18291)
  a== 0 (18291)
  jf 3 (18293)
  lj 18323 (18295)
  (                    993:       v[i] = 0x2c) (18298)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18298)
  a=0 (18298)
  a-- (18299)
  a>>= 1 (18300)
  c=a (18302)
  a=r 0 (18303)
  a+= 5 (18305)
  d=a (18307)
  a=*d (18308)
  a&=c (18309)
  r=a 5 (18310)
  (         t5 = t5 + H[t0+4]〈i〉) (18312)
  d-- (18312)
  c=*d (18313)
  a+=c (18314)
  r=a 5 (18315)
  (         M[t5] = 44) (18317)
  c=a (18317)
  *c= 44 (18318)
  (         goto endif_832) (18320)
  lj 18527 (18320)
  (        :else_831:) (18323)
  (                    994:     elif id_ == 21:) (18323)
  (         t5 = H[t0+1]〈id_〉 == 21) (18323)
  c= 21 (18323)
  a=r 0 (18325)
  a++ (18327)
  d=a (18328)
  a=*d (18329)
  a==c (18330)
  a=0 (18331)
  jf 1 (18332)
  a++ (18334)
  r=a 5 (18335)
  (         ifN t5 goto else_834) (18337)
  a== 0 (18337)
  jf 3 (18339)
  lj 18369 (18341)
  (                    995:       v[i] = 0x22) (18344)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18344)
  a=0 (18344)
  a-- (18345)
  a>>= 1 (18346)
  c=a (18348)
  a=r 0 (18349)
  a+= 5 (18351)
  d=a (18353)
  a=*d (18354)
  a&=c (18355)
  r=a 5 (18356)
  (         t5 = t5 + H[t0+4]〈i〉) (18358)
  d-- (18358)
  c=*d (18359)
  a+=c (18360)
  r=a 5 (18361)
  (         M[t5] = 34) (18363)
  c=a (18363)
  *c= 34 (18364)
  (         goto endif_835) (18366)
  lj 18527 (18366)
  (        :else_834:) (18369)
  (                    996:     elif id_ == 31:) (18369)
  (         t5 = H[t0+1]〈id_〉 == 31) (18369)
  c= 31 (18369)
  a=r 0 (18371)
  a++ (18373)
  d=a (18374)
  a=*d (18375)
  a==c (18376)
  a=0 (18377)
  jf 1 (18378)
  a++ (18380)
  r=a 5 (18381)
  (         ifN t5 goto else_837) (18383)
  a== 0 (18383)
  jf 3 (18385)
  lj 18415 (18387)
  (                    997:       v[i] = 0x2e) (18390)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18390)
  a=0 (18390)
  a-- (18391)
  a>>= 1 (18392)
  c=a (18394)
  a=r 0 (18395)
  a+= 5 (18397)
  d=a (18399)
  a=*d (18400)
  a&=c (18401)
  r=a 5 (18402)
  (         t5 = t5 + H[t0+4]〈i〉) (18404)
  d-- (18404)
  c=*d (18405)
  a+=c (18406)
  r=a 5 (18407)
  (         M[t5] = 46) (18409)
  c=a (18409)
  *c= 46 (18410)
  (         goto endif_838) (18412)
  lj 18527 (18412)
  (        :else_837:) (18415)
  (                    998:     elif id_ == 50:) (18415)
  (         t5 = H[t0+1]〈id_〉 == 50) (18415)
  c= 50 (18415)
  a=r 0 (18417)
  a++ (18419)
  d=a (18420)
  a=*d (18421)
  a==c (18422)
  a=0 (18423)
  jf 1 (18424)
  a++ (18426)
  r=a 5 (18427)
  (         ifN t5 goto else_840) (18429)
  a== 0 (18429)
  jf 3 (18431)
  lj 18461 (18433)
  (                    999:       v[i] = 0x0a) (18436)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18436)
  a=0 (18436)
  a-- (18437)
  a>>= 1 (18438)
  c=a (18440)
  a=r 0 (18441)
  a+= 5 (18443)
  d=a (18445)
  a=*d (18446)
  a&=c (18447)
  r=a 5 (18448)
  (         t5 = t5 + H[t0+4]〈i〉) (18450)
  d-- (18450)
  c=*d (18451)
  a+=c (18452)
  r=a 5 (18453)
  (         M[t5] = 10) (18455)
  c=a (18455)
  *c= 10 (18456)
  (         goto endif_841) (18458)
  lj 18527 (18458)
  (        :else_840:) (18461)
  (                    1000:     elif id_ == 70 or id_ == 86:) (18461)
  (         t6 = H[t0+1]〈id_〉 == 70) (18461)
  c= 70 (18461)
  a=r 0 (18463)
  a++ (18465)
  d=a (18466)
  a=*d (18467)
  a==c (18468)
  a=0 (18469)
  jf 1 (18470)
  a++ (18472)
  r=a 6 (18473)
  (         t7 = H[t0+1]〈id_〉 == 86) (18475)
  c= 86 (18475)
  a=*d (18477)
  a==c (18478)
  a=0 (18479)
  jf 1 (18480)
  a++ (18482)
  r=a 7 (18483)
  (         t5 = t6 or t7) (18485)
  c=a (18485)
  a=r 6 (18486)
  a== 0 (18488)
  jf 1 (18490)
  a=c (18492)
  r=a 5 (18493)
  (         ifN t5 goto else_844) (18495)
  a== 0 (18495)
  jf 3 (18497)
  lj 18527 (18499)
  (                    1001:       v[i] = 0x3d) (18502)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18502)
  a=0 (18502)
  a-- (18503)
  a>>= 1 (18504)
  c=a (18506)
  a=r 0 (18507)
  a+= 5 (18509)
  d=a (18511)
  a=*d (18512)
  a&=c (18513)
  r=a 5 (18514)
  (         t5 = t5 + H[t0+4]〈i〉) (18516)
  d-- (18516)
  c=*d (18517)
  a+=c (18518)
  r=a 5 (18519)
  (         M[t5] = 61) (18521)
  c=a (18521)
  *c= 61 (18522)
  (         goto endif_845) (18524)
  lj 18527 (18524)
  (        :else_844:) (18527)
  (        :endif_845:) (18527)
  (        :endif_841:) (18527)
  (        :endif_838:) (18527)
  (        :endif_835:) (18527)
  (        :endif_832:) (18527)
  (                    1002:     i += 1) (18527)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (18527)
  a=r 0 (18527)
  a+= 4 (18529)
  d=a (18531)
  *d++ (18532)
  (                    1003:     if id_ == 14 or id_ == 31:) (18533)
  (         t6 = H[t0+1]〈id_〉 == 14) (18533)
  c= 14 (18533)
  a=r 0 (18535)
  a++ (18537)
  d=a (18538)
  a=*d (18539)
  a==c (18540)
  a=0 (18541)
  jf 1 (18542)
  a++ (18544)
  r=a 6 (18545)
  (         t7 = H[t0+1]〈id_〉 == 31) (18547)
  c= 31 (18547)
  a=*d (18549)
  a==c (18550)
  a=0 (18551)
  jf 1 (18552)
  a++ (18554)
  r=a 7 (18555)
  (         t5 = t6 or t7) (18557)
  c=a (18557)
  a=r 6 (18558)
  a== 0 (18560)
  jf 1 (18562)
  a=c (18564)
  r=a 5 (18565)
  (         ifN t5 goto else_848) (18567)
  a== 0 (18567)
  jf 3 (18569)
  lj 18599 (18571)
  (                    1004:       v[i] = 0x20) (18574)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18574)
  a=0 (18574)
  a-- (18575)
  a>>= 1 (18576)
  c=a (18578)
  a=r 0 (18579)
  a+= 5 (18581)
  d=a (18583)
  a=*d (18584)
  a&=c (18585)
  r=a 5 (18586)
  (         t5 = t5 + H[t0+4]〈i〉) (18588)
  d-- (18588)
  c=*d (18589)
  a+=c (18590)
  r=a 5 (18591)
  (         M[t5] = 32) (18593)
  c=a (18593)
  *c= 32 (18594)
  (         goto endif_849) (18596)
  lj 18783 (18596)
  (        :else_848:) (18599)
  (                    1005:     elif id_ == 21:) (18599)
  (         t5 = H[t0+1]〈id_〉 == 21) (18599)
  c= 21 (18599)
  a=r 0 (18601)
  a++ (18603)
  d=a (18604)
  a=*d (18605)
  a==c (18606)
  a=0 (18607)
  jf 1 (18608)
  a++ (18610)
  r=a 5 (18611)
  (         ifN t5 goto else_851) (18613)
  a== 0 (18613)
  jf 3 (18615)
  lj 18645 (18617)
  (                    1006:       v[i] = 0x3e) (18620)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18620)
  a=0 (18620)
  a-- (18621)
  a>>= 1 (18622)
  c=a (18624)
  a=r 0 (18625)
  a+= 5 (18627)
  d=a (18629)
  a=*d (18630)
  a&=c (18631)
  r=a 5 (18632)
  (         t5 = t5 + H[t0+4]〈i〉) (18634)
  d-- (18634)
  c=*d (18635)
  a+=c (18636)
  r=a 5 (18637)
  (         M[t5] = 62) (18639)
  c=a (18639)
  *c= 62 (18640)
  (         goto endif_852) (18642)
  lj 18783 (18642)
  (        :else_851:) (18645)
  (                    1007:     elif id_ == 50:) (18645)
  (         t5 = H[t0+1]〈id_〉 == 50) (18645)
  c= 50 (18645)
  a=r 0 (18647)
  a++ (18649)
  d=a (18650)
  a=*d (18651)
  a==c (18652)
  a=0 (18653)
  jf 1 (18654)
  a++ (18656)
  r=a 5 (18657)
  (         ifN t5 goto else_854) (18659)
  a== 0 (18659)
  jf 3 (18661)
  lj 18691 (18663)
  (                    1008:       v[i] = 0x09) (18666)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18666)
  a=0 (18666)
  a-- (18667)
  a>>= 1 (18668)
  c=a (18670)
  a=r 0 (18671)
  a+= 5 (18673)
  d=a (18675)
  a=*d (18676)
  a&=c (18677)
  r=a 5 (18678)
  (         t5 = t5 + H[t0+4]〈i〉) (18680)
  d-- (18680)
  c=*d (18681)
  a+=c (18682)
  r=a 5 (18683)
  (         M[t5] = 9) (18685)
  c=a (18685)
  *c= 9 (18686)
  (         goto endif_855) (18688)
  lj 18783 (18688)
  (        :else_854:) (18691)
  (                    1009:     elif id_ == 70:) (18691)
  (         t5 = H[t0+1]〈id_〉 == 70) (18691)
  c= 70 (18691)
  a=r 0 (18693)
  a++ (18695)
  d=a (18696)
  a=*d (18697)
  a==c (18698)
  a=0 (18699)
  jf 1 (18700)
  a++ (18702)
  r=a 5 (18703)
  (         ifN t5 goto else_857) (18705)
  a== 0 (18705)
  jf 3 (18707)
  lj 18737 (18709)
  (                    1010:       v[i] = 0x22) (18712)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18712)
  a=0 (18712)
  a-- (18713)
  a>>= 1 (18714)
  c=a (18716)
  a=r 0 (18717)
  a+= 5 (18719)
  d=a (18721)
  a=*d (18722)
  a&=c (18723)
  r=a 5 (18724)
  (         t5 = t5 + H[t0+4]〈i〉) (18726)
  d-- (18726)
  c=*d (18727)
  a+=c (18728)
  r=a 5 (18729)
  (         M[t5] = 34) (18731)
  c=a (18731)
  *c= 34 (18732)
  (         goto endif_858) (18734)
  lj 18783 (18734)
  (        :else_857:) (18737)
  (                    1011:     elif id_ == 86:) (18737)
  (         t5 = H[t0+1]〈id_〉 == 86) (18737)
  c= 86 (18737)
  a=r 0 (18739)
  a++ (18741)
  d=a (18742)
  a=*d (18743)
  a==c (18744)
  a=0 (18745)
  jf 1 (18746)
  a++ (18748)
  r=a 5 (18749)
  (         ifN t5 goto else_860) (18751)
  a== 0 (18751)
  jf 3 (18753)
  lj 18783 (18755)
  (                    1012:       v[i] = 0x27) (18758)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (18758)
  a=0 (18758)
  a-- (18759)
  a>>= 1 (18760)
  c=a (18762)
  a=r 0 (18763)
  a+= 5 (18765)
  d=a (18767)
  a=*d (18768)
  a&=c (18769)
  r=a 5 (18770)
  (         t5 = t5 + H[t0+4]〈i〉) (18772)
  d-- (18772)
  c=*d (18773)
  a+=c (18774)
  r=a 5 (18775)
  (         M[t5] = 39) (18777)
  c=a (18777)
  *c= 39 (18778)
  (         goto endif_861) (18780)
  lj 18783 (18780)
  (        :else_860:) (18783)
  (        :endif_861:) (18783)
  (        :endif_858:) (18783)
  (        :endif_855:) (18783)
  (        :endif_852:) (18783)
  (        :endif_849:) (18783)
  (         goto endif_825) (18783)
  lj 28969 (18783)
  (        :else_824:) (18786)
  (                    1013:   elif id_ == 15 or id_ == 96 or id_ == 109:  # upper first 1 vorne an 1 hinten an) (18786)
  (         t7 = H[t0+1]〈id_〉 == 15) (18786)
  c= 15 (18786)
  a=r 0 (18788)
  a++ (18790)
  d=a (18791)
  a=*d (18792)
  a==c (18793)
  a=0 (18794)
  jf 1 (18795)
  a++ (18797)
  r=a 7 (18798)
  (         t8 = H[t0+1]〈id_〉 == 96) (18800)
  c= 96 (18800)
  a=*d (18802)
  a==c (18803)
  a=0 (18804)
  jf 1 (18805)
  a++ (18807)
  r=a 8 (18808)
  (         t6 = t7 or t8) (18810)
  c=a (18810)
  a=r 7 (18811)
  a== 0 (18813)
  jf 1 (18815)
  a=c (18817)
  r=a 6 (18818)
  (         t7 = H[t0+1]〈id_〉 == 109) (18820)
  c= 109 (18820)
  a=*d (18822)
  a==c (18823)
  a=0 (18824)
  jf 1 (18825)
  a++ (18827)
  r=a 7 (18828)
  (         t5 = t6 or t7) (18830)
  c=a (18830)
  a=r 6 (18831)
  a== 0 (18833)
  jf 1 (18835)
  a=c (18837)
  r=a 5 (18838)
  (         ifN t5 goto else_865) (18840)
  a== 0 (18840)
  jf 3 (18842)
  lj 19324 (18844)
  (                    1014:     u = uppercase_first〈base_word〉) (18847)
  (         H[t0+12]〈〉 = t0) (18847)
  a=r 0 (18847)
  a+= 12 (18849)
  d=a (18851)
  a=r 0 (18852)
  *d=a (18854)
  (saved bsp, return id:) (18855)
  (         H[t0+13]〈〉 = 73) (18855)
  d++ (18855)
  *d= 73 (18856)
  (push arguments:) (18858)
  (         H[t0+14]〈〉 = H[t0+2]〈base_word〉) (18858)
  a+= 2 (18858)
  d=a (18860)
  c=*d (18861)
  a=r 0 (18862)
  a+= 14 (18864)
  d=a (18866)
  *d=c (18867)
  (         t0 = t0 + 13) (18868)
  c= 13 (18868)
  a=r 0 (18870)
  a+=c (18872)
  r=a 0 (18873)
  (         goto uppercase_first) (18875)
  lj 9839 (18875)
  (        :return_id_73:) (18878)
  (         t5 = t1) (18878)
  a=r 1 (18878)
  r=a 5 (18880)
  (         H[t0+7]〈u〉 = t5) (18882)
  a=r 0 (18882)
  a+= 7 (18884)
  d=a (18886)
  a=r 5 (18887)
  *d=a (18889)
  (                    1015:     j = len_pM〈u〉) (18890)
  (         t5 = H[t0+7]〈u〉) (18890)
  a=*d (18890)
  r=a 5 (18891)
  (         t5 = t5 & 2147483647) (18893)
  a=0 (18893)
  a-- (18894)
  a>>= 1 (18895)
  c=a (18897)
  a=r 5 (18898)
  a&=c (18900)
  r=a 5 (18901)
  (         t5 = t5 - 5) (18903)
  c= 5 (18903)
  a-=c (18905)
  r=a 5 (18906)
  (         t6 = M[t5] << 8) (18908)
  c= 8 (18908)
  b=a (18910)
  a=*b (18911)
  a<<=c (18912)
  r=a 6 (18913)
  (         t5 = t5 + 1) (18915)
  a=r 5 (18915)
  a++ (18917)
  r=a 5 (18918)
  (         t6 = t6 + M[t5]) (18920)
  b=a (18920)
  c=*b (18921)
  a=r 6 (18922)
  a+=c (18924)
  r=a 6 (18925)
  (         t6 = t6 << 8) (18927)
  c= 8 (18927)
  a<<=c (18929)
  r=a 6 (18930)
  (         t5 = t5 + 1) (18932)
  a=r 5 (18932)
  a++ (18934)
  r=a 5 (18935)
  (         t6 = t6 + M[t5]) (18937)
  b=a (18937)
  c=*b (18938)
  a=r 6 (18939)
  a+=c (18941)
  r=a 6 (18942)
  (         t6 = t6 << 8) (18944)
  c= 8 (18944)
  a<<=c (18946)
  r=a 6 (18947)
  (         t5 = t5 + 1) (18949)
  a=r 5 (18949)
  a++ (18951)
  r=a 5 (18952)
  (         t6 = t6 + M[t5]) (18954)
  b=a (18954)
  c=*b (18955)
  a=r 6 (18956)
  a+=c (18958)
  r=a 6 (18959)
  (         H[t0+6]〈j〉 = t6) (18961)
  d-- (18961)
  *d=a (18962)
  (                    1016:     v = alloc_pM〈j+2〉) (18963)
  (         t5 = H[t0+6]〈j〉 + 2) (18963)
  c= 2 (18963)
  a=*d (18965)
  a+=c (18966)
  r=a 5 (18967)
  (         H[t0+12]〈〉 = t0) (18969)
  a=r 0 (18969)
  a+= 12 (18971)
  d=a (18973)
  a=r 0 (18974)
  *d=a (18976)
  (saved bsp, return id:) (18977)
  (         H[t0+13]〈〉 = 74) (18977)
  d++ (18977)
  *d= 74 (18978)
  (push arguments:) (18980)
  (         H[t0+14]〈〉 = t5) (18980)
  d++ (18980)
  a=r 5 (18981)
  *d=a (18983)
  (         t0 = t0 + 13) (18984)
  c= 13 (18984)
  a=r 0 (18986)
  a+=c (18988)
  r=a 0 (18989)
  (         goto addr_alloc_pM) (18991)
  lj 323 (18991)
  (        :return_id_74:) (18994)
  (         t6 = t1) (18994)
  a=r 1 (18994)
  r=a 6 (18996)
  (         t6 = t6 | 2147483648) (18998)
  a= 1 (18998)
  a<<= 31 (19000)
  c=a (19002)
  a=r 6 (19003)
  a|=c (19005)
  r=a 6 (19006)
  (         H[t0+5]〈v〉 = t6) (19008)
  a=r 0 (19008)
  a+= 5 (19010)
  d=a (19012)
  a=r 6 (19013)
  *d=a (19015)
  (                    1017:     v[0] = 0x20) (19016)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19016)
  a=0 (19016)
  a-- (19017)
  a>>= 1 (19018)
  c=a (19020)
  a=*d (19021)
  a&=c (19022)
  r=a 5 (19023)
  (         t5 = t5 + 0) (19025)
  (         M[t5] = 32) (19025)
  c=a (19025)
  *c= 32 (19026)
  (                    1018:     while i < j:) (19028)
  (        :while_867:) (19028)
  (         t5 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (19028)
  a=r 0 (19028)
  a+= 6 (19030)
  d=a (19032)
  c=*d (19033)
  a=r 0 (19034)
  a+= 4 (19036)
  d=a (19038)
  a=*d (19039)
  a<c (19040)
  a=0 (19041)
  jf 1 (19042)
  a++ (19044)
  r=a 5 (19045)
  (         ifN t5 goto whileend_869) (19047)
  a== 0 (19047)
  jf 3 (19049)
  lj 19158 (19051)
  (                    1019:       v[i+1] = u[i]) (19054)
  (         t5 = H[t0+7]〈u〉 >> 31) (19054)
  c= 31 (19054)
  a=r 0 (19056)
  a+= 7 (19058)
  d=a (19060)
  a=*d (19061)
  a>>=c (19062)
  r=a 5 (19063)
  (         if t5 goto isM_871) (19065)
  a== 0 (19065)
  jt 3 (19067)
  lj 19094 (19069)
  (         t5 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (19072)
  a=r 0 (19072)
  a+= 4 (19074)
  d=a (19076)
  c=*d (19077)
  a=r 0 (19078)
  a+= 7 (19080)
  d=a (19082)
  a=*d (19083)
  a+=c (19084)
  r=a 5 (19085)
  (         t5 = H[t5]〈〉) (19087)
  d=a (19087)
  a=*d (19088)
  r=a 5 (19089)
  (         goto MorHdone_872) (19091)
  lj 19123 (19091)
  (        :isM_871:) (19094)
  (         t5 = H[t0+7]〈u〉 & 2147483647) (19094)
  a=0 (19094)
  a-- (19095)
  a>>= 1 (19096)
  c=a (19098)
  a=r 0 (19099)
  a+= 7 (19101)
  d=a (19103)
  a=*d (19104)
  a&=c (19105)
  r=a 5 (19106)
  (         t5 = t5 + H[t0+4]〈i〉) (19108)
  a=r 0 (19108)
  a+= 4 (19110)
  d=a (19112)
  c=*d (19113)
  a=r 5 (19114)
  a+=c (19116)
  r=a 5 (19117)
  (         t5 = M[t5]) (19119)
  b=a (19119)
  a=*b (19120)
  r=a 5 (19121)
  (        :MorHdone_872:) (19123)
  (         t6 = H[t0+4]〈i〉 + 1) (19123)
  c= 1 (19123)
  a=r 0 (19125)
  a+= 4 (19127)
  d=a (19129)
  a=*d (19130)
  a+=c (19131)
  r=a 6 (19132)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (19134)
  a=0 (19134)
  a-- (19135)
  a>>= 1 (19136)
  c=a (19138)
  d++ (19139)
  a=*d (19140)
  a&=c (19141)
  r=a 7 (19142)
  (         t7 = t7 + t6) (19144)
  c=r 6 (19144)
  a+=c (19146)
  r=a 7 (19147)
  (         M[t7] = t5) (19149)
  c=a (19149)
  a=r 5 (19150)
  *c=a (19152)
  (                    1020:       i += 1) (19153)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (19153)
  d-- (19153)
  *d++ (19154)
  (         goto while_867) (19155)
  lj 19028 (19155)
  (        :whileend_869:) (19158)
  (                    1021:     i += 1) (19158)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (19158)
  a=r 0 (19158)
  a+= 4 (19160)
  d=a (19162)
  *d++ (19163)
  (                    1022:     if id_ == 96:) (19164)
  (         t5 = H[t0+1]〈id_〉 == 96) (19164)
  c= 96 (19164)
  a=r 0 (19166)
  a++ (19168)
  d=a (19169)
  a=*d (19170)
  a==c (19171)
  a=0 (19172)
  jf 1 (19173)
  a++ (19175)
  r=a 5 (19176)
  (         ifN t5 goto else_874) (19178)
  a== 0 (19178)
  jf 3 (19180)
  lj 19210 (19182)
  (                    1023:       v[i] = 0x2e) (19185)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19185)
  a=0 (19185)
  a-- (19186)
  a>>= 1 (19187)
  c=a (19189)
  a=r 0 (19190)
  a+= 5 (19192)
  d=a (19194)
  a=*d (19195)
  a&=c (19196)
  r=a 5 (19197)
  (         t5 = t5 + H[t0+4]〈i〉) (19199)
  d-- (19199)
  c=*d (19200)
  a+=c (19201)
  r=a 5 (19202)
  (         M[t5] = 46) (19204)
  c=a (19204)
  *c= 46 (19205)
  (         goto endif_875) (19207)
  lj 19278 (19207)
  (        :else_874:) (19210)
  (                    1024:     elif id_ == 109:) (19210)
  (         t5 = H[t0+1]〈id_〉 == 109) (19210)
  c= 109 (19210)
  a=r 0 (19212)
  a++ (19214)
  d=a (19215)
  a=*d (19216)
  a==c (19217)
  a=0 (19218)
  jf 1 (19219)
  a++ (19221)
  r=a 5 (19222)
  (         ifN t5 goto else_877) (19224)
  a== 0 (19224)
  jf 3 (19226)
  lj 19256 (19228)
  (                    1025:       v[i] = 0x2c) (19231)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19231)
  a=0 (19231)
  a-- (19232)
  a>>= 1 (19233)
  c=a (19235)
  a=r 0 (19236)
  a+= 5 (19238)
  d=a (19240)
  a=*d (19241)
  a&=c (19242)
  r=a 5 (19243)
  (         t5 = t5 + H[t0+4]〈i〉) (19245)
  d-- (19245)
  c=*d (19246)
  a+=c (19247)
  r=a 5 (19248)
  (         M[t5] = 44) (19250)
  c=a (19250)
  *c= 44 (19251)
  (         goto endif_878) (19253)
  lj 19278 (19253)
  (        :else_877:) (19256)
  (                    1027:       v[i] = 0x20) (19256)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19256)
  a=0 (19256)
  a-- (19257)
  a>>= 1 (19258)
  c=a (19260)
  a=r 0 (19261)
  a+= 5 (19263)
  d=a (19265)
  a=*d (19266)
  a&=c (19267)
  r=a 5 (19268)
  (         t5 = t5 + H[t0+4]〈i〉) (19270)
  d-- (19270)
  c=*d (19271)
  a+=c (19272)
  r=a 5 (19273)
  (         M[t5] = 32) (19275)
  c=a (19275)
  *c= 32 (19276)
  (        :endif_878:) (19278)
  (        :endif_875:) (19278)
  (                    1028:     free_pM〈u〉) (19278)
  (         t5 = H[t0+7]〈u〉 & 2147483647) (19278)
  a=0 (19278)
  a-- (19279)
  a>>= 1 (19280)
  c=a (19282)
  a=r 0 (19283)
  a+= 7 (19285)
  d=a (19287)
  a=*d (19288)
  a&=c (19289)
  r=a 5 (19290)
  (         H[t0+12]〈〉 = t0) (19292)
  a=r 0 (19292)
  a+= 12 (19294)
  d=a (19296)
  a=r 0 (19297)
  *d=a (19299)
  (saved bsp, return id:) (19300)
  (         H[t0+13]〈〉 = 75) (19300)
  d++ (19300)
  *d= 75 (19301)
  (push arguments:) (19303)
  (         H[t0+14]〈〉 = t5) (19303)
  d++ (19303)
  a=r 5 (19304)
  *d=a (19306)
  (         t0 = t0 + 13) (19307)
  c= 13 (19307)
  a=r 0 (19309)
  a+=c (19311)
  r=a 0 (19312)
  (         goto addr_free_pM) (19314)
  lj 2406 (19314)
  (        :return_id_75:) (19317)
  (         t6 = t1) (19317)
  a=r 1 (19317)
  r=a 6 (19319)
  (         goto endif_866) (19321)
  lj 28969 (19321)
  (        :else_865:) (19324)
  (                    1029:   elif id_ == 28 or id_ == 53 or id_ == 61 or id_ == 82 or id_ == 84:  # 3 hinten an) (19324)
  (         t9 = H[t0+1]〈id_〉 == 28) (19324)
  c= 28 (19324)
  a=r 0 (19326)
  a++ (19328)
  d=a (19329)
  a=*d (19330)
  a==c (19331)
  a=0 (19332)
  jf 1 (19333)
  a++ (19335)
  r=a 9 (19336)
  (         t10 = H[t0+1]〈id_〉 == 53) (19338)
  c= 53 (19338)
  a=*d (19340)
  a==c (19341)
  a=0 (19342)
  jf 1 (19343)
  a++ (19345)
  r=a 10 (19346)
  (         t8 = t9 or t10) (19348)
  c=a (19348)
  a=r 9 (19349)
  a== 0 (19351)
  jf 1 (19353)
  a=c (19355)
  r=a 8 (19356)
  (         t9 = H[t0+1]〈id_〉 == 61) (19358)
  c= 61 (19358)
  a=*d (19360)
  a==c (19361)
  a=0 (19362)
  jf 1 (19363)
  a++ (19365)
  r=a 9 (19366)
  (         t7 = t8 or t9) (19368)
  c=a (19368)
  a=r 8 (19369)
  a== 0 (19371)
  jf 1 (19373)
  a=c (19375)
  r=a 7 (19376)
  (         t8 = H[t0+1]〈id_〉 == 82) (19378)
  c= 82 (19378)
  a=*d (19380)
  a==c (19381)
  a=0 (19382)
  jf 1 (19383)
  a++ (19385)
  r=a 8 (19386)
  (         t6 = t7 or t8) (19388)
  c=a (19388)
  a=r 7 (19389)
  a== 0 (19391)
  jf 1 (19393)
  a=c (19395)
  r=a 6 (19396)
  (         t7 = H[t0+1]〈id_〉 == 84) (19398)
  c= 84 (19398)
  a=*d (19400)
  a==c (19401)
  a=0 (19402)
  jf 1 (19403)
  a++ (19405)
  r=a 7 (19406)
  (         t5 = t6 or t7) (19408)
  c=a (19408)
  a=r 6 (19409)
  a== 0 (19411)
  jf 1 (19413)
  a=c (19415)
  r=a 5 (19416)
  (         ifN t5 goto else_884) (19418)
  a== 0 (19418)
  jf 3 (19420)
  lj 20024 (19422)
  (                    1030:     v = alloc_pM〈l+3〉) (19425)
  (         t5 = H[t0+3]〈l〉 + 3) (19425)
  c= 3 (19425)
  a=r 0 (19427)
  a+= 3 (19429)
  d=a (19431)
  a=*d (19432)
  a+=c (19433)
  r=a 5 (19434)
  (         H[t0+12]〈〉 = t0) (19436)
  a=r 0 (19436)
  a+= 12 (19438)
  d=a (19440)
  a=r 0 (19441)
  *d=a (19443)
  (saved bsp, return id:) (19444)
  (         H[t0+13]〈〉 = 76) (19444)
  d++ (19444)
  *d= 76 (19445)
  (push arguments:) (19447)
  (         H[t0+14]〈〉 = t5) (19447)
  d++ (19447)
  a=r 5 (19448)
  *d=a (19450)
  (         t0 = t0 + 13) (19451)
  c= 13 (19451)
  a=r 0 (19453)
  a+=c (19455)
  r=a 0 (19456)
  (         goto addr_alloc_pM) (19458)
  lj 323 (19458)
  (        :return_id_76:) (19461)
  (         t6 = t1) (19461)
  a=r 1 (19461)
  r=a 6 (19463)
  (         t6 = t6 | 2147483648) (19465)
  a= 1 (19465)
  a<<= 31 (19467)
  c=a (19469)
  a=r 6 (19470)
  a|=c (19472)
  r=a 6 (19473)
  (         H[t0+5]〈v〉 = t6) (19475)
  a=r 0 (19475)
  a+= 5 (19477)
  d=a (19479)
  a=r 6 (19480)
  *d=a (19482)
  (                    1031:     while i < l:) (19483)
  (        :while_886:) (19483)
  (         t5 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (19483)
  a=r 0 (19483)
  a+= 3 (19485)
  d=a (19487)
  c=*d (19488)
  d++ (19489)
  a=*d (19490)
  a<c (19491)
  a=0 (19492)
  jf 1 (19493)
  a++ (19495)
  r=a 5 (19496)
  (         ifN t5 goto whileend_888) (19498)
  a== 0 (19498)
  jf 3 (19500)
  lj 19557 (19502)
  (                    1032:       v[i] = base_word[i]) (19505)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (19505)
  a=0 (19505)
  a-- (19506)
  a>>= 1 (19507)
  c=a (19509)
  a=r 0 (19510)
  a+= 2 (19512)
  d=a (19514)
  a=*d (19515)
  a&=c (19516)
  r=a 5 (19517)
  (         t5 = t5 + H[t0+4]〈i〉) (19519)
  a=r 0 (19519)
  a+= 4 (19521)
  d=a (19523)
  c=*d (19524)
  a=r 5 (19525)
  a+=c (19527)
  r=a 5 (19528)
  (         t5 = M[t5]) (19530)
  b=a (19530)
  a=*b (19531)
  r=a 5 (19532)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (19534)
  a=0 (19534)
  a-- (19535)
  a>>= 1 (19536)
  c=a (19538)
  d++ (19539)
  a=*d (19540)
  a&=c (19541)
  r=a 6 (19542)
  (         t6 = t6 + H[t0+4]〈i〉) (19544)
  d-- (19544)
  c=*d (19545)
  a+=c (19546)
  r=a 6 (19547)
  (         M[t6] = t5) (19549)
  c=a (19549)
  a=r 5 (19550)
  *c=a (19552)
  (                    1033:       i += 1) (19553)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (19553)
  *d++ (19553)
  (         goto while_886) (19554)
  lj 19483 (19554)
  (        :whileend_888:) (19557)
  (                    1034:     if id_ == 28:) (19557)
  (         t5 = H[t0+1]〈id_〉 == 28) (19557)
  c= 28 (19557)
  a=r 0 (19559)
  a++ (19561)
  d=a (19562)
  a=*d (19563)
  a==c (19564)
  a=0 (19565)
  jf 1 (19566)
  a++ (19568)
  r=a 5 (19569)
  (         ifN t5 goto else_891) (19571)
  a== 0 (19571)
  jf 3 (19573)
  lj 19603 (19575)
  (                    1035:       v[i] = 0x20) (19578)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19578)
  a=0 (19578)
  a-- (19579)
  a>>= 1 (19580)
  c=a (19582)
  a=r 0 (19583)
  a+= 5 (19585)
  d=a (19587)
  a=*d (19588)
  a&=c (19589)
  r=a 5 (19590)
  (         t5 = t5 + H[t0+4]〈i〉) (19592)
  d-- (19592)
  c=*d (19593)
  a+=c (19594)
  r=a 5 (19595)
  (         M[t5] = 32) (19597)
  c=a (19597)
  *c= 32 (19598)
  (         goto endif_892) (19600)
  lj 19761 (19600)
  (        :else_891:) (19603)
  (                    1036:     elif id_ == 53 or id_ == 82:) (19603)
  (         t6 = H[t0+1]〈id_〉 == 53) (19603)
  c= 53 (19603)
  a=r 0 (19605)
  a++ (19607)
  d=a (19608)
  a=*d (19609)
  a==c (19610)
  a=0 (19611)
  jf 1 (19612)
  a++ (19614)
  r=a 6 (19615)
  (         t7 = H[t0+1]〈id_〉 == 82) (19617)
  c= 82 (19617)
  a=*d (19619)
  a==c (19620)
  a=0 (19621)
  jf 1 (19622)
  a++ (19624)
  r=a 7 (19625)
  (         t5 = t6 or t7) (19627)
  c=a (19627)
  a=r 6 (19628)
  a== 0 (19630)
  jf 1 (19632)
  a=c (19634)
  r=a 5 (19635)
  (         ifN t5 goto else_895) (19637)
  a== 0 (19637)
  jf 3 (19639)
  lj 19669 (19641)
  (                    1037:       v[i] = 0x65) (19644)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19644)
  a=0 (19644)
  a-- (19645)
  a>>= 1 (19646)
  c=a (19648)
  a=r 0 (19649)
  a+= 5 (19651)
  d=a (19653)
  a=*d (19654)
  a&=c (19655)
  r=a 5 (19656)
  (         t5 = t5 + H[t0+4]〈i〉) (19658)
  d-- (19658)
  c=*d (19659)
  a+=c (19660)
  r=a 5 (19661)
  (         M[t5] = 101) (19663)
  c=a (19663)
  *c= 101 (19664)
  (         goto endif_896) (19666)
  lj 19761 (19666)
  (        :else_895:) (19669)
  (                    1038:     elif id_ == 61:) (19669)
  (         t5 = H[t0+1]〈id_〉 == 61) (19669)
  c= 61 (19669)
  a=r 0 (19671)
  a++ (19673)
  d=a (19674)
  a=*d (19675)
  a==c (19676)
  a=0 (19677)
  jf 1 (19678)
  a++ (19680)
  r=a 5 (19681)
  (         ifN t5 goto else_898) (19683)
  a== 0 (19683)
  jf 3 (19685)
  lj 19715 (19687)
  (                    1039:       v[i] = 0x6c) (19690)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19690)
  a=0 (19690)
  a-- (19691)
  a>>= 1 (19692)
  c=a (19694)
  a=r 0 (19695)
  a+= 5 (19697)
  d=a (19699)
  a=*d (19700)
  a&=c (19701)
  r=a 5 (19702)
  (         t5 = t5 + H[t0+4]〈i〉) (19704)
  d-- (19704)
  c=*d (19705)
  a+=c (19706)
  r=a 5 (19707)
  (         M[t5] = 108) (19709)
  c=a (19709)
  *c= 108 (19710)
  (         goto endif_899) (19712)
  lj 19761 (19712)
  (        :else_898:) (19715)
  (                    1040:     elif id_ == 84:) (19715)
  (         t5 = H[t0+1]〈id_〉 == 84) (19715)
  c= 84 (19715)
  a=r 0 (19717)
  a++ (19719)
  d=a (19720)
  a=*d (19721)
  a==c (19722)
  a=0 (19723)
  jf 1 (19724)
  a++ (19726)
  r=a 5 (19727)
  (         ifN t5 goto else_901) (19729)
  a== 0 (19729)
  jf 3 (19731)
  lj 19761 (19733)
  (                    1041:       v[i] = 0x61) (19736)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19736)
  a=0 (19736)
  a-- (19737)
  a>>= 1 (19738)
  c=a (19740)
  a=r 0 (19741)
  a+= 5 (19743)
  d=a (19745)
  a=*d (19746)
  a&=c (19747)
  r=a 5 (19748)
  (         t5 = t5 + H[t0+4]〈i〉) (19750)
  d-- (19750)
  c=*d (19751)
  a+=c (19752)
  r=a 5 (19753)
  (         M[t5] = 97) (19755)
  c=a (19755)
  *c= 97 (19756)
  (         goto endif_902) (19758)
  lj 19761 (19758)
  (        :else_901:) (19761)
  (        :endif_902:) (19761)
  (        :endif_899:) (19761)
  (        :endif_896:) (19761)
  (        :endif_892:) (19761)
  (                    1042:     i += 1) (19761)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (19761)
  a=r 0 (19761)
  a+= 4 (19763)
  d=a (19765)
  *d++ (19766)
  (                    1043:     if id_ == 28:) (19767)
  (         t5 = H[t0+1]〈id_〉 == 28) (19767)
  c= 28 (19767)
  a=r 0 (19769)
  a++ (19771)
  d=a (19772)
  a=*d (19773)
  a==c (19774)
  a=0 (19775)
  jf 1 (19776)
  a++ (19778)
  r=a 5 (19779)
  (         ifN t5 goto else_904) (19781)
  a== 0 (19781)
  jf 3 (19783)
  lj 19813 (19785)
  (                    1044:       v[i] = 0x61) (19788)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19788)
  a=0 (19788)
  a-- (19789)
  a>>= 1 (19790)
  c=a (19792)
  a=r 0 (19793)
  a+= 5 (19795)
  d=a (19797)
  a=*d (19798)
  a&=c (19799)
  r=a 5 (19800)
  (         t5 = t5 + H[t0+4]〈i〉) (19802)
  d-- (19802)
  c=*d (19803)
  a+=c (19804)
  r=a 5 (19805)
  (         M[t5] = 97) (19807)
  c=a (19807)
  *c= 97 (19808)
  (         goto endif_905) (19810)
  lj 19997 (19810)
  (        :else_904:) (19813)
  (                    1045:     elif id_ == 53:) (19813)
  (         t5 = H[t0+1]〈id_〉 == 53) (19813)
  c= 53 (19813)
  a=r 0 (19815)
  a++ (19817)
  d=a (19818)
  a=*d (19819)
  a==c (19820)
  a=0 (19821)
  jf 1 (19822)
  a++ (19824)
  r=a 5 (19825)
  (         ifN t5 goto else_907) (19827)
  a== 0 (19827)
  jf 3 (19829)
  lj 19859 (19831)
  (                    1046:       v[i] = 0x64) (19834)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19834)
  a=0 (19834)
  a-- (19835)
  a>>= 1 (19836)
  c=a (19838)
  a=r 0 (19839)
  a+= 5 (19841)
  d=a (19843)
  a=*d (19844)
  a&=c (19845)
  r=a 5 (19846)
  (         t5 = t5 + H[t0+4]〈i〉) (19848)
  d-- (19848)
  c=*d (19849)
  a+=c (19850)
  r=a 5 (19851)
  (         M[t5] = 100) (19853)
  c=a (19853)
  *c= 100 (19854)
  (         goto endif_908) (19856)
  lj 19997 (19856)
  (        :else_907:) (19859)
  (                    1047:     elif id_ == 61:) (19859)
  (         t5 = H[t0+1]〈id_〉 == 61) (19859)
  c= 61 (19859)
  a=r 0 (19861)
  a++ (19863)
  d=a (19864)
  a=*d (19865)
  a==c (19866)
  a=0 (19867)
  jf 1 (19868)
  a++ (19870)
  r=a 5 (19871)
  (         ifN t5 goto else_910) (19873)
  a== 0 (19873)
  jf 3 (19875)
  lj 19905 (19877)
  (                    1048:       v[i] = 0x79) (19880)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19880)
  a=0 (19880)
  a-- (19881)
  a>>= 1 (19882)
  c=a (19884)
  a=r 0 (19885)
  a+= 5 (19887)
  d=a (19889)
  a=*d (19890)
  a&=c (19891)
  r=a 5 (19892)
  (         t5 = t5 + H[t0+4]〈i〉) (19894)
  d-- (19894)
  c=*d (19895)
  a+=c (19896)
  r=a 5 (19897)
  (         M[t5] = 121) (19899)
  c=a (19899)
  *c= 121 (19900)
  (         goto endif_911) (19902)
  lj 19997 (19902)
  (        :else_910:) (19905)
  (                    1049:     elif id_ == 82:) (19905)
  (         t5 = H[t0+1]〈id_〉 == 82) (19905)
  c= 82 (19905)
  a=r 0 (19907)
  a++ (19909)
  d=a (19910)
  a=*d (19911)
  a==c (19912)
  a=0 (19913)
  jf 1 (19914)
  a++ (19916)
  r=a 5 (19917)
  (         ifN t5 goto else_913) (19919)
  a== 0 (19919)
  jf 3 (19921)
  lj 19951 (19923)
  (                    1050:       v[i] = 0x72) (19926)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19926)
  a=0 (19926)
  a-- (19927)
  a>>= 1 (19928)
  c=a (19930)
  a=r 0 (19931)
  a+= 5 (19933)
  d=a (19935)
  a=*d (19936)
  a&=c (19937)
  r=a 5 (19938)
  (         t5 = t5 + H[t0+4]〈i〉) (19940)
  d-- (19940)
  c=*d (19941)
  a+=c (19942)
  r=a 5 (19943)
  (         M[t5] = 114) (19945)
  c=a (19945)
  *c= 114 (19946)
  (         goto endif_914) (19948)
  lj 19997 (19948)
  (        :else_913:) (19951)
  (                    1051:     elif id_ == 84:) (19951)
  (         t5 = H[t0+1]〈id_〉 == 84) (19951)
  c= 84 (19951)
  a=r 0 (19953)
  a++ (19955)
  d=a (19956)
  a=*d (19957)
  a==c (19958)
  a=0 (19959)
  jf 1 (19960)
  a++ (19962)
  r=a 5 (19963)
  (         ifN t5 goto else_916) (19965)
  a== 0 (19965)
  jf 3 (19967)
  lj 19997 (19969)
  (                    1052:       v[i] = 0x6c) (19972)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (19972)
  a=0 (19972)
  a-- (19973)
  a>>= 1 (19974)
  c=a (19976)
  a=r 0 (19977)
  a+= 5 (19979)
  d=a (19981)
  a=*d (19982)
  a&=c (19983)
  r=a 5 (19984)
  (         t5 = t5 + H[t0+4]〈i〉) (19986)
  d-- (19986)
  c=*d (19987)
  a+=c (19988)
  r=a 5 (19989)
  (         M[t5] = 108) (19991)
  c=a (19991)
  *c= 108 (19992)
  (         goto endif_917) (19994)
  lj 19997 (19994)
  (        :else_916:) (19997)
  (        :endif_917:) (19997)
  (        :endif_914:) (19997)
  (        :endif_911:) (19997)
  (        :endif_908:) (19997)
  (        :endif_905:) (19997)
  (                    1053:     i += 1) (19997)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (19997)
  a=r 0 (19997)
  a+= 4 (19999)
  d=a (20001)
  *d++ (20002)
  (                    1054:     v[i] = 0x20) (20003)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20003)
  a=0 (20003)
  a-- (20004)
  a>>= 1 (20005)
  c=a (20007)
  d++ (20008)
  a=*d (20009)
  a&=c (20010)
  r=a 5 (20011)
  (         t5 = t5 + H[t0+4]〈i〉) (20013)
  d-- (20013)
  c=*d (20014)
  a+=c (20015)
  r=a 5 (20016)
  (         M[t5] = 32) (20018)
  c=a (20018)
  *c= 32 (20019)
  (         goto endif_885) (20021)
  lj 28969 (20021)
  (        :else_884:) (20024)
  (                    1055:   elif id_ == 29 or id_ == 35 or id_ == 37 or id_ == 43:  # 6 hinten an) (20024)
  (         t8 = H[t0+1]〈id_〉 == 29) (20024)
  c= 29 (20024)
  a=r 0 (20026)
  a++ (20028)
  d=a (20029)
  a=*d (20030)
  a==c (20031)
  a=0 (20032)
  jf 1 (20033)
  a++ (20035)
  r=a 8 (20036)
  (         t9 = H[t0+1]〈id_〉 == 35) (20038)
  c= 35 (20038)
  a=*d (20040)
  a==c (20041)
  a=0 (20042)
  jf 1 (20043)
  a++ (20045)
  r=a 9 (20046)
  (         t7 = t8 or t9) (20048)
  c=a (20048)
  a=r 8 (20049)
  a== 0 (20051)
  jf 1 (20053)
  a=c (20055)
  r=a 7 (20056)
  (         t8 = H[t0+1]〈id_〉 == 37) (20058)
  c= 37 (20058)
  a=*d (20060)
  a==c (20061)
  a=0 (20062)
  jf 1 (20063)
  a++ (20065)
  r=a 8 (20066)
  (         t6 = t7 or t8) (20068)
  c=a (20068)
  a=r 7 (20069)
  a== 0 (20071)
  jf 1 (20073)
  a=c (20075)
  r=a 6 (20076)
  (         t7 = H[t0+1]〈id_〉 == 43) (20078)
  c= 43 (20078)
  a=*d (20080)
  a==c (20081)
  a=0 (20082)
  jf 1 (20083)
  a++ (20085)
  r=a 7 (20086)
  (         t5 = t6 or t7) (20088)
  c=a (20088)
  a=r 6 (20089)
  a== 0 (20091)
  jf 1 (20093)
  a=c (20095)
  r=a 5 (20096)
  (         ifN t5 goto else_922) (20098)
  a== 0 (20098)
  jf 3 (20100)
  lj 21092 (20102)
  (                    1056:     v = alloc_pM〈l+6〉) (20105)
  (         t5 = H[t0+3]〈l〉 + 6) (20105)
  c= 6 (20105)
  a=r 0 (20107)
  a+= 3 (20109)
  d=a (20111)
  a=*d (20112)
  a+=c (20113)
  r=a 5 (20114)
  (         H[t0+12]〈〉 = t0) (20116)
  a=r 0 (20116)
  a+= 12 (20118)
  d=a (20120)
  a=r 0 (20121)
  *d=a (20123)
  (saved bsp, return id:) (20124)
  (         H[t0+13]〈〉 = 77) (20124)
  d++ (20124)
  *d= 77 (20125)
  (push arguments:) (20127)
  (         H[t0+14]〈〉 = t5) (20127)
  d++ (20127)
  a=r 5 (20128)
  *d=a (20130)
  (         t0 = t0 + 13) (20131)
  c= 13 (20131)
  a=r 0 (20133)
  a+=c (20135)
  r=a 0 (20136)
  (         goto addr_alloc_pM) (20138)
  lj 323 (20138)
  (        :return_id_77:) (20141)
  (         t6 = t1) (20141)
  a=r 1 (20141)
  r=a 6 (20143)
  (         t6 = t6 | 2147483648) (20145)
  a= 1 (20145)
  a<<= 31 (20147)
  c=a (20149)
  a=r 6 (20150)
  a|=c (20152)
  r=a 6 (20153)
  (         H[t0+5]〈v〉 = t6) (20155)
  a=r 0 (20155)
  a+= 5 (20157)
  d=a (20159)
  a=r 6 (20160)
  *d=a (20162)
  (                    1057:     while i < l:) (20163)
  (        :while_924:) (20163)
  (         t5 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (20163)
  a=r 0 (20163)
  a+= 3 (20165)
  d=a (20167)
  c=*d (20168)
  d++ (20169)
  a=*d (20170)
  a<c (20171)
  a=0 (20172)
  jf 1 (20173)
  a++ (20175)
  r=a 5 (20176)
  (         ifN t5 goto whileend_926) (20178)
  a== 0 (20178)
  jf 3 (20180)
  lj 20237 (20182)
  (                    1058:       v[i] = base_word[i]) (20185)
  (         t5 = H[t0+2]〈base_word〉 & 2147483647) (20185)
  a=0 (20185)
  a-- (20186)
  a>>= 1 (20187)
  c=a (20189)
  a=r 0 (20190)
  a+= 2 (20192)
  d=a (20194)
  a=*d (20195)
  a&=c (20196)
  r=a 5 (20197)
  (         t5 = t5 + H[t0+4]〈i〉) (20199)
  a=r 0 (20199)
  a+= 4 (20201)
  d=a (20203)
  c=*d (20204)
  a=r 5 (20205)
  a+=c (20207)
  r=a 5 (20208)
  (         t5 = M[t5]) (20210)
  b=a (20210)
  a=*b (20211)
  r=a 5 (20212)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (20214)
  a=0 (20214)
  a-- (20215)
  a>>= 1 (20216)
  c=a (20218)
  d++ (20219)
  a=*d (20220)
  a&=c (20221)
  r=a 6 (20222)
  (         t6 = t6 + H[t0+4]〈i〉) (20224)
  d-- (20224)
  c=*d (20225)
  a+=c (20226)
  r=a 6 (20227)
  (         M[t6] = t5) (20229)
  c=a (20229)
  a=r 5 (20230)
  *c=a (20232)
  (                    1059:       i += 1) (20233)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (20233)
  *d++ (20233)
  (         goto while_924) (20234)
  lj 20163 (20234)
  (        :whileend_926:) (20237)
  (                    1060:     if id_ == 43:) (20237)
  (         t5 = H[t0+1]〈id_〉 == 43) (20237)
  c= 43 (20237)
  a=r 0 (20239)
  a++ (20241)
  d=a (20242)
  a=*d (20243)
  a==c (20244)
  a=0 (20245)
  jf 1 (20246)
  a++ (20248)
  r=a 5 (20249)
  (         ifN t5 goto else_929) (20251)
  a== 0 (20251)
  jf 3 (20253)
  lj 20283 (20255)
  (                    1061:       v[i] = 0x2e) (20258)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20258)
  a=0 (20258)
  a-- (20259)
  a>>= 1 (20260)
  c=a (20262)
  a=r 0 (20263)
  a+= 5 (20265)
  d=a (20267)
  a=*d (20268)
  a&=c (20269)
  r=a 5 (20270)
  (         t5 = t5 + H[t0+4]〈i〉) (20272)
  d-- (20272)
  c=*d (20273)
  a+=c (20274)
  r=a 5 (20275)
  (         M[t5] = 46) (20277)
  c=a (20277)
  *c= 46 (20278)
  (         goto endif_930) (20280)
  lj 20305 (20280)
  (        :else_929:) (20283)
  (                    1063:       v[i] = 0x20) (20283)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20283)
  a=0 (20283)
  a-- (20284)
  a>>= 1 (20285)
  c=a (20287)
  a=r 0 (20288)
  a+= 5 (20290)
  d=a (20292)
  a=*d (20293)
  a&=c (20294)
  r=a 5 (20295)
  (         t5 = t5 + H[t0+4]〈i〉) (20297)
  d-- (20297)
  c=*d (20298)
  a+=c (20299)
  r=a 5 (20300)
  (         M[t5] = 32) (20302)
  c=a (20302)
  *c= 32 (20303)
  (        :endif_930:) (20305)
  (                    1064:     i += 1) (20305)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (20305)
  a=r 0 (20305)
  a+= 4 (20307)
  d=a (20309)
  *d++ (20310)
  (                    1065:     if id_ == 29:) (20311)
  (         t5 = H[t0+1]〈id_〉 == 29) (20311)
  c= 29 (20311)
  a=r 0 (20313)
  a++ (20315)
  d=a (20316)
  a=*d (20317)
  a==c (20318)
  a=0 (20319)
  jf 1 (20320)
  a++ (20322)
  r=a 5 (20323)
  (         ifN t5 goto else_932) (20325)
  a== 0 (20325)
  jf 3 (20327)
  lj 20357 (20329)
  (                    1066:       v[i] = 0x74) (20332)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20332)
  a=0 (20332)
  a-- (20333)
  a>>= 1 (20334)
  c=a (20336)
  a=r 0 (20337)
  a+= 5 (20339)
  d=a (20341)
  a=*d (20342)
  a&=c (20343)
  r=a 5 (20344)
  (         t5 = t5 + H[t0+4]〈i〉) (20346)
  d-- (20346)
  c=*d (20347)
  a+=c (20348)
  r=a 5 (20349)
  (         M[t5] = 116) (20351)
  c=a (20351)
  *c= 116 (20352)
  (         goto endif_933) (20354)
  lj 20495 (20354)
  (        :else_932:) (20357)
  (                    1067:     elif id_ == 35:) (20357)
  (         t5 = H[t0+1]〈id_〉 == 35) (20357)
  c= 35 (20357)
  a=r 0 (20359)
  a++ (20361)
  d=a (20362)
  a=*d (20363)
  a==c (20364)
  a=0 (20365)
  jf 1 (20366)
  a++ (20368)
  r=a 5 (20369)
  (         ifN t5 goto else_935) (20371)
  a== 0 (20371)
  jf 3 (20373)
  lj 20403 (20375)
  (                    1068:       v[i] = 0x77) (20378)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20378)
  a=0 (20378)
  a-- (20379)
  a>>= 1 (20380)
  c=a (20382)
  a=r 0 (20383)
  a+= 5 (20385)
  d=a (20387)
  a=*d (20388)
  a&=c (20389)
  r=a 5 (20390)
  (         t5 = t5 + H[t0+4]〈i〉) (20392)
  d-- (20392)
  c=*d (20393)
  a+=c (20394)
  r=a 5 (20395)
  (         M[t5] = 119) (20397)
  c=a (20397)
  *c= 119 (20398)
  (         goto endif_936) (20400)
  lj 20495 (20400)
  (        :else_935:) (20403)
  (                    1069:     elif id_ == 37:) (20403)
  (         t5 = H[t0+1]〈id_〉 == 37) (20403)
  c= 37 (20403)
  a=r 0 (20405)
  a++ (20407)
  d=a (20408)
  a=*d (20409)
  a==c (20410)
  a=0 (20411)
  jf 1 (20412)
  a++ (20414)
  r=a 5 (20415)
  (         ifN t5 goto else_938) (20417)
  a== 0 (20417)
  jf 3 (20419)
  lj 20449 (20421)
  (                    1070:       v[i] = 0x66) (20424)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20424)
  a=0 (20424)
  a-- (20425)
  a>>= 1 (20426)
  c=a (20428)
  a=r 0 (20429)
  a+= 5 (20431)
  d=a (20433)
  a=*d (20434)
  a&=c (20435)
  r=a 5 (20436)
  (         t5 = t5 + H[t0+4]〈i〉) (20438)
  d-- (20438)
  c=*d (20439)
  a+=c (20440)
  r=a 5 (20441)
  (         M[t5] = 102) (20443)
  c=a (20443)
  *c= 102 (20444)
  (         goto endif_939) (20446)
  lj 20495 (20446)
  (        :else_938:) (20449)
  (                    1071:     elif id_ == 43:) (20449)
  (         t5 = H[t0+1]〈id_〉 == 43) (20449)
  c= 43 (20449)
  a=r 0 (20451)
  a++ (20453)
  d=a (20454)
  a=*d (20455)
  a==c (20456)
  a=0 (20457)
  jf 1 (20458)
  a++ (20460)
  r=a 5 (20461)
  (         ifN t5 goto else_941) (20463)
  a== 0 (20463)
  jf 3 (20465)
  lj 20495 (20467)
  (                    1072:       v[i] = 0x20) (20470)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20470)
  a=0 (20470)
  a-- (20471)
  a>>= 1 (20472)
  c=a (20474)
  a=r 0 (20475)
  a+= 5 (20477)
  d=a (20479)
  a=*d (20480)
  a&=c (20481)
  r=a 5 (20482)
  (         t5 = t5 + H[t0+4]〈i〉) (20484)
  d-- (20484)
  c=*d (20485)
  a+=c (20486)
  r=a 5 (20487)
  (         M[t5] = 32) (20489)
  c=a (20489)
  *c= 32 (20490)
  (         goto endif_942) (20492)
  lj 20495 (20492)
  (        :else_941:) (20495)
  (        :endif_942:) (20495)
  (        :endif_939:) (20495)
  (        :endif_936:) (20495)
  (        :endif_933:) (20495)
  (                    1073:     i += 1) (20495)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (20495)
  a=r 0 (20495)
  a+= 4 (20497)
  d=a (20499)
  *d++ (20500)
  (                    1074:     if id_ == 29:) (20501)
  (         t5 = H[t0+1]〈id_〉 == 29) (20501)
  c= 29 (20501)
  a=r 0 (20503)
  a++ (20505)
  d=a (20506)
  a=*d (20507)
  a==c (20508)
  a=0 (20509)
  jf 1 (20510)
  a++ (20512)
  r=a 5 (20513)
  (         ifN t5 goto else_944) (20515)
  a== 0 (20515)
  jf 3 (20517)
  lj 20547 (20519)
  (                    1075:       v[i] = 0x68) (20522)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20522)
  a=0 (20522)
  a-- (20523)
  a>>= 1 (20524)
  c=a (20526)
  a=r 0 (20527)
  a+= 5 (20529)
  d=a (20531)
  a=*d (20532)
  a&=c (20533)
  r=a 5 (20534)
  (         t5 = t5 + H[t0+4]〈i〉) (20536)
  d-- (20536)
  c=*d (20537)
  a+=c (20538)
  r=a 5 (20539)
  (         M[t5] = 104) (20541)
  c=a (20541)
  *c= 104 (20542)
  (         goto endif_945) (20544)
  lj 20685 (20544)
  (        :else_944:) (20547)
  (                    1076:     elif id_ == 35:) (20547)
  (         t5 = H[t0+1]〈id_〉 == 35) (20547)
  c= 35 (20547)
  a=r 0 (20549)
  a++ (20551)
  d=a (20552)
  a=*d (20553)
  a==c (20554)
  a=0 (20555)
  jf 1 (20556)
  a++ (20558)
  r=a 5 (20559)
  (         ifN t5 goto else_947) (20561)
  a== 0 (20561)
  jf 3 (20563)
  lj 20593 (20565)
  (                    1077:       v[i] = 0x69) (20568)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20568)
  a=0 (20568)
  a-- (20569)
  a>>= 1 (20570)
  c=a (20572)
  a=r 0 (20573)
  a+= 5 (20575)
  d=a (20577)
  a=*d (20578)
  a&=c (20579)
  r=a 5 (20580)
  (         t5 = t5 + H[t0+4]〈i〉) (20582)
  d-- (20582)
  c=*d (20583)
  a+=c (20584)
  r=a 5 (20585)
  (         M[t5] = 105) (20587)
  c=a (20587)
  *c= 105 (20588)
  (         goto endif_948) (20590)
  lj 20685 (20590)
  (        :else_947:) (20593)
  (                    1078:     elif id_ == 37:) (20593)
  (         t5 = H[t0+1]〈id_〉 == 37) (20593)
  c= 37 (20593)
  a=r 0 (20595)
  a++ (20597)
  d=a (20598)
  a=*d (20599)
  a==c (20600)
  a=0 (20601)
  jf 1 (20602)
  a++ (20604)
  r=a 5 (20605)
  (         ifN t5 goto else_950) (20607)
  a== 0 (20607)
  jf 3 (20609)
  lj 20639 (20611)
  (                    1079:       v[i] = 0x72) (20614)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20614)
  a=0 (20614)
  a-- (20615)
  a>>= 1 (20616)
  c=a (20618)
  a=r 0 (20619)
  a+= 5 (20621)
  d=a (20623)
  a=*d (20624)
  a&=c (20625)
  r=a 5 (20626)
  (         t5 = t5 + H[t0+4]〈i〉) (20628)
  d-- (20628)
  c=*d (20629)
  a+=c (20630)
  r=a 5 (20631)
  (         M[t5] = 114) (20633)
  c=a (20633)
  *c= 114 (20634)
  (         goto endif_951) (20636)
  lj 20685 (20636)
  (        :else_950:) (20639)
  (                    1080:     elif id_ == 43:) (20639)
  (         t5 = H[t0+1]〈id_〉 == 43) (20639)
  c= 43 (20639)
  a=r 0 (20641)
  a++ (20643)
  d=a (20644)
  a=*d (20645)
  a==c (20646)
  a=0 (20647)
  jf 1 (20648)
  a++ (20650)
  r=a 5 (20651)
  (         ifN t5 goto else_953) (20653)
  a== 0 (20653)
  jf 3 (20655)
  lj 20685 (20657)
  (                    1081:       v[i] = 0x54) (20660)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20660)
  a=0 (20660)
  a-- (20661)
  a>>= 1 (20662)
  c=a (20664)
  a=r 0 (20665)
  a+= 5 (20667)
  d=a (20669)
  a=*d (20670)
  a&=c (20671)
  r=a 5 (20672)
  (         t5 = t5 + H[t0+4]〈i〉) (20674)
  d-- (20674)
  c=*d (20675)
  a+=c (20676)
  r=a 5 (20677)
  (         M[t5] = 84) (20679)
  c=a (20679)
  *c= 84 (20680)
  (         goto endif_954) (20682)
  lj 20685 (20682)
  (        :else_953:) (20685)
  (        :endif_954:) (20685)
  (        :endif_951:) (20685)
  (        :endif_948:) (20685)
  (        :endif_945:) (20685)
  (                    1082:     i += 1) (20685)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (20685)
  a=r 0 (20685)
  a+= 4 (20687)
  d=a (20689)
  *d++ (20690)
  (                    1083:     if id_ == 29:) (20691)
  (         t5 = H[t0+1]〈id_〉 == 29) (20691)
  c= 29 (20691)
  a=r 0 (20693)
  a++ (20695)
  d=a (20696)
  a=*d (20697)
  a==c (20698)
  a=0 (20699)
  jf 1 (20700)
  a++ (20702)
  r=a 5 (20703)
  (         ifN t5 goto else_956) (20705)
  a== 0 (20705)
  jf 3 (20707)
  lj 20737 (20709)
  (                    1084:       v[i] = 0x61) (20712)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20712)
  a=0 (20712)
  a-- (20713)
  a>>= 1 (20714)
  c=a (20716)
  a=r 0 (20717)
  a+= 5 (20719)
  d=a (20721)
  a=*d (20722)
  a&=c (20723)
  r=a 5 (20724)
  (         t5 = t5 + H[t0+4]〈i〉) (20726)
  d-- (20726)
  c=*d (20727)
  a+=c (20728)
  r=a 5 (20729)
  (         M[t5] = 97) (20731)
  c=a (20731)
  *c= 97 (20732)
  (         goto endif_957) (20734)
  lj 20875 (20734)
  (        :else_956:) (20737)
  (                    1085:     elif id_ == 35:) (20737)
  (         t5 = H[t0+1]〈id_〉 == 35) (20737)
  c= 35 (20737)
  a=r 0 (20739)
  a++ (20741)
  d=a (20742)
  a=*d (20743)
  a==c (20744)
  a=0 (20745)
  jf 1 (20746)
  a++ (20748)
  r=a 5 (20749)
  (         ifN t5 goto else_959) (20751)
  a== 0 (20751)
  jf 3 (20753)
  lj 20783 (20755)
  (                    1086:       v[i] = 0x74) (20758)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20758)
  a=0 (20758)
  a-- (20759)
  a>>= 1 (20760)
  c=a (20762)
  a=r 0 (20763)
  a+= 5 (20765)
  d=a (20767)
  a=*d (20768)
  a&=c (20769)
  r=a 5 (20770)
  (         t5 = t5 + H[t0+4]〈i〉) (20772)
  d-- (20772)
  c=*d (20773)
  a+=c (20774)
  r=a 5 (20775)
  (         M[t5] = 116) (20777)
  c=a (20777)
  *c= 116 (20778)
  (         goto endif_960) (20780)
  lj 20875 (20780)
  (        :else_959:) (20783)
  (                    1087:     elif id_ == 37:) (20783)
  (         t5 = H[t0+1]〈id_〉 == 37) (20783)
  c= 37 (20783)
  a=r 0 (20785)
  a++ (20787)
  d=a (20788)
  a=*d (20789)
  a==c (20790)
  a=0 (20791)
  jf 1 (20792)
  a++ (20794)
  r=a 5 (20795)
  (         ifN t5 goto else_962) (20797)
  a== 0 (20797)
  jf 3 (20799)
  lj 20829 (20801)
  (                    1088:       v[i] = 0x6f) (20804)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20804)
  a=0 (20804)
  a-- (20805)
  a>>= 1 (20806)
  c=a (20808)
  a=r 0 (20809)
  a+= 5 (20811)
  d=a (20813)
  a=*d (20814)
  a&=c (20815)
  r=a 5 (20816)
  (         t5 = t5 + H[t0+4]〈i〉) (20818)
  d-- (20818)
  c=*d (20819)
  a+=c (20820)
  r=a 5 (20821)
  (         M[t5] = 111) (20823)
  c=a (20823)
  *c= 111 (20824)
  (         goto endif_963) (20826)
  lj 20875 (20826)
  (        :else_962:) (20829)
  (                    1089:     elif id_ == 43:) (20829)
  (         t5 = H[t0+1]〈id_〉 == 43) (20829)
  c= 43 (20829)
  a=r 0 (20831)
  a++ (20833)
  d=a (20834)
  a=*d (20835)
  a==c (20836)
  a=0 (20837)
  jf 1 (20838)
  a++ (20840)
  r=a 5 (20841)
  (         ifN t5 goto else_965) (20843)
  a== 0 (20843)
  jf 3 (20845)
  lj 20875 (20847)
  (                    1090:       v[i] = 0x68) (20850)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20850)
  a=0 (20850)
  a-- (20851)
  a>>= 1 (20852)
  c=a (20854)
  a=r 0 (20855)
  a+= 5 (20857)
  d=a (20859)
  a=*d (20860)
  a&=c (20861)
  r=a 5 (20862)
  (         t5 = t5 + H[t0+4]〈i〉) (20864)
  d-- (20864)
  c=*d (20865)
  a+=c (20866)
  r=a 5 (20867)
  (         M[t5] = 104) (20869)
  c=a (20869)
  *c= 104 (20870)
  (         goto endif_966) (20872)
  lj 20875 (20872)
  (        :else_965:) (20875)
  (        :endif_966:) (20875)
  (        :endif_963:) (20875)
  (        :endif_960:) (20875)
  (        :endif_957:) (20875)
  (                    1091:     i += 1) (20875)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (20875)
  a=r 0 (20875)
  a+= 4 (20877)
  d=a (20879)
  *d++ (20880)
  (                    1092:     if id_ == 29:) (20881)
  (         t5 = H[t0+1]〈id_〉 == 29) (20881)
  c= 29 (20881)
  a=r 0 (20883)
  a++ (20885)
  d=a (20886)
  a=*d (20887)
  a==c (20888)
  a=0 (20889)
  jf 1 (20890)
  a++ (20892)
  r=a 5 (20893)
  (         ifN t5 goto else_968) (20895)
  a== 0 (20895)
  jf 3 (20897)
  lj 20927 (20899)
  (                    1093:       v[i] = 0x74) (20902)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20902)
  a=0 (20902)
  a-- (20903)
  a>>= 1 (20904)
  c=a (20906)
  a=r 0 (20907)
  a+= 5 (20909)
  d=a (20911)
  a=*d (20912)
  a&=c (20913)
  r=a 5 (20914)
  (         t5 = t5 + H[t0+4]〈i〉) (20916)
  d-- (20916)
  c=*d (20917)
  a+=c (20918)
  r=a 5 (20919)
  (         M[t5] = 116) (20921)
  c=a (20921)
  *c= 116 (20922)
  (         goto endif_969) (20924)
  lj 21065 (20924)
  (        :else_968:) (20927)
  (                    1094:     elif id_ == 35:) (20927)
  (         t5 = H[t0+1]〈id_〉 == 35) (20927)
  c= 35 (20927)
  a=r 0 (20929)
  a++ (20931)
  d=a (20932)
  a=*d (20933)
  a==c (20934)
  a=0 (20935)
  jf 1 (20936)
  a++ (20938)
  r=a 5 (20939)
  (         ifN t5 goto else_971) (20941)
  a== 0 (20941)
  jf 3 (20943)
  lj 20973 (20945)
  (                    1095:       v[i] = 0x68) (20948)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20948)
  a=0 (20948)
  a-- (20949)
  a>>= 1 (20950)
  c=a (20952)
  a=r 0 (20953)
  a+= 5 (20955)
  d=a (20957)
  a=*d (20958)
  a&=c (20959)
  r=a 5 (20960)
  (         t5 = t5 + H[t0+4]〈i〉) (20962)
  d-- (20962)
  c=*d (20963)
  a+=c (20964)
  r=a 5 (20965)
  (         M[t5] = 104) (20967)
  c=a (20967)
  *c= 104 (20968)
  (         goto endif_972) (20970)
  lj 21065 (20970)
  (        :else_971:) (20973)
  (                    1096:     elif id_ == 37:) (20973)
  (         t5 = H[t0+1]〈id_〉 == 37) (20973)
  c= 37 (20973)
  a=r 0 (20975)
  a++ (20977)
  d=a (20978)
  a=*d (20979)
  a==c (20980)
  a=0 (20981)
  jf 1 (20982)
  a++ (20984)
  r=a 5 (20985)
  (         ifN t5 goto else_974) (20987)
  a== 0 (20987)
  jf 3 (20989)
  lj 21019 (20991)
  (                    1097:       v[i] = 0x6d) (20994)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (20994)
  a=0 (20994)
  a-- (20995)
  a>>= 1 (20996)
  c=a (20998)
  a=r 0 (20999)
  a+= 5 (21001)
  d=a (21003)
  a=*d (21004)
  a&=c (21005)
  r=a 5 (21006)
  (         t5 = t5 + H[t0+4]〈i〉) (21008)
  d-- (21008)
  c=*d (21009)
  a+=c (21010)
  r=a 5 (21011)
  (         M[t5] = 109) (21013)
  c=a (21013)
  *c= 109 (21014)
  (         goto endif_975) (21016)
  lj 21065 (21016)
  (        :else_974:) (21019)
  (                    1098:     elif id_ == 43:) (21019)
  (         t5 = H[t0+1]〈id_〉 == 43) (21019)
  c= 43 (21019)
  a=r 0 (21021)
  a++ (21023)
  d=a (21024)
  a=*d (21025)
  a==c (21026)
  a=0 (21027)
  jf 1 (21028)
  a++ (21030)
  r=a 5 (21031)
  (         ifN t5 goto else_977) (21033)
  a== 0 (21033)
  jf 3 (21035)
  lj 21065 (21037)
  (                    1099:       v[i] = 0x65) (21040)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (21040)
  a=0 (21040)
  a-- (21041)
  a>>= 1 (21042)
  c=a (21044)
  a=r 0 (21045)
  a+= 5 (21047)
  d=a (21049)
  a=*d (21050)
  a&=c (21051)
  r=a 5 (21052)
  (         t5 = t5 + H[t0+4]〈i〉) (21054)
  d-- (21054)
  c=*d (21055)
  a+=c (21056)
  r=a 5 (21057)
  (         M[t5] = 101) (21059)
  c=a (21059)
  *c= 101 (21060)
  (         goto endif_978) (21062)
  lj 21065 (21062)
  (        :else_977:) (21065)
  (        :endif_978:) (21065)
  (        :endif_975:) (21065)
  (        :endif_972:) (21065)
  (        :endif_969:) (21065)
  (                    1100:     i += 1) (21065)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (21065)
  a=r 0 (21065)
  a+= 4 (21067)
  d=a (21069)
  *d++ (21070)
  (                    1101:     v[i] = 0x20) (21071)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (21071)
  a=0 (21071)
  a-- (21072)
  a>>= 1 (21073)
  c=a (21075)
  d++ (21076)
  a=*d (21077)
  a&=c (21078)
  r=a 5 (21079)
  (         t5 = t5 + H[t0+4]〈i〉) (21081)
  d-- (21081)
  c=*d (21082)
  a+=c (21083)
  r=a 5 (21084)
  (         M[t5] = 32) (21086)
  c=a (21086)
  *c= 32 (21087)
  (         goto endif_923) (21089)
  lj 28969 (21089)
  (        :else_922:) (21092)
  (                    1102:   elif id_ == 30:  # upper first 1 vorne an) (21092)
  (         t5 = H[t0+1]〈id_〉 == 30) (21092)
  c= 30 (21092)
  a=r 0 (21094)
  a++ (21096)
  d=a (21097)
  a=*d (21098)
  a==c (21099)
  a=0 (21100)
  jf 1 (21101)
  a++ (21103)
  r=a 5 (21104)
  (         ifN t5 goto else_980) (21106)
  a== 0 (21106)
  jf 3 (21108)
  lj 21470 (21110)
  (                    1103:     u = uppercase_first〈base_word〉) (21113)
  (         H[t0+12]〈〉 = t0) (21113)
  a=r 0 (21113)
  a+= 12 (21115)
  d=a (21117)
  a=r 0 (21118)
  *d=a (21120)
  (saved bsp, return id:) (21121)
  (         H[t0+13]〈〉 = 78) (21121)
  d++ (21121)
  *d= 78 (21122)
  (push arguments:) (21124)
  (         H[t0+14]〈〉 = H[t0+2]〈base_word〉) (21124)
  a+= 2 (21124)
  d=a (21126)
  c=*d (21127)
  a=r 0 (21128)
  a+= 14 (21130)
  d=a (21132)
  *d=c (21133)
  (         t0 = t0 + 13) (21134)
  c= 13 (21134)
  a=r 0 (21136)
  a+=c (21138)
  r=a 0 (21139)
  (         goto uppercase_first) (21141)
  lj 9839 (21141)
  (        :return_id_78:) (21144)
  (         t5 = t1) (21144)
  a=r 1 (21144)
  r=a 5 (21146)
  (         H[t0+7]〈u〉 = t5) (21148)
  a=r 0 (21148)
  a+= 7 (21150)
  d=a (21152)
  a=r 5 (21153)
  *d=a (21155)
  (                    1104:     j = len_pM〈u〉) (21156)
  (         t5 = H[t0+7]〈u〉) (21156)
  a=*d (21156)
  r=a 5 (21157)
  (         t5 = t5 & 2147483647) (21159)
  a=0 (21159)
  a-- (21160)
  a>>= 1 (21161)
  c=a (21163)
  a=r 5 (21164)
  a&=c (21166)
  r=a 5 (21167)
  (         t5 = t5 - 5) (21169)
  c= 5 (21169)
  a-=c (21171)
  r=a 5 (21172)
  (         t6 = M[t5] << 8) (21174)
  c= 8 (21174)
  b=a (21176)
  a=*b (21177)
  a<<=c (21178)
  r=a 6 (21179)
  (         t5 = t5 + 1) (21181)
  a=r 5 (21181)
  a++ (21183)
  r=a 5 (21184)
  (         t6 = t6 + M[t5]) (21186)
  b=a (21186)
  c=*b (21187)
  a=r 6 (21188)
  a+=c (21190)
  r=a 6 (21191)
  (         t6 = t6 << 8) (21193)
  c= 8 (21193)
  a<<=c (21195)
  r=a 6 (21196)
  (         t5 = t5 + 1) (21198)
  a=r 5 (21198)
  a++ (21200)
  r=a 5 (21201)
  (         t6 = t6 + M[t5]) (21203)
  b=a (21203)
  c=*b (21204)
  a=r 6 (21205)
  a+=c (21207)
  r=a 6 (21208)
  (         t6 = t6 << 8) (21210)
  c= 8 (21210)
  a<<=c (21212)
  r=a 6 (21213)
  (         t5 = t5 + 1) (21215)
  a=r 5 (21215)
  a++ (21217)
  r=a 5 (21218)
  (         t6 = t6 + M[t5]) (21220)
  b=a (21220)
  c=*b (21221)
  a=r 6 (21222)
  a+=c (21224)
  r=a 6 (21225)
  (         H[t0+6]〈j〉 = t6) (21227)
  d-- (21227)
  *d=a (21228)
  (                    1105:     v = alloc_pM〈j+1〉) (21229)
  (         t5 = H[t0+6]〈j〉 + 1) (21229)
  c= 1 (21229)
  a=*d (21231)
  a+=c (21232)
  r=a 5 (21233)
  (         H[t0+12]〈〉 = t0) (21235)
  a=r 0 (21235)
  a+= 12 (21237)
  d=a (21239)
  a=r 0 (21240)
  *d=a (21242)
  (saved bsp, return id:) (21243)
  (         H[t0+13]〈〉 = 79) (21243)
  d++ (21243)
  *d= 79 (21244)
  (push arguments:) (21246)
  (         H[t0+14]〈〉 = t5) (21246)
  d++ (21246)
  a=r 5 (21247)
  *d=a (21249)
  (         t0 = t0 + 13) (21250)
  c= 13 (21250)
  a=r 0 (21252)
  a+=c (21254)
  r=a 0 (21255)
  (         goto addr_alloc_pM) (21257)
  lj 323 (21257)
  (        :return_id_79:) (21260)
  (         t6 = t1) (21260)
  a=r 1 (21260)
  r=a 6 (21262)
  (         t6 = t6 | 2147483648) (21264)
  a= 1 (21264)
  a<<= 31 (21266)
  c=a (21268)
  a=r 6 (21269)
  a|=c (21271)
  r=a 6 (21272)
  (         H[t0+5]〈v〉 = t6) (21274)
  a=r 0 (21274)
  a+= 5 (21276)
  d=a (21278)
  a=r 6 (21279)
  *d=a (21281)
  (                    1106:     v[0] = 0x20) (21282)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (21282)
  a=0 (21282)
  a-- (21283)
  a>>= 1 (21284)
  c=a (21286)
  a=*d (21287)
  a&=c (21288)
  r=a 5 (21289)
  (         t5 = t5 + 0) (21291)
  (         M[t5] = 32) (21291)
  c=a (21291)
  *c= 32 (21292)
  (                    1107:     while i < j:) (21294)
  (        :while_982:) (21294)
  (         t5 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (21294)
  a=r 0 (21294)
  a+= 6 (21296)
  d=a (21298)
  c=*d (21299)
  a=r 0 (21300)
  a+= 4 (21302)
  d=a (21304)
  a=*d (21305)
  a<c (21306)
  a=0 (21307)
  jf 1 (21308)
  a++ (21310)
  r=a 5 (21311)
  (         ifN t5 goto whileend_984) (21313)
  a== 0 (21313)
  jf 3 (21315)
  lj 21424 (21317)
  (                    1108:       v[i+1] = u[i]) (21320)
  (         t5 = H[t0+7]〈u〉 >> 31) (21320)
  c= 31 (21320)
  a=r 0 (21322)
  a+= 7 (21324)
  d=a (21326)
  a=*d (21327)
  a>>=c (21328)
  r=a 5 (21329)
  (         if t5 goto isM_986) (21331)
  a== 0 (21331)
  jt 3 (21333)
  lj 21360 (21335)
  (         t5 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (21338)
  a=r 0 (21338)
  a+= 4 (21340)
  d=a (21342)
  c=*d (21343)
  a=r 0 (21344)
  a+= 7 (21346)
  d=a (21348)
  a=*d (21349)
  a+=c (21350)
  r=a 5 (21351)
  (         t5 = H[t5]〈〉) (21353)
  d=a (21353)
  a=*d (21354)
  r=a 5 (21355)
  (         goto MorHdone_987) (21357)
  lj 21389 (21357)
  (        :isM_986:) (21360)
  (         t5 = H[t0+7]〈u〉 & 2147483647) (21360)
  a=0 (21360)
  a-- (21361)
  a>>= 1 (21362)
  c=a (21364)
  a=r 0 (21365)
  a+= 7 (21367)
  d=a (21369)
  a=*d (21370)
  a&=c (21371)
  r=a 5 (21372)
  (         t5 = t5 + H[t0+4]〈i〉) (21374)
  a=r 0 (21374)
  a+= 4 (21376)
  d=a (21378)
  c=*d (21379)
  a=r 5 (21380)
  a+=c (21382)
  r=a 5 (21383)
  (         t5 = M[t5]) (21385)
  b=a (21385)
  a=*b (21386)
  r=a 5 (21387)
  (        :MorHdone_987:) (21389)
  (         t6 = H[t0+4]〈i〉 + 1) (21389)
  c= 1 (21389)
  a=r 0 (21391)
  a+= 4 (21393)
  d=a (21395)
  a=*d (21396)
  a+=c (21397)
  r=a 6 (21398)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (21400)
  a=0 (21400)
  a-- (21401)
  a>>= 1 (21402)
  c=a (21404)
  d++ (21405)
  a=*d (21406)
  a&=c (21407)
  r=a 7 (21408)
  (         t7 = t7 + t6) (21410)
  c=r 6 (21410)
  a+=c (21412)
  r=a 7 (21413)
  (         M[t7] = t5) (21415)
  c=a (21415)
  a=r 5 (21416)
  *c=a (21418)
  (                    1109:       i += 1) (21419)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (21419)
  d-- (21419)
  *d++ (21420)
  (         goto while_982) (21421)
  lj 21294 (21421)
  (        :whileend_984:) (21424)
  (                    1110:     free_pM〈u〉) (21424)
  (         t5 = H[t0+7]〈u〉 & 2147483647) (21424)
  a=0 (21424)
  a-- (21425)
  a>>= 1 (21426)
  c=a (21428)
  a=r 0 (21429)
  a+= 7 (21431)
  d=a (21433)
  a=*d (21434)
  a&=c (21435)
  r=a 5 (21436)
  (         H[t0+12]〈〉 = t0) (21438)
  a=r 0 (21438)
  a+= 12 (21440)
  d=a (21442)
  a=r 0 (21443)
  *d=a (21445)
  (saved bsp, return id:) (21446)
  (         H[t0+13]〈〉 = 80) (21446)
  d++ (21446)
  *d= 80 (21447)
  (push arguments:) (21449)
  (         H[t0+14]〈〉 = t5) (21449)
  d++ (21449)
  a=r 5 (21450)
  *d=a (21452)
  (         t0 = t0 + 13) (21453)
  c= 13 (21453)
  a=r 0 (21455)
  a+=c (21457)
  r=a 0 (21458)
  (         goto addr_free_pM) (21460)
  lj 2406 (21460)
  (        :return_id_80:) (21463)
  (         t6 = t1) (21463)
  a=r 1 (21463)
  r=a 6 (21465)
  (         goto endif_981) (21467)
  lj 28969 (21467)
  (        :else_980:) (21470)
  (                    1111:   elif id_ == 33 or id_ == 52 or id_ == 81 or id_ == 98:  # 1 vorne 2 hinten an) (21470)
  (         t8 = H[t0+1]〈id_〉 == 33) (21470)
  c= 33 (21470)
  a=r 0 (21472)
  a++ (21474)
  d=a (21475)
  a=*d (21476)
  a==c (21477)
  a=0 (21478)
  jf 1 (21479)
  a++ (21481)
  r=a 8 (21482)
  (         t9 = H[t0+1]〈id_〉 == 52) (21484)
  c= 52 (21484)
  a=*d (21486)
  a==c (21487)
  a=0 (21488)
  jf 1 (21489)
  a++ (21491)
  r=a 9 (21492)
  (         t7 = t8 or t9) (21494)
  c=a (21494)
  a=r 8 (21495)
  a== 0 (21497)
  jf 1 (21499)
  a=c (21501)
  r=a 7 (21502)
  (         t8 = H[t0+1]〈id_〉 == 81) (21504)
  c= 81 (21504)
  a=*d (21506)
  a==c (21507)
  a=0 (21508)
  jf 1 (21509)
  a++ (21511)
  r=a 8 (21512)
  (         t6 = t7 or t8) (21514)
  c=a (21514)
  a=r 7 (21515)
  a== 0 (21517)
  jf 1 (21519)
  a=c (21521)
  r=a 6 (21522)
  (         t7 = H[t0+1]〈id_〉 == 98) (21524)
  c= 98 (21524)
  a=*d (21526)
  a==c (21527)
  a=0 (21528)
  jf 1 (21529)
  a++ (21531)
  r=a 7 (21532)
  (         t5 = t6 or t7) (21534)
  c=a (21534)
  a=r 6 (21535)
  a== 0 (21537)
  jf 1 (21539)
  a=c (21541)
  r=a 5 (21542)
  (         ifN t5 goto else_992) (21544)
  a== 0 (21544)
  jf 3 (21546)
  lj 21990 (21548)
  (                    1112:     v = alloc_pM〈l+3〉) (21551)
  (         t5 = H[t0+3]〈l〉 + 3) (21551)
  c= 3 (21551)
  a=r 0 (21553)
  a+= 3 (21555)
  d=a (21557)
  a=*d (21558)
  a+=c (21559)
  r=a 5 (21560)
  (         H[t0+12]〈〉 = t0) (21562)
  a=r 0 (21562)
  a+= 12 (21564)
  d=a (21566)
  a=r 0 (21567)
  *d=a (21569)
  (saved bsp, return id:) (21570)
  (         H[t0+13]〈〉 = 81) (21570)
  d++ (21570)
  *d= 81 (21571)
  (push arguments:) (21573)
  (         H[t0+14]〈〉 = t5) (21573)
  d++ (21573)
  a=r 5 (21574)
  *d=a (21576)
  (         t0 = t0 + 13) (21577)
  c= 13 (21577)
  a=r 0 (21579)
  a+=c (21581)
  r=a 0 (21582)
  (         goto addr_alloc_pM) (21584)
  lj 323 (21584)
  (        :return_id_81:) (21587)
  (         t6 = t1) (21587)
  a=r 1 (21587)
  r=a 6 (21589)
  (         t6 = t6 | 2147483648) (21591)
  a= 1 (21591)
  a<<= 31 (21593)
  c=a (21595)
  a=r 6 (21596)
  a|=c (21598)
  r=a 6 (21599)
  (         H[t0+5]〈v〉 = t6) (21601)
  a=r 0 (21601)
  a+= 5 (21603)
  d=a (21605)
  a=r 6 (21606)
  *d=a (21608)
  (                    1113:     v[i] = 0x20) (21609)
  (         t5 = H[t0+5]〈v〉 & 2147483647) (21609)
  a=0 (21609)
  a-- (21610)
  a>>= 1 (21611)
  c=a (21613)
  a=*d (21614)
  a&=c (21615)
  r=a 5 (21616)
  (         t5 = t5 + H[t0+4]〈i〉) (21618)
  d-- (21618)
  c=*d (21619)
  a+=c (21620)
  r=a 5 (21621)
  (         M[t5] = 32) (21623)
  c=a (21623)
  *c= 32 (21624)
  (                    1114:     i += 1) (21626)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (21626)
  *d++ (21626)
  (                    1115:     while i <= l:) (21627)
  (        :while_994:) (21627)
  (         t5 = H[t0+4]〈i〉 <= H[t0+3]〈l〉) (21627)
  a=r 0 (21627)
  a+= 3 (21629)
  d=a (21631)
  c=*d (21632)
  d++ (21633)
  a=*d (21634)
  a==c (21635)
  jt 4 (21636)
  a<c (21638)
  a=0 (21639)
  jf 2 (21640)
  a= 1 (21642)
  r=a 5 (21644)
  (         ifN t5 goto whileend_996) (21646)
  a== 0 (21646)
  jf 3 (21648)
  lj 21709 (21650)
  (                    1116:       v[i] = base_word[i-1]) (21653)
  (         t5 = H[t0+4]〈i〉 - 1) (21653)
  c= 1 (21653)
  a=*d (21655)
  a-=c (21656)
  r=a 5 (21657)
  (         t6 = H[t0+2]〈base_word〉 & 2147483647) (21659)
  a=0 (21659)
  a-- (21660)
  a>>= 1 (21661)
  c=a (21663)
  a=r 0 (21664)
  a+= 2 (21666)
  d=a (21668)
  a=*d (21669)
  a&=c (21670)
  r=a 6 (21671)
  (         t6 = t6 + t5) (21673)
  c=r 5 (21673)
  a+=c (21675)
  r=a 6 (21676)
  (         t6 = M[t6]) (21678)
  b=a (21678)
  a=*b (21679)
  r=a 6 (21680)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (21682)
  a=0 (21682)
  a-- (21683)
  a>>= 1 (21684)
  c=a (21686)
  a=r 0 (21687)
  a+= 5 (21689)
  d=a (21691)
  a=*d (21692)
  a&=c (21693)
  r=a 7 (21694)
  (         t7 = t7 + H[t0+4]〈i〉) (21696)
  d-- (21696)
  c=*d (21697)
  a+=c (21698)
  r=a 7 (21699)
  (         M[t7] = t6) (21701)
  c=a (21701)
  a=r 6 (21702)
  *c=a (21704)
  (                    1117:       i += 1) (21705)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (21705)
  *d++ (21705)
  (         goto while_994) (21706)
  lj 21627 (21706)
  (        :whileend_996:) (21709)
  (                    1118:     if id_ == 33:) (21709)
  (         t6 = H[t0+1]〈id_〉 == 33) (21709)
  c= 33 (21709)
  a=r 0 (21711)
  a++ (21713)
  d=a (21714)
  a=*d (21715)
  a==c (21716)
  a=0 (21717)
  jf 1 (21718)
  a++ (21720)
  r=a 6 (21721)
  (         ifN t6 goto else_999) (21723)
  a== 0 (21723)
  jf 3 (21725)
  lj 21755 (21727)
  (                    1119:       v[i] = 0x2c) (21730)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21730)
  a=0 (21730)
  a-- (21731)
  a>>= 1 (21732)
  c=a (21734)
  a=r 0 (21735)
  a+= 5 (21737)
  d=a (21739)
  a=*d (21740)
  a&=c (21741)
  r=a 6 (21742)
  (         t6 = t6 + H[t0+4]〈i〉) (21744)
  d-- (21744)
  c=*d (21745)
  a+=c (21746)
  r=a 6 (21747)
  (         M[t6] = 44) (21749)
  c=a (21749)
  *c= 44 (21750)
  (         goto endif_1000) (21752)
  lj 21867 (21752)
  (        :else_999:) (21755)
  (                    1120:     elif id_ == 52:) (21755)
  (         t6 = H[t0+1]〈id_〉 == 52) (21755)
  c= 52 (21755)
  a=r 0 (21757)
  a++ (21759)
  d=a (21760)
  a=*d (21761)
  a==c (21762)
  a=0 (21763)
  jf 1 (21764)
  a++ (21766)
  r=a 6 (21767)
  (         ifN t6 goto else_1002) (21769)
  a== 0 (21769)
  jf 3 (21771)
  lj 21801 (21773)
  (                    1121:       v[i] = 0x2e) (21776)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21776)
  a=0 (21776)
  a-- (21777)
  a>>= 1 (21778)
  c=a (21780)
  a=r 0 (21781)
  a+= 5 (21783)
  d=a (21785)
  a=*d (21786)
  a&=c (21787)
  r=a 6 (21788)
  (         t6 = t6 + H[t0+4]〈i〉) (21790)
  d-- (21790)
  c=*d (21791)
  a+=c (21792)
  r=a 6 (21793)
  (         M[t6] = 46) (21795)
  c=a (21795)
  *c= 46 (21796)
  (         goto endif_1003) (21798)
  lj 21867 (21798)
  (        :else_1002:) (21801)
  (                    1122:     elif id_ == 81 or id_ == 98:) (21801)
  (         t7 = H[t0+1]〈id_〉 == 81) (21801)
  c= 81 (21801)
  a=r 0 (21803)
  a++ (21805)
  d=a (21806)
  a=*d (21807)
  a==c (21808)
  a=0 (21809)
  jf 1 (21810)
  a++ (21812)
  r=a 7 (21813)
  (         t8 = H[t0+1]〈id_〉 == 98) (21815)
  c= 98 (21815)
  a=*d (21817)
  a==c (21818)
  a=0 (21819)
  jf 1 (21820)
  a++ (21822)
  r=a 8 (21823)
  (         t6 = t7 or t8) (21825)
  c=a (21825)
  a=r 7 (21826)
  a== 0 (21828)
  jf 1 (21830)
  a=c (21832)
  r=a 6 (21833)
  (         ifN t6 goto else_1006) (21835)
  a== 0 (21835)
  jf 3 (21837)
  lj 21867 (21839)
  (                    1123:       v[i] = 0x3d) (21842)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21842)
  a=0 (21842)
  a-- (21843)
  a>>= 1 (21844)
  c=a (21846)
  a=r 0 (21847)
  a+= 5 (21849)
  d=a (21851)
  a=*d (21852)
  a&=c (21853)
  r=a 6 (21854)
  (         t6 = t6 + H[t0+4]〈i〉) (21856)
  d-- (21856)
  c=*d (21857)
  a+=c (21858)
  r=a 6 (21859)
  (         M[t6] = 61) (21861)
  c=a (21861)
  *c= 61 (21862)
  (         goto endif_1007) (21864)
  lj 21867 (21864)
  (        :else_1006:) (21867)
  (        :endif_1007:) (21867)
  (        :endif_1003:) (21867)
  (        :endif_1000:) (21867)
  (                    1124:     i += 1) (21867)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (21867)
  a=r 0 (21867)
  a+= 4 (21869)
  d=a (21871)
  *d++ (21872)
  (                    1125:     if id_ == 81:) (21873)
  (         t6 = H[t0+1]〈id_〉 == 81) (21873)
  c= 81 (21873)
  a=r 0 (21875)
  a++ (21877)
  d=a (21878)
  a=*d (21879)
  a==c (21880)
  a=0 (21881)
  jf 1 (21882)
  a++ (21884)
  r=a 6 (21885)
  (         ifN t6 goto else_1009) (21887)
  a== 0 (21887)
  jf 3 (21889)
  lj 21919 (21891)
  (                    1126:       v[i] = 0x22) (21894)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21894)
  a=0 (21894)
  a-- (21895)
  a>>= 1 (21896)
  c=a (21898)
  a=r 0 (21899)
  a+= 5 (21901)
  d=a (21903)
  a=*d (21904)
  a&=c (21905)
  r=a 6 (21906)
  (         t6 = t6 + H[t0+4]〈i〉) (21908)
  d-- (21908)
  c=*d (21909)
  a+=c (21910)
  r=a 6 (21911)
  (         M[t6] = 34) (21913)
  c=a (21913)
  *c= 34 (21914)
  (         goto endif_1010) (21916)
  lj 21987 (21916)
  (        :else_1009:) (21919)
  (                    1127:     elif id_ == 98:) (21919)
  (         t6 = H[t0+1]〈id_〉 == 98) (21919)
  c= 98 (21919)
  a=r 0 (21921)
  a++ (21923)
  d=a (21924)
  a=*d (21925)
  a==c (21926)
  a=0 (21927)
  jf 1 (21928)
  a++ (21930)
  r=a 6 (21931)
  (         ifN t6 goto else_1012) (21933)
  a== 0 (21933)
  jf 3 (21935)
  lj 21965 (21937)
  (                    1128:       v[i] = 0x27) (21940)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21940)
  a=0 (21940)
  a-- (21941)
  a>>= 1 (21942)
  c=a (21944)
  a=r 0 (21945)
  a+= 5 (21947)
  d=a (21949)
  a=*d (21950)
  a&=c (21951)
  r=a 6 (21952)
  (         t6 = t6 + H[t0+4]〈i〉) (21954)
  d-- (21954)
  c=*d (21955)
  a+=c (21956)
  r=a 6 (21957)
  (         M[t6] = 39) (21959)
  c=a (21959)
  *c= 39 (21960)
  (         goto endif_1013) (21962)
  lj 21987 (21962)
  (        :else_1012:) (21965)
  (                    1130:       v[i] = 0x20) (21965)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (21965)
  a=0 (21965)
  a-- (21966)
  a>>= 1 (21967)
  c=a (21969)
  a=r 0 (21970)
  a+= 5 (21972)
  d=a (21974)
  a=*d (21975)
  a&=c (21976)
  r=a 6 (21977)
  (         t6 = t6 + H[t0+4]〈i〉) (21979)
  d-- (21979)
  c=*d (21980)
  a+=c (21981)
  r=a 6 (21982)
  (         M[t6] = 32) (21984)
  c=a (21984)
  *c= 32 (21985)
  (        :endif_1013:) (21987)
  (        :endif_1010:) (21987)
  (         goto endif_993) (21987)
  lj 28969 (21987)
  (        :else_992:) (21990)
  (                    1131:   elif id_ == 41 or id_ == 72:  # 5 vorne an) (21990)
  (         t7 = H[t0+1]〈id_〉 == 41) (21990)
  c= 41 (21990)
  a=r 0 (21992)
  a++ (21994)
  d=a (21995)
  a=*d (21996)
  a==c (21997)
  a=0 (21998)
  jf 1 (21999)
  a++ (22001)
  r=a 7 (22002)
  (         t8 = H[t0+1]〈id_〉 == 72) (22004)
  c= 72 (22004)
  a=*d (22006)
  a==c (22007)
  a=0 (22008)
  jf 1 (22009)
  a++ (22011)
  r=a 8 (22012)
  (         t6 = t7 or t8) (22014)
  c=a (22014)
  a=r 7 (22015)
  a== 0 (22017)
  jf 1 (22019)
  a=c (22021)
  r=a 6 (22022)
  (         ifN t6 goto else_1016) (22024)
  a== 0 (22024)
  jf 3 (22026)
  lj 22666 (22028)
  (                    1132:     v = alloc_pM〈l+5〉) (22031)
  (         t6 = H[t0+3]〈l〉 + 5) (22031)
  c= 5 (22031)
  a=r 0 (22033)
  a+= 3 (22035)
  d=a (22037)
  a=*d (22038)
  a+=c (22039)
  r=a 6 (22040)
  (         H[t0+13]〈〉 = t0) (22042)
  a=r 0 (22042)
  a+= 13 (22044)
  d=a (22046)
  a=r 0 (22047)
  *d=a (22049)
  (saved bsp, return id:) (22050)
  (         H[t0+14]〈〉 = 82) (22050)
  d++ (22050)
  *d= 82 (22051)
  (push arguments:) (22053)
  (         H[t0+15]〈〉 = t6) (22053)
  d++ (22053)
  a=r 6 (22054)
  *d=a (22056)
  (         t0 = t0 + 14) (22057)
  c= 14 (22057)
  a=r 0 (22059)
  a+=c (22061)
  r=a 0 (22062)
  (         goto addr_alloc_pM) (22064)
  lj 323 (22064)
  (        :return_id_82:) (22067)
  (         t7 = t1) (22067)
  a=r 1 (22067)
  r=a 7 (22069)
  (         t7 = t7 | 2147483648) (22071)
  a= 1 (22071)
  a<<= 31 (22073)
  c=a (22075)
  a=r 7 (22076)
  a|=c (22078)
  r=a 7 (22079)
  (         H[t0+5]〈v〉 = t7) (22081)
  a=r 0 (22081)
  a+= 5 (22083)
  d=a (22085)
  a=r 7 (22086)
  *d=a (22088)
  (                    1133:     if id_ == 41:) (22089)
  (         t6 = H[t0+1]〈id_〉 == 41) (22089)
  c= 41 (22089)
  a=r 0 (22091)
  a++ (22093)
  d=a (22094)
  a=*d (22095)
  a==c (22096)
  a=0 (22097)
  jf 1 (22098)
  a++ (22100)
  r=a 6 (22101)
  (         ifN t6 goto else_1019) (22103)
  a== 0 (22103)
  jf 3 (22105)
  lj 22135 (22107)
  (                    1134:       v[i] = 0x20) (22110)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22110)
  a=0 (22110)
  a-- (22111)
  a>>= 1 (22112)
  c=a (22114)
  a=r 0 (22115)
  a+= 5 (22117)
  d=a (22119)
  a=*d (22120)
  a&=c (22121)
  r=a 6 (22122)
  (         t6 = t6 + H[t0+4]〈i〉) (22124)
  d-- (22124)
  c=*d (22125)
  a+=c (22126)
  r=a 6 (22127)
  (         M[t6] = 32) (22129)
  c=a (22129)
  *c= 32 (22130)
  (         goto endif_1020) (22132)
  lj 22181 (22132)
  (        :else_1019:) (22135)
  (                    1135:     elif id_ == 72:) (22135)
  (         t6 = H[t0+1]〈id_〉 == 72) (22135)
  c= 72 (22135)
  a=r 0 (22137)
  a++ (22139)
  d=a (22140)
  a=*d (22141)
  a==c (22142)
  a=0 (22143)
  jf 1 (22144)
  a++ (22146)
  r=a 6 (22147)
  (         ifN t6 goto else_1022) (22149)
  a== 0 (22149)
  jf 3 (22151)
  lj 22181 (22153)
  (                    1136:       v[i] = 0x2e) (22156)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22156)
  a=0 (22156)
  a-- (22157)
  a>>= 1 (22158)
  c=a (22160)
  a=r 0 (22161)
  a+= 5 (22163)
  d=a (22165)
  a=*d (22166)
  a&=c (22167)
  r=a 6 (22168)
  (         t6 = t6 + H[t0+4]〈i〉) (22170)
  d-- (22170)
  c=*d (22171)
  a+=c (22172)
  r=a 6 (22173)
  (         M[t6] = 46) (22175)
  c=a (22175)
  *c= 46 (22176)
  (         goto endif_1023) (22178)
  lj 22181 (22178)
  (        :else_1022:) (22181)
  (        :endif_1023:) (22181)
  (        :endif_1020:) (22181)
  (                    1137:     i += 1) (22181)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22181)
  a=r 0 (22181)
  a+= 4 (22183)
  d=a (22185)
  *d++ (22186)
  (                    1138:     if id_ == 41:) (22187)
  (         t6 = H[t0+1]〈id_〉 == 41) (22187)
  c= 41 (22187)
  a=r 0 (22189)
  a++ (22191)
  d=a (22192)
  a=*d (22193)
  a==c (22194)
  a=0 (22195)
  jf 1 (22196)
  a++ (22198)
  r=a 6 (22199)
  (         ifN t6 goto else_1025) (22201)
  a== 0 (22201)
  jf 3 (22203)
  lj 22233 (22205)
  (                    1139:       v[i] = 0x74) (22208)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22208)
  a=0 (22208)
  a-- (22209)
  a>>= 1 (22210)
  c=a (22212)
  a=r 0 (22213)
  a+= 5 (22215)
  d=a (22217)
  a=*d (22218)
  a&=c (22219)
  r=a 6 (22220)
  (         t6 = t6 + H[t0+4]〈i〉) (22222)
  d-- (22222)
  c=*d (22223)
  a+=c (22224)
  r=a 6 (22225)
  (         M[t6] = 116) (22227)
  c=a (22227)
  *c= 116 (22228)
  (         goto endif_1026) (22230)
  lj 22279 (22230)
  (        :else_1025:) (22233)
  (                    1140:     elif id_ == 72:) (22233)
  (         t6 = H[t0+1]〈id_〉 == 72) (22233)
  c= 72 (22233)
  a=r 0 (22235)
  a++ (22237)
  d=a (22238)
  a=*d (22239)
  a==c (22240)
  a=0 (22241)
  jf 1 (22242)
  a++ (22244)
  r=a 6 (22245)
  (         ifN t6 goto else_1028) (22247)
  a== 0 (22247)
  jf 3 (22249)
  lj 22279 (22251)
  (                    1141:       v[i] = 0x63) (22254)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22254)
  a=0 (22254)
  a-- (22255)
  a>>= 1 (22256)
  c=a (22258)
  a=r 0 (22259)
  a+= 5 (22261)
  d=a (22263)
  a=*d (22264)
  a&=c (22265)
  r=a 6 (22266)
  (         t6 = t6 + H[t0+4]〈i〉) (22268)
  d-- (22268)
  c=*d (22269)
  a+=c (22270)
  r=a 6 (22271)
  (         M[t6] = 99) (22273)
  c=a (22273)
  *c= 99 (22274)
  (         goto endif_1029) (22276)
  lj 22279 (22276)
  (        :else_1028:) (22279)
  (        :endif_1029:) (22279)
  (        :endif_1026:) (22279)
  (                    1142:     i += 1) (22279)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22279)
  a=r 0 (22279)
  a+= 4 (22281)
  d=a (22283)
  *d++ (22284)
  (                    1143:     if id_ == 41:) (22285)
  (         t6 = H[t0+1]〈id_〉 == 41) (22285)
  c= 41 (22285)
  a=r 0 (22287)
  a++ (22289)
  d=a (22290)
  a=*d (22291)
  a==c (22292)
  a=0 (22293)
  jf 1 (22294)
  a++ (22296)
  r=a 6 (22297)
  (         ifN t6 goto else_1031) (22299)
  a== 0 (22299)
  jf 3 (22301)
  lj 22331 (22303)
  (                    1144:       v[i] = 0x68) (22306)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22306)
  a=0 (22306)
  a-- (22307)
  a>>= 1 (22308)
  c=a (22310)
  a=r 0 (22311)
  a+= 5 (22313)
  d=a (22315)
  a=*d (22316)
  a&=c (22317)
  r=a 6 (22318)
  (         t6 = t6 + H[t0+4]〈i〉) (22320)
  d-- (22320)
  c=*d (22321)
  a+=c (22322)
  r=a 6 (22323)
  (         M[t6] = 104) (22325)
  c=a (22325)
  *c= 104 (22326)
  (         goto endif_1032) (22328)
  lj 22377 (22328)
  (        :else_1031:) (22331)
  (                    1145:     elif id_ == 72:) (22331)
  (         t6 = H[t0+1]〈id_〉 == 72) (22331)
  c= 72 (22331)
  a=r 0 (22333)
  a++ (22335)
  d=a (22336)
  a=*d (22337)
  a==c (22338)
  a=0 (22339)
  jf 1 (22340)
  a++ (22342)
  r=a 6 (22343)
  (         ifN t6 goto else_1034) (22345)
  a== 0 (22345)
  jf 3 (22347)
  lj 22377 (22349)
  (                    1146:       v[i] = 0x6f) (22352)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22352)
  a=0 (22352)
  a-- (22353)
  a>>= 1 (22354)
  c=a (22356)
  a=r 0 (22357)
  a+= 5 (22359)
  d=a (22361)
  a=*d (22362)
  a&=c (22363)
  r=a 6 (22364)
  (         t6 = t6 + H[t0+4]〈i〉) (22366)
  d-- (22366)
  c=*d (22367)
  a+=c (22368)
  r=a 6 (22369)
  (         M[t6] = 111) (22371)
  c=a (22371)
  *c= 111 (22372)
  (         goto endif_1035) (22374)
  lj 22377 (22374)
  (        :else_1034:) (22377)
  (        :endif_1035:) (22377)
  (        :endif_1032:) (22377)
  (                    1147:     i += 1) (22377)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22377)
  a=r 0 (22377)
  a+= 4 (22379)
  d=a (22381)
  *d++ (22382)
  (                    1148:     if id_ == 41:) (22383)
  (         t6 = H[t0+1]〈id_〉 == 41) (22383)
  c= 41 (22383)
  a=r 0 (22385)
  a++ (22387)
  d=a (22388)
  a=*d (22389)
  a==c (22390)
  a=0 (22391)
  jf 1 (22392)
  a++ (22394)
  r=a 6 (22395)
  (         ifN t6 goto else_1037) (22397)
  a== 0 (22397)
  jf 3 (22399)
  lj 22429 (22401)
  (                    1149:       v[i] = 0x65) (22404)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22404)
  a=0 (22404)
  a-- (22405)
  a>>= 1 (22406)
  c=a (22408)
  a=r 0 (22409)
  a+= 5 (22411)
  d=a (22413)
  a=*d (22414)
  a&=c (22415)
  r=a 6 (22416)
  (         t6 = t6 + H[t0+4]〈i〉) (22418)
  d-- (22418)
  c=*d (22419)
  a+=c (22420)
  r=a 6 (22421)
  (         M[t6] = 101) (22423)
  c=a (22423)
  *c= 101 (22424)
  (         goto endif_1038) (22426)
  lj 22475 (22426)
  (        :else_1037:) (22429)
  (                    1150:     elif id_ == 72:) (22429)
  (         t6 = H[t0+1]〈id_〉 == 72) (22429)
  c= 72 (22429)
  a=r 0 (22431)
  a++ (22433)
  d=a (22434)
  a=*d (22435)
  a==c (22436)
  a=0 (22437)
  jf 1 (22438)
  a++ (22440)
  r=a 6 (22441)
  (         ifN t6 goto else_1040) (22443)
  a== 0 (22443)
  jf 3 (22445)
  lj 22475 (22447)
  (                    1151:       v[i] = 0x6d) (22450)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22450)
  a=0 (22450)
  a-- (22451)
  a>>= 1 (22452)
  c=a (22454)
  a=r 0 (22455)
  a+= 5 (22457)
  d=a (22459)
  a=*d (22460)
  a&=c (22461)
  r=a 6 (22462)
  (         t6 = t6 + H[t0+4]〈i〉) (22464)
  d-- (22464)
  c=*d (22465)
  a+=c (22466)
  r=a 6 (22467)
  (         M[t6] = 109) (22469)
  c=a (22469)
  *c= 109 (22470)
  (         goto endif_1041) (22472)
  lj 22475 (22472)
  (        :else_1040:) (22475)
  (        :endif_1041:) (22475)
  (        :endif_1038:) (22475)
  (                    1152:     i += 1) (22475)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22475)
  a=r 0 (22475)
  a+= 4 (22477)
  d=a (22479)
  *d++ (22480)
  (                    1153:     if id_ == 41:) (22481)
  (         t6 = H[t0+1]〈id_〉 == 41) (22481)
  c= 41 (22481)
  a=r 0 (22483)
  a++ (22485)
  d=a (22486)
  a=*d (22487)
  a==c (22488)
  a=0 (22489)
  jf 1 (22490)
  a++ (22492)
  r=a 6 (22493)
  (         ifN t6 goto else_1043) (22495)
  a== 0 (22495)
  jf 3 (22497)
  lj 22527 (22499)
  (                    1154:       v[i] = 0x20) (22502)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22502)
  a=0 (22502)
  a-- (22503)
  a>>= 1 (22504)
  c=a (22506)
  a=r 0 (22507)
  a+= 5 (22509)
  d=a (22511)
  a=*d (22512)
  a&=c (22513)
  r=a 6 (22514)
  (         t6 = t6 + H[t0+4]〈i〉) (22516)
  d-- (22516)
  c=*d (22517)
  a+=c (22518)
  r=a 6 (22519)
  (         M[t6] = 32) (22521)
  c=a (22521)
  *c= 32 (22522)
  (         goto endif_1044) (22524)
  lj 22573 (22524)
  (        :else_1043:) (22527)
  (                    1155:     elif id_ == 72:) (22527)
  (         t6 = H[t0+1]〈id_〉 == 72) (22527)
  c= 72 (22527)
  a=r 0 (22529)
  a++ (22531)
  d=a (22532)
  a=*d (22533)
  a==c (22534)
  a=0 (22535)
  jf 1 (22536)
  a++ (22538)
  r=a 6 (22539)
  (         ifN t6 goto else_1046) (22541)
  a== 0 (22541)
  jf 3 (22543)
  lj 22573 (22545)
  (                    1156:       v[i] = 0x2f) (22548)
  (         t6 = H[t0+5]〈v〉 & 2147483647) (22548)
  a=0 (22548)
  a-- (22549)
  a>>= 1 (22550)
  c=a (22552)
  a=r 0 (22553)
  a+= 5 (22555)
  d=a (22557)
  a=*d (22558)
  a&=c (22559)
  r=a 6 (22560)
  (         t6 = t6 + H[t0+4]〈i〉) (22562)
  d-- (22562)
  c=*d (22563)
  a+=c (22564)
  r=a 6 (22565)
  (         M[t6] = 47) (22567)
  c=a (22567)
  *c= 47 (22568)
  (         goto endif_1047) (22570)
  lj 22573 (22570)
  (        :else_1046:) (22573)
  (        :endif_1047:) (22573)
  (        :endif_1044:) (22573)
  (                    1157:     i += 1) (22573)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22573)
  a=r 0 (22573)
  a+= 4 (22575)
  d=a (22577)
  *d++ (22578)
  (                    1158:     while i-5 < l:) (22579)
  (        :while_1048:) (22579)
  (         t7 = H[t0+4]〈i〉 - 5) (22579)
  c= 5 (22579)
  a=r 0 (22581)
  a+= 4 (22583)
  d=a (22585)
  a=*d (22586)
  a-=c (22587)
  r=a 7 (22588)
  (         t6 = t7 < H[t0+3]〈l〉) (22590)
  d-- (22590)
  c=*d (22591)
  a<c (22592)
  a=0 (22593)
  jf 1 (22594)
  a++ (22596)
  r=a 6 (22597)
  (         ifN t6 goto whileend_1050) (22599)
  a== 0 (22599)
  jf 3 (22601)
  lj 22663 (22603)
  (                    1159:       v[i] = base_word[i-5]) (22606)
  (         t6 = H[t0+4]〈i〉 - 5) (22606)
  c= 5 (22606)
  d++ (22608)
  a=*d (22609)
  a-=c (22610)
  r=a 6 (22611)
  (         t7 = H[t0+2]〈base_word〉 & 2147483647) (22613)
  a=0 (22613)
  a-- (22614)
  a>>= 1 (22615)
  c=a (22617)
  a=r 0 (22618)
  a+= 2 (22620)
  d=a (22622)
  a=*d (22623)
  a&=c (22624)
  r=a 7 (22625)
  (         t7 = t7 + t6) (22627)
  c=r 6 (22627)
  a+=c (22629)
  r=a 7 (22630)
  (         t7 = M[t7]) (22632)
  b=a (22632)
  a=*b (22633)
  r=a 7 (22634)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (22636)
  a=0 (22636)
  a-- (22637)
  a>>= 1 (22638)
  c=a (22640)
  a=r 0 (22641)
  a+= 5 (22643)
  d=a (22645)
  a=*d (22646)
  a&=c (22647)
  r=a 8 (22648)
  (         t8 = t8 + H[t0+4]〈i〉) (22650)
  d-- (22650)
  c=*d (22651)
  a+=c (22652)
  r=a 8 (22653)
  (         M[t8] = t7) (22655)
  c=a (22655)
  a=r 7 (22656)
  *c=a (22658)
  (                    1160:       i += 1) (22659)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22659)
  *d++ (22659)
  (         goto while_1048) (22660)
  lj 22579 (22660)
  (        :whileend_1050:) (22663)
  (         goto endif_1017) (22663)
  lj 28969 (22663)
  (        :else_1016:) (22666)
  (                    1161:   elif id_ == 44:) (22666)
  (         t7 = H[t0+1]〈id_〉 == 44) (22666)
  c= 44 (22666)
  a=r 0 (22668)
  a++ (22670)
  d=a (22671)
  a=*d (22672)
  a==c (22673)
  a=0 (22674)
  jf 1 (22675)
  a++ (22677)
  r=a 7 (22678)
  (         ifN t7 goto else_1053) (22680)
  a== 0 (22680)
  jf 3 (22682)
  lj 22733 (22684)
  (                    1162:     v = uppercase_all〈base_word〉) (22687)
  (         H[t0+14]〈〉 = t0) (22687)
  a=r 0 (22687)
  a+= 14 (22689)
  d=a (22691)
  a=r 0 (22692)
  *d=a (22694)
  (saved bsp, return id:) (22695)
  (         H[t0+15]〈〉 = 83) (22695)
  d++ (22695)
  *d= 83 (22696)
  (push arguments:) (22698)
  (         H[t0+16]〈〉 = H[t0+2]〈base_word〉) (22698)
  a+= 2 (22698)
  d=a (22700)
  c=*d (22701)
  a=r 0 (22702)
  a+= 16 (22704)
  d=a (22706)
  *d=c (22707)
  (         t0 = t0 + 15) (22708)
  c= 15 (22708)
  a=r 0 (22710)
  a+=c (22712)
  r=a 0 (22713)
  (         goto uppercase_all) (22715)
  lj 8978 (22715)
  (        :return_id_83:) (22718)
  (         t7 = t1) (22718)
  a=r 1 (22718)
  r=a 7 (22720)
  (         H[t0+5]〈v〉 = t7) (22722)
  a=r 0 (22722)
  a+= 5 (22724)
  d=a (22726)
  a=r 7 (22727)
  *d=a (22729)
  (         goto endif_1054) (22730)
  lj 28969 (22730)
  (        :else_1053:) (22733)
  (                    1163:   elif id_ == 49:) (22733)
  (         t7 = H[t0+1]〈id_〉 == 49) (22733)
  c= 49 (22733)
  a=r 0 (22735)
  a++ (22737)
  d=a (22738)
  a=*d (22739)
  a==c (22740)
  a=0 (22741)
  jf 1 (22742)
  a++ (22744)
  r=a 7 (22745)
  (         ifN t7 goto else_1056) (22747)
  a== 0 (22747)
  jf 3 (22749)
  lj 23011 (22751)
  (                    1164:     j = 1) (22754)
  (         H[t0+6]〈j〉 = 1) (22754)
  a=r 0 (22754)
  a+= 6 (22756)
  d=a (22758)
  *d= 1 (22759)
  (                    1165:     if l > j:) (22761)
  (         t7 = H[t0+3]〈l〉 > H[t0+6]〈j〉) (22761)
  c=*d (22761)
  a=r 0 (22762)
  a+= 3 (22764)
  d=a (22766)
  a=*d (22767)
  a>c (22768)
  a=0 (22769)
  jf 1 (22770)
  a++ (22772)
  r=a 7 (22773)
  (         ifN t7 goto else_1059) (22775)
  a== 0 (22775)
  jf 3 (22777)
  lj 22792 (22779)
  (                    1166:       j = l) (22782)
  (         H[t0+6]〈j〉 = H[t0+3]〈l〉) (22782)
  c=*d (22782)
  a=r 0 (22783)
  a+= 6 (22785)
  d=a (22787)
  *d=c (22788)
  (         goto endif_1060) (22789)
  lj 22792 (22789)
  (        :else_1059:) (22792)
  (        :endif_1060:) (22792)
  (                    1167:     j -= 1) (22792)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 1) (22792)
  a=r 0 (22792)
  a+= 6 (22794)
  d=a (22796)
  *d-- (22797)
  (                    1168:     v = alloc_pM〈j+4〉) (22798)
  (         t7 = H[t0+6]〈j〉 + 4) (22798)
  c= 4 (22798)
  a=*d (22800)
  a+=c (22801)
  r=a 7 (22802)
  (         H[t0+14]〈〉 = t0) (22804)
  a=r 0 (22804)
  a+= 14 (22806)
  d=a (22808)
  a=r 0 (22809)
  *d=a (22811)
  (saved bsp, return id:) (22812)
  (         H[t0+15]〈〉 = 84) (22812)
  d++ (22812)
  *d= 84 (22813)
  (push arguments:) (22815)
  (         H[t0+16]〈〉 = t7) (22815)
  d++ (22815)
  a=r 7 (22816)
  *d=a (22818)
  (         t0 = t0 + 15) (22819)
  c= 15 (22819)
  a=r 0 (22821)
  a+=c (22823)
  r=a 0 (22824)
  (         goto addr_alloc_pM) (22826)
  lj 323 (22826)
  (        :return_id_84:) (22829)
  (         t8 = t1) (22829)
  a=r 1 (22829)
  r=a 8 (22831)
  (         t8 = t8 | 2147483648) (22833)
  a= 1 (22833)
  a<<= 31 (22835)
  c=a (22837)
  a=r 8 (22838)
  a|=c (22840)
  r=a 8 (22841)
  (         H[t0+5]〈v〉 = t8) (22843)
  a=r 0 (22843)
  a+= 5 (22845)
  d=a (22847)
  a=r 8 (22848)
  *d=a (22850)
  (                    1169:     while i < j:) (22851)
  (        :while_1061:) (22851)
  (         t7 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (22851)
  a=r 0 (22851)
  a+= 6 (22853)
  d=a (22855)
  c=*d (22856)
  a=r 0 (22857)
  a+= 4 (22859)
  d=a (22861)
  a=*d (22862)
  a<c (22863)
  a=0 (22864)
  jf 1 (22865)
  a++ (22867)
  r=a 7 (22868)
  (         ifN t7 goto whileend_1063) (22870)
  a== 0 (22870)
  jf 3 (22872)
  lj 22929 (22874)
  (                    1170:       v[i] = base_word[i]) (22877)
  (         t7 = H[t0+2]〈base_word〉 & 2147483647) (22877)
  a=0 (22877)
  a-- (22878)
  a>>= 1 (22879)
  c=a (22881)
  a=r 0 (22882)
  a+= 2 (22884)
  d=a (22886)
  a=*d (22887)
  a&=c (22888)
  r=a 7 (22889)
  (         t7 = t7 + H[t0+4]〈i〉) (22891)
  a=r 0 (22891)
  a+= 4 (22893)
  d=a (22895)
  c=*d (22896)
  a=r 7 (22897)
  a+=c (22899)
  r=a 7 (22900)
  (         t7 = M[t7]) (22902)
  b=a (22902)
  a=*b (22903)
  r=a 7 (22904)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (22906)
  a=0 (22906)
  a-- (22907)
  a>>= 1 (22908)
  c=a (22910)
  d++ (22911)
  a=*d (22912)
  a&=c (22913)
  r=a 8 (22914)
  (         t8 = t8 + H[t0+4]〈i〉) (22916)
  d-- (22916)
  c=*d (22917)
  a+=c (22918)
  r=a 8 (22919)
  (         M[t8] = t7) (22921)
  c=a (22921)
  a=r 7 (22922)
  *c=a (22924)
  (                    1171:       i += 1) (22925)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22925)
  *d++ (22925)
  (         goto while_1061) (22926)
  lj 22851 (22926)
  (        :whileend_1063:) (22929)
  (                    1172:     v[i] = 0x69) (22929)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (22929)
  a=0 (22929)
  a-- (22930)
  a>>= 1 (22931)
  c=a (22933)
  a=r 0 (22934)
  a+= 5 (22936)
  d=a (22938)
  a=*d (22939)
  a&=c (22940)
  r=a 7 (22941)
  (         t7 = t7 + H[t0+4]〈i〉) (22943)
  d-- (22943)
  c=*d (22944)
  a+=c (22945)
  r=a 7 (22946)
  (         M[t7] = 105) (22948)
  c=a (22948)
  *c= 105 (22949)
  (                    1173:     i += 1) (22951)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22951)
  *d++ (22951)
  (                    1174:     v[i] = 0x6e) (22952)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (22952)
  a=0 (22952)
  a-- (22953)
  a>>= 1 (22954)
  c=a (22956)
  d++ (22957)
  a=*d (22958)
  a&=c (22959)
  r=a 7 (22960)
  (         t7 = t7 + H[t0+4]〈i〉) (22962)
  d-- (22962)
  c=*d (22963)
  a+=c (22964)
  r=a 7 (22965)
  (         M[t7] = 110) (22967)
  c=a (22967)
  *c= 110 (22968)
  (                    1175:     i += 1) (22970)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22970)
  *d++ (22970)
  (                    1176:     v[i] = 0x67) (22971)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (22971)
  a=0 (22971)
  a-- (22972)
  a>>= 1 (22973)
  c=a (22975)
  d++ (22976)
  a=*d (22977)
  a&=c (22978)
  r=a 7 (22979)
  (         t7 = t7 + H[t0+4]〈i〉) (22981)
  d-- (22981)
  c=*d (22982)
  a+=c (22983)
  r=a 7 (22984)
  (         M[t7] = 103) (22986)
  c=a (22986)
  *c= 103 (22987)
  (                    1177:     i += 1) (22989)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (22989)
  *d++ (22989)
  (                    1178:     v[i] = 0x20) (22990)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (22990)
  a=0 (22990)
  a-- (22991)
  a>>= 1 (22992)
  c=a (22994)
  d++ (22995)
  a=*d (22996)
  a&=c (22997)
  r=a 7 (22998)
  (         t7 = t7 + H[t0+4]〈i〉) (23000)
  d-- (23000)
  c=*d (23001)
  a+=c (23002)
  r=a 7 (23003)
  (         M[t7] = 32) (23005)
  c=a (23005)
  *c= 32 (23006)
  (         goto endif_1057) (23008)
  lj 28969 (23008)
  (        :else_1056:) (23011)
  (                    1179:   elif id_ == 58 or id_ == 69 or id_ == 88 or id_ == 104 or id_ == 108:  # upper first 2 hinten an) (23011)
  (         t11 = H[t0+1]〈id_〉 == 58) (23011)
  c= 58 (23011)
  a=r 0 (23013)
  a++ (23015)
  d=a (23016)
  a=*d (23017)
  a==c (23018)
  a=0 (23019)
  jf 1 (23020)
  a++ (23022)
  r=a 11 (23023)
  (         t12 = H[t0+1]〈id_〉 == 69) (23025)
  c= 69 (23025)
  a=*d (23027)
  a==c (23028)
  a=0 (23029)
  jf 1 (23030)
  a++ (23032)
  r=a 12 (23033)
  (         t10 = t11 or t12) (23035)
  c=a (23035)
  a=r 11 (23036)
  a== 0 (23038)
  jf 1 (23040)
  a=c (23042)
  r=a 10 (23043)
  (         t11 = H[t0+1]〈id_〉 == 88) (23045)
  c= 88 (23045)
  a=*d (23047)
  a==c (23048)
  a=0 (23049)
  jf 1 (23050)
  a++ (23052)
  r=a 11 (23053)
  (         t9 = t10 or t11) (23055)
  c=a (23055)
  a=r 10 (23056)
  a== 0 (23058)
  jf 1 (23060)
  a=c (23062)
  r=a 9 (23063)
  (         t10 = H[t0+1]〈id_〉 == 104) (23065)
  c= 104 (23065)
  a=*d (23067)
  a==c (23068)
  a=0 (23069)
  jf 1 (23070)
  a++ (23072)
  r=a 10 (23073)
  (         t8 = t9 or t10) (23075)
  c=a (23075)
  a=r 9 (23076)
  a== 0 (23078)
  jf 1 (23080)
  a=c (23082)
  r=a 8 (23083)
  (         t9 = H[t0+1]〈id_〉 == 108) (23085)
  c= 108 (23085)
  a=*d (23087)
  a==c (23088)
  a=0 (23089)
  jf 1 (23090)
  a++ (23092)
  r=a 9 (23093)
  (         t7 = t8 or t9) (23095)
  c=a (23095)
  a=r 8 (23096)
  a== 0 (23098)
  jf 1 (23100)
  a=c (23102)
  r=a 7 (23103)
  (         ifN t7 goto else_1070) (23105)
  a== 0 (23105)
  jf 3 (23107)
  lj 23863 (23109)
  (                    1180:     u = uppercase_first〈base_word〉) (23112)
  (         H[t0+14]〈〉 = t0) (23112)
  a=r 0 (23112)
  a+= 14 (23114)
  d=a (23116)
  a=r 0 (23117)
  *d=a (23119)
  (saved bsp, return id:) (23120)
  (         H[t0+15]〈〉 = 85) (23120)
  d++ (23120)
  *d= 85 (23121)
  (push arguments:) (23123)
  (         H[t0+16]〈〉 = H[t0+2]〈base_word〉) (23123)
  a+= 2 (23123)
  d=a (23125)
  c=*d (23126)
  a=r 0 (23127)
  a+= 16 (23129)
  d=a (23131)
  *d=c (23132)
  (         t0 = t0 + 15) (23133)
  c= 15 (23133)
  a=r 0 (23135)
  a+=c (23137)
  r=a 0 (23138)
  (         goto uppercase_first) (23140)
  lj 9839 (23140)
  (        :return_id_85:) (23143)
  (         t7 = t1) (23143)
  a=r 1 (23143)
  r=a 7 (23145)
  (         H[t0+7]〈u〉 = t7) (23147)
  a=r 0 (23147)
  a+= 7 (23149)
  d=a (23151)
  a=r 7 (23152)
  *d=a (23154)
  (                    1181:     j = len_pM〈u〉) (23155)
  (         t7 = H[t0+7]〈u〉) (23155)
  a=*d (23155)
  r=a 7 (23156)
  (         t7 = t7 & 2147483647) (23158)
  a=0 (23158)
  a-- (23159)
  a>>= 1 (23160)
  c=a (23162)
  a=r 7 (23163)
  a&=c (23165)
  r=a 7 (23166)
  (         t7 = t7 - 5) (23168)
  c= 5 (23168)
  a-=c (23170)
  r=a 7 (23171)
  (         t8 = M[t7] << 8) (23173)
  c= 8 (23173)
  b=a (23175)
  a=*b (23176)
  a<<=c (23177)
  r=a 8 (23178)
  (         t7 = t7 + 1) (23180)
  a=r 7 (23180)
  a++ (23182)
  r=a 7 (23183)
  (         t8 = t8 + M[t7]) (23185)
  b=a (23185)
  c=*b (23186)
  a=r 8 (23187)
  a+=c (23189)
  r=a 8 (23190)
  (         t8 = t8 << 8) (23192)
  c= 8 (23192)
  a<<=c (23194)
  r=a 8 (23195)
  (         t7 = t7 + 1) (23197)
  a=r 7 (23197)
  a++ (23199)
  r=a 7 (23200)
  (         t8 = t8 + M[t7]) (23202)
  b=a (23202)
  c=*b (23203)
  a=r 8 (23204)
  a+=c (23206)
  r=a 8 (23207)
  (         t8 = t8 << 8) (23209)
  c= 8 (23209)
  a<<=c (23211)
  r=a 8 (23212)
  (         t7 = t7 + 1) (23214)
  a=r 7 (23214)
  a++ (23216)
  r=a 7 (23217)
  (         t8 = t8 + M[t7]) (23219)
  b=a (23219)
  c=*b (23220)
  a=r 8 (23221)
  a+=c (23223)
  r=a 8 (23224)
  (         H[t0+6]〈j〉 = t8) (23226)
  d-- (23226)
  *d=a (23227)
  (                    1182:     v = alloc_pM〈j+2〉) (23228)
  (         t7 = H[t0+6]〈j〉 + 2) (23228)
  c= 2 (23228)
  a=*d (23230)
  a+=c (23231)
  r=a 7 (23232)
  (         H[t0+14]〈〉 = t0) (23234)
  a=r 0 (23234)
  a+= 14 (23236)
  d=a (23238)
  a=r 0 (23239)
  *d=a (23241)
  (saved bsp, return id:) (23242)
  (         H[t0+15]〈〉 = 86) (23242)
  d++ (23242)
  *d= 86 (23243)
  (push arguments:) (23245)
  (         H[t0+16]〈〉 = t7) (23245)
  d++ (23245)
  a=r 7 (23246)
  *d=a (23248)
  (         t0 = t0 + 15) (23249)
  c= 15 (23249)
  a=r 0 (23251)
  a+=c (23253)
  r=a 0 (23254)
  (         goto addr_alloc_pM) (23256)
  lj 323 (23256)
  (        :return_id_86:) (23259)
  (         t8 = t1) (23259)
  a=r 1 (23259)
  r=a 8 (23261)
  (         t8 = t8 | 2147483648) (23263)
  a= 1 (23263)
  a<<= 31 (23265)
  c=a (23267)
  a=r 8 (23268)
  a|=c (23270)
  r=a 8 (23271)
  (         H[t0+5]〈v〉 = t8) (23273)
  a=r 0 (23273)
  a+= 5 (23275)
  d=a (23277)
  a=r 8 (23278)
  *d=a (23280)
  (                    1183:     while i < j:) (23281)
  (        :while_1072:) (23281)
  (         t7 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (23281)
  a=r 0 (23281)
  a+= 6 (23283)
  d=a (23285)
  c=*d (23286)
  a=r 0 (23287)
  a+= 4 (23289)
  d=a (23291)
  a=*d (23292)
  a<c (23293)
  a=0 (23294)
  jf 1 (23295)
  a++ (23297)
  r=a 7 (23298)
  (         ifN t7 goto whileend_1074) (23300)
  a== 0 (23300)
  jf 3 (23302)
  lj 23403 (23304)
  (                    1184:       v[i] = u[i]) (23307)
  (         t7 = H[t0+7]〈u〉 >> 31) (23307)
  c= 31 (23307)
  a=r 0 (23309)
  a+= 7 (23311)
  d=a (23313)
  a=*d (23314)
  a>>=c (23315)
  r=a 7 (23316)
  (         if t7 goto isM_1076) (23318)
  a== 0 (23318)
  jt 3 (23320)
  lj 23347 (23322)
  (         t7 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (23325)
  a=r 0 (23325)
  a+= 4 (23327)
  d=a (23329)
  c=*d (23330)
  a=r 0 (23331)
  a+= 7 (23333)
  d=a (23335)
  a=*d (23336)
  a+=c (23337)
  r=a 7 (23338)
  (         t7 = H[t7]〈〉) (23340)
  d=a (23340)
  a=*d (23341)
  r=a 7 (23342)
  (         goto MorHdone_1077) (23344)
  lj 23376 (23344)
  (        :isM_1076:) (23347)
  (         t7 = H[t0+7]〈u〉 & 2147483647) (23347)
  a=0 (23347)
  a-- (23348)
  a>>= 1 (23349)
  c=a (23351)
  a=r 0 (23352)
  a+= 7 (23354)
  d=a (23356)
  a=*d (23357)
  a&=c (23358)
  r=a 7 (23359)
  (         t7 = t7 + H[t0+4]〈i〉) (23361)
  a=r 0 (23361)
  a+= 4 (23363)
  d=a (23365)
  c=*d (23366)
  a=r 7 (23367)
  a+=c (23369)
  r=a 7 (23370)
  (         t7 = M[t7]) (23372)
  b=a (23372)
  a=*b (23373)
  r=a 7 (23374)
  (        :MorHdone_1077:) (23376)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (23376)
  a=0 (23376)
  a-- (23377)
  a>>= 1 (23378)
  c=a (23380)
  a=r 0 (23381)
  a+= 5 (23383)
  d=a (23385)
  a=*d (23386)
  a&=c (23387)
  r=a 8 (23388)
  (         t8 = t8 + H[t0+4]〈i〉) (23390)
  d-- (23390)
  c=*d (23391)
  a+=c (23392)
  r=a 8 (23393)
  (         M[t8] = t7) (23395)
  c=a (23395)
  a=r 7 (23396)
  *c=a (23398)
  (                    1185:       i += 1) (23399)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (23399)
  *d++ (23399)
  (         goto while_1072) (23400)
  lj 23281 (23400)
  (        :whileend_1074:) (23403)
  (                    1186:     if id_ == 58:) (23403)
  (         t7 = H[t0+1]〈id_〉 == 58) (23403)
  c= 58 (23403)
  a=r 0 (23405)
  a++ (23407)
  d=a (23408)
  a=*d (23409)
  a==c (23410)
  a=0 (23411)
  jf 1 (23412)
  a++ (23414)
  r=a 7 (23415)
  (         ifN t7 goto else_1079) (23417)
  a== 0 (23417)
  jf 3 (23419)
  lj 23449 (23421)
  (                    1187:       v[i] = 0x2c) (23424)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23424)
  a=0 (23424)
  a-- (23425)
  a>>= 1 (23426)
  c=a (23428)
  a=r 0 (23429)
  a+= 5 (23431)
  d=a (23433)
  a=*d (23434)
  a&=c (23435)
  r=a 7 (23436)
  (         t7 = t7 + H[t0+4]〈i〉) (23438)
  d-- (23438)
  c=*d (23439)
  a+=c (23440)
  r=a 7 (23441)
  (         M[t7] = 44) (23443)
  c=a (23443)
  *c= 44 (23444)
  (         goto endif_1080) (23446)
  lj 23607 (23446)
  (        :else_1079:) (23449)
  (                    1188:     elif id_ == 69:) (23449)
  (         t7 = H[t0+1]〈id_〉 == 69) (23449)
  c= 69 (23449)
  a=r 0 (23451)
  a++ (23453)
  d=a (23454)
  a=*d (23455)
  a==c (23456)
  a=0 (23457)
  jf 1 (23458)
  a++ (23460)
  r=a 7 (23461)
  (         ifN t7 goto else_1082) (23463)
  a== 0 (23463)
  jf 3 (23465)
  lj 23495 (23467)
  (                    1189:       v[i] = 0x22) (23470)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23470)
  a=0 (23470)
  a-- (23471)
  a>>= 1 (23472)
  c=a (23474)
  a=r 0 (23475)
  a+= 5 (23477)
  d=a (23479)
  a=*d (23480)
  a&=c (23481)
  r=a 7 (23482)
  (         t7 = t7 + H[t0+4]〈i〉) (23484)
  d-- (23484)
  c=*d (23485)
  a+=c (23486)
  r=a 7 (23487)
  (         M[t7] = 34) (23489)
  c=a (23489)
  *c= 34 (23490)
  (         goto endif_1083) (23492)
  lj 23607 (23492)
  (        :else_1082:) (23495)
  (                    1190:     elif id_ == 88:) (23495)
  (         t7 = H[t0+1]〈id_〉 == 88) (23495)
  c= 88 (23495)
  a=r 0 (23497)
  a++ (23499)
  d=a (23500)
  a=*d (23501)
  a==c (23502)
  a=0 (23503)
  jf 1 (23504)
  a++ (23506)
  r=a 7 (23507)
  (         ifN t7 goto else_1085) (23509)
  a== 0 (23509)
  jf 3 (23511)
  lj 23541 (23513)
  (                    1191:       v[i] = 0x2e) (23516)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23516)
  a=0 (23516)
  a-- (23517)
  a>>= 1 (23518)
  c=a (23520)
  a=r 0 (23521)
  a+= 5 (23523)
  d=a (23525)
  a=*d (23526)
  a&=c (23527)
  r=a 7 (23528)
  (         t7 = t7 + H[t0+4]〈i〉) (23530)
  d-- (23530)
  c=*d (23531)
  a+=c (23532)
  r=a 7 (23533)
  (         M[t7] = 46) (23535)
  c=a (23535)
  *c= 46 (23536)
  (         goto endif_1086) (23538)
  lj 23607 (23538)
  (        :else_1085:) (23541)
  (                    1192:     elif id_ == 104 or id_ == 108:) (23541)
  (         t8 = H[t0+1]〈id_〉 == 104) (23541)
  c= 104 (23541)
  a=r 0 (23543)
  a++ (23545)
  d=a (23546)
  a=*d (23547)
  a==c (23548)
  a=0 (23549)
  jf 1 (23550)
  a++ (23552)
  r=a 8 (23553)
  (         t9 = H[t0+1]〈id_〉 == 108) (23555)
  c= 108 (23555)
  a=*d (23557)
  a==c (23558)
  a=0 (23559)
  jf 1 (23560)
  a++ (23562)
  r=a 9 (23563)
  (         t7 = t8 or t9) (23565)
  c=a (23565)
  a=r 8 (23566)
  a== 0 (23568)
  jf 1 (23570)
  a=c (23572)
  r=a 7 (23573)
  (         ifN t7 goto else_1089) (23575)
  a== 0 (23575)
  jf 3 (23577)
  lj 23607 (23579)
  (                    1193:       v[i] = 0x3d) (23582)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23582)
  a=0 (23582)
  a-- (23583)
  a>>= 1 (23584)
  c=a (23586)
  a=r 0 (23587)
  a+= 5 (23589)
  d=a (23591)
  a=*d (23592)
  a&=c (23593)
  r=a 7 (23594)
  (         t7 = t7 + H[t0+4]〈i〉) (23596)
  d-- (23596)
  c=*d (23597)
  a+=c (23598)
  r=a 7 (23599)
  (         M[t7] = 61) (23601)
  c=a (23601)
  *c= 61 (23602)
  (         goto endif_1090) (23604)
  lj 23607 (23604)
  (        :else_1089:) (23607)
  (        :endif_1090:) (23607)
  (        :endif_1086:) (23607)
  (        :endif_1083:) (23607)
  (        :endif_1080:) (23607)
  (                    1194:     i += 1) (23607)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (23607)
  a=r 0 (23607)
  a+= 4 (23609)
  d=a (23611)
  *d++ (23612)
  (                    1195:     if id_ == 58 or id_ == 88:) (23613)
  (         t8 = H[t0+1]〈id_〉 == 58) (23613)
  c= 58 (23613)
  a=r 0 (23615)
  a++ (23617)
  d=a (23618)
  a=*d (23619)
  a==c (23620)
  a=0 (23621)
  jf 1 (23622)
  a++ (23624)
  r=a 8 (23625)
  (         t9 = H[t0+1]〈id_〉 == 88) (23627)
  c= 88 (23627)
  a=*d (23629)
  a==c (23630)
  a=0 (23631)
  jf 1 (23632)
  a++ (23634)
  r=a 9 (23635)
  (         t7 = t8 or t9) (23637)
  c=a (23637)
  a=r 8 (23638)
  a== 0 (23640)
  jf 1 (23642)
  a=c (23644)
  r=a 7 (23645)
  (         ifN t7 goto else_1093) (23647)
  a== 0 (23647)
  jf 3 (23649)
  lj 23679 (23651)
  (                    1196:       v[i] = 0x20) (23654)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23654)
  a=0 (23654)
  a-- (23655)
  a>>= 1 (23656)
  c=a (23658)
  a=r 0 (23659)
  a+= 5 (23661)
  d=a (23663)
  a=*d (23664)
  a&=c (23665)
  r=a 7 (23666)
  (         t7 = t7 + H[t0+4]〈i〉) (23668)
  d-- (23668)
  c=*d (23669)
  a+=c (23670)
  r=a 7 (23671)
  (         M[t7] = 32) (23673)
  c=a (23673)
  *c= 32 (23674)
  (         goto endif_1094) (23676)
  lj 23817 (23676)
  (        :else_1093:) (23679)
  (                    1197:     elif id_ == 69:) (23679)
  (         t7 = H[t0+1]〈id_〉 == 69) (23679)
  c= 69 (23679)
  a=r 0 (23681)
  a++ (23683)
  d=a (23684)
  a=*d (23685)
  a==c (23686)
  a=0 (23687)
  jf 1 (23688)
  a++ (23690)
  r=a 7 (23691)
  (         ifN t7 goto else_1096) (23693)
  a== 0 (23693)
  jf 3 (23695)
  lj 23725 (23697)
  (                    1198:       v[i] = 0x3e) (23700)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23700)
  a=0 (23700)
  a-- (23701)
  a>>= 1 (23702)
  c=a (23704)
  a=r 0 (23705)
  a+= 5 (23707)
  d=a (23709)
  a=*d (23710)
  a&=c (23711)
  r=a 7 (23712)
  (         t7 = t7 + H[t0+4]〈i〉) (23714)
  d-- (23714)
  c=*d (23715)
  a+=c (23716)
  r=a 7 (23717)
  (         M[t7] = 62) (23719)
  c=a (23719)
  *c= 62 (23720)
  (         goto endif_1097) (23722)
  lj 23817 (23722)
  (        :else_1096:) (23725)
  (                    1199:     elif id_ == 104:) (23725)
  (         t7 = H[t0+1]〈id_〉 == 104) (23725)
  c= 104 (23725)
  a=r 0 (23727)
  a++ (23729)
  d=a (23730)
  a=*d (23731)
  a==c (23732)
  a=0 (23733)
  jf 1 (23734)
  a++ (23736)
  r=a 7 (23737)
  (         ifN t7 goto else_1099) (23739)
  a== 0 (23739)
  jf 3 (23741)
  lj 23771 (23743)
  (                    1200:       v[i] = 0x22) (23746)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23746)
  a=0 (23746)
  a-- (23747)
  a>>= 1 (23748)
  c=a (23750)
  a=r 0 (23751)
  a+= 5 (23753)
  d=a (23755)
  a=*d (23756)
  a&=c (23757)
  r=a 7 (23758)
  (         t7 = t7 + H[t0+4]〈i〉) (23760)
  d-- (23760)
  c=*d (23761)
  a+=c (23762)
  r=a 7 (23763)
  (         M[t7] = 34) (23765)
  c=a (23765)
  *c= 34 (23766)
  (         goto endif_1100) (23768)
  lj 23817 (23768)
  (        :else_1099:) (23771)
  (                    1201:     elif id_ == 108:) (23771)
  (         t7 = H[t0+1]〈id_〉 == 108) (23771)
  c= 108 (23771)
  a=r 0 (23773)
  a++ (23775)
  d=a (23776)
  a=*d (23777)
  a==c (23778)
  a=0 (23779)
  jf 1 (23780)
  a++ (23782)
  r=a 7 (23783)
  (         ifN t7 goto else_1102) (23785)
  a== 0 (23785)
  jf 3 (23787)
  lj 23817 (23789)
  (                    1202:       v[i] = 0x27) (23792)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23792)
  a=0 (23792)
  a-- (23793)
  a>>= 1 (23794)
  c=a (23796)
  a=r 0 (23797)
  a+= 5 (23799)
  d=a (23801)
  a=*d (23802)
  a&=c (23803)
  r=a 7 (23804)
  (         t7 = t7 + H[t0+4]〈i〉) (23806)
  d-- (23806)
  c=*d (23807)
  a+=c (23808)
  r=a 7 (23809)
  (         M[t7] = 39) (23811)
  c=a (23811)
  *c= 39 (23812)
  (         goto endif_1103) (23814)
  lj 23817 (23814)
  (        :else_1102:) (23817)
  (        :endif_1103:) (23817)
  (        :endif_1100:) (23817)
  (        :endif_1097:) (23817)
  (        :endif_1094:) (23817)
  (                    1203:     free_pM〈u〉) (23817)
  (         t7 = H[t0+7]〈u〉 & 2147483647) (23817)
  a=0 (23817)
  a-- (23818)
  a>>= 1 (23819)
  c=a (23821)
  a=r 0 (23822)
  a+= 7 (23824)
  d=a (23826)
  a=*d (23827)
  a&=c (23828)
  r=a 7 (23829)
  (         H[t0+14]〈〉 = t0) (23831)
  a=r 0 (23831)
  a+= 14 (23833)
  d=a (23835)
  a=r 0 (23836)
  *d=a (23838)
  (saved bsp, return id:) (23839)
  (         H[t0+15]〈〉 = 87) (23839)
  d++ (23839)
  *d= 87 (23840)
  (push arguments:) (23842)
  (         H[t0+16]〈〉 = t7) (23842)
  d++ (23842)
  a=r 7 (23843)
  *d=a (23845)
  (         t0 = t0 + 15) (23846)
  c= 15 (23846)
  a=r 0 (23848)
  a+=c (23850)
  r=a 0 (23851)
  (         goto addr_free_pM) (23853)
  lj 2406 (23853)
  (        :return_id_87:) (23856)
  (         t8 = t1) (23856)
  a=r 1 (23856)
  r=a 8 (23858)
  (         goto endif_1071) (23860)
  lj 28969 (23860)
  (        :else_1070:) (23863)
  (                    1204:   elif id_ == 62:  # 5 vorne 4 hinten an) (23863)
  (         t7 = H[t0+1]〈id_〉 == 62) (23863)
  c= 62 (23863)
  a=r 0 (23865)
  a++ (23867)
  d=a (23868)
  a=*d (23869)
  a==c (23870)
  a=0 (23871)
  jf 1 (23872)
  a++ (23874)
  r=a 7 (23875)
  (         ifN t7 goto else_1105) (23877)
  a== 0 (23877)
  jf 3 (23879)
  lj 24202 (23881)
  (                    1205:     v = alloc_pM〈l+9〉) (23884)
  (         t7 = H[t0+3]〈l〉 + 9) (23884)
  c= 9 (23884)
  a=r 0 (23886)
  a+= 3 (23888)
  d=a (23890)
  a=*d (23891)
  a+=c (23892)
  r=a 7 (23893)
  (         H[t0+14]〈〉 = t0) (23895)
  a=r 0 (23895)
  a+= 14 (23897)
  d=a (23899)
  a=r 0 (23900)
  *d=a (23902)
  (saved bsp, return id:) (23903)
  (         H[t0+15]〈〉 = 88) (23903)
  d++ (23903)
  *d= 88 (23904)
  (push arguments:) (23906)
  (         H[t0+16]〈〉 = t7) (23906)
  d++ (23906)
  a=r 7 (23907)
  *d=a (23909)
  (         t0 = t0 + 15) (23910)
  c= 15 (23910)
  a=r 0 (23912)
  a+=c (23914)
  r=a 0 (23915)
  (         goto addr_alloc_pM) (23917)
  lj 323 (23917)
  (        :return_id_88:) (23920)
  (         t8 = t1) (23920)
  a=r 1 (23920)
  r=a 8 (23922)
  (         t8 = t8 | 2147483648) (23924)
  a= 1 (23924)
  a<<= 31 (23926)
  c=a (23928)
  a=r 8 (23929)
  a|=c (23931)
  r=a 8 (23932)
  (         H[t0+5]〈v〉 = t8) (23934)
  a=r 0 (23934)
  a+= 5 (23936)
  d=a (23938)
  a=r 8 (23939)
  *d=a (23941)
  (                    1206:     v[i] = 0x20) (23942)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23942)
  a=0 (23942)
  a-- (23943)
  a>>= 1 (23944)
  c=a (23946)
  a=*d (23947)
  a&=c (23948)
  r=a 7 (23949)
  (         t7 = t7 + H[t0+4]〈i〉) (23951)
  d-- (23951)
  c=*d (23952)
  a+=c (23953)
  r=a 7 (23954)
  (         M[t7] = 32) (23956)
  c=a (23956)
  *c= 32 (23957)
  (                    1207:     i += 1) (23959)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (23959)
  *d++ (23959)
  (                    1208:     v[i] = 0x74) (23960)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23960)
  a=0 (23960)
  a-- (23961)
  a>>= 1 (23962)
  c=a (23964)
  d++ (23965)
  a=*d (23966)
  a&=c (23967)
  r=a 7 (23968)
  (         t7 = t7 + H[t0+4]〈i〉) (23970)
  d-- (23970)
  c=*d (23971)
  a+=c (23972)
  r=a 7 (23973)
  (         M[t7] = 116) (23975)
  c=a (23975)
  *c= 116 (23976)
  (                    1209:     i += 1) (23978)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (23978)
  *d++ (23978)
  (                    1210:     v[i] = 0x68) (23979)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23979)
  a=0 (23979)
  a-- (23980)
  a>>= 1 (23981)
  c=a (23983)
  d++ (23984)
  a=*d (23985)
  a&=c (23986)
  r=a 7 (23987)
  (         t7 = t7 + H[t0+4]〈i〉) (23989)
  d-- (23989)
  c=*d (23990)
  a+=c (23991)
  r=a 7 (23992)
  (         M[t7] = 104) (23994)
  c=a (23994)
  *c= 104 (23995)
  (                    1211:     i += 1) (23997)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (23997)
  *d++ (23997)
  (                    1212:     v[i] = 0x65) (23998)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (23998)
  a=0 (23998)
  a-- (23999)
  a>>= 1 (24000)
  c=a (24002)
  d++ (24003)
  a=*d (24004)
  a&=c (24005)
  r=a 7 (24006)
  (         t7 = t7 + H[t0+4]〈i〉) (24008)
  d-- (24008)
  c=*d (24009)
  a+=c (24010)
  r=a 7 (24011)
  (         M[t7] = 101) (24013)
  c=a (24013)
  *c= 101 (24014)
  (                    1213:     i += 1) (24016)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24016)
  *d++ (24016)
  (                    1214:     v[i] = 0x20) (24017)
  (         t7 = H[t0+5]〈v〉 & 2147483647) (24017)
  a=0 (24017)
  a-- (24018)
  a>>= 1 (24019)
  c=a (24021)
  d++ (24022)
  a=*d (24023)
  a&=c (24024)
  r=a 7 (24025)
  (         t7 = t7 + H[t0+4]〈i〉) (24027)
  d-- (24027)
  c=*d (24028)
  a+=c (24029)
  r=a 7 (24030)
  (         M[t7] = 32) (24032)
  c=a (24032)
  *c= 32 (24033)
  (                    1215:     i += 1) (24035)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24035)
  *d++ (24035)
  (                    1216:     while i-5 < l:) (24036)
  (        :while_1107:) (24036)
  (         t8 = H[t0+4]〈i〉 - 5) (24036)
  c= 5 (24036)
  a=r 0 (24038)
  a+= 4 (24040)
  d=a (24042)
  a=*d (24043)
  a-=c (24044)
  r=a 8 (24045)
  (         t7 = t8 < H[t0+3]〈l〉) (24047)
  d-- (24047)
  c=*d (24048)
  a<c (24049)
  a=0 (24050)
  jf 1 (24051)
  a++ (24053)
  r=a 7 (24054)
  (         ifN t7 goto whileend_1109) (24056)
  a== 0 (24056)
  jf 3 (24058)
  lj 24120 (24060)
  (                    1217:       v[i] = base_word[i-5]) (24063)
  (         t7 = H[t0+4]〈i〉 - 5) (24063)
  c= 5 (24063)
  d++ (24065)
  a=*d (24066)
  a-=c (24067)
  r=a 7 (24068)
  (         t8 = H[t0+2]〈base_word〉 & 2147483647) (24070)
  a=0 (24070)
  a-- (24071)
  a>>= 1 (24072)
  c=a (24074)
  a=r 0 (24075)
  a+= 2 (24077)
  d=a (24079)
  a=*d (24080)
  a&=c (24081)
  r=a 8 (24082)
  (         t8 = t8 + t7) (24084)
  c=r 7 (24084)
  a+=c (24086)
  r=a 8 (24087)
  (         t8 = M[t8]) (24089)
  b=a (24089)
  a=*b (24090)
  r=a 8 (24091)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (24093)
  a=0 (24093)
  a-- (24094)
  a>>= 1 (24095)
  c=a (24097)
  a=r 0 (24098)
  a+= 5 (24100)
  d=a (24102)
  a=*d (24103)
  a&=c (24104)
  r=a 9 (24105)
  (         t9 = t9 + H[t0+4]〈i〉) (24107)
  d-- (24107)
  c=*d (24108)
  a+=c (24109)
  r=a 9 (24110)
  (         M[t9] = t8) (24112)
  c=a (24112)
  a=r 8 (24113)
  *c=a (24115)
  (                    1218:       i += 1) (24116)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24116)
  *d++ (24116)
  (         goto while_1107) (24117)
  lj 24036 (24117)
  (        :whileend_1109:) (24120)
  (                    1219:     v[i] = 0x20) (24120)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24120)
  a=0 (24120)
  a-- (24121)
  a>>= 1 (24122)
  c=a (24124)
  a=r 0 (24125)
  a+= 5 (24127)
  d=a (24129)
  a=*d (24130)
  a&=c (24131)
  r=a 8 (24132)
  (         t8 = t8 + H[t0+4]〈i〉) (24134)
  d-- (24134)
  c=*d (24135)
  a+=c (24136)
  r=a 8 (24137)
  (         M[t8] = 32) (24139)
  c=a (24139)
  *c= 32 (24140)
  (                    1220:     i += 1) (24142)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24142)
  *d++ (24142)
  (                    1221:     v[i] = 0x6f) (24143)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24143)
  a=0 (24143)
  a-- (24144)
  a>>= 1 (24145)
  c=a (24147)
  d++ (24148)
  a=*d (24149)
  a&=c (24150)
  r=a 8 (24151)
  (         t8 = t8 + H[t0+4]〈i〉) (24153)
  d-- (24153)
  c=*d (24154)
  a+=c (24155)
  r=a 8 (24156)
  (         M[t8] = 111) (24158)
  c=a (24158)
  *c= 111 (24159)
  (                    1222:     i += 1) (24161)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24161)
  *d++ (24161)
  (                    1223:     v[i] = 0x66) (24162)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24162)
  a=0 (24162)
  a-- (24163)
  a>>= 1 (24164)
  c=a (24166)
  d++ (24167)
  a=*d (24168)
  a&=c (24169)
  r=a 8 (24170)
  (         t8 = t8 + H[t0+4]〈i〉) (24172)
  d-- (24172)
  c=*d (24173)
  a+=c (24174)
  r=a 8 (24175)
  (         M[t8] = 102) (24177)
  c=a (24177)
  *c= 102 (24178)
  (                    1224:     i += 1) (24180)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24180)
  *d++ (24180)
  (                    1225:     v[i] = 0x20) (24181)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24181)
  a=0 (24181)
  a-- (24182)
  a>>= 1 (24183)
  c=a (24185)
  d++ (24186)
  a=*d (24187)
  a&=c (24188)
  r=a 8 (24189)
  (         t8 = t8 + H[t0+4]〈i〉) (24191)
  d-- (24191)
  c=*d (24192)
  a+=c (24193)
  r=a 8 (24194)
  (         M[t8] = 32) (24196)
  c=a (24196)
  *c= 32 (24197)
  (         goto endif_1106) (24199)
  lj 28969 (24199)
  (        :else_1105:) (24202)
  (                    1226:   elif id_ == 65 or id_ == 91 or id_ == 118 or id_ == 120:  # upper first 1 vorne 2 hinten an) (24202)
  (         t11 = H[t0+1]〈id_〉 == 65) (24202)
  c= 65 (24202)
  a=r 0 (24204)
  a++ (24206)
  d=a (24207)
  a=*d (24208)
  a==c (24209)
  a=0 (24210)
  jf 1 (24211)
  a++ (24213)
  r=a 11 (24214)
  (         t12 = H[t0+1]〈id_〉 == 91) (24216)
  c= 91 (24216)
  a=*d (24218)
  a==c (24219)
  a=0 (24220)
  jf 1 (24221)
  a++ (24223)
  r=a 12 (24224)
  (         t10 = t11 or t12) (24226)
  c=a (24226)
  a=r 11 (24227)
  a== 0 (24229)
  jf 1 (24231)
  a=c (24233)
  r=a 10 (24234)
  (         t11 = H[t0+1]〈id_〉 == 118) (24236)
  c= 118 (24236)
  a=*d (24238)
  a==c (24239)
  a=0 (24240)
  jf 1 (24241)
  a++ (24243)
  r=a 11 (24244)
  (         t9 = t10 or t11) (24246)
  c=a (24246)
  a=r 10 (24247)
  a== 0 (24249)
  jf 1 (24251)
  a=c (24253)
  r=a 9 (24254)
  (         t10 = H[t0+1]〈id_〉 == 120) (24256)
  c= 120 (24256)
  a=*d (24258)
  a==c (24259)
  a=0 (24260)
  jf 1 (24261)
  a++ (24263)
  r=a 10 (24264)
  (         t8 = t9 or t10) (24266)
  c=a (24266)
  a=r 9 (24267)
  a== 0 (24269)
  jf 1 (24271)
  a=c (24273)
  r=a 8 (24274)
  (         ifN t8 goto else_1115) (24276)
  a== 0 (24276)
  jf 3 (24278)
  lj 24880 (24280)
  (                    1227:     u = uppercase_first〈base_word〉) (24283)
  (         H[t0+15]〈〉 = t0) (24283)
  a=r 0 (24283)
  a+= 15 (24285)
  d=a (24287)
  a=r 0 (24288)
  *d=a (24290)
  (saved bsp, return id:) (24291)
  (         H[t0+16]〈〉 = 89) (24291)
  d++ (24291)
  *d= 89 (24292)
  (push arguments:) (24294)
  (         H[t0+17]〈〉 = H[t0+2]〈base_word〉) (24294)
  a+= 2 (24294)
  d=a (24296)
  c=*d (24297)
  a=r 0 (24298)
  a+= 17 (24300)
  d=a (24302)
  *d=c (24303)
  (         t0 = t0 + 16) (24304)
  c= 16 (24304)
  a=r 0 (24306)
  a+=c (24308)
  r=a 0 (24309)
  (         goto uppercase_first) (24311)
  lj 9839 (24311)
  (        :return_id_89:) (24314)
  (         t8 = t1) (24314)
  a=r 1 (24314)
  r=a 8 (24316)
  (         H[t0+7]〈u〉 = t8) (24318)
  a=r 0 (24318)
  a+= 7 (24320)
  d=a (24322)
  a=r 8 (24323)
  *d=a (24325)
  (                    1228:     j = len_pM〈u〉) (24326)
  (         t8 = H[t0+7]〈u〉) (24326)
  a=*d (24326)
  r=a 8 (24327)
  (         t8 = t8 & 2147483647) (24329)
  a=0 (24329)
  a-- (24330)
  a>>= 1 (24331)
  c=a (24333)
  a=r 8 (24334)
  a&=c (24336)
  r=a 8 (24337)
  (         t8 = t8 - 5) (24339)
  c= 5 (24339)
  a-=c (24341)
  r=a 8 (24342)
  (         t9 = M[t8] << 8) (24344)
  c= 8 (24344)
  b=a (24346)
  a=*b (24347)
  a<<=c (24348)
  r=a 9 (24349)
  (         t8 = t8 + 1) (24351)
  a=r 8 (24351)
  a++ (24353)
  r=a 8 (24354)
  (         t9 = t9 + M[t8]) (24356)
  b=a (24356)
  c=*b (24357)
  a=r 9 (24358)
  a+=c (24360)
  r=a 9 (24361)
  (         t9 = t9 << 8) (24363)
  c= 8 (24363)
  a<<=c (24365)
  r=a 9 (24366)
  (         t8 = t8 + 1) (24368)
  a=r 8 (24368)
  a++ (24370)
  r=a 8 (24371)
  (         t9 = t9 + M[t8]) (24373)
  b=a (24373)
  c=*b (24374)
  a=r 9 (24375)
  a+=c (24377)
  r=a 9 (24378)
  (         t9 = t9 << 8) (24380)
  c= 8 (24380)
  a<<=c (24382)
  r=a 9 (24383)
  (         t8 = t8 + 1) (24385)
  a=r 8 (24385)
  a++ (24387)
  r=a 8 (24388)
  (         t9 = t9 + M[t8]) (24390)
  b=a (24390)
  c=*b (24391)
  a=r 9 (24392)
  a+=c (24394)
  r=a 9 (24395)
  (         H[t0+6]〈j〉 = t9) (24397)
  d-- (24397)
  *d=a (24398)
  (                    1229:     v = alloc_pM〈j+3〉) (24399)
  (         t8 = H[t0+6]〈j〉 + 3) (24399)
  c= 3 (24399)
  a=*d (24401)
  a+=c (24402)
  r=a 8 (24403)
  (         H[t0+15]〈〉 = t0) (24405)
  a=r 0 (24405)
  a+= 15 (24407)
  d=a (24409)
  a=r 0 (24410)
  *d=a (24412)
  (saved bsp, return id:) (24413)
  (         H[t0+16]〈〉 = 90) (24413)
  d++ (24413)
  *d= 90 (24414)
  (push arguments:) (24416)
  (         H[t0+17]〈〉 = t8) (24416)
  d++ (24416)
  a=r 8 (24417)
  *d=a (24419)
  (         t0 = t0 + 16) (24420)
  c= 16 (24420)
  a=r 0 (24422)
  a+=c (24424)
  r=a 0 (24425)
  (         goto addr_alloc_pM) (24427)
  lj 323 (24427)
  (        :return_id_90:) (24430)
  (         t9 = t1) (24430)
  a=r 1 (24430)
  r=a 9 (24432)
  (         t9 = t9 | 2147483648) (24434)
  a= 1 (24434)
  a<<= 31 (24436)
  c=a (24438)
  a=r 9 (24439)
  a|=c (24441)
  r=a 9 (24442)
  (         H[t0+5]〈v〉 = t9) (24444)
  a=r 0 (24444)
  a+= 5 (24446)
  d=a (24448)
  a=r 9 (24449)
  *d=a (24451)
  (                    1230:     v[0] = 0x20) (24452)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24452)
  a=0 (24452)
  a-- (24453)
  a>>= 1 (24454)
  c=a (24456)
  a=*d (24457)
  a&=c (24458)
  r=a 8 (24459)
  (         t8 = t8 + 0) (24461)
  (         M[t8] = 32) (24461)
  c=a (24461)
  *c= 32 (24462)
  (                    1231:     while i < j:) (24464)
  (        :while_1117:) (24464)
  (         t8 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (24464)
  a=r 0 (24464)
  a+= 6 (24466)
  d=a (24468)
  c=*d (24469)
  a=r 0 (24470)
  a+= 4 (24472)
  d=a (24474)
  a=*d (24475)
  a<c (24476)
  a=0 (24477)
  jf 1 (24478)
  a++ (24480)
  r=a 8 (24481)
  (         ifN t8 goto whileend_1119) (24483)
  a== 0 (24483)
  jf 3 (24485)
  lj 24594 (24487)
  (                    1232:       v[i+1] = u[i]) (24490)
  (         t8 = H[t0+7]〈u〉 >> 31) (24490)
  c= 31 (24490)
  a=r 0 (24492)
  a+= 7 (24494)
  d=a (24496)
  a=*d (24497)
  a>>=c (24498)
  r=a 8 (24499)
  (         if t8 goto isM_1121) (24501)
  a== 0 (24501)
  jt 3 (24503)
  lj 24530 (24505)
  (         t8 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (24508)
  a=r 0 (24508)
  a+= 4 (24510)
  d=a (24512)
  c=*d (24513)
  a=r 0 (24514)
  a+= 7 (24516)
  d=a (24518)
  a=*d (24519)
  a+=c (24520)
  r=a 8 (24521)
  (         t8 = H[t8]〈〉) (24523)
  d=a (24523)
  a=*d (24524)
  r=a 8 (24525)
  (         goto MorHdone_1122) (24527)
  lj 24559 (24527)
  (        :isM_1121:) (24530)
  (         t8 = H[t0+7]〈u〉 & 2147483647) (24530)
  a=0 (24530)
  a-- (24531)
  a>>= 1 (24532)
  c=a (24534)
  a=r 0 (24535)
  a+= 7 (24537)
  d=a (24539)
  a=*d (24540)
  a&=c (24541)
  r=a 8 (24542)
  (         t8 = t8 + H[t0+4]〈i〉) (24544)
  a=r 0 (24544)
  a+= 4 (24546)
  d=a (24548)
  c=*d (24549)
  a=r 8 (24550)
  a+=c (24552)
  r=a 8 (24553)
  (         t8 = M[t8]) (24555)
  b=a (24555)
  a=*b (24556)
  r=a 8 (24557)
  (        :MorHdone_1122:) (24559)
  (         t9 = H[t0+4]〈i〉 + 1) (24559)
  c= 1 (24559)
  a=r 0 (24561)
  a+= 4 (24563)
  d=a (24565)
  a=*d (24566)
  a+=c (24567)
  r=a 9 (24568)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (24570)
  a=0 (24570)
  a-- (24571)
  a>>= 1 (24572)
  c=a (24574)
  d++ (24575)
  a=*d (24576)
  a&=c (24577)
  r=a 10 (24578)
  (         t10 = t10 + t9) (24580)
  c=r 9 (24580)
  a+=c (24582)
  r=a 10 (24583)
  (         M[t10] = t8) (24585)
  c=a (24585)
  a=r 8 (24586)
  *c=a (24588)
  (                    1233:       i += 1) (24589)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24589)
  d-- (24589)
  *d++ (24590)
  (         goto while_1117) (24591)
  lj 24464 (24591)
  (        :whileend_1119:) (24594)
  (                    1234:     i += 1) (24594)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24594)
  a=r 0 (24594)
  a+= 4 (24596)
  d=a (24598)
  *d++ (24599)
  (                    1235:     if id_ == 65:) (24600)
  (         t8 = H[t0+1]〈id_〉 == 65) (24600)
  c= 65 (24600)
  a=r 0 (24602)
  a++ (24604)
  d=a (24605)
  a=*d (24606)
  a==c (24607)
  a=0 (24608)
  jf 1 (24609)
  a++ (24611)
  r=a 8 (24612)
  (         ifN t8 goto else_1124) (24614)
  a== 0 (24614)
  jf 3 (24616)
  lj 24646 (24618)
  (                    1236:       v[i] = 0x2c) (24621)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24621)
  a=0 (24621)
  a-- (24622)
  a>>= 1 (24623)
  c=a (24625)
  a=r 0 (24626)
  a+= 5 (24628)
  d=a (24630)
  a=*d (24631)
  a&=c (24632)
  r=a 8 (24633)
  (         t8 = t8 + H[t0+4]〈i〉) (24635)
  d-- (24635)
  c=*d (24636)
  a+=c (24637)
  r=a 8 (24638)
  (         M[t8] = 44) (24640)
  c=a (24640)
  *c= 44 (24641)
  (         goto endif_1125) (24643)
  lj 24714 (24643)
  (        :else_1124:) (24646)
  (                    1237:     elif id_ == 91:) (24646)
  (         t8 = H[t0+1]〈id_〉 == 91) (24646)
  c= 91 (24646)
  a=r 0 (24648)
  a++ (24650)
  d=a (24651)
  a=*d (24652)
  a==c (24653)
  a=0 (24654)
  jf 1 (24655)
  a++ (24657)
  r=a 8 (24658)
  (         ifN t8 goto else_1127) (24660)
  a== 0 (24660)
  jf 3 (24662)
  lj 24692 (24664)
  (                    1238:       v[i] = 0x2e) (24667)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24667)
  a=0 (24667)
  a-- (24668)
  a>>= 1 (24669)
  c=a (24671)
  a=r 0 (24672)
  a+= 5 (24674)
  d=a (24676)
  a=*d (24677)
  a&=c (24678)
  r=a 8 (24679)
  (         t8 = t8 + H[t0+4]〈i〉) (24681)
  d-- (24681)
  c=*d (24682)
  a+=c (24683)
  r=a 8 (24684)
  (         M[t8] = 46) (24686)
  c=a (24686)
  *c= 46 (24687)
  (         goto endif_1128) (24689)
  lj 24714 (24689)
  (        :else_1127:) (24692)
  (                    1240:       v[i] = 0x3d) (24692)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24692)
  a=0 (24692)
  a-- (24693)
  a>>= 1 (24694)
  c=a (24696)
  a=r 0 (24697)
  a+= 5 (24699)
  d=a (24701)
  a=*d (24702)
  a&=c (24703)
  r=a 8 (24704)
  (         t8 = t8 + H[t0+4]〈i〉) (24706)
  d-- (24706)
  c=*d (24707)
  a+=c (24708)
  r=a 8 (24709)
  (         M[t8] = 61) (24711)
  c=a (24711)
  *c= 61 (24712)
  (        :endif_1128:) (24714)
  (        :endif_1125:) (24714)
  (                    1241:     i += 1) (24714)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (24714)
  a=r 0 (24714)
  a+= 4 (24716)
  d=a (24718)
  *d++ (24719)
  (                    1242:     if id_ == 118:) (24720)
  (         t8 = H[t0+1]〈id_〉 == 118) (24720)
  c= 118 (24720)
  a=r 0 (24722)
  a++ (24724)
  d=a (24725)
  a=*d (24726)
  a==c (24727)
  a=0 (24728)
  jf 1 (24729)
  a++ (24731)
  r=a 8 (24732)
  (         ifN t8 goto else_1130) (24734)
  a== 0 (24734)
  jf 3 (24736)
  lj 24766 (24738)
  (                    1243:       v[i] = 0x22) (24741)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24741)
  a=0 (24741)
  a-- (24742)
  a>>= 1 (24743)
  c=a (24745)
  a=r 0 (24746)
  a+= 5 (24748)
  d=a (24750)
  a=*d (24751)
  a&=c (24752)
  r=a 8 (24753)
  (         t8 = t8 + H[t0+4]〈i〉) (24755)
  d-- (24755)
  c=*d (24756)
  a+=c (24757)
  r=a 8 (24758)
  (         M[t8] = 34) (24760)
  c=a (24760)
  *c= 34 (24761)
  (         goto endif_1131) (24763)
  lj 24834 (24763)
  (        :else_1130:) (24766)
  (                    1244:     elif id_ == 120:) (24766)
  (         t8 = H[t0+1]〈id_〉 == 120) (24766)
  c= 120 (24766)
  a=r 0 (24768)
  a++ (24770)
  d=a (24771)
  a=*d (24772)
  a==c (24773)
  a=0 (24774)
  jf 1 (24775)
  a++ (24777)
  r=a 8 (24778)
  (         ifN t8 goto else_1133) (24780)
  a== 0 (24780)
  jf 3 (24782)
  lj 24812 (24784)
  (                    1245:       v[i] = 0x27) (24787)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24787)
  a=0 (24787)
  a-- (24788)
  a>>= 1 (24789)
  c=a (24791)
  a=r 0 (24792)
  a+= 5 (24794)
  d=a (24796)
  a=*d (24797)
  a&=c (24798)
  r=a 8 (24799)
  (         t8 = t8 + H[t0+4]〈i〉) (24801)
  d-- (24801)
  c=*d (24802)
  a+=c (24803)
  r=a 8 (24804)
  (         M[t8] = 39) (24806)
  c=a (24806)
  *c= 39 (24807)
  (         goto endif_1134) (24809)
  lj 24834 (24809)
  (        :else_1133:) (24812)
  (                    1247:       v[i] = 0x20) (24812)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (24812)
  a=0 (24812)
  a-- (24813)
  a>>= 1 (24814)
  c=a (24816)
  a=r 0 (24817)
  a+= 5 (24819)
  d=a (24821)
  a=*d (24822)
  a&=c (24823)
  r=a 8 (24824)
  (         t8 = t8 + H[t0+4]〈i〉) (24826)
  d-- (24826)
  c=*d (24827)
  a+=c (24828)
  r=a 8 (24829)
  (         M[t8] = 32) (24831)
  c=a (24831)
  *c= 32 (24832)
  (        :endif_1134:) (24834)
  (        :endif_1131:) (24834)
  (                    1248:     free_pM〈u〉) (24834)
  (         t8 = H[t0+7]〈u〉 & 2147483647) (24834)
  a=0 (24834)
  a-- (24835)
  a>>= 1 (24836)
  c=a (24838)
  a=r 0 (24839)
  a+= 7 (24841)
  d=a (24843)
  a=*d (24844)
  a&=c (24845)
  r=a 8 (24846)
  (         H[t0+15]〈〉 = t0) (24848)
  a=r 0 (24848)
  a+= 15 (24850)
  d=a (24852)
  a=r 0 (24853)
  *d=a (24855)
  (saved bsp, return id:) (24856)
  (         H[t0+16]〈〉 = 91) (24856)
  d++ (24856)
  *d= 91 (24857)
  (push arguments:) (24859)
  (         H[t0+17]〈〉 = t8) (24859)
  d++ (24859)
  a=r 8 (24860)
  *d=a (24862)
  (         t0 = t0 + 16) (24863)
  c= 16 (24863)
  a=r 0 (24865)
  a+=c (24867)
  r=a 0 (24868)
  (         goto addr_free_pM) (24870)
  lj 2406 (24870)
  (        :return_id_91:) (24873)
  (         t9 = t1) (24873)
  a=r 1 (24873)
  r=a 9 (24875)
  (         goto endif_1116) (24877)
  lj 28969 (24877)
  (        :else_1115:) (24880)
  (                    1249:   elif id_ == 68 or id_ == 87 or id_ == 94 or id_ == 101 or id_ == 112 or id_ == 113:  # upper all 1 hinten) (24880)
  (         t13 = H[t0+1]〈id_〉 == 68) (24880)
  c= 68 (24880)
  a=r 0 (24882)
  a++ (24884)
  d=a (24885)
  a=*d (24886)
  a==c (24887)
  a=0 (24888)
  jf 1 (24889)
  a++ (24891)
  r=a 13 (24892)
  (         t14 = H[t0+1]〈id_〉 == 87) (24894)
  c= 87 (24894)
  a=*d (24896)
  a==c (24897)
  a=0 (24898)
  jf 1 (24899)
  a++ (24901)
  r=a 14 (24902)
  (         t12 = t13 or t14) (24904)
  c=a (24904)
  a=r 13 (24905)
  a== 0 (24907)
  jf 1 (24909)
  a=c (24911)
  r=a 12 (24912)
  (         t13 = H[t0+1]〈id_〉 == 94) (24914)
  c= 94 (24914)
  a=*d (24916)
  a==c (24917)
  a=0 (24918)
  jf 1 (24919)
  a++ (24921)
  r=a 13 (24922)
  (         t11 = t12 or t13) (24924)
  c=a (24924)
  a=r 12 (24925)
  a== 0 (24927)
  jf 1 (24929)
  a=c (24931)
  r=a 11 (24932)
  (         t12 = H[t0+1]〈id_〉 == 101) (24934)
  c= 101 (24934)
  a=*d (24936)
  a==c (24937)
  a=0 (24938)
  jf 1 (24939)
  a++ (24941)
  r=a 12 (24942)
  (         t10 = t11 or t12) (24944)
  c=a (24944)
  a=r 11 (24945)
  a== 0 (24947)
  jf 1 (24949)
  a=c (24951)
  r=a 10 (24952)
  (         t11 = H[t0+1]〈id_〉 == 112) (24954)
  c= 112 (24954)
  a=*d (24956)
  a==c (24957)
  a=0 (24958)
  jf 1 (24959)
  a++ (24961)
  r=a 11 (24962)
  (         t9 = t10 or t11) (24964)
  c=a (24964)
  a=r 10 (24965)
  a== 0 (24967)
  jf 1 (24969)
  a=c (24971)
  r=a 9 (24972)
  (         t10 = H[t0+1]〈id_〉 == 113) (24974)
  c= 113 (24974)
  a=*d (24976)
  a==c (24977)
  a=0 (24978)
  jf 1 (24979)
  a++ (24981)
  r=a 10 (24982)
  (         t8 = t9 or t10) (24984)
  c=a (24984)
  a=r 9 (24985)
  a== 0 (24987)
  jf 1 (24989)
  a=c (24991)
  r=a 8 (24992)
  (         ifN t8 goto else_1141) (24994)
  a== 0 (24994)
  jf 3 (24996)
  lj 25590 (24998)
  (                    1250:     u = uppercase_all〈base_word〉) (25001)
  (         H[t0+15]〈〉 = t0) (25001)
  a=r 0 (25001)
  a+= 15 (25003)
  d=a (25005)
  a=r 0 (25006)
  *d=a (25008)
  (saved bsp, return id:) (25009)
  (         H[t0+16]〈〉 = 92) (25009)
  d++ (25009)
  *d= 92 (25010)
  (push arguments:) (25012)
  (         H[t0+17]〈〉 = H[t0+2]〈base_word〉) (25012)
  a+= 2 (25012)
  d=a (25014)
  c=*d (25015)
  a=r 0 (25016)
  a+= 17 (25018)
  d=a (25020)
  *d=c (25021)
  (         t0 = t0 + 16) (25022)
  c= 16 (25022)
  a=r 0 (25024)
  a+=c (25026)
  r=a 0 (25027)
  (         goto uppercase_all) (25029)
  lj 8978 (25029)
  (        :return_id_92:) (25032)
  (         t8 = t1) (25032)
  a=r 1 (25032)
  r=a 8 (25034)
  (         H[t0+7]〈u〉 = t8) (25036)
  a=r 0 (25036)
  a+= 7 (25038)
  d=a (25040)
  a=r 8 (25041)
  *d=a (25043)
  (                    1251:     j = len_pM〈u〉) (25044)
  (         t8 = H[t0+7]〈u〉) (25044)
  a=*d (25044)
  r=a 8 (25045)
  (         t8 = t8 & 2147483647) (25047)
  a=0 (25047)
  a-- (25048)
  a>>= 1 (25049)
  c=a (25051)
  a=r 8 (25052)
  a&=c (25054)
  r=a 8 (25055)
  (         t8 = t8 - 5) (25057)
  c= 5 (25057)
  a-=c (25059)
  r=a 8 (25060)
  (         t9 = M[t8] << 8) (25062)
  c= 8 (25062)
  b=a (25064)
  a=*b (25065)
  a<<=c (25066)
  r=a 9 (25067)
  (         t8 = t8 + 1) (25069)
  a=r 8 (25069)
  a++ (25071)
  r=a 8 (25072)
  (         t9 = t9 + M[t8]) (25074)
  b=a (25074)
  c=*b (25075)
  a=r 9 (25076)
  a+=c (25078)
  r=a 9 (25079)
  (         t9 = t9 << 8) (25081)
  c= 8 (25081)
  a<<=c (25083)
  r=a 9 (25084)
  (         t8 = t8 + 1) (25086)
  a=r 8 (25086)
  a++ (25088)
  r=a 8 (25089)
  (         t9 = t9 + M[t8]) (25091)
  b=a (25091)
  c=*b (25092)
  a=r 9 (25093)
  a+=c (25095)
  r=a 9 (25096)
  (         t9 = t9 << 8) (25098)
  c= 8 (25098)
  a<<=c (25100)
  r=a 9 (25101)
  (         t8 = t8 + 1) (25103)
  a=r 8 (25103)
  a++ (25105)
  r=a 8 (25106)
  (         t9 = t9 + M[t8]) (25108)
  b=a (25108)
  c=*b (25109)
  a=r 9 (25110)
  a+=c (25112)
  r=a 9 (25113)
  (         H[t0+6]〈j〉 = t9) (25115)
  d-- (25115)
  *d=a (25116)
  (                    1252:     v = alloc_pM〈j+1〉) (25117)
  (         t8 = H[t0+6]〈j〉 + 1) (25117)
  c= 1 (25117)
  a=*d (25119)
  a+=c (25120)
  r=a 8 (25121)
  (         H[t0+15]〈〉 = t0) (25123)
  a=r 0 (25123)
  a+= 15 (25125)
  d=a (25127)
  a=r 0 (25128)
  *d=a (25130)
  (saved bsp, return id:) (25131)
  (         H[t0+16]〈〉 = 93) (25131)
  d++ (25131)
  *d= 93 (25132)
  (push arguments:) (25134)
  (         H[t0+17]〈〉 = t8) (25134)
  d++ (25134)
  a=r 8 (25135)
  *d=a (25137)
  (         t0 = t0 + 16) (25138)
  c= 16 (25138)
  a=r 0 (25140)
  a+=c (25142)
  r=a 0 (25143)
  (         goto addr_alloc_pM) (25145)
  lj 323 (25145)
  (        :return_id_93:) (25148)
  (         t9 = t1) (25148)
  a=r 1 (25148)
  r=a 9 (25150)
  (         t9 = t9 | 2147483648) (25152)
  a= 1 (25152)
  a<<= 31 (25154)
  c=a (25156)
  a=r 9 (25157)
  a|=c (25159)
  r=a 9 (25160)
  (         H[t0+5]〈v〉 = t9) (25162)
  a=r 0 (25162)
  a+= 5 (25164)
  d=a (25166)
  a=r 9 (25167)
  *d=a (25169)
  (                    1253:     while i < j:) (25170)
  (        :while_1143:) (25170)
  (         t8 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (25170)
  a=r 0 (25170)
  a+= 6 (25172)
  d=a (25174)
  c=*d (25175)
  a=r 0 (25176)
  a+= 4 (25178)
  d=a (25180)
  a=*d (25181)
  a<c (25182)
  a=0 (25183)
  jf 1 (25184)
  a++ (25186)
  r=a 8 (25187)
  (         ifN t8 goto whileend_1145) (25189)
  a== 0 (25189)
  jf 3 (25191)
  lj 25292 (25193)
  (                    1254:       v[i] = u[i]) (25196)
  (         t8 = H[t0+7]〈u〉 >> 31) (25196)
  c= 31 (25196)
  a=r 0 (25198)
  a+= 7 (25200)
  d=a (25202)
  a=*d (25203)
  a>>=c (25204)
  r=a 8 (25205)
  (         if t8 goto isM_1147) (25207)
  a== 0 (25207)
  jt 3 (25209)
  lj 25236 (25211)
  (         t8 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (25214)
  a=r 0 (25214)
  a+= 4 (25216)
  d=a (25218)
  c=*d (25219)
  a=r 0 (25220)
  a+= 7 (25222)
  d=a (25224)
  a=*d (25225)
  a+=c (25226)
  r=a 8 (25227)
  (         t8 = H[t8]〈〉) (25229)
  d=a (25229)
  a=*d (25230)
  r=a 8 (25231)
  (         goto MorHdone_1148) (25233)
  lj 25265 (25233)
  (        :isM_1147:) (25236)
  (         t8 = H[t0+7]〈u〉 & 2147483647) (25236)
  a=0 (25236)
  a-- (25237)
  a>>= 1 (25238)
  c=a (25240)
  a=r 0 (25241)
  a+= 7 (25243)
  d=a (25245)
  a=*d (25246)
  a&=c (25247)
  r=a 8 (25248)
  (         t8 = t8 + H[t0+4]〈i〉) (25250)
  a=r 0 (25250)
  a+= 4 (25252)
  d=a (25254)
  c=*d (25255)
  a=r 8 (25256)
  a+=c (25258)
  r=a 8 (25259)
  (         t8 = M[t8]) (25261)
  b=a (25261)
  a=*b (25262)
  r=a 8 (25263)
  (        :MorHdone_1148:) (25265)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25265)
  a=0 (25265)
  a-- (25266)
  a>>= 1 (25267)
  c=a (25269)
  a=r 0 (25270)
  a+= 5 (25272)
  d=a (25274)
  a=*d (25275)
  a&=c (25276)
  r=a 9 (25277)
  (         t9 = t9 + H[t0+4]〈i〉) (25279)
  d-- (25279)
  c=*d (25280)
  a+=c (25281)
  r=a 9 (25282)
  (         M[t9] = t8) (25284)
  c=a (25284)
  a=r 8 (25285)
  *c=a (25287)
  (                    1255:       i += 1) (25288)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25288)
  *d++ (25288)
  (         goto while_1143) (25289)
  lj 25170 (25289)
  (        :whileend_1145:) (25292)
  (                    1256:     if id_ == 87:) (25292)
  (         t8 = H[t0+1]〈id_〉 == 87) (25292)
  c= 87 (25292)
  a=r 0 (25294)
  a++ (25296)
  d=a (25297)
  a=*d (25298)
  a==c (25299)
  a=0 (25300)
  jf 1 (25301)
  a++ (25303)
  r=a 8 (25304)
  (         ifN t8 goto else_1150) (25306)
  a== 0 (25306)
  jf 3 (25308)
  lj 25338 (25310)
  (                    1257:       v[i] = 0x22) (25313)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25313)
  a=0 (25313)
  a-- (25314)
  a>>= 1 (25315)
  c=a (25317)
  a=r 0 (25318)
  a+= 5 (25320)
  d=a (25322)
  a=*d (25323)
  a&=c (25324)
  r=a 8 (25325)
  (         t8 = t8 + H[t0+4]〈i〉) (25327)
  d-- (25327)
  c=*d (25328)
  a+=c (25329)
  r=a 8 (25330)
  (         M[t8] = 34) (25332)
  c=a (25332)
  *c= 34 (25333)
  (         goto endif_1151) (25335)
  lj 25544 (25335)
  (        :else_1150:) (25338)
  (                    1258:     elif id_ == 94:) (25338)
  (         t8 = H[t0+1]〈id_〉 == 94) (25338)
  c= 94 (25338)
  a=r 0 (25340)
  a++ (25342)
  d=a (25343)
  a=*d (25344)
  a==c (25345)
  a=0 (25346)
  jf 1 (25347)
  a++ (25349)
  r=a 8 (25350)
  (         ifN t8 goto else_1153) (25352)
  a== 0 (25352)
  jf 3 (25354)
  lj 25384 (25356)
  (                    1259:       v[i] = 0x27) (25359)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25359)
  a=0 (25359)
  a-- (25360)
  a>>= 1 (25361)
  c=a (25363)
  a=r 0 (25364)
  a+= 5 (25366)
  d=a (25368)
  a=*d (25369)
  a&=c (25370)
  r=a 8 (25371)
  (         t8 = t8 + H[t0+4]〈i〉) (25373)
  d-- (25373)
  c=*d (25374)
  a+=c (25375)
  r=a 8 (25376)
  (         M[t8] = 39) (25378)
  c=a (25378)
  *c= 39 (25379)
  (         goto endif_1154) (25381)
  lj 25544 (25381)
  (        :else_1153:) (25384)
  (                    1260:     elif id_ == 101:) (25384)
  (         t8 = H[t0+1]〈id_〉 == 101) (25384)
  c= 101 (25384)
  a=r 0 (25386)
  a++ (25388)
  d=a (25389)
  a=*d (25390)
  a==c (25391)
  a=0 (25392)
  jf 1 (25393)
  a++ (25395)
  r=a 8 (25396)
  (         ifN t8 goto else_1156) (25398)
  a== 0 (25398)
  jf 3 (25400)
  lj 25430 (25402)
  (                    1261:       v[i] = 0x2e) (25405)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25405)
  a=0 (25405)
  a-- (25406)
  a>>= 1 (25407)
  c=a (25409)
  a=r 0 (25410)
  a+= 5 (25412)
  d=a (25414)
  a=*d (25415)
  a&=c (25416)
  r=a 8 (25417)
  (         t8 = t8 + H[t0+4]〈i〉) (25419)
  d-- (25419)
  c=*d (25420)
  a+=c (25421)
  r=a 8 (25422)
  (         M[t8] = 46) (25424)
  c=a (25424)
  *c= 46 (25425)
  (         goto endif_1157) (25427)
  lj 25544 (25427)
  (        :else_1156:) (25430)
  (                    1262:     elif id_ == 112:) (25430)
  (         t8 = H[t0+1]〈id_〉 == 112) (25430)
  c= 112 (25430)
  a=r 0 (25432)
  a++ (25434)
  d=a (25435)
  a=*d (25436)
  a==c (25437)
  a=0 (25438)
  jf 1 (25439)
  a++ (25441)
  r=a 8 (25442)
  (         ifN t8 goto else_1159) (25444)
  a== 0 (25444)
  jf 3 (25446)
  lj 25476 (25448)
  (                    1263:       v[i] = 0x2c) (25451)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25451)
  a=0 (25451)
  a-- (25452)
  a>>= 1 (25453)
  c=a (25455)
  a=r 0 (25456)
  a+= 5 (25458)
  d=a (25460)
  a=*d (25461)
  a&=c (25462)
  r=a 8 (25463)
  (         t8 = t8 + H[t0+4]〈i〉) (25465)
  d-- (25465)
  c=*d (25466)
  a+=c (25467)
  r=a 8 (25468)
  (         M[t8] = 44) (25470)
  c=a (25470)
  *c= 44 (25471)
  (         goto endif_1160) (25473)
  lj 25544 (25473)
  (        :else_1159:) (25476)
  (                    1264:     elif id_ == 113:) (25476)
  (         t8 = H[t0+1]〈id_〉 == 113) (25476)
  c= 113 (25476)
  a=r 0 (25478)
  a++ (25480)
  d=a (25481)
  a=*d (25482)
  a==c (25483)
  a=0 (25484)
  jf 1 (25485)
  a++ (25487)
  r=a 8 (25488)
  (         ifN t8 goto else_1162) (25490)
  a== 0 (25490)
  jf 3 (25492)
  lj 25522 (25494)
  (                    1265:       v[i] = 0x28) (25497)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25497)
  a=0 (25497)
  a-- (25498)
  a>>= 1 (25499)
  c=a (25501)
  a=r 0 (25502)
  a+= 5 (25504)
  d=a (25506)
  a=*d (25507)
  a&=c (25508)
  r=a 8 (25509)
  (         t8 = t8 + H[t0+4]〈i〉) (25511)
  d-- (25511)
  c=*d (25512)
  a+=c (25513)
  r=a 8 (25514)
  (         M[t8] = 40) (25516)
  c=a (25516)
  *c= 40 (25517)
  (         goto endif_1163) (25519)
  lj 25544 (25519)
  (        :else_1162:) (25522)
  (                    1267:       v[i] = 0x20) (25522)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25522)
  a=0 (25522)
  a-- (25523)
  a>>= 1 (25524)
  c=a (25526)
  a=r 0 (25527)
  a+= 5 (25529)
  d=a (25531)
  a=*d (25532)
  a&=c (25533)
  r=a 8 (25534)
  (         t8 = t8 + H[t0+4]〈i〉) (25536)
  d-- (25536)
  c=*d (25537)
  a+=c (25538)
  r=a 8 (25539)
  (         M[t8] = 32) (25541)
  c=a (25541)
  *c= 32 (25542)
  (        :endif_1163:) (25544)
  (        :endif_1160:) (25544)
  (        :endif_1157:) (25544)
  (        :endif_1154:) (25544)
  (        :endif_1151:) (25544)
  (                    1268:     free_pM〈u〉) (25544)
  (         t8 = H[t0+7]〈u〉 & 2147483647) (25544)
  a=0 (25544)
  a-- (25545)
  a>>= 1 (25546)
  c=a (25548)
  a=r 0 (25549)
  a+= 7 (25551)
  d=a (25553)
  a=*d (25554)
  a&=c (25555)
  r=a 8 (25556)
  (         H[t0+15]〈〉 = t0) (25558)
  a=r 0 (25558)
  a+= 15 (25560)
  d=a (25562)
  a=r 0 (25563)
  *d=a (25565)
  (saved bsp, return id:) (25566)
  (         H[t0+16]〈〉 = 94) (25566)
  d++ (25566)
  *d= 94 (25567)
  (push arguments:) (25569)
  (         H[t0+17]〈〉 = t8) (25569)
  d++ (25569)
  a=r 8 (25570)
  *d=a (25572)
  (         t0 = t0 + 16) (25573)
  c= 16 (25573)
  a=r 0 (25575)
  a+=c (25577)
  r=a 0 (25578)
  (         goto addr_free_pM) (25580)
  lj 2406 (25580)
  (        :return_id_94:) (25583)
  (         t9 = t1) (25583)
  a=r 1 (25583)
  r=a 9 (25585)
  (         goto endif_1142) (25587)
  lj 28969 (25587)
  (        :else_1141:) (25590)
  (                    1269:   elif id_ == 73:  # 5 vorne 8 hinten an) (25590)
  (         t8 = H[t0+1]〈id_〉 == 73) (25590)
  c= 73 (25590)
  a=r 0 (25592)
  a++ (25594)
  d=a (25595)
  a=*d (25596)
  a==c (25597)
  a=0 (25598)
  jf 1 (25599)
  a++ (25601)
  r=a 8 (25602)
  (         ifN t8 goto else_1165) (25604)
  a== 0 (25604)
  jf 3 (25606)
  lj 26005 (25608)
  (                    1270:     v = alloc_pM〈l+13〉) (25611)
  (         t8 = H[t0+3]〈l〉 + 13) (25611)
  c= 13 (25611)
  a=r 0 (25613)
  a+= 3 (25615)
  d=a (25617)
  a=*d (25618)
  a+=c (25619)
  r=a 8 (25620)
  (         H[t0+15]〈〉 = t0) (25622)
  a=r 0 (25622)
  a+= 15 (25624)
  d=a (25626)
  a=r 0 (25627)
  *d=a (25629)
  (saved bsp, return id:) (25630)
  (         H[t0+16]〈〉 = 95) (25630)
  d++ (25630)
  *d= 95 (25631)
  (push arguments:) (25633)
  (         H[t0+17]〈〉 = t8) (25633)
  d++ (25633)
  a=r 8 (25634)
  *d=a (25636)
  (         t0 = t0 + 16) (25637)
  c= 16 (25637)
  a=r 0 (25639)
  a+=c (25641)
  r=a 0 (25642)
  (         goto addr_alloc_pM) (25644)
  lj 323 (25644)
  (        :return_id_95:) (25647)
  (         t9 = t1) (25647)
  a=r 1 (25647)
  r=a 9 (25649)
  (         t9 = t9 | 2147483648) (25651)
  a= 1 (25651)
  a<<= 31 (25653)
  c=a (25655)
  a=r 9 (25656)
  a|=c (25658)
  r=a 9 (25659)
  (         H[t0+5]〈v〉 = t9) (25661)
  a=r 0 (25661)
  a+= 5 (25663)
  d=a (25665)
  a=r 9 (25666)
  *d=a (25668)
  (                    1271:     v[i] = 0x20) (25669)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25669)
  a=0 (25669)
  a-- (25670)
  a>>= 1 (25671)
  c=a (25673)
  a=*d (25674)
  a&=c (25675)
  r=a 8 (25676)
  (         t8 = t8 + H[t0+4]〈i〉) (25678)
  d-- (25678)
  c=*d (25679)
  a+=c (25680)
  r=a 8 (25681)
  (         M[t8] = 32) (25683)
  c=a (25683)
  *c= 32 (25684)
  (                    1272:     i += 1) (25686)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25686)
  *d++ (25686)
  (                    1273:     v[i] = 0x74) (25687)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25687)
  a=0 (25687)
  a-- (25688)
  a>>= 1 (25689)
  c=a (25691)
  d++ (25692)
  a=*d (25693)
  a&=c (25694)
  r=a 8 (25695)
  (         t8 = t8 + H[t0+4]〈i〉) (25697)
  d-- (25697)
  c=*d (25698)
  a+=c (25699)
  r=a 8 (25700)
  (         M[t8] = 116) (25702)
  c=a (25702)
  *c= 116 (25703)
  (                    1274:     i += 1) (25705)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25705)
  *d++ (25705)
  (                    1275:     v[i] = 0x68) (25706)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25706)
  a=0 (25706)
  a-- (25707)
  a>>= 1 (25708)
  c=a (25710)
  d++ (25711)
  a=*d (25712)
  a&=c (25713)
  r=a 8 (25714)
  (         t8 = t8 + H[t0+4]〈i〉) (25716)
  d-- (25716)
  c=*d (25717)
  a+=c (25718)
  r=a 8 (25719)
  (         M[t8] = 104) (25721)
  c=a (25721)
  *c= 104 (25722)
  (                    1276:     i += 1) (25724)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25724)
  *d++ (25724)
  (                    1277:     v[i] = 0x65) (25725)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25725)
  a=0 (25725)
  a-- (25726)
  a>>= 1 (25727)
  c=a (25729)
  d++ (25730)
  a=*d (25731)
  a&=c (25732)
  r=a 8 (25733)
  (         t8 = t8 + H[t0+4]〈i〉) (25735)
  d-- (25735)
  c=*d (25736)
  a+=c (25737)
  r=a 8 (25738)
  (         M[t8] = 101) (25740)
  c=a (25740)
  *c= 101 (25741)
  (                    1278:     i += 1) (25743)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25743)
  *d++ (25743)
  (                    1279:     v[i] = 0x20) (25744)
  (         t8 = H[t0+5]〈v〉 & 2147483647) (25744)
  a=0 (25744)
  a-- (25745)
  a>>= 1 (25746)
  c=a (25748)
  d++ (25749)
  a=*d (25750)
  a&=c (25751)
  r=a 8 (25752)
  (         t8 = t8 + H[t0+4]〈i〉) (25754)
  d-- (25754)
  c=*d (25755)
  a+=c (25756)
  r=a 8 (25757)
  (         M[t8] = 32) (25759)
  c=a (25759)
  *c= 32 (25760)
  (                    1280:     i += 1) (25762)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25762)
  *d++ (25762)
  (                    1281:     while i-5 < l:) (25763)
  (        :while_1167:) (25763)
  (         t9 = H[t0+4]〈i〉 - 5) (25763)
  c= 5 (25763)
  a=r 0 (25765)
  a+= 4 (25767)
  d=a (25769)
  a=*d (25770)
  a-=c (25771)
  r=a 9 (25772)
  (         t8 = t9 < H[t0+3]〈l〉) (25774)
  d-- (25774)
  c=*d (25775)
  a<c (25776)
  a=0 (25777)
  jf 1 (25778)
  a++ (25780)
  r=a 8 (25781)
  (         ifN t8 goto whileend_1169) (25783)
  a== 0 (25783)
  jf 3 (25785)
  lj 25847 (25787)
  (                    1282:       v[i] = base_word[i-5]) (25790)
  (         t8 = H[t0+4]〈i〉 - 5) (25790)
  c= 5 (25790)
  d++ (25792)
  a=*d (25793)
  a-=c (25794)
  r=a 8 (25795)
  (         t9 = H[t0+2]〈base_word〉 & 2147483647) (25797)
  a=0 (25797)
  a-- (25798)
  a>>= 1 (25799)
  c=a (25801)
  a=r 0 (25802)
  a+= 2 (25804)
  d=a (25806)
  a=*d (25807)
  a&=c (25808)
  r=a 9 (25809)
  (         t9 = t9 + t8) (25811)
  c=r 8 (25811)
  a+=c (25813)
  r=a 9 (25814)
  (         t9 = M[t9]) (25816)
  b=a (25816)
  a=*b (25817)
  r=a 9 (25818)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (25820)
  a=0 (25820)
  a-- (25821)
  a>>= 1 (25822)
  c=a (25824)
  a=r 0 (25825)
  a+= 5 (25827)
  d=a (25829)
  a=*d (25830)
  a&=c (25831)
  r=a 10 (25832)
  (         t10 = t10 + H[t0+4]〈i〉) (25834)
  d-- (25834)
  c=*d (25835)
  a+=c (25836)
  r=a 10 (25837)
  (         M[t10] = t9) (25839)
  c=a (25839)
  a=r 9 (25840)
  *c=a (25842)
  (                    1283:       i += 1) (25843)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25843)
  *d++ (25843)
  (         goto while_1167) (25844)
  lj 25763 (25844)
  (        :whileend_1169:) (25847)
  (                    1284:     v[i] = 0x20) (25847)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25847)
  a=0 (25847)
  a-- (25848)
  a>>= 1 (25849)
  c=a (25851)
  a=r 0 (25852)
  a+= 5 (25854)
  d=a (25856)
  a=*d (25857)
  a&=c (25858)
  r=a 9 (25859)
  (         t9 = t9 + H[t0+4]〈i〉) (25861)
  d-- (25861)
  c=*d (25862)
  a+=c (25863)
  r=a 9 (25864)
  (         M[t9] = 32) (25866)
  c=a (25866)
  *c= 32 (25867)
  (                    1285:     i += 1) (25869)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25869)
  *d++ (25869)
  (                    1286:     v[i] = 0x6f) (25870)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25870)
  a=0 (25870)
  a-- (25871)
  a>>= 1 (25872)
  c=a (25874)
  d++ (25875)
  a=*d (25876)
  a&=c (25877)
  r=a 9 (25878)
  (         t9 = t9 + H[t0+4]〈i〉) (25880)
  d-- (25880)
  c=*d (25881)
  a+=c (25882)
  r=a 9 (25883)
  (         M[t9] = 111) (25885)
  c=a (25885)
  *c= 111 (25886)
  (                    1287:     i += 1) (25888)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25888)
  *d++ (25888)
  (                    1288:     v[i] = 0x66) (25889)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25889)
  a=0 (25889)
  a-- (25890)
  a>>= 1 (25891)
  c=a (25893)
  d++ (25894)
  a=*d (25895)
  a&=c (25896)
  r=a 9 (25897)
  (         t9 = t9 + H[t0+4]〈i〉) (25899)
  d-- (25899)
  c=*d (25900)
  a+=c (25901)
  r=a 9 (25902)
  (         M[t9] = 102) (25904)
  c=a (25904)
  *c= 102 (25905)
  (                    1289:     i += 1) (25907)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25907)
  *d++ (25907)
  (                    1290:     v[i] = 0x20) (25908)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25908)
  a=0 (25908)
  a-- (25909)
  a>>= 1 (25910)
  c=a (25912)
  d++ (25913)
  a=*d (25914)
  a&=c (25915)
  r=a 9 (25916)
  (         t9 = t9 + H[t0+4]〈i〉) (25918)
  d-- (25918)
  c=*d (25919)
  a+=c (25920)
  r=a 9 (25921)
  (         M[t9] = 32) (25923)
  c=a (25923)
  *c= 32 (25924)
  (                    1291:     i += 1) (25926)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25926)
  *d++ (25926)
  (                    1292:     v[i] = 0x74) (25927)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25927)
  a=0 (25927)
  a-- (25928)
  a>>= 1 (25929)
  c=a (25931)
  d++ (25932)
  a=*d (25933)
  a&=c (25934)
  r=a 9 (25935)
  (         t9 = t9 + H[t0+4]〈i〉) (25937)
  d-- (25937)
  c=*d (25938)
  a+=c (25939)
  r=a 9 (25940)
  (         M[t9] = 116) (25942)
  c=a (25942)
  *c= 116 (25943)
  (                    1293:     i += 1) (25945)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25945)
  *d++ (25945)
  (                    1294:     v[i] = 0x68) (25946)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25946)
  a=0 (25946)
  a-- (25947)
  a>>= 1 (25948)
  c=a (25950)
  d++ (25951)
  a=*d (25952)
  a&=c (25953)
  r=a 9 (25954)
  (         t9 = t9 + H[t0+4]〈i〉) (25956)
  d-- (25956)
  c=*d (25957)
  a+=c (25958)
  r=a 9 (25959)
  (         M[t9] = 104) (25961)
  c=a (25961)
  *c= 104 (25962)
  (                    1295:     i += 1) (25964)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25964)
  *d++ (25964)
  (                    1296:     v[i] = 0x65) (25965)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25965)
  a=0 (25965)
  a-- (25966)
  a>>= 1 (25967)
  c=a (25969)
  d++ (25970)
  a=*d (25971)
  a&=c (25972)
  r=a 9 (25973)
  (         t9 = t9 + H[t0+4]〈i〉) (25975)
  d-- (25975)
  c=*d (25976)
  a+=c (25977)
  r=a 9 (25978)
  (         M[t9] = 101) (25980)
  c=a (25980)
  *c= 101 (25981)
  (                    1297:     i += 1) (25983)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (25983)
  *d++ (25983)
  (                    1298:     v[i] = 0x20) (25984)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (25984)
  a=0 (25984)
  a-- (25985)
  a>>= 1 (25986)
  c=a (25988)
  d++ (25989)
  a=*d (25990)
  a&=c (25991)
  r=a 9 (25992)
  (         t9 = t9 + H[t0+4]〈i〉) (25994)
  d-- (25994)
  c=*d (25995)
  a+=c (25996)
  r=a 9 (25997)
  (         M[t9] = 32) (25999)
  c=a (25999)
  *c= 32 (26000)
  (         goto endif_1166) (26002)
  lj 28969 (26002)
  (        :else_1165:) (26005)
  (                    1299:   elif id_ == 75:  # 7 hinten an) (26005)
  (         t9 = H[t0+1]〈id_〉 == 75) (26005)
  c= 75 (26005)
  a=r 0 (26007)
  a++ (26009)
  d=a (26010)
  a=*d (26011)
  a==c (26012)
  a=0 (26013)
  jf 1 (26014)
  a++ (26016)
  r=a 9 (26017)
  (         ifN t9 goto else_1172) (26019)
  a== 0 (26019)
  jf 3 (26021)
  lj 26297 (26023)
  (                    1300:     v = alloc_pM〈l+7〉) (26026)
  (         t9 = H[t0+3]〈l〉 + 7) (26026)
  c= 7 (26026)
  a=r 0 (26028)
  a+= 3 (26030)
  d=a (26032)
  a=*d (26033)
  a+=c (26034)
  r=a 9 (26035)
  (         H[t0+16]〈〉 = t0) (26037)
  a=r 0 (26037)
  a+= 16 (26039)
  d=a (26041)
  a=r 0 (26042)
  *d=a (26044)
  (saved bsp, return id:) (26045)
  (         H[t0+17]〈〉 = 96) (26045)
  d++ (26045)
  *d= 96 (26046)
  (push arguments:) (26048)
  (         H[t0+18]〈〉 = t9) (26048)
  d++ (26048)
  a=r 9 (26049)
  *d=a (26051)
  (         t0 = t0 + 17) (26052)
  c= 17 (26052)
  a=r 0 (26054)
  a+=c (26056)
  r=a 0 (26057)
  (         goto addr_alloc_pM) (26059)
  lj 323 (26059)
  (        :return_id_96:) (26062)
  (         t10 = t1) (26062)
  a=r 1 (26062)
  r=a 10 (26064)
  (         t10 = t10 | 2147483648) (26066)
  a= 1 (26066)
  a<<= 31 (26068)
  c=a (26070)
  a=r 10 (26071)
  a|=c (26073)
  r=a 10 (26074)
  (         H[t0+5]〈v〉 = t10) (26076)
  a=r 0 (26076)
  a+= 5 (26078)
  d=a (26080)
  a=r 10 (26081)
  *d=a (26083)
  (                    1301:     while i < l:) (26084)
  (        :while_1174:) (26084)
  (         t9 = H[t0+4]〈i〉 < H[t0+3]〈l〉) (26084)
  a=r 0 (26084)
  a+= 3 (26086)
  d=a (26088)
  c=*d (26089)
  d++ (26090)
  a=*d (26091)
  a<c (26092)
  a=0 (26093)
  jf 1 (26094)
  a++ (26096)
  r=a 9 (26097)
  (         ifN t9 goto whileend_1176) (26099)
  a== 0 (26099)
  jf 3 (26101)
  lj 26158 (26103)
  (                    1302:       v[i] = base_word[i]) (26106)
  (         t9 = H[t0+2]〈base_word〉 & 2147483647) (26106)
  a=0 (26106)
  a-- (26107)
  a>>= 1 (26108)
  c=a (26110)
  a=r 0 (26111)
  a+= 2 (26113)
  d=a (26115)
  a=*d (26116)
  a&=c (26117)
  r=a 9 (26118)
  (         t9 = t9 + H[t0+4]〈i〉) (26120)
  a=r 0 (26120)
  a+= 4 (26122)
  d=a (26124)
  c=*d (26125)
  a=r 9 (26126)
  a+=c (26128)
  r=a 9 (26129)
  (         t9 = M[t9]) (26131)
  b=a (26131)
  a=*b (26132)
  r=a 9 (26133)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (26135)
  a=0 (26135)
  a-- (26136)
  a>>= 1 (26137)
  c=a (26139)
  d++ (26140)
  a=*d (26141)
  a&=c (26142)
  r=a 10 (26143)
  (         t10 = t10 + H[t0+4]〈i〉) (26145)
  d-- (26145)
  c=*d (26146)
  a+=c (26147)
  r=a 10 (26148)
  (         M[t10] = t9) (26150)
  c=a (26150)
  a=r 9 (26151)
  *c=a (26153)
  (                    1303:       i += 1) (26154)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26154)
  *d++ (26154)
  (         goto while_1174) (26155)
  lj 26084 (26155)
  (        :whileend_1176:) (26158)
  (                    1304:     v[i] = 0x2e) (26158)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26158)
  a=0 (26158)
  a-- (26159)
  a>>= 1 (26160)
  c=a (26162)
  a=r 0 (26163)
  a+= 5 (26165)
  d=a (26167)
  a=*d (26168)
  a&=c (26169)
  r=a 9 (26170)
  (         t9 = t9 + H[t0+4]〈i〉) (26172)
  d-- (26172)
  c=*d (26173)
  a+=c (26174)
  r=a 9 (26175)
  (         M[t9] = 46) (26177)
  c=a (26177)
  *c= 46 (26178)
  (                    1305:     i += 1) (26180)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26180)
  *d++ (26180)
  (                    1306:     v[i] = 0x20) (26181)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26181)
  a=0 (26181)
  a-- (26182)
  a>>= 1 (26183)
  c=a (26185)
  d++ (26186)
  a=*d (26187)
  a&=c (26188)
  r=a 9 (26189)
  (         t9 = t9 + H[t0+4]〈i〉) (26191)
  d-- (26191)
  c=*d (26192)
  a+=c (26193)
  r=a 9 (26194)
  (         M[t9] = 32) (26196)
  c=a (26196)
  *c= 32 (26197)
  (                    1307:     i += 1) (26199)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26199)
  *d++ (26199)
  (                    1308:     v[i] = 0x54) (26200)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26200)
  a=0 (26200)
  a-- (26201)
  a>>= 1 (26202)
  c=a (26204)
  d++ (26205)
  a=*d (26206)
  a&=c (26207)
  r=a 9 (26208)
  (         t9 = t9 + H[t0+4]〈i〉) (26210)
  d-- (26210)
  c=*d (26211)
  a+=c (26212)
  r=a 9 (26213)
  (         M[t9] = 84) (26215)
  c=a (26215)
  *c= 84 (26216)
  (                    1309:     i += 1) (26218)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26218)
  *d++ (26218)
  (                    1310:     v[i] = 0x68) (26219)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26219)
  a=0 (26219)
  a-- (26220)
  a>>= 1 (26221)
  c=a (26223)
  d++ (26224)
  a=*d (26225)
  a&=c (26226)
  r=a 9 (26227)
  (         t9 = t9 + H[t0+4]〈i〉) (26229)
  d-- (26229)
  c=*d (26230)
  a+=c (26231)
  r=a 9 (26232)
  (         M[t9] = 104) (26234)
  c=a (26234)
  *c= 104 (26235)
  (                    1311:     i += 1) (26237)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26237)
  *d++ (26237)
  (                    1312:     v[i] = 0x69) (26238)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26238)
  a=0 (26238)
  a-- (26239)
  a>>= 1 (26240)
  c=a (26242)
  d++ (26243)
  a=*d (26244)
  a&=c (26245)
  r=a 9 (26246)
  (         t9 = t9 + H[t0+4]〈i〉) (26248)
  d-- (26248)
  c=*d (26249)
  a+=c (26250)
  r=a 9 (26251)
  (         M[t9] = 105) (26253)
  c=a (26253)
  *c= 105 (26254)
  (                    1313:     i += 1) (26256)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26256)
  *d++ (26256)
  (                    1314:     v[i] = 0x73) (26257)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26257)
  a=0 (26257)
  a-- (26258)
  a>>= 1 (26259)
  c=a (26261)
  d++ (26262)
  a=*d (26263)
  a&=c (26264)
  r=a 9 (26265)
  (         t9 = t9 + H[t0+4]〈i〉) (26267)
  d-- (26267)
  c=*d (26268)
  a+=c (26269)
  r=a 9 (26270)
  (         M[t9] = 115) (26272)
  c=a (26272)
  *c= 115 (26273)
  (                    1315:     i += 1) (26275)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26275)
  *d++ (26275)
  (                    1316:     v[i] = 0x20) (26276)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26276)
  a=0 (26276)
  a-- (26277)
  a>>= 1 (26278)
  c=a (26280)
  d++ (26281)
  a=*d (26282)
  a&=c (26283)
  r=a 9 (26284)
  (         t9 = t9 + H[t0+4]〈i〉) (26286)
  d-- (26286)
  c=*d (26287)
  a+=c (26288)
  r=a 9 (26289)
  (         M[t9] = 32) (26291)
  c=a (26291)
  *c= 32 (26292)
  (         goto endif_1173) (26294)
  lj 28969 (26294)
  (        :else_1172:) (26297)
  (                    1317:   elif id_ == 83 or id_ == 115:  # upper all 1 vorne 1 hinten) (26297)
  (         t10 = H[t0+1]〈id_〉 == 83) (26297)
  c= 83 (26297)
  a=r 0 (26299)
  a++ (26301)
  d=a (26302)
  a=*d (26303)
  a==c (26304)
  a=0 (26305)
  jf 1 (26306)
  a++ (26308)
  r=a 10 (26309)
  (         t11 = H[t0+1]〈id_〉 == 115) (26311)
  c= 115 (26311)
  a=*d (26313)
  a==c (26314)
  a=0 (26315)
  jf 1 (26316)
  a++ (26318)
  r=a 11 (26319)
  (         t9 = t10 or t11) (26321)
  c=a (26321)
  a=r 10 (26322)
  a== 0 (26324)
  jf 1 (26326)
  a=c (26328)
  r=a 9 (26329)
  (         ifN t9 goto else_1180) (26331)
  a== 0 (26331)
  jf 3 (26333)
  lj 26793 (26335)
  (                    1318:     u = uppercase_all〈base_word〉) (26338)
  (         H[t0+16]〈〉 = t0) (26338)
  a=r 0 (26338)
  a+= 16 (26340)
  d=a (26342)
  a=r 0 (26343)
  *d=a (26345)
  (saved bsp, return id:) (26346)
  (         H[t0+17]〈〉 = 97) (26346)
  d++ (26346)
  *d= 97 (26347)
  (push arguments:) (26349)
  (         H[t0+18]〈〉 = H[t0+2]〈base_word〉) (26349)
  a+= 2 (26349)
  d=a (26351)
  c=*d (26352)
  a=r 0 (26353)
  a+= 18 (26355)
  d=a (26357)
  *d=c (26358)
  (         t0 = t0 + 17) (26359)
  c= 17 (26359)
  a=r 0 (26361)
  a+=c (26363)
  r=a 0 (26364)
  (         goto uppercase_all) (26366)
  lj 8978 (26366)
  (        :return_id_97:) (26369)
  (         t9 = t1) (26369)
  a=r 1 (26369)
  r=a 9 (26371)
  (         H[t0+7]〈u〉 = t9) (26373)
  a=r 0 (26373)
  a+= 7 (26375)
  d=a (26377)
  a=r 9 (26378)
  *d=a (26380)
  (                    1319:     j = len_pM〈u〉) (26381)
  (         t9 = H[t0+7]〈u〉) (26381)
  a=*d (26381)
  r=a 9 (26382)
  (         t9 = t9 & 2147483647) (26384)
  a=0 (26384)
  a-- (26385)
  a>>= 1 (26386)
  c=a (26388)
  a=r 9 (26389)
  a&=c (26391)
  r=a 9 (26392)
  (         t9 = t9 - 5) (26394)
  c= 5 (26394)
  a-=c (26396)
  r=a 9 (26397)
  (         t10 = M[t9] << 8) (26399)
  c= 8 (26399)
  b=a (26401)
  a=*b (26402)
  a<<=c (26403)
  r=a 10 (26404)
  (         t9 = t9 + 1) (26406)
  a=r 9 (26406)
  a++ (26408)
  r=a 9 (26409)
  (         t10 = t10 + M[t9]) (26411)
  b=a (26411)
  c=*b (26412)
  a=r 10 (26413)
  a+=c (26415)
  r=a 10 (26416)
  (         t10 = t10 << 8) (26418)
  c= 8 (26418)
  a<<=c (26420)
  r=a 10 (26421)
  (         t9 = t9 + 1) (26423)
  a=r 9 (26423)
  a++ (26425)
  r=a 9 (26426)
  (         t10 = t10 + M[t9]) (26428)
  b=a (26428)
  c=*b (26429)
  a=r 10 (26430)
  a+=c (26432)
  r=a 10 (26433)
  (         t10 = t10 << 8) (26435)
  c= 8 (26435)
  a<<=c (26437)
  r=a 10 (26438)
  (         t9 = t9 + 1) (26440)
  a=r 9 (26440)
  a++ (26442)
  r=a 9 (26443)
  (         t10 = t10 + M[t9]) (26445)
  b=a (26445)
  c=*b (26446)
  a=r 10 (26447)
  a+=c (26449)
  r=a 10 (26450)
  (         H[t0+6]〈j〉 = t10) (26452)
  d-- (26452)
  *d=a (26453)
  (                    1320:     v = alloc_pM〈j+2〉) (26454)
  (         t9 = H[t0+6]〈j〉 + 2) (26454)
  c= 2 (26454)
  a=*d (26456)
  a+=c (26457)
  r=a 9 (26458)
  (         H[t0+16]〈〉 = t0) (26460)
  a=r 0 (26460)
  a+= 16 (26462)
  d=a (26464)
  a=r 0 (26465)
  *d=a (26467)
  (saved bsp, return id:) (26468)
  (         H[t0+17]〈〉 = 98) (26468)
  d++ (26468)
  *d= 98 (26469)
  (push arguments:) (26471)
  (         H[t0+18]〈〉 = t9) (26471)
  d++ (26471)
  a=r 9 (26472)
  *d=a (26474)
  (         t0 = t0 + 17) (26475)
  c= 17 (26475)
  a=r 0 (26477)
  a+=c (26479)
  r=a 0 (26480)
  (         goto addr_alloc_pM) (26482)
  lj 323 (26482)
  (        :return_id_98:) (26485)
  (         t10 = t1) (26485)
  a=r 1 (26485)
  r=a 10 (26487)
  (         t10 = t10 | 2147483648) (26489)
  a= 1 (26489)
  a<<= 31 (26491)
  c=a (26493)
  a=r 10 (26494)
  a|=c (26496)
  r=a 10 (26497)
  (         H[t0+5]〈v〉 = t10) (26499)
  a=r 0 (26499)
  a+= 5 (26501)
  d=a (26503)
  a=r 10 (26504)
  *d=a (26506)
  (                    1321:     v[0] = 0x20) (26507)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26507)
  a=0 (26507)
  a-- (26508)
  a>>= 1 (26509)
  c=a (26511)
  a=*d (26512)
  a&=c (26513)
  r=a 9 (26514)
  (         t9 = t9 + 0) (26516)
  (         M[t9] = 32) (26516)
  c=a (26516)
  *c= 32 (26517)
  (                    1322:     while i < j:) (26519)
  (        :while_1182:) (26519)
  (         t9 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (26519)
  a=r 0 (26519)
  a+= 6 (26521)
  d=a (26523)
  c=*d (26524)
  a=r 0 (26525)
  a+= 4 (26527)
  d=a (26529)
  a=*d (26530)
  a<c (26531)
  a=0 (26532)
  jf 1 (26533)
  a++ (26535)
  r=a 9 (26536)
  (         ifN t9 goto whileend_1184) (26538)
  a== 0 (26538)
  jf 3 (26540)
  lj 26649 (26542)
  (                    1323:       v[i+1] = u[i]) (26545)
  (         t9 = H[t0+7]〈u〉 >> 31) (26545)
  c= 31 (26545)
  a=r 0 (26547)
  a+= 7 (26549)
  d=a (26551)
  a=*d (26552)
  a>>=c (26553)
  r=a 9 (26554)
  (         if t9 goto isM_1186) (26556)
  a== 0 (26556)
  jt 3 (26558)
  lj 26585 (26560)
  (         t9 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (26563)
  a=r 0 (26563)
  a+= 4 (26565)
  d=a (26567)
  c=*d (26568)
  a=r 0 (26569)
  a+= 7 (26571)
  d=a (26573)
  a=*d (26574)
  a+=c (26575)
  r=a 9 (26576)
  (         t9 = H[t9]〈〉) (26578)
  d=a (26578)
  a=*d (26579)
  r=a 9 (26580)
  (         goto MorHdone_1187) (26582)
  lj 26614 (26582)
  (        :isM_1186:) (26585)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (26585)
  a=0 (26585)
  a-- (26586)
  a>>= 1 (26587)
  c=a (26589)
  a=r 0 (26590)
  a+= 7 (26592)
  d=a (26594)
  a=*d (26595)
  a&=c (26596)
  r=a 9 (26597)
  (         t9 = t9 + H[t0+4]〈i〉) (26599)
  a=r 0 (26599)
  a+= 4 (26601)
  d=a (26603)
  c=*d (26604)
  a=r 9 (26605)
  a+=c (26607)
  r=a 9 (26608)
  (         t9 = M[t9]) (26610)
  b=a (26610)
  a=*b (26611)
  r=a 9 (26612)
  (        :MorHdone_1187:) (26614)
  (         t10 = H[t0+4]〈i〉 + 1) (26614)
  c= 1 (26614)
  a=r 0 (26616)
  a+= 4 (26618)
  d=a (26620)
  a=*d (26621)
  a+=c (26622)
  r=a 10 (26623)
  (         t11 = H[t0+5]〈v〉 & 2147483647) (26625)
  a=0 (26625)
  a-- (26626)
  a>>= 1 (26627)
  c=a (26629)
  d++ (26630)
  a=*d (26631)
  a&=c (26632)
  r=a 11 (26633)
  (         t11 = t11 + t10) (26635)
  c=r 10 (26635)
  a+=c (26637)
  r=a 11 (26638)
  (         M[t11] = t9) (26640)
  c=a (26640)
  a=r 9 (26641)
  *c=a (26643)
  (                    1324:       i += 1) (26644)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26644)
  d-- (26644)
  *d++ (26645)
  (         goto while_1182) (26646)
  lj 26519 (26646)
  (        :whileend_1184:) (26649)
  (                    1325:     i += 1) (26649)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (26649)
  a=r 0 (26649)
  a+= 4 (26651)
  d=a (26653)
  *d++ (26654)
  (                    1326:     if id_ == 83:) (26655)
  (         t9 = H[t0+1]〈id_〉 == 83) (26655)
  c= 83 (26655)
  a=r 0 (26657)
  a++ (26659)
  d=a (26660)
  a=*d (26661)
  a==c (26662)
  a=0 (26663)
  jf 1 (26664)
  a++ (26666)
  r=a 9 (26667)
  (         ifN t9 goto else_1189) (26669)
  a== 0 (26669)
  jf 3 (26671)
  lj 26701 (26673)
  (                    1327:       v[i] = 0x20) (26676)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26676)
  a=0 (26676)
  a-- (26677)
  a>>= 1 (26678)
  c=a (26680)
  a=r 0 (26681)
  a+= 5 (26683)
  d=a (26685)
  a=*d (26686)
  a&=c (26687)
  r=a 9 (26688)
  (         t9 = t9 + H[t0+4]〈i〉) (26690)
  d-- (26690)
  c=*d (26691)
  a+=c (26692)
  r=a 9 (26693)
  (         M[t9] = 32) (26695)
  c=a (26695)
  *c= 32 (26696)
  (         goto endif_1190) (26698)
  lj 26747 (26698)
  (        :else_1189:) (26701)
  (                    1328:     elif id_ == 115:) (26701)
  (         t9 = H[t0+1]〈id_〉 == 115) (26701)
  c= 115 (26701)
  a=r 0 (26703)
  a++ (26705)
  d=a (26706)
  a=*d (26707)
  a==c (26708)
  a=0 (26709)
  jf 1 (26710)
  a++ (26712)
  r=a 9 (26713)
  (         ifN t9 goto else_1192) (26715)
  a== 0 (26715)
  jf 3 (26717)
  lj 26747 (26719)
  (                    1329:       v[i] = 0x2e) (26722)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26722)
  a=0 (26722)
  a-- (26723)
  a>>= 1 (26724)
  c=a (26726)
  a=r 0 (26727)
  a+= 5 (26729)
  d=a (26731)
  a=*d (26732)
  a&=c (26733)
  r=a 9 (26734)
  (         t9 = t9 + H[t0+4]〈i〉) (26736)
  d-- (26736)
  c=*d (26737)
  a+=c (26738)
  r=a 9 (26739)
  (         M[t9] = 46) (26741)
  c=a (26741)
  *c= 46 (26742)
  (         goto endif_1193) (26744)
  lj 26747 (26744)
  (        :else_1192:) (26747)
  (        :endif_1193:) (26747)
  (        :endif_1190:) (26747)
  (                    1330:     free_pM〈u〉) (26747)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (26747)
  a=0 (26747)
  a-- (26748)
  a>>= 1 (26749)
  c=a (26751)
  a=r 0 (26752)
  a+= 7 (26754)
  d=a (26756)
  a=*d (26757)
  a&=c (26758)
  r=a 9 (26759)
  (         H[t0+16]〈〉 = t0) (26761)
  a=r 0 (26761)
  a+= 16 (26763)
  d=a (26765)
  a=r 0 (26766)
  *d=a (26768)
  (saved bsp, return id:) (26769)
  (         H[t0+17]〈〉 = 99) (26769)
  d++ (26769)
  *d= 99 (26770)
  (push arguments:) (26772)
  (         H[t0+18]〈〉 = t9) (26772)
  d++ (26772)
  a=r 9 (26773)
  *d=a (26775)
  (         t0 = t0 + 17) (26776)
  c= 17 (26776)
  a=r 0 (26778)
  a+=c (26780)
  r=a 0 (26781)
  (         goto addr_free_pM) (26783)
  lj 2406 (26783)
  (        :return_id_99:) (26786)
  (         t10 = t1) (26786)
  a=r 1 (26786)
  r=a 10 (26788)
  (         goto endif_1181) (26790)
  lj 28969 (26790)
  (        :else_1180:) (26793)
  (                    1331:   elif id_ == 85:  # upper all 1 vorne) (26793)
  (         t9 = H[t0+1]〈id_〉 == 85) (26793)
  c= 85 (26793)
  a=r 0 (26795)
  a++ (26797)
  d=a (26798)
  a=*d (26799)
  a==c (26800)
  a=0 (26801)
  jf 1 (26802)
  a++ (26804)
  r=a 9 (26805)
  (         ifN t9 goto else_1195) (26807)
  a== 0 (26807)
  jf 3 (26809)
  lj 27171 (26811)
  (                    1332:     u = uppercase_all〈base_word〉) (26814)
  (         H[t0+16]〈〉 = t0) (26814)
  a=r 0 (26814)
  a+= 16 (26816)
  d=a (26818)
  a=r 0 (26819)
  *d=a (26821)
  (saved bsp, return id:) (26822)
  (         H[t0+17]〈〉 = 100) (26822)
  d++ (26822)
  *d= 100 (26823)
  (push arguments:) (26825)
  (         H[t0+18]〈〉 = H[t0+2]〈base_word〉) (26825)
  a+= 2 (26825)
  d=a (26827)
  c=*d (26828)
  a=r 0 (26829)
  a+= 18 (26831)
  d=a (26833)
  *d=c (26834)
  (         t0 = t0 + 17) (26835)
  c= 17 (26835)
  a=r 0 (26837)
  a+=c (26839)
  r=a 0 (26840)
  (         goto uppercase_all) (26842)
  lj 8978 (26842)
  (        :return_id_100:) (26845)
  (         t9 = t1) (26845)
  a=r 1 (26845)
  r=a 9 (26847)
  (         H[t0+7]〈u〉 = t9) (26849)
  a=r 0 (26849)
  a+= 7 (26851)
  d=a (26853)
  a=r 9 (26854)
  *d=a (26856)
  (                    1333:     j = len_pM〈u〉) (26857)
  (         t9 = H[t0+7]〈u〉) (26857)
  a=*d (26857)
  r=a 9 (26858)
  (         t9 = t9 & 2147483647) (26860)
  a=0 (26860)
  a-- (26861)
  a>>= 1 (26862)
  c=a (26864)
  a=r 9 (26865)
  a&=c (26867)
  r=a 9 (26868)
  (         t9 = t9 - 5) (26870)
  c= 5 (26870)
  a-=c (26872)
  r=a 9 (26873)
  (         t10 = M[t9] << 8) (26875)
  c= 8 (26875)
  b=a (26877)
  a=*b (26878)
  a<<=c (26879)
  r=a 10 (26880)
  (         t9 = t9 + 1) (26882)
  a=r 9 (26882)
  a++ (26884)
  r=a 9 (26885)
  (         t10 = t10 + M[t9]) (26887)
  b=a (26887)
  c=*b (26888)
  a=r 10 (26889)
  a+=c (26891)
  r=a 10 (26892)
  (         t10 = t10 << 8) (26894)
  c= 8 (26894)
  a<<=c (26896)
  r=a 10 (26897)
  (         t9 = t9 + 1) (26899)
  a=r 9 (26899)
  a++ (26901)
  r=a 9 (26902)
  (         t10 = t10 + M[t9]) (26904)
  b=a (26904)
  c=*b (26905)
  a=r 10 (26906)
  a+=c (26908)
  r=a 10 (26909)
  (         t10 = t10 << 8) (26911)
  c= 8 (26911)
  a<<=c (26913)
  r=a 10 (26914)
  (         t9 = t9 + 1) (26916)
  a=r 9 (26916)
  a++ (26918)
  r=a 9 (26919)
  (         t10 = t10 + M[t9]) (26921)
  b=a (26921)
  c=*b (26922)
  a=r 10 (26923)
  a+=c (26925)
  r=a 10 (26926)
  (         H[t0+6]〈j〉 = t10) (26928)
  d-- (26928)
  *d=a (26929)
  (                    1334:     v = alloc_pM〈j+1〉) (26930)
  (         t9 = H[t0+6]〈j〉 + 1) (26930)
  c= 1 (26930)
  a=*d (26932)
  a+=c (26933)
  r=a 9 (26934)
  (         H[t0+16]〈〉 = t0) (26936)
  a=r 0 (26936)
  a+= 16 (26938)
  d=a (26940)
  a=r 0 (26941)
  *d=a (26943)
  (saved bsp, return id:) (26944)
  (         H[t0+17]〈〉 = 101) (26944)
  d++ (26944)
  *d= 101 (26945)
  (push arguments:) (26947)
  (         H[t0+18]〈〉 = t9) (26947)
  d++ (26947)
  a=r 9 (26948)
  *d=a (26950)
  (         t0 = t0 + 17) (26951)
  c= 17 (26951)
  a=r 0 (26953)
  a+=c (26955)
  r=a 0 (26956)
  (         goto addr_alloc_pM) (26958)
  lj 323 (26958)
  (        :return_id_101:) (26961)
  (         t10 = t1) (26961)
  a=r 1 (26961)
  r=a 10 (26963)
  (         t10 = t10 | 2147483648) (26965)
  a= 1 (26965)
  a<<= 31 (26967)
  c=a (26969)
  a=r 10 (26970)
  a|=c (26972)
  r=a 10 (26973)
  (         H[t0+5]〈v〉 = t10) (26975)
  a=r 0 (26975)
  a+= 5 (26977)
  d=a (26979)
  a=r 10 (26980)
  *d=a (26982)
  (                    1335:     v[0] = 0x20) (26983)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (26983)
  a=0 (26983)
  a-- (26984)
  a>>= 1 (26985)
  c=a (26987)
  a=*d (26988)
  a&=c (26989)
  r=a 9 (26990)
  (         t9 = t9 + 0) (26992)
  (         M[t9] = 32) (26992)
  c=a (26992)
  *c= 32 (26993)
  (                    1336:     while i < j:) (26995)
  (        :while_1197:) (26995)
  (         t9 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (26995)
  a=r 0 (26995)
  a+= 6 (26997)
  d=a (26999)
  c=*d (27000)
  a=r 0 (27001)
  a+= 4 (27003)
  d=a (27005)
  a=*d (27006)
  a<c (27007)
  a=0 (27008)
  jf 1 (27009)
  a++ (27011)
  r=a 9 (27012)
  (         ifN t9 goto whileend_1199) (27014)
  a== 0 (27014)
  jf 3 (27016)
  lj 27125 (27018)
  (                    1337:       v[i+1] = u[i]) (27021)
  (         t9 = H[t0+7]〈u〉 >> 31) (27021)
  c= 31 (27021)
  a=r 0 (27023)
  a+= 7 (27025)
  d=a (27027)
  a=*d (27028)
  a>>=c (27029)
  r=a 9 (27030)
  (         if t9 goto isM_1201) (27032)
  a== 0 (27032)
  jt 3 (27034)
  lj 27061 (27036)
  (         t9 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (27039)
  a=r 0 (27039)
  a+= 4 (27041)
  d=a (27043)
  c=*d (27044)
  a=r 0 (27045)
  a+= 7 (27047)
  d=a (27049)
  a=*d (27050)
  a+=c (27051)
  r=a 9 (27052)
  (         t9 = H[t9]〈〉) (27054)
  d=a (27054)
  a=*d (27055)
  r=a 9 (27056)
  (         goto MorHdone_1202) (27058)
  lj 27090 (27058)
  (        :isM_1201:) (27061)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (27061)
  a=0 (27061)
  a-- (27062)
  a>>= 1 (27063)
  c=a (27065)
  a=r 0 (27066)
  a+= 7 (27068)
  d=a (27070)
  a=*d (27071)
  a&=c (27072)
  r=a 9 (27073)
  (         t9 = t9 + H[t0+4]〈i〉) (27075)
  a=r 0 (27075)
  a+= 4 (27077)
  d=a (27079)
  c=*d (27080)
  a=r 9 (27081)
  a+=c (27083)
  r=a 9 (27084)
  (         t9 = M[t9]) (27086)
  b=a (27086)
  a=*b (27087)
  r=a 9 (27088)
  (        :MorHdone_1202:) (27090)
  (         t10 = H[t0+4]〈i〉 + 1) (27090)
  c= 1 (27090)
  a=r 0 (27092)
  a+= 4 (27094)
  d=a (27096)
  a=*d (27097)
  a+=c (27098)
  r=a 10 (27099)
  (         t11 = H[t0+5]〈v〉 & 2147483647) (27101)
  a=0 (27101)
  a-- (27102)
  a>>= 1 (27103)
  c=a (27105)
  d++ (27106)
  a=*d (27107)
  a&=c (27108)
  r=a 11 (27109)
  (         t11 = t11 + t10) (27111)
  c=r 10 (27111)
  a+=c (27113)
  r=a 11 (27114)
  (         M[t11] = t9) (27116)
  c=a (27116)
  a=r 9 (27117)
  *c=a (27119)
  (                    1338:       i += 1) (27120)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (27120)
  d-- (27120)
  *d++ (27121)
  (         goto while_1197) (27122)
  lj 26995 (27122)
  (        :whileend_1199:) (27125)
  (                    1339:     free_pM〈u〉) (27125)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (27125)
  a=0 (27125)
  a-- (27126)
  a>>= 1 (27127)
  c=a (27129)
  a=r 0 (27130)
  a+= 7 (27132)
  d=a (27134)
  a=*d (27135)
  a&=c (27136)
  r=a 9 (27137)
  (         H[t0+16]〈〉 = t0) (27139)
  a=r 0 (27139)
  a+= 16 (27141)
  d=a (27143)
  a=r 0 (27144)
  *d=a (27146)
  (saved bsp, return id:) (27147)
  (         H[t0+17]〈〉 = 102) (27147)
  d++ (27147)
  *d= 102 (27148)
  (push arguments:) (27150)
  (         H[t0+18]〈〉 = t9) (27150)
  d++ (27150)
  a=r 9 (27151)
  *d=a (27153)
  (         t0 = t0 + 17) (27154)
  c= 17 (27154)
  a=r 0 (27156)
  a+=c (27158)
  r=a 0 (27159)
  (         goto addr_free_pM) (27161)
  lj 2406 (27161)
  (        :return_id_102:) (27164)
  (         t10 = t1) (27164)
  a=r 1 (27164)
  r=a 10 (27166)
  (         goto endif_1196) (27168)
  lj 28969 (27168)
  (        :else_1195:) (27171)
  (                    1340:   elif id_ == 97 or id_ == 105 or id_ == 107 or id_ == 114 or id_ == 116:  # upper all 2 hinten) (27171)
  (         t13 = H[t0+1]〈id_〉 == 97) (27171)
  c= 97 (27171)
  a=r 0 (27173)
  a++ (27175)
  d=a (27176)
  a=*d (27177)
  a==c (27178)
  a=0 (27179)
  jf 1 (27180)
  a++ (27182)
  r=a 13 (27183)
  (         t14 = H[t0+1]〈id_〉 == 105) (27185)
  c= 105 (27185)
  a=*d (27187)
  a==c (27188)
  a=0 (27189)
  jf 1 (27190)
  a++ (27192)
  r=a 14 (27193)
  (         t12 = t13 or t14) (27195)
  c=a (27195)
  a=r 13 (27196)
  a== 0 (27198)
  jf 1 (27200)
  a=c (27202)
  r=a 12 (27203)
  (         t13 = H[t0+1]〈id_〉 == 107) (27205)
  c= 107 (27205)
  a=*d (27207)
  a==c (27208)
  a=0 (27209)
  jf 1 (27210)
  a++ (27212)
  r=a 13 (27213)
  (         t11 = t12 or t13) (27215)
  c=a (27215)
  a=r 12 (27216)
  a== 0 (27218)
  jf 1 (27220)
  a=c (27222)
  r=a 11 (27223)
  (         t12 = H[t0+1]〈id_〉 == 114) (27225)
  c= 114 (27225)
  a=*d (27227)
  a==c (27228)
  a=0 (27229)
  jf 1 (27230)
  a++ (27232)
  r=a 12 (27233)
  (         t10 = t11 or t12) (27235)
  c=a (27235)
  a=r 11 (27236)
  a== 0 (27238)
  jf 1 (27240)
  a=c (27242)
  r=a 10 (27243)
  (         t11 = H[t0+1]〈id_〉 == 116) (27245)
  c= 116 (27245)
  a=*d (27247)
  a==c (27248)
  a=0 (27249)
  jf 1 (27250)
  a++ (27252)
  r=a 11 (27253)
  (         t9 = t10 or t11) (27255)
  c=a (27255)
  a=r 10 (27256)
  a== 0 (27258)
  jf 1 (27260)
  a=c (27262)
  r=a 9 (27263)
  (         ifN t9 goto else_1208) (27265)
  a== 0 (27265)
  jf 3 (27267)
  lj 28023 (27269)
  (                    1341:     u = uppercase_all〈base_word〉) (27272)
  (         H[t0+16]〈〉 = t0) (27272)
  a=r 0 (27272)
  a+= 16 (27274)
  d=a (27276)
  a=r 0 (27277)
  *d=a (27279)
  (saved bsp, return id:) (27280)
  (         H[t0+17]〈〉 = 103) (27280)
  d++ (27280)
  *d= 103 (27281)
  (push arguments:) (27283)
  (         H[t0+18]〈〉 = H[t0+2]〈base_word〉) (27283)
  a+= 2 (27283)
  d=a (27285)
  c=*d (27286)
  a=r 0 (27287)
  a+= 18 (27289)
  d=a (27291)
  *d=c (27292)
  (         t0 = t0 + 17) (27293)
  c= 17 (27293)
  a=r 0 (27295)
  a+=c (27297)
  r=a 0 (27298)
  (         goto uppercase_all) (27300)
  lj 8978 (27300)
  (        :return_id_103:) (27303)
  (         t9 = t1) (27303)
  a=r 1 (27303)
  r=a 9 (27305)
  (         H[t0+7]〈u〉 = t9) (27307)
  a=r 0 (27307)
  a+= 7 (27309)
  d=a (27311)
  a=r 9 (27312)
  *d=a (27314)
  (                    1342:     j = len_pM〈u〉) (27315)
  (         t9 = H[t0+7]〈u〉) (27315)
  a=*d (27315)
  r=a 9 (27316)
  (         t9 = t9 & 2147483647) (27318)
  a=0 (27318)
  a-- (27319)
  a>>= 1 (27320)
  c=a (27322)
  a=r 9 (27323)
  a&=c (27325)
  r=a 9 (27326)
  (         t9 = t9 - 5) (27328)
  c= 5 (27328)
  a-=c (27330)
  r=a 9 (27331)
  (         t10 = M[t9] << 8) (27333)
  c= 8 (27333)
  b=a (27335)
  a=*b (27336)
  a<<=c (27337)
  r=a 10 (27338)
  (         t9 = t9 + 1) (27340)
  a=r 9 (27340)
  a++ (27342)
  r=a 9 (27343)
  (         t10 = t10 + M[t9]) (27345)
  b=a (27345)
  c=*b (27346)
  a=r 10 (27347)
  a+=c (27349)
  r=a 10 (27350)
  (         t10 = t10 << 8) (27352)
  c= 8 (27352)
  a<<=c (27354)
  r=a 10 (27355)
  (         t9 = t9 + 1) (27357)
  a=r 9 (27357)
  a++ (27359)
  r=a 9 (27360)
  (         t10 = t10 + M[t9]) (27362)
  b=a (27362)
  c=*b (27363)
  a=r 10 (27364)
  a+=c (27366)
  r=a 10 (27367)
  (         t10 = t10 << 8) (27369)
  c= 8 (27369)
  a<<=c (27371)
  r=a 10 (27372)
  (         t9 = t9 + 1) (27374)
  a=r 9 (27374)
  a++ (27376)
  r=a 9 (27377)
  (         t10 = t10 + M[t9]) (27379)
  b=a (27379)
  c=*b (27380)
  a=r 10 (27381)
  a+=c (27383)
  r=a 10 (27384)
  (         H[t0+6]〈j〉 = t10) (27386)
  d-- (27386)
  *d=a (27387)
  (                    1343:     v = alloc_pM〈j+2〉) (27388)
  (         t9 = H[t0+6]〈j〉 + 2) (27388)
  c= 2 (27388)
  a=*d (27390)
  a+=c (27391)
  r=a 9 (27392)
  (         H[t0+16]〈〉 = t0) (27394)
  a=r 0 (27394)
  a+= 16 (27396)
  d=a (27398)
  a=r 0 (27399)
  *d=a (27401)
  (saved bsp, return id:) (27402)
  (         H[t0+17]〈〉 = 104) (27402)
  d++ (27402)
  *d= 104 (27403)
  (push arguments:) (27405)
  (         H[t0+18]〈〉 = t9) (27405)
  d++ (27405)
  a=r 9 (27406)
  *d=a (27408)
  (         t0 = t0 + 17) (27409)
  c= 17 (27409)
  a=r 0 (27411)
  a+=c (27413)
  r=a 0 (27414)
  (         goto addr_alloc_pM) (27416)
  lj 323 (27416)
  (        :return_id_104:) (27419)
  (         t10 = t1) (27419)
  a=r 1 (27419)
  r=a 10 (27421)
  (         t10 = t10 | 2147483648) (27423)
  a= 1 (27423)
  a<<= 31 (27425)
  c=a (27427)
  a=r 10 (27428)
  a|=c (27430)
  r=a 10 (27431)
  (         H[t0+5]〈v〉 = t10) (27433)
  a=r 0 (27433)
  a+= 5 (27435)
  d=a (27437)
  a=r 10 (27438)
  *d=a (27440)
  (                    1344:     while i < j:) (27441)
  (        :while_1210:) (27441)
  (         t9 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (27441)
  a=r 0 (27441)
  a+= 6 (27443)
  d=a (27445)
  c=*d (27446)
  a=r 0 (27447)
  a+= 4 (27449)
  d=a (27451)
  a=*d (27452)
  a<c (27453)
  a=0 (27454)
  jf 1 (27455)
  a++ (27457)
  r=a 9 (27458)
  (         ifN t9 goto whileend_1212) (27460)
  a== 0 (27460)
  jf 3 (27462)
  lj 27563 (27464)
  (                    1345:       v[i] = u[i]) (27467)
  (         t9 = H[t0+7]〈u〉 >> 31) (27467)
  c= 31 (27467)
  a=r 0 (27469)
  a+= 7 (27471)
  d=a (27473)
  a=*d (27474)
  a>>=c (27475)
  r=a 9 (27476)
  (         if t9 goto isM_1214) (27478)
  a== 0 (27478)
  jt 3 (27480)
  lj 27507 (27482)
  (         t9 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (27485)
  a=r 0 (27485)
  a+= 4 (27487)
  d=a (27489)
  c=*d (27490)
  a=r 0 (27491)
  a+= 7 (27493)
  d=a (27495)
  a=*d (27496)
  a+=c (27497)
  r=a 9 (27498)
  (         t9 = H[t9]〈〉) (27500)
  d=a (27500)
  a=*d (27501)
  r=a 9 (27502)
  (         goto MorHdone_1215) (27504)
  lj 27536 (27504)
  (        :isM_1214:) (27507)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (27507)
  a=0 (27507)
  a-- (27508)
  a>>= 1 (27509)
  c=a (27511)
  a=r 0 (27512)
  a+= 7 (27514)
  d=a (27516)
  a=*d (27517)
  a&=c (27518)
  r=a 9 (27519)
  (         t9 = t9 + H[t0+4]〈i〉) (27521)
  a=r 0 (27521)
  a+= 4 (27523)
  d=a (27525)
  c=*d (27526)
  a=r 9 (27527)
  a+=c (27529)
  r=a 9 (27530)
  (         t9 = M[t9]) (27532)
  b=a (27532)
  a=*b (27533)
  r=a 9 (27534)
  (        :MorHdone_1215:) (27536)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (27536)
  a=0 (27536)
  a-- (27537)
  a>>= 1 (27538)
  c=a (27540)
  a=r 0 (27541)
  a+= 5 (27543)
  d=a (27545)
  a=*d (27546)
  a&=c (27547)
  r=a 10 (27548)
  (         t10 = t10 + H[t0+4]〈i〉) (27550)
  d-- (27550)
  c=*d (27551)
  a+=c (27552)
  r=a 10 (27553)
  (         M[t10] = t9) (27555)
  c=a (27555)
  a=r 9 (27556)
  *c=a (27558)
  (                    1346:       i += 1) (27559)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (27559)
  *d++ (27559)
  (         goto while_1210) (27560)
  lj 27441 (27560)
  (        :whileend_1212:) (27563)
  (                    1347:     if id_ == 97:) (27563)
  (         t9 = H[t0+1]〈id_〉 == 97) (27563)
  c= 97 (27563)
  a=r 0 (27565)
  a++ (27567)
  d=a (27568)
  a=*d (27569)
  a==c (27570)
  a=0 (27571)
  jf 1 (27572)
  a++ (27574)
  r=a 9 (27575)
  (         ifN t9 goto else_1217) (27577)
  a== 0 (27577)
  jf 3 (27579)
  lj 27609 (27581)
  (                    1348:       v[i] = 0x22) (27584)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27584)
  a=0 (27584)
  a-- (27585)
  a>>= 1 (27586)
  c=a (27588)
  a=r 0 (27589)
  a+= 5 (27591)
  d=a (27593)
  a=*d (27594)
  a&=c (27595)
  r=a 9 (27596)
  (         t9 = t9 + H[t0+4]〈i〉) (27598)
  d-- (27598)
  c=*d (27599)
  a+=c (27600)
  r=a 9 (27601)
  (         M[t9] = 34) (27603)
  c=a (27603)
  *c= 34 (27604)
  (         goto endif_1218) (27606)
  lj 27767 (27606)
  (        :else_1217:) (27609)
  (                    1349:     elif id_ == 105 or id_ == 116:) (27609)
  (         t10 = H[t0+1]〈id_〉 == 105) (27609)
  c= 105 (27609)
  a=r 0 (27611)
  a++ (27613)
  d=a (27614)
  a=*d (27615)
  a==c (27616)
  a=0 (27617)
  jf 1 (27618)
  a++ (27620)
  r=a 10 (27621)
  (         t11 = H[t0+1]〈id_〉 == 116) (27623)
  c= 116 (27623)
  a=*d (27625)
  a==c (27626)
  a=0 (27627)
  jf 1 (27628)
  a++ (27630)
  r=a 11 (27631)
  (         t9 = t10 or t11) (27633)
  c=a (27633)
  a=r 10 (27634)
  a== 0 (27636)
  jf 1 (27638)
  a=c (27640)
  r=a 9 (27641)
  (         ifN t9 goto else_1221) (27643)
  a== 0 (27643)
  jf 3 (27645)
  lj 27675 (27647)
  (                    1350:       v[i] = 0x3d) (27650)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27650)
  a=0 (27650)
  a-- (27651)
  a>>= 1 (27652)
  c=a (27654)
  a=r 0 (27655)
  a+= 5 (27657)
  d=a (27659)
  a=*d (27660)
  a&=c (27661)
  r=a 9 (27662)
  (         t9 = t9 + H[t0+4]〈i〉) (27664)
  d-- (27664)
  c=*d (27665)
  a+=c (27666)
  r=a 9 (27667)
  (         M[t9] = 61) (27669)
  c=a (27669)
  *c= 61 (27670)
  (         goto endif_1222) (27672)
  lj 27767 (27672)
  (        :else_1221:) (27675)
  (                    1351:     elif id_ == 107:) (27675)
  (         t9 = H[t0+1]〈id_〉 == 107) (27675)
  c= 107 (27675)
  a=r 0 (27677)
  a++ (27679)
  d=a (27680)
  a=*d (27681)
  a==c (27682)
  a=0 (27683)
  jf 1 (27684)
  a++ (27686)
  r=a 9 (27687)
  (         ifN t9 goto else_1224) (27689)
  a== 0 (27689)
  jf 3 (27691)
  lj 27721 (27693)
  (                    1352:       v[i] = 0x2c) (27696)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27696)
  a=0 (27696)
  a-- (27697)
  a>>= 1 (27698)
  c=a (27700)
  a=r 0 (27701)
  a+= 5 (27703)
  d=a (27705)
  a=*d (27706)
  a&=c (27707)
  r=a 9 (27708)
  (         t9 = t9 + H[t0+4]〈i〉) (27710)
  d-- (27710)
  c=*d (27711)
  a+=c (27712)
  r=a 9 (27713)
  (         M[t9] = 44) (27715)
  c=a (27715)
  *c= 44 (27716)
  (         goto endif_1225) (27718)
  lj 27767 (27718)
  (        :else_1224:) (27721)
  (                    1353:     elif id_ == 114:) (27721)
  (         t9 = H[t0+1]〈id_〉 == 114) (27721)
  c= 114 (27721)
  a=r 0 (27723)
  a++ (27725)
  d=a (27726)
  a=*d (27727)
  a==c (27728)
  a=0 (27729)
  jf 1 (27730)
  a++ (27732)
  r=a 9 (27733)
  (         ifN t9 goto else_1227) (27735)
  a== 0 (27735)
  jf 3 (27737)
  lj 27767 (27739)
  (                    1354:       v[i] = 0x2e) (27742)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27742)
  a=0 (27742)
  a-- (27743)
  a>>= 1 (27744)
  c=a (27746)
  a=r 0 (27747)
  a+= 5 (27749)
  d=a (27751)
  a=*d (27752)
  a&=c (27753)
  r=a 9 (27754)
  (         t9 = t9 + H[t0+4]〈i〉) (27756)
  d-- (27756)
  c=*d (27757)
  a+=c (27758)
  r=a 9 (27759)
  (         M[t9] = 46) (27761)
  c=a (27761)
  *c= 46 (27762)
  (         goto endif_1228) (27764)
  lj 27767 (27764)
  (        :else_1227:) (27767)
  (        :endif_1228:) (27767)
  (        :endif_1225:) (27767)
  (        :endif_1222:) (27767)
  (        :endif_1218:) (27767)
  (                    1355:     i += 1) (27767)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (27767)
  a=r 0 (27767)
  a+= 4 (27769)
  d=a (27771)
  *d++ (27772)
  (                    1356:     if id_ == 97:) (27773)
  (         t9 = H[t0+1]〈id_〉 == 97) (27773)
  c= 97 (27773)
  a=r 0 (27775)
  a++ (27777)
  d=a (27778)
  a=*d (27779)
  a==c (27780)
  a=0 (27781)
  jf 1 (27782)
  a++ (27784)
  r=a 9 (27785)
  (         ifN t9 goto else_1230) (27787)
  a== 0 (27787)
  jf 3 (27789)
  lj 27819 (27791)
  (                    1357:       v[i] = 0x3e) (27794)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27794)
  a=0 (27794)
  a-- (27795)
  a>>= 1 (27796)
  c=a (27798)
  a=r 0 (27799)
  a+= 5 (27801)
  d=a (27803)
  a=*d (27804)
  a&=c (27805)
  r=a 9 (27806)
  (         t9 = t9 + H[t0+4]〈i〉) (27808)
  d-- (27808)
  c=*d (27809)
  a+=c (27810)
  r=a 9 (27811)
  (         M[t9] = 62) (27813)
  c=a (27813)
  *c= 62 (27814)
  (         goto endif_1231) (27816)
  lj 27977 (27816)
  (        :else_1230:) (27819)
  (                    1358:     elif id_ == 105:) (27819)
  (         t9 = H[t0+1]〈id_〉 == 105) (27819)
  c= 105 (27819)
  a=r 0 (27821)
  a++ (27823)
  d=a (27824)
  a=*d (27825)
  a==c (27826)
  a=0 (27827)
  jf 1 (27828)
  a++ (27830)
  r=a 9 (27831)
  (         ifN t9 goto else_1233) (27833)
  a== 0 (27833)
  jf 3 (27835)
  lj 27865 (27837)
  (                    1359:       v[i] = 0x22) (27840)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27840)
  a=0 (27840)
  a-- (27841)
  a>>= 1 (27842)
  c=a (27844)
  a=r 0 (27845)
  a+= 5 (27847)
  d=a (27849)
  a=*d (27850)
  a&=c (27851)
  r=a 9 (27852)
  (         t9 = t9 + H[t0+4]〈i〉) (27854)
  d-- (27854)
  c=*d (27855)
  a+=c (27856)
  r=a 9 (27857)
  (         M[t9] = 34) (27859)
  c=a (27859)
  *c= 34 (27860)
  (         goto endif_1234) (27862)
  lj 27977 (27862)
  (        :else_1233:) (27865)
  (                    1360:     elif id_ == 116:) (27865)
  (         t9 = H[t0+1]〈id_〉 == 116) (27865)
  c= 116 (27865)
  a=r 0 (27867)
  a++ (27869)
  d=a (27870)
  a=*d (27871)
  a==c (27872)
  a=0 (27873)
  jf 1 (27874)
  a++ (27876)
  r=a 9 (27877)
  (         ifN t9 goto else_1236) (27879)
  a== 0 (27879)
  jf 3 (27881)
  lj 27911 (27883)
  (                    1361:       v[i] = 0x27) (27886)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27886)
  a=0 (27886)
  a-- (27887)
  a>>= 1 (27888)
  c=a (27890)
  a=r 0 (27891)
  a+= 5 (27893)
  d=a (27895)
  a=*d (27896)
  a&=c (27897)
  r=a 9 (27898)
  (         t9 = t9 + H[t0+4]〈i〉) (27900)
  d-- (27900)
  c=*d (27901)
  a+=c (27902)
  r=a 9 (27903)
  (         M[t9] = 39) (27905)
  c=a (27905)
  *c= 39 (27906)
  (         goto endif_1237) (27908)
  lj 27977 (27908)
  (        :else_1236:) (27911)
  (                    1362:     elif id_ == 107 or id_ == 114:) (27911)
  (         t10 = H[t0+1]〈id_〉 == 107) (27911)
  c= 107 (27911)
  a=r 0 (27913)
  a++ (27915)
  d=a (27916)
  a=*d (27917)
  a==c (27918)
  a=0 (27919)
  jf 1 (27920)
  a++ (27922)
  r=a 10 (27923)
  (         t11 = H[t0+1]〈id_〉 == 114) (27925)
  c= 114 (27925)
  a=*d (27927)
  a==c (27928)
  a=0 (27929)
  jf 1 (27930)
  a++ (27932)
  r=a 11 (27933)
  (         t9 = t10 or t11) (27935)
  c=a (27935)
  a=r 10 (27936)
  a== 0 (27938)
  jf 1 (27940)
  a=c (27942)
  r=a 9 (27943)
  (         ifN t9 goto else_1240) (27945)
  a== 0 (27945)
  jf 3 (27947)
  lj 27977 (27949)
  (                    1363:       v[i] = 0x20) (27952)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (27952)
  a=0 (27952)
  a-- (27953)
  a>>= 1 (27954)
  c=a (27956)
  a=r 0 (27957)
  a+= 5 (27959)
  d=a (27961)
  a=*d (27962)
  a&=c (27963)
  r=a 9 (27964)
  (         t9 = t9 + H[t0+4]〈i〉) (27966)
  d-- (27966)
  c=*d (27967)
  a+=c (27968)
  r=a 9 (27969)
  (         M[t9] = 32) (27971)
  c=a (27971)
  *c= 32 (27972)
  (         goto endif_1241) (27974)
  lj 27977 (27974)
  (        :else_1240:) (27977)
  (        :endif_1241:) (27977)
  (        :endif_1237:) (27977)
  (        :endif_1234:) (27977)
  (        :endif_1231:) (27977)
  (                    1364:     free_pM〈u〉) (27977)
  (         t9 = H[t0+7]〈u〉 & 2147483647) (27977)
  a=0 (27977)
  a-- (27978)
  a>>= 1 (27979)
  c=a (27981)
  a=r 0 (27982)
  a+= 7 (27984)
  d=a (27986)
  a=*d (27987)
  a&=c (27988)
  r=a 9 (27989)
  (         H[t0+16]〈〉 = t0) (27991)
  a=r 0 (27991)
  a+= 16 (27993)
  d=a (27995)
  a=r 0 (27996)
  *d=a (27998)
  (saved bsp, return id:) (27999)
  (         H[t0+17]〈〉 = 105) (27999)
  d++ (27999)
  *d= 105 (28000)
  (push arguments:) (28002)
  (         H[t0+18]〈〉 = t9) (28002)
  d++ (28002)
  a=r 9 (28003)
  *d=a (28005)
  (         t0 = t0 + 17) (28006)
  c= 17 (28006)
  a=r 0 (28008)
  a+=c (28010)
  r=a 0 (28011)
  (         goto addr_free_pM) (28013)
  lj 2406 (28013)
  (        :return_id_105:) (28016)
  (         t10 = t1) (28016)
  a=r 1 (28016)
  r=a 10 (28018)
  (         goto endif_1209) (28020)
  lj 28969 (28020)
  (        :else_1208:) (28023)
  (                    1365:   elif id_ == 102: # 2 vorne) (28023)
  (         t9 = H[t0+1]〈id_〉 == 102) (28023)
  c= 102 (28023)
  a=r 0 (28025)
  a++ (28027)
  d=a (28028)
  a=*d (28029)
  a==c (28030)
  a=0 (28031)
  jf 1 (28032)
  a++ (28034)
  r=a 9 (28035)
  (         ifN t9 goto else_1243) (28037)
  a== 0 (28037)
  jf 3 (28039)
  lj 28226 (28041)
  (                    1366:     v = alloc_pM〈l+2〉) (28044)
  (         t9 = H[t0+3]〈l〉 + 2) (28044)
  c= 2 (28044)
  a=r 0 (28046)
  a+= 3 (28048)
  d=a (28050)
  a=*d (28051)
  a+=c (28052)
  r=a 9 (28053)
  (         H[t0+16]〈〉 = t0) (28055)
  a=r 0 (28055)
  a+= 16 (28057)
  d=a (28059)
  a=r 0 (28060)
  *d=a (28062)
  (saved bsp, return id:) (28063)
  (         H[t0+17]〈〉 = 106) (28063)
  d++ (28063)
  *d= 106 (28064)
  (push arguments:) (28066)
  (         H[t0+18]〈〉 = t9) (28066)
  d++ (28066)
  a=r 9 (28067)
  *d=a (28069)
  (         t0 = t0 + 17) (28070)
  c= 17 (28070)
  a=r 0 (28072)
  a+=c (28074)
  r=a 0 (28075)
  (         goto addr_alloc_pM) (28077)
  lj 323 (28077)
  (        :return_id_106:) (28080)
  (         t10 = t1) (28080)
  a=r 1 (28080)
  r=a 10 (28082)
  (         t10 = t10 | 2147483648) (28084)
  a= 1 (28084)
  a<<= 31 (28086)
  c=a (28088)
  a=r 10 (28089)
  a|=c (28091)
  r=a 10 (28092)
  (         H[t0+5]〈v〉 = t10) (28094)
  a=r 0 (28094)
  a+= 5 (28096)
  d=a (28098)
  a=r 10 (28099)
  *d=a (28101)
  (                    1367:     v[i] = 0xc2) (28102)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (28102)
  a=0 (28102)
  a-- (28103)
  a>>= 1 (28104)
  c=a (28106)
  a=*d (28107)
  a&=c (28108)
  r=a 9 (28109)
  (         t9 = t9 + H[t0+4]〈i〉) (28111)
  d-- (28111)
  c=*d (28112)
  a+=c (28113)
  r=a 9 (28114)
  (         M[t9] = 194) (28116)
  c=a (28116)
  *c= 194 (28117)
  (                    1368:     i += 1) (28119)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28119)
  *d++ (28119)
  (                    1369:     v[i] = 0xa0) (28120)
  (         t9 = H[t0+5]〈v〉 & 2147483647) (28120)
  a=0 (28120)
  a-- (28121)
  a>>= 1 (28122)
  c=a (28124)
  d++ (28125)
  a=*d (28126)
  a&=c (28127)
  r=a 9 (28128)
  (         t9 = t9 + H[t0+4]〈i〉) (28130)
  d-- (28130)
  c=*d (28131)
  a+=c (28132)
  r=a 9 (28133)
  (         M[t9] = 160) (28135)
  c=a (28135)
  *c= 160 (28136)
  (                    1370:     i += 1) (28138)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28138)
  *d++ (28138)
  (                    1371:     l += 1) (28139)
  (         H[t0+3]〈l〉 = H[t0+3]〈l〉 + 1) (28139)
  d-- (28139)
  *d++ (28140)
  (                    1372:     while i <= l:) (28141)
  (        :while_1245:) (28141)
  (         t9 = H[t0+4]〈i〉 <= H[t0+3]〈l〉) (28141)
  a=r 0 (28141)
  a+= 3 (28143)
  d=a (28145)
  c=*d (28146)
  d++ (28147)
  a=*d (28148)
  a==c (28149)
  jt 4 (28150)
  a<c (28152)
  a=0 (28153)
  jf 2 (28154)
  a= 1 (28156)
  r=a 9 (28158)
  (         ifN t9 goto whileend_1247) (28160)
  a== 0 (28160)
  jf 3 (28162)
  lj 28223 (28164)
  (                    1373:       v[i] = base_word[i-2]) (28167)
  (         t9 = H[t0+4]〈i〉 - 2) (28167)
  c= 2 (28167)
  a=*d (28169)
  a-=c (28170)
  r=a 9 (28171)
  (         t10 = H[t0+2]〈base_word〉 & 2147483647) (28173)
  a=0 (28173)
  a-- (28174)
  a>>= 1 (28175)
  c=a (28177)
  a=r 0 (28178)
  a+= 2 (28180)
  d=a (28182)
  a=*d (28183)
  a&=c (28184)
  r=a 10 (28185)
  (         t10 = t10 + t9) (28187)
  c=r 9 (28187)
  a+=c (28189)
  r=a 10 (28190)
  (         t10 = M[t10]) (28192)
  b=a (28192)
  a=*b (28193)
  r=a 10 (28194)
  (         t11 = H[t0+5]〈v〉 & 2147483647) (28196)
  a=0 (28196)
  a-- (28197)
  a>>= 1 (28198)
  c=a (28200)
  a=r 0 (28201)
  a+= 5 (28203)
  d=a (28205)
  a=*d (28206)
  a&=c (28207)
  r=a 11 (28208)
  (         t11 = t11 + H[t0+4]〈i〉) (28210)
  d-- (28210)
  c=*d (28211)
  a+=c (28212)
  r=a 11 (28213)
  (         M[t11] = t10) (28215)
  c=a (28215)
  a=r 10 (28216)
  *c=a (28218)
  (                    1374:       i += 1) (28219)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28219)
  *d++ (28219)
  (         goto while_1245) (28220)
  lj 28141 (28220)
  (        :whileend_1247:) (28223)
  (         goto endif_1244) (28223)
  lj 28969 (28223)
  (        :else_1243:) (28226)
  (                    1375:   elif id_ == 110 or id_ == 111 or id_ == 117 or id_ == 119:  # upper all 1 vorne 2 hinten) (28226)
  (         t13 = H[t0+1]〈id_〉 == 110) (28226)
  c= 110 (28226)
  a=r 0 (28228)
  a++ (28230)
  d=a (28231)
  a=*d (28232)
  a==c (28233)
  a=0 (28234)
  jf 1 (28235)
  a++ (28237)
  r=a 13 (28238)
  (         t14 = H[t0+1]〈id_〉 == 111) (28240)
  c= 111 (28240)
  a=*d (28242)
  a==c (28243)
  a=0 (28244)
  jf 1 (28245)
  a++ (28247)
  r=a 14 (28248)
  (         t12 = t13 or t14) (28250)
  c=a (28250)
  a=r 13 (28251)
  a== 0 (28253)
  jf 1 (28255)
  a=c (28257)
  r=a 12 (28258)
  (         t13 = H[t0+1]〈id_〉 == 117) (28260)
  c= 117 (28260)
  a=*d (28262)
  a==c (28263)
  a=0 (28264)
  jf 1 (28265)
  a++ (28267)
  r=a 13 (28268)
  (         t11 = t12 or t13) (28270)
  c=a (28270)
  a=r 12 (28271)
  a== 0 (28273)
  jf 1 (28275)
  a=c (28277)
  r=a 11 (28278)
  (         t12 = H[t0+1]〈id_〉 == 119) (28280)
  c= 119 (28280)
  a=*d (28282)
  a==c (28283)
  a=0 (28284)
  jf 1 (28285)
  a++ (28287)
  r=a 12 (28288)
  (         t10 = t11 or t12) (28290)
  c=a (28290)
  a=r 11 (28291)
  a== 0 (28293)
  jf 1 (28295)
  a=c (28297)
  r=a 10 (28298)
  (         ifN t10 goto else_1253) (28300)
  a== 0 (28300)
  jf 3 (28302)
  lj 28948 (28304)
  (                    1376:     u = uppercase_all〈base_word〉) (28307)
  (         H[t0+17]〈〉 = t0) (28307)
  a=r 0 (28307)
  a+= 17 (28309)
  d=a (28311)
  a=r 0 (28312)
  *d=a (28314)
  (saved bsp, return id:) (28315)
  (         H[t0+18]〈〉 = 107) (28315)
  d++ (28315)
  *d= 107 (28316)
  (push arguments:) (28318)
  (         H[t0+19]〈〉 = H[t0+2]〈base_word〉) (28318)
  a+= 2 (28318)
  d=a (28320)
  c=*d (28321)
  a=r 0 (28322)
  a+= 19 (28324)
  d=a (28326)
  *d=c (28327)
  (         t0 = t0 + 18) (28328)
  c= 18 (28328)
  a=r 0 (28330)
  a+=c (28332)
  r=a 0 (28333)
  (         goto uppercase_all) (28335)
  lj 8978 (28335)
  (        :return_id_107:) (28338)
  (         t10 = t1) (28338)
  a=r 1 (28338)
  r=a 10 (28340)
  (         H[t0+7]〈u〉 = t10) (28342)
  a=r 0 (28342)
  a+= 7 (28344)
  d=a (28346)
  a=r 10 (28347)
  *d=a (28349)
  (                    1377:     j = len_pM〈u〉) (28350)
  (         t10 = H[t0+7]〈u〉) (28350)
  a=*d (28350)
  r=a 10 (28351)
  (         t10 = t10 & 2147483647) (28353)
  a=0 (28353)
  a-- (28354)
  a>>= 1 (28355)
  c=a (28357)
  a=r 10 (28358)
  a&=c (28360)
  r=a 10 (28361)
  (         t10 = t10 - 5) (28363)
  c= 5 (28363)
  a-=c (28365)
  r=a 10 (28366)
  (         t11 = M[t10] << 8) (28368)
  c= 8 (28368)
  b=a (28370)
  a=*b (28371)
  a<<=c (28372)
  r=a 11 (28373)
  (         t10 = t10 + 1) (28375)
  a=r 10 (28375)
  a++ (28377)
  r=a 10 (28378)
  (         t11 = t11 + M[t10]) (28380)
  b=a (28380)
  c=*b (28381)
  a=r 11 (28382)
  a+=c (28384)
  r=a 11 (28385)
  (         t11 = t11 << 8) (28387)
  c= 8 (28387)
  a<<=c (28389)
  r=a 11 (28390)
  (         t10 = t10 + 1) (28392)
  a=r 10 (28392)
  a++ (28394)
  r=a 10 (28395)
  (         t11 = t11 + M[t10]) (28397)
  b=a (28397)
  c=*b (28398)
  a=r 11 (28399)
  a+=c (28401)
  r=a 11 (28402)
  (         t11 = t11 << 8) (28404)
  c= 8 (28404)
  a<<=c (28406)
  r=a 11 (28407)
  (         t10 = t10 + 1) (28409)
  a=r 10 (28409)
  a++ (28411)
  r=a 10 (28412)
  (         t11 = t11 + M[t10]) (28414)
  b=a (28414)
  c=*b (28415)
  a=r 11 (28416)
  a+=c (28418)
  r=a 11 (28419)
  (         H[t0+6]〈j〉 = t11) (28421)
  d-- (28421)
  *d=a (28422)
  (                    1378:     v = alloc_pM〈j+3〉) (28423)
  (         t10 = H[t0+6]〈j〉 + 3) (28423)
  c= 3 (28423)
  a=*d (28425)
  a+=c (28426)
  r=a 10 (28427)
  (         H[t0+17]〈〉 = t0) (28429)
  a=r 0 (28429)
  a+= 17 (28431)
  d=a (28433)
  a=r 0 (28434)
  *d=a (28436)
  (saved bsp, return id:) (28437)
  (         H[t0+18]〈〉 = 108) (28437)
  d++ (28437)
  *d= 108 (28438)
  (push arguments:) (28440)
  (         H[t0+19]〈〉 = t10) (28440)
  d++ (28440)
  a=r 10 (28441)
  *d=a (28443)
  (         t0 = t0 + 18) (28444)
  c= 18 (28444)
  a=r 0 (28446)
  a+=c (28448)
  r=a 0 (28449)
  (         goto addr_alloc_pM) (28451)
  lj 323 (28451)
  (        :return_id_108:) (28454)
  (         t11 = t1) (28454)
  a=r 1 (28454)
  r=a 11 (28456)
  (         t11 = t11 | 2147483648) (28458)
  a= 1 (28458)
  a<<= 31 (28460)
  c=a (28462)
  a=r 11 (28463)
  a|=c (28465)
  r=a 11 (28466)
  (         H[t0+5]〈v〉 = t11) (28468)
  a=r 0 (28468)
  a+= 5 (28470)
  d=a (28472)
  a=r 11 (28473)
  *d=a (28475)
  (                    1379:     v[0] = 0x20) (28476)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28476)
  a=0 (28476)
  a-- (28477)
  a>>= 1 (28478)
  c=a (28480)
  a=*d (28481)
  a&=c (28482)
  r=a 10 (28483)
  (         t10 = t10 + 0) (28485)
  (         M[t10] = 32) (28485)
  c=a (28485)
  *c= 32 (28486)
  (                    1380:     while i < j:) (28488)
  (        :while_1255:) (28488)
  (         t10 = H[t0+4]〈i〉 < H[t0+6]〈j〉) (28488)
  a=r 0 (28488)
  a+= 6 (28490)
  d=a (28492)
  c=*d (28493)
  a=r 0 (28494)
  a+= 4 (28496)
  d=a (28498)
  a=*d (28499)
  a<c (28500)
  a=0 (28501)
  jf 1 (28502)
  a++ (28504)
  r=a 10 (28505)
  (         ifN t10 goto whileend_1257) (28507)
  a== 0 (28507)
  jf 3 (28509)
  lj 28618 (28511)
  (                    1381:       v[i+1] = u[i]) (28514)
  (         t10 = H[t0+7]〈u〉 >> 31) (28514)
  c= 31 (28514)
  a=r 0 (28516)
  a+= 7 (28518)
  d=a (28520)
  a=*d (28521)
  a>>=c (28522)
  r=a 10 (28523)
  (         if t10 goto isM_1259) (28525)
  a== 0 (28525)
  jt 3 (28527)
  lj 28554 (28529)
  (         t10 = H[t0+7]〈u〉 + H[t0+4]〈i〉) (28532)
  a=r 0 (28532)
  a+= 4 (28534)
  d=a (28536)
  c=*d (28537)
  a=r 0 (28538)
  a+= 7 (28540)
  d=a (28542)
  a=*d (28543)
  a+=c (28544)
  r=a 10 (28545)
  (         t10 = H[t10]〈〉) (28547)
  d=a (28547)
  a=*d (28548)
  r=a 10 (28549)
  (         goto MorHdone_1260) (28551)
  lj 28583 (28551)
  (        :isM_1259:) (28554)
  (         t10 = H[t0+7]〈u〉 & 2147483647) (28554)
  a=0 (28554)
  a-- (28555)
  a>>= 1 (28556)
  c=a (28558)
  a=r 0 (28559)
  a+= 7 (28561)
  d=a (28563)
  a=*d (28564)
  a&=c (28565)
  r=a 10 (28566)
  (         t10 = t10 + H[t0+4]〈i〉) (28568)
  a=r 0 (28568)
  a+= 4 (28570)
  d=a (28572)
  c=*d (28573)
  a=r 10 (28574)
  a+=c (28576)
  r=a 10 (28577)
  (         t10 = M[t10]) (28579)
  b=a (28579)
  a=*b (28580)
  r=a 10 (28581)
  (        :MorHdone_1260:) (28583)
  (         t11 = H[t0+4]〈i〉 + 1) (28583)
  c= 1 (28583)
  a=r 0 (28585)
  a+= 4 (28587)
  d=a (28589)
  a=*d (28590)
  a+=c (28591)
  r=a 11 (28592)
  (         t12 = H[t0+5]〈v〉 & 2147483647) (28594)
  a=0 (28594)
  a-- (28595)
  a>>= 1 (28596)
  c=a (28598)
  d++ (28599)
  a=*d (28600)
  a&=c (28601)
  r=a 12 (28602)
  (         t12 = t12 + t11) (28604)
  c=r 11 (28604)
  a+=c (28606)
  r=a 12 (28607)
  (         M[t12] = t10) (28609)
  c=a (28609)
  a=r 10 (28610)
  *c=a (28612)
  (                    1382:       i += 1) (28613)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28613)
  d-- (28613)
  *d++ (28614)
  (         goto while_1255) (28615)
  lj 28488 (28615)
  (        :whileend_1257:) (28618)
  (                    1383:     i += 1) (28618)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28618)
  a=r 0 (28618)
  a+= 4 (28620)
  d=a (28622)
  *d++ (28623)
  (                    1384:     if id_ == 110 or id_ == 119:) (28624)
  (         t11 = H[t0+1]〈id_〉 == 110) (28624)
  c= 110 (28624)
  a=r 0 (28626)
  a++ (28628)
  d=a (28629)
  a=*d (28630)
  a==c (28631)
  a=0 (28632)
  jf 1 (28633)
  a++ (28635)
  r=a 11 (28636)
  (         t12 = H[t0+1]〈id_〉 == 119) (28638)
  c= 119 (28638)
  a=*d (28640)
  a==c (28641)
  a=0 (28642)
  jf 1 (28643)
  a++ (28645)
  r=a 12 (28646)
  (         t10 = t11 or t12) (28648)
  c=a (28648)
  a=r 11 (28649)
  a== 0 (28651)
  jf 1 (28653)
  a=c (28655)
  r=a 10 (28656)
  (         ifN t10 goto else_1263) (28658)
  a== 0 (28658)
  jf 3 (28660)
  lj 28690 (28662)
  (                    1385:       v[i] = 0x3d) (28665)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28665)
  a=0 (28665)
  a-- (28666)
  a>>= 1 (28667)
  c=a (28669)
  a=r 0 (28670)
  a+= 5 (28672)
  d=a (28674)
  a=*d (28675)
  a&=c (28676)
  r=a 10 (28677)
  (         t10 = t10 + H[t0+4]〈i〉) (28679)
  d-- (28679)
  c=*d (28680)
  a+=c (28681)
  r=a 10 (28682)
  (         M[t10] = 61) (28684)
  c=a (28684)
  *c= 61 (28685)
  (         goto endif_1264) (28687)
  lj 28782 (28687)
  (        :else_1263:) (28690)
  (                    1386:     elif id_ == 111:) (28690)
  (         t10 = H[t0+1]〈id_〉 == 111) (28690)
  c= 111 (28690)
  a=r 0 (28692)
  a++ (28694)
  d=a (28695)
  a=*d (28696)
  a==c (28697)
  a=0 (28698)
  jf 1 (28699)
  a++ (28701)
  r=a 10 (28702)
  (         ifN t10 goto else_1266) (28704)
  a== 0 (28704)
  jf 3 (28706)
  lj 28736 (28708)
  (                    1387:       v[i] = 0x2c) (28711)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28711)
  a=0 (28711)
  a-- (28712)
  a>>= 1 (28713)
  c=a (28715)
  a=r 0 (28716)
  a+= 5 (28718)
  d=a (28720)
  a=*d (28721)
  a&=c (28722)
  r=a 10 (28723)
  (         t10 = t10 + H[t0+4]〈i〉) (28725)
  d-- (28725)
  c=*d (28726)
  a+=c (28727)
  r=a 10 (28728)
  (         M[t10] = 44) (28730)
  c=a (28730)
  *c= 44 (28731)
  (         goto endif_1267) (28733)
  lj 28782 (28733)
  (        :else_1266:) (28736)
  (                    1388:     elif id_ == 117:) (28736)
  (         t10 = H[t0+1]〈id_〉 == 117) (28736)
  c= 117 (28736)
  a=r 0 (28738)
  a++ (28740)
  d=a (28741)
  a=*d (28742)
  a==c (28743)
  a=0 (28744)
  jf 1 (28745)
  a++ (28747)
  r=a 10 (28748)
  (         ifN t10 goto else_1269) (28750)
  a== 0 (28750)
  jf 3 (28752)
  lj 28782 (28754)
  (                    1389:       v[i] = 0x2e) (28757)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28757)
  a=0 (28757)
  a-- (28758)
  a>>= 1 (28759)
  c=a (28761)
  a=r 0 (28762)
  a+= 5 (28764)
  d=a (28766)
  a=*d (28767)
  a&=c (28768)
  r=a 10 (28769)
  (         t10 = t10 + H[t0+4]〈i〉) (28771)
  d-- (28771)
  c=*d (28772)
  a+=c (28773)
  r=a 10 (28774)
  (         M[t10] = 46) (28776)
  c=a (28776)
  *c= 46 (28777)
  (         goto endif_1270) (28779)
  lj 28782 (28779)
  (        :else_1269:) (28782)
  (        :endif_1270:) (28782)
  (        :endif_1267:) (28782)
  (        :endif_1264:) (28782)
  (                    1390:     i += 1) (28782)
  (         H[t0+4]〈i〉 = H[t0+4]〈i〉 + 1) (28782)
  a=r 0 (28782)
  a+= 4 (28784)
  d=a (28786)
  *d++ (28787)
  (                    1391:     if id_ == 110:) (28788)
  (         t10 = H[t0+1]〈id_〉 == 110) (28788)
  c= 110 (28788)
  a=r 0 (28790)
  a++ (28792)
  d=a (28793)
  a=*d (28794)
  a==c (28795)
  a=0 (28796)
  jf 1 (28797)
  a++ (28799)
  r=a 10 (28800)
  (         ifN t10 goto else_1272) (28802)
  a== 0 (28802)
  jf 3 (28804)
  lj 28834 (28806)
  (                    1392:       v[i] = 0x22) (28809)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28809)
  a=0 (28809)
  a-- (28810)
  a>>= 1 (28811)
  c=a (28813)
  a=r 0 (28814)
  a+= 5 (28816)
  d=a (28818)
  a=*d (28819)
  a&=c (28820)
  r=a 10 (28821)
  (         t10 = t10 + H[t0+4]〈i〉) (28823)
  d-- (28823)
  c=*d (28824)
  a+=c (28825)
  r=a 10 (28826)
  (         M[t10] = 34) (28828)
  c=a (28828)
  *c= 34 (28829)
  (         goto endif_1273) (28831)
  lj 28902 (28831)
  (        :else_1272:) (28834)
  (                    1393:     elif id_ == 110:) (28834)
  (         t10 = H[t0+1]〈id_〉 == 110) (28834)
  c= 110 (28834)
  a=r 0 (28836)
  a++ (28838)
  d=a (28839)
  a=*d (28840)
  a==c (28841)
  a=0 (28842)
  jf 1 (28843)
  a++ (28845)
  r=a 10 (28846)
  (         ifN t10 goto else_1275) (28848)
  a== 0 (28848)
  jf 3 (28850)
  lj 28880 (28852)
  (                    1394:       v[i] = 0x27) (28855)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28855)
  a=0 (28855)
  a-- (28856)
  a>>= 1 (28857)
  c=a (28859)
  a=r 0 (28860)
  a+= 5 (28862)
  d=a (28864)
  a=*d (28865)
  a&=c (28866)
  r=a 10 (28867)
  (         t10 = t10 + H[t0+4]〈i〉) (28869)
  d-- (28869)
  c=*d (28870)
  a+=c (28871)
  r=a 10 (28872)
  (         M[t10] = 39) (28874)
  c=a (28874)
  *c= 39 (28875)
  (         goto endif_1276) (28877)
  lj 28902 (28877)
  (        :else_1275:) (28880)
  (                    1396:       v[i] = 0x20) (28880)
  (         t10 = H[t0+5]〈v〉 & 2147483647) (28880)
  a=0 (28880)
  a-- (28881)
  a>>= 1 (28882)
  c=a (28884)
  a=r 0 (28885)
  a+= 5 (28887)
  d=a (28889)
  a=*d (28890)
  a&=c (28891)
  r=a 10 (28892)
  (         t10 = t10 + H[t0+4]〈i〉) (28894)
  d-- (28894)
  c=*d (28895)
  a+=c (28896)
  r=a 10 (28897)
  (         M[t10] = 32) (28899)
  c=a (28899)
  *c= 32 (28900)
  (        :endif_1276:) (28902)
  (        :endif_1273:) (28902)
  (                    1397:     free_pM〈u〉) (28902)
  (         t10 = H[t0+7]〈u〉 & 2147483647) (28902)
  a=0 (28902)
  a-- (28903)
  a>>= 1 (28904)
  c=a (28906)
  a=r 0 (28907)
  a+= 7 (28909)
  d=a (28911)
  a=*d (28912)
  a&=c (28913)
  r=a 10 (28914)
  (         H[t0+17]〈〉 = t0) (28916)
  a=r 0 (28916)
  a+= 17 (28918)
  d=a (28920)
  a=r 0 (28921)
  *d=a (28923)
  (saved bsp, return id:) (28924)
  (         H[t0+18]〈〉 = 109) (28924)
  d++ (28924)
  *d= 109 (28925)
  (push arguments:) (28927)
  (         H[t0+19]〈〉 = t10) (28927)
  d++ (28927)
  a=r 10 (28928)
  *d=a (28930)
  (         t0 = t0 + 18) (28931)
  c= 18 (28931)
  a=r 0 (28933)
  a+=c (28935)
  r=a 0 (28936)
  (         goto addr_free_pM) (28938)
  lj 2406 (28938)
  (        :return_id_109:) (28941)
  (         t11 = t1) (28941)
  a=r 1 (28941)
  r=a 11 (28943)
  (         goto endif_1254) (28945)
  lj 28969 (28945)
  (        :else_1253:) (28948)
  (                    1399:     return NONE # unreachable) (28948)
  (         t1 = 4294967295) (28948)
  a=0 (28948)
  a-- (28949)
  r=a 1 (28950)
  (         t2 = H[t0]〈〉) (28952)
  d=r 0 (28952)
  a=*d (28954)
  r=a 2 (28955)
  (         t0 = t0 - 1) (28957)
  a=r 0 (28957)
  a-- (28959)
  r=a 0 (28960)
  (         t0 = H[t0]〈〉) (28962)
  d=a (28962)
  a=*d (28963)
  r=a 0 (28964)
  (         goto find_label_ret_id) (28966)
  lj 62666 (28966)
  (        :endif_1254:) (28969)
  (        :endif_1244:) (28969)
  (        :endif_1209:) (28969)
  (        :endif_1196:) (28969)
  (        :endif_1181:) (28969)
  (        :endif_1173:) (28969)
  (        :endif_1166:) (28969)
  (        :endif_1142:) (28969)
  (        :endif_1116:) (28969)
  (        :endif_1106:) (28969)
  (        :endif_1071:) (28969)
  (        :endif_1057:) (28969)
  (        :endif_1054:) (28969)
  (        :endif_1017:) (28969)
  (        :endif_993:) (28969)
  (        :endif_981:) (28969)
  (        :endif_923:) (28969)
  (        :endif_885:) (28969)
  (        :endif_866:) (28969)
  (        :endif_825:) (28969)
  (        :endif_756:) (28969)
  (        :endif_745:) (28969)
  (        :endif_659:) (28969)
  (        :endif_631:) (28969)
  (        :endif_616:) (28969)
  (        :endif_562:) (28969)
  (        :endif_531:) (28969)
  (        :endif_492:) (28969)
  (        :endif_454:) (28969)
  (        :endif_415:) (28969)
  (        :endif_404:) (28969)
  (                    1400:   return v) (28969)
  (         t1 = H[t0+5]〈v〉) (28969)
  a=r 0 (28969)
  a+= 5 (28971)
  d=a (28973)
  a=*d (28974)
  r=a 1 (28975)
  (         t2 = H[t0]〈〉) (28977)
  d=r 0 (28977)
  a=*d (28979)
  r=a 2 (28980)
  (         t0 = t0 - 1) (28982)
  a=r 0 (28982)
  a-- (28984)
  r=a 0 (28985)
  (         t0 = H[t0]〈〉) (28987)
  d=a (28987)
  a=*d (28988)
  r=a 0 (28989)
  (         goto find_label_ret_id) (28991)
  lj 62666 (28991)
  (insert return as it might not be done by the function:) (28994)
  (         t2 = H[t0]〈〉) (28994)
  d=a (28994)
  a=*d (28995)
  r=a 2 (28996)
  (         t0 = t0 - 1) (28998)
  a=r 0 (28998)
  a-- (29000)
  r=a 0 (29001)
  (         t0 = H[t0]〈〉) (29003)
  d=a (29003)
  a=*d (29004)
  r=a 0 (29005)
  (         goto find_label_ret_id) (29007)
  lj 62666 (29007)
  (         MarkTempVarEnd) (29010)
  (        :transformation_end~:) (29010)
  (                    1403: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH = alloc_pH〈25〉) (29010)
  (         H[t0+9]〈〉 = t0) (29010)
  a=r 0 (29010)
  a+= 9 (29012)
  d=a (29014)
  a=r 0 (29015)
  *d=a (29017)
  (saved bsp, return id:) (29018)
  (         H[t0+10]〈〉 = 110) (29018)
  d++ (29018)
  *d= 110 (29019)
  (push arguments:) (29021)
  (         H[t0+11]〈〉 = 25) (29021)
  d++ (29021)
  *d= 25 (29022)
  (         t0 = t0 + 10) (29024)
  c= 10 (29024)
  a+=c (29026)
  r=a 0 (29027)
  (         goto addr_alloc_pH) (29029)
  lj 1446 (29029)
  (        :return_id_110:) (29032)
  (         H[t0+9]〈BROTLI_DICTIONARY_OFFSETS_BY_LENGTH〉 = t1) (29032)
  a=r 0 (29032)
  a+= 9 (29034)
  d=a (29036)
  a=r 1 (29037)
  *d=a (29039)
  (                    1404: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[0] = 0) (29040)
  (         t1 = H[t0+9]〈BROTLI_DICTIONARY_OFFSETS_BY_LENGTH〉 + 0) (29040)
  c=0 (29040)
  a=*d (29041)
  a+=c (29042)
  r=a 1 (29043)
  (         H[t1]〈〉 = 0) (29045)
  d=a (29045)
  *d=0 (29046)
  (                    1405: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[1] = 0) (29047)
  (         t1 = t1 + 1) (29047)
  a++ (29047)
  r=a 1 (29048)
  (         H[t1]〈〉 = 0) (29050)
  d=a (29050)
  *d=0 (29051)
  (                    1406: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[2] = 0) (29052)
  (         t1 = t1 + 1) (29052)
  a++ (29052)
  r=a 1 (29053)
  (         H[t1]〈〉 = 0) (29055)
  d=a (29055)
  *d=0 (29056)
  (                    1407: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[3] = 0) (29057)
  (         t1 = t1 + 1) (29057)
  a++ (29057)
  r=a 1 (29058)
  (         H[t1]〈〉 = 0) (29060)
  d=a (29060)
  *d=0 (29061)
  (                    1408: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[4] = 0) (29062)
  (         t1 = t1 + 1) (29062)
  a++ (29062)
  r=a 1 (29063)
  (         H[t1]〈〉 = 0) (29065)
  d=a (29065)
  *d=0 (29066)
  (                    1409: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[5] = 4096) (29067)
  (         t1 = t1 + 1) (29067)
  a++ (29067)
  r=a 1 (29068)
  (         H[t1]〈〉 = 4096) (29070)
  d=a (29070)
  a= 16 (29071)
  a<<= 8 (29073)
  *d=a (29075)
  (                    1410: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[6] = 9216) (29076)
  (         t1 = t1 + 1) (29076)
  a=r 1 (29076)
  a++ (29078)
  r=a 1 (29079)
  (         H[t1]〈〉 = 9216) (29081)
  d=a (29081)
  a= 36 (29082)
  a<<= 8 (29084)
  *d=a (29086)
  (                    1411: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[7] = 21504) (29087)
  (         t1 = t1 + 1) (29087)
  a=r 1 (29087)
  a++ (29089)
  r=a 1 (29090)
  (         H[t1]〈〉 = 21504) (29092)
  d=a (29092)
  a= 84 (29093)
  a<<= 8 (29095)
  *d=a (29097)
  (                    1412: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[8] = 35840) (29098)
  (         t1 = t1 + 1) (29098)
  a=r 1 (29098)
  a++ (29100)
  r=a 1 (29101)
  (         H[t1]〈〉 = 35840) (29103)
  d=a (29103)
  a= 140 (29104)
  a<<= 8 (29106)
  *d=a (29108)
  (                    1413: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[9] = 44032) (29109)
  (         t1 = t1 + 1) (29109)
  a=r 1 (29109)
  a++ (29111)
  r=a 1 (29112)
  (         H[t1]〈〉 = 44032) (29114)
  d=a (29114)
  a= 172 (29115)
  a<<= 8 (29117)
  *d=a (29119)
  (                    1414: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[10] = 53248) (29120)
  (         t1 = t1 + 1) (29120)
  a=r 1 (29120)
  a++ (29122)
  r=a 1 (29123)
  (         H[t1]〈〉 = 53248) (29125)
  d=a (29125)
  a= 208 (29126)
  a<<= 8 (29128)
  *d=a (29130)
  (                    1415: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[11] = 63488) (29131)
  (         t1 = t1 + 1) (29131)
  a=r 1 (29131)
  a++ (29133)
  r=a 1 (29134)
  (         H[t1]〈〉 = 63488) (29136)
  d=a (29136)
  a= 248 (29137)
  a<<= 8 (29139)
  *d=a (29141)
  (                    1416: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[12] = 74752) (29142)
  (         t1 = t1 + 1) (29142)
  a=r 1 (29142)
  a++ (29144)
  r=a 1 (29145)
  (         H[t1]〈〉 = 74752) (29147)
  d=a (29147)
  a= 1 (29148)
  a<<= 8 (29150)
  a+= 36 (29152)
  a<<= 8 (29154)
  *d=a (29156)
  (                    1417: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[13] = 87040) (29157)
  (         t1 = t1 + 1) (29157)
  a=r 1 (29157)
  a++ (29159)
  r=a 1 (29160)
  (         H[t1]〈〉 = 87040) (29162)
  d=a (29162)
  a= 1 (29163)
  a<<= 8 (29165)
  a+= 84 (29167)
  a<<= 8 (29169)
  *d=a (29171)
  (                    1418: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[14] = 93696) (29172)
  (         t1 = t1 + 1) (29172)
  a=r 1 (29172)
  a++ (29174)
  r=a 1 (29175)
  (         H[t1]〈〉 = 93696) (29177)
  d=a (29177)
  a= 1 (29178)
  a<<= 8 (29180)
  a+= 110 (29182)
  a<<= 8 (29184)
  *d=a (29186)
  (                    1419: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[15] = 100864) (29187)
  (         t1 = t1 + 1) (29187)
  a=r 1 (29187)
  a++ (29189)
  r=a 1 (29190)
  (         H[t1]〈〉 = 100864) (29192)
  d=a (29192)
  a= 1 (29193)
  a<<= 8 (29195)
  a+= 138 (29197)
  a<<= 8 (29199)
  *d=a (29201)
  (                    1420: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[16] = 104704) (29202)
  (         t1 = t1 + 1) (29202)
  a=r 1 (29202)
  a++ (29204)
  r=a 1 (29205)
  (         H[t1]〈〉 = 104704) (29207)
  d=a (29207)
  a= 1 (29208)
  a<<= 8 (29210)
  a+= 153 (29212)
  a<<= 8 (29214)
  *d=a (29216)
  (                    1421: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[17] = 106752) (29217)
  (         t1 = t1 + 1) (29217)
  a=r 1 (29217)
  a++ (29219)
  r=a 1 (29220)
  (         H[t1]〈〉 = 106752) (29222)
  d=a (29222)
  a= 1 (29223)
  a<<= 8 (29225)
  a+= 161 (29227)
  a<<= 8 (29229)
  *d=a (29231)
  (                    1422: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[18] = 108928) (29232)
  (         t1 = t1 + 1) (29232)
  a=r 1 (29232)
  a++ (29234)
  r=a 1 (29235)
  (         H[t1]〈〉 = 108928) (29237)
  d=a (29237)
  a= 1 (29238)
  a<<= 8 (29240)
  a+= 169 (29242)
  a<<= 8 (29244)
  a+= 128 (29246)
  *d=a (29248)
  (                    1423: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[19] = 113536) (29249)
  (         t1 = t1 + 1) (29249)
  a=r 1 (29249)
  a++ (29251)
  r=a 1 (29252)
  (         H[t1]〈〉 = 113536) (29254)
  d=a (29254)
  a= 1 (29255)
  a<<= 8 (29257)
  a+= 187 (29259)
  a<<= 8 (29261)
  a+= 128 (29263)
  *d=a (29265)
  (                    1424: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[20] = 115968) (29266)
  (         t1 = t1 + 1) (29266)
  a=r 1 (29266)
  a++ (29268)
  r=a 1 (29269)
  (         H[t1]〈〉 = 115968) (29271)
  d=a (29271)
  a= 1 (29272)
  a<<= 8 (29274)
  a+= 197 (29276)
  a<<= 8 (29278)
  *d=a (29280)
  (                    1425: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[21] = 118528) (29281)
  (         t1 = t1 + 1) (29281)
  a=r 1 (29281)
  a++ (29283)
  r=a 1 (29284)
  (         H[t1]〈〉 = 118528) (29286)
  d=a (29286)
  a= 1 (29287)
  a<<= 8 (29289)
  a+= 207 (29291)
  a<<= 8 (29293)
  *d=a (29295)
  (                    1426: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[22] = 119872) (29296)
  (         t1 = t1 + 1) (29296)
  a=r 1 (29296)
  a++ (29298)
  r=a 1 (29299)
  (         H[t1]〈〉 = 119872) (29301)
  d=a (29301)
  a= 1 (29302)
  a<<= 8 (29304)
  a+= 212 (29306)
  a<<= 8 (29308)
  a+= 64 (29310)
  *d=a (29312)
  (                    1427: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[23] = 121280) (29313)
  (         t1 = t1 + 1) (29313)
  a=r 1 (29313)
  a++ (29315)
  r=a 1 (29316)
  (         H[t1]〈〉 = 121280) (29318)
  d=a (29318)
  a= 1 (29319)
  a<<= 8 (29321)
  a+= 217 (29323)
  a<<= 8 (29325)
  a+= 192 (29327)
  *d=a (29329)
  (                    1428: BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[24] = 122016) (29330)
  (         t1 = t1 + 1) (29330)
  a=r 1 (29330)
  a++ (29332)
  r=a 1 (29333)
  (         H[t1]〈〉 = 122016) (29335)
  d=a (29335)
  a= 1 (29336)
  a<<= 8 (29338)
  a+= 220 (29340)
  a<<= 8 (29342)
  a+= 160 (29344)
  *d=a (29346)
  (                    1430: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH = alloc_pM〈25〉) (29347)
  (         H[t0+10]〈〉 = t0) (29347)
  a=r 0 (29347)
  a+= 10 (29349)
  d=a (29351)
  a=r 0 (29352)
  *d=a (29354)
  (saved bsp, return id:) (29355)
  (         H[t0+11]〈〉 = 111) (29355)
  d++ (29355)
  *d= 111 (29356)
  (push arguments:) (29358)
  (         H[t0+12]〈〉 = 25) (29358)
  d++ (29358)
  *d= 25 (29359)
  (         t0 = t0 + 11) (29361)
  c= 11 (29361)
  a+=c (29363)
  r=a 0 (29364)
  (         goto addr_alloc_pM) (29366)
  lj 323 (29366)
  (        :return_id_111:) (29369)
  (         t1 = t1 | 2147483648) (29369)
  a= 1 (29369)
  a<<= 31 (29371)
  c=a (29373)
  a=r 1 (29374)
  a|=c (29376)
  r=a 1 (29377)
  (         H[t0+10]〈BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH〉 = t1) (29379)
  a=r 0 (29379)
  a+= 10 (29381)
  d=a (29383)
  a=r 1 (29384)
  *d=a (29386)
  (                    1431: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[0] = 0) (29387)
  (         t1 = H[t0+10]〈BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH〉 & 2147483647) (29387)
  a=0 (29387)
  a-- (29388)
  a>>= 1 (29389)
  c=a (29391)
  a=*d (29392)
  a&=c (29393)
  r=a 1 (29394)
  (         t1 = t1 + 0) (29396)
  (         M[t1] = 0) (29396)
  c=a (29396)
  *c=0 (29397)
  (                    1432: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[1] = 0) (29398)
  c++ (29398)
  *c=0 (29399)
  (                    1433: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[2] = 0) (29400)
  c++ (29400)
  *c=0 (29401)
  (                    1434: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[3] = 0) (29402)
  c++ (29402)
  *c=0 (29403)
  (                    1435: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[4] = 10) (29404)
  c++ (29404)
  *c= 10 (29405)
  (                    1436: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[5] = 10) (29407)
  c++ (29407)
  *c= 10 (29408)
  (                    1437: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[6] = 11) (29410)
  c++ (29410)
  *c= 11 (29411)
  (                    1438: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[7] = 11) (29413)
  c++ (29413)
  *c= 11 (29414)
  (                    1439: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[8] = 10) (29416)
  c++ (29416)
  *c= 10 (29417)
  (                    1440: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[9] = 10) (29419)
  c++ (29419)
  *c= 10 (29420)
  (                    1441: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[10] = 10) (29422)
  c++ (29422)
  *c= 10 (29423)
  (                    1442: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[11] = 10) (29425)
  c++ (29425)
  *c= 10 (29426)
  (                    1443: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[12] = 10) (29428)
  c++ (29428)
  *c= 10 (29429)
  (                    1444: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[13] = 9) (29431)
  c++ (29431)
  *c= 9 (29432)
  (                    1445: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[14] = 9) (29434)
  c++ (29434)
  *c= 9 (29435)
  (                    1446: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[15] = 8) (29437)
  c++ (29437)
  *c= 8 (29438)
  (                    1447: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[16] = 7) (29440)
  c++ (29440)
  *c= 7 (29441)
  (                    1448: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[17] = 7) (29443)
  c++ (29443)
  *c= 7 (29444)
  (                    1449: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[18] = 8) (29446)
  c++ (29446)
  *c= 8 (29447)
  (                    1450: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[19] = 7) (29449)
  c++ (29449)
  *c= 7 (29450)
  (                    1451: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[20] = 7) (29452)
  c++ (29452)
  *c= 7 (29453)
  (                    1452: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[21] = 6) (29455)
  c++ (29455)
  *c= 6 (29456)
  (                    1453: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[22] = 6) (29458)
  c++ (29458)
  *c= 6 (29459)
  (                    1454: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[23] = 5) (29461)
  c++ (29461)
  *c= 5 (29462)
  (                    1455: BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[24] = 5) (29464)
  c++ (29464)
  *c= 5 (29465)
  a=c (29467)
  r=a 1 (29468)
  (                    1457: BROTLI_DICTIONARY = NONE) (29470)
  (         H[t0+11]〈BROTLI_DICTIONARY〉 = 4294967295) (29470)
  d++ (29470)
  *d=0 (29471)
  *d-- (29472)
  (                    1461: LUT_0 = alloc_pM〈256〉) (29473)
  (         H[t0+12]〈〉 = t0) (29473)
  d++ (29473)
  a=r 0 (29474)
  *d=a (29476)
  (saved bsp, return id:) (29477)
  (         H[t0+13]〈〉 = 112) (29477)
  d++ (29477)
  *d= 112 (29478)
  (push arguments:) (29480)
  (         H[t0+14]〈〉 = 256) (29480)
  d++ (29480)
  a= 1 (29481)
  a<<= 8 (29483)
  *d=a (29485)
  (         t0 = t0 + 13) (29486)
  c= 13 (29486)
  a=r 0 (29488)
  a+=c (29490)
  r=a 0 (29491)
  (         goto addr_alloc_pM) (29493)
  lj 323 (29493)
  (        :return_id_112:) (29496)
  (         t1 = t1 | 2147483648) (29496)
  a= 1 (29496)
  a<<= 31 (29498)
  c=a (29500)
  a=r 1 (29501)
  a|=c (29503)
  r=a 1 (29504)
  (         H[t0+12]〈LUT_0〉 = t1) (29506)
  a=r 0 (29506)
  a+= 12 (29508)
  d=a (29510)
  a=r 1 (29511)
  *d=a (29513)
  (                    1462: LUT_0[0] = 0) (29514)
  (         t1 = H[t0+12]〈LUT_0〉 & 2147483647) (29514)
  a=0 (29514)
  a-- (29515)
  a>>= 1 (29516)
  c=a (29518)
  a=*d (29519)
  a&=c (29520)
  r=a 1 (29521)
  (         t1 = t1 + 0) (29523)
  (         M[t1] = 0) (29523)
  c=a (29523)
  *c=0 (29524)
  (                    1463: LUT_0[1] = 0) (29525)
  c++ (29525)
  *c=0 (29526)
  (                    1464: LUT_0[2] = 0) (29527)
  c++ (29527)
  *c=0 (29528)
  (                    1465: LUT_0[3] = 0) (29529)
  c++ (29529)
  *c=0 (29530)
  (                    1466: LUT_0[4] = 0) (29531)
  c++ (29531)
  *c=0 (29532)
  (                    1467: LUT_0[5] = 0) (29533)
  c++ (29533)
  *c=0 (29534)
  (                    1468: LUT_0[6] = 0) (29535)
  c++ (29535)
  *c=0 (29536)
  (                    1469: LUT_0[7] = 0) (29537)
  c++ (29537)
  *c=0 (29538)
  (                    1470: LUT_0[8] = 0) (29539)
  c++ (29539)
  *c=0 (29540)
  (                    1471: LUT_0[9] = 4) (29541)
  c++ (29541)
  *c= 4 (29542)
  (                    1472: LUT_0[10] = 4) (29544)
  c++ (29544)
  *c= 4 (29545)
  (                    1473: LUT_0[11] = 0) (29547)
  c++ (29547)
  *c=0 (29548)
  (                    1474: LUT_0[12] = 0) (29549)
  c++ (29549)
  *c=0 (29550)
  (                    1475: LUT_0[13] = 4) (29551)
  c++ (29551)
  *c= 4 (29552)
  (                    1476: LUT_0[14] = 0) (29554)
  c++ (29554)
  *c=0 (29555)
  (                    1477: LUT_0[15] = 0) (29556)
  c++ (29556)
  *c=0 (29557)
  (                    1478: LUT_0[16] = 0) (29558)
  c++ (29558)
  *c=0 (29559)
  (                    1479: LUT_0[17] = 0) (29560)
  c++ (29560)
  *c=0 (29561)
  (                    1480: LUT_0[18] = 0) (29562)
  c++ (29562)
  *c=0 (29563)
  (                    1481: LUT_0[19] = 0) (29564)
  c++ (29564)
  *c=0 (29565)
  (                    1482: LUT_0[20] = 0) (29566)
  c++ (29566)
  *c=0 (29567)
  (                    1483: LUT_0[21] = 0) (29568)
  c++ (29568)
  *c=0 (29569)
  (                    1484: LUT_0[22] = 0) (29570)
  c++ (29570)
  *c=0 (29571)
  (                    1485: LUT_0[23] = 0) (29572)
  c++ (29572)
  *c=0 (29573)
  (                    1486: LUT_0[24] = 0) (29574)
  c++ (29574)
  *c=0 (29575)
  (                    1487: LUT_0[25] = 0) (29576)
  c++ (29576)
  *c=0 (29577)
  (                    1488: LUT_0[26] = 0) (29578)
  c++ (29578)
  *c=0 (29579)
  (                    1489: LUT_0[27] = 0) (29580)
  c++ (29580)
  *c=0 (29581)
  (                    1490: LUT_0[28] = 0) (29582)
  c++ (29582)
  *c=0 (29583)
  (                    1491: LUT_0[29] = 0) (29584)
  c++ (29584)
  *c=0 (29585)
  (                    1492: LUT_0[30] = 0) (29586)
  c++ (29586)
  *c=0 (29587)
  (                    1493: LUT_0[31] = 0) (29588)
  c++ (29588)
  *c=0 (29589)
  (                    1494: LUT_0[32] = 8) (29590)
  c++ (29590)
  *c= 8 (29591)
  (                    1495: LUT_0[33] = 12) (29593)
  c++ (29593)
  *c= 12 (29594)
  (                    1496: LUT_0[34] = 16) (29596)
  c++ (29596)
  *c= 16 (29597)
  (                    1497: LUT_0[35] = 12) (29599)
  c++ (29599)
  *c= 12 (29600)
  (                    1498: LUT_0[36] = 12) (29602)
  c++ (29602)
  *c= 12 (29603)
  (                    1499: LUT_0[37] = 20) (29605)
  c++ (29605)
  *c= 20 (29606)
  (                    1500: LUT_0[38] = 12) (29608)
  c++ (29608)
  *c= 12 (29609)
  (                    1501: LUT_0[39] = 16) (29611)
  c++ (29611)
  *c= 16 (29612)
  (                    1502: LUT_0[40] = 24) (29614)
  c++ (29614)
  *c= 24 (29615)
  (                    1503: LUT_0[41] = 28) (29617)
  c++ (29617)
  *c= 28 (29618)
  (                    1504: LUT_0[42] = 12) (29620)
  c++ (29620)
  *c= 12 (29621)
  (                    1505: LUT_0[43] = 12) (29623)
  c++ (29623)
  *c= 12 (29624)
  (                    1506: LUT_0[44] = 32) (29626)
  c++ (29626)
  *c= 32 (29627)
  (                    1507: LUT_0[45] = 12) (29629)
  c++ (29629)
  *c= 12 (29630)
  (                    1508: LUT_0[46] = 36) (29632)
  c++ (29632)
  *c= 36 (29633)
  (                    1509: LUT_0[47] = 12) (29635)
  c++ (29635)
  *c= 12 (29636)
  (                    1510: LUT_0[48] = 44) (29638)
  c++ (29638)
  *c= 44 (29639)
  (                    1511: LUT_0[49] = 44) (29641)
  c++ (29641)
  *c= 44 (29642)
  (                    1512: LUT_0[50] = 44) (29644)
  c++ (29644)
  *c= 44 (29645)
  (                    1513: LUT_0[51] = 44) (29647)
  c++ (29647)
  *c= 44 (29648)
  (                    1514: LUT_0[52] = 44) (29650)
  c++ (29650)
  *c= 44 (29651)
  (                    1515: LUT_0[53] = 44) (29653)
  c++ (29653)
  *c= 44 (29654)
  (                    1516: LUT_0[54] = 44) (29656)
  c++ (29656)
  *c= 44 (29657)
  (                    1517: LUT_0[55] = 44) (29659)
  c++ (29659)
  *c= 44 (29660)
  (                    1518: LUT_0[56] = 44) (29662)
  c++ (29662)
  *c= 44 (29663)
  (                    1519: LUT_0[57] = 44) (29665)
  c++ (29665)
  *c= 44 (29666)
  (                    1520: LUT_0[58] = 32) (29668)
  c++ (29668)
  *c= 32 (29669)
  (                    1521: LUT_0[59] = 32) (29671)
  c++ (29671)
  *c= 32 (29672)
  (                    1522: LUT_0[60] = 24) (29674)
  c++ (29674)
  *c= 24 (29675)
  (                    1523: LUT_0[61] = 40) (29677)
  c++ (29677)
  *c= 40 (29678)
  (                    1524: LUT_0[62] = 28) (29680)
  c++ (29680)
  *c= 28 (29681)
  (                    1525: LUT_0[63] = 12) (29683)
  c++ (29683)
  *c= 12 (29684)
  (                    1526: LUT_0[64] = 12) (29686)
  c++ (29686)
  *c= 12 (29687)
  (                    1527: LUT_0[65] = 48) (29689)
  c++ (29689)
  *c= 48 (29690)
  (                    1528: LUT_0[66] = 52) (29692)
  c++ (29692)
  *c= 52 (29693)
  (                    1529: LUT_0[67] = 52) (29695)
  c++ (29695)
  *c= 52 (29696)
  (                    1530: LUT_0[68] = 52) (29698)
  c++ (29698)
  *c= 52 (29699)
  (                    1531: LUT_0[69] = 48) (29701)
  c++ (29701)
  *c= 48 (29702)
  (                    1532: LUT_0[70] = 52) (29704)
  c++ (29704)
  *c= 52 (29705)
  (                    1533: LUT_0[71] = 52) (29707)
  c++ (29707)
  *c= 52 (29708)
  (                    1534: LUT_0[72] = 52) (29710)
  c++ (29710)
  *c= 52 (29711)
  (                    1535: LUT_0[73] = 48) (29713)
  c++ (29713)
  *c= 48 (29714)
  (                    1536: LUT_0[74] = 52) (29716)
  c++ (29716)
  *c= 52 (29717)
  (                    1537: LUT_0[75] = 52) (29719)
  c++ (29719)
  *c= 52 (29720)
  (                    1538: LUT_0[76] = 52) (29722)
  c++ (29722)
  *c= 52 (29723)
  (                    1539: LUT_0[77] = 52) (29725)
  c++ (29725)
  *c= 52 (29726)
  (                    1540: LUT_0[78] = 52) (29728)
  c++ (29728)
  *c= 52 (29729)
  (                    1541: LUT_0[79] = 48) (29731)
  c++ (29731)
  *c= 48 (29732)
  (                    1542: LUT_0[80] = 52) (29734)
  c++ (29734)
  *c= 52 (29735)
  (                    1543: LUT_0[81] = 52) (29737)
  c++ (29737)
  *c= 52 (29738)
  (                    1544: LUT_0[82] = 52) (29740)
  c++ (29740)
  *c= 52 (29741)
  (                    1545: LUT_0[83] = 52) (29743)
  c++ (29743)
  *c= 52 (29744)
  (                    1546: LUT_0[84] = 52) (29746)
  c++ (29746)
  *c= 52 (29747)
  (                    1547: LUT_0[85] = 48) (29749)
  c++ (29749)
  *c= 48 (29750)
  (                    1548: LUT_0[86] = 52) (29752)
  c++ (29752)
  *c= 52 (29753)
  (                    1549: LUT_0[87] = 52) (29755)
  c++ (29755)
  *c= 52 (29756)
  (                    1550: LUT_0[88] = 52) (29758)
  c++ (29758)
  *c= 52 (29759)
  (                    1551: LUT_0[89] = 52) (29761)
  c++ (29761)
  *c= 52 (29762)
  (                    1552: LUT_0[90] = 52) (29764)
  c++ (29764)
  *c= 52 (29765)
  (                    1553: LUT_0[91] = 24) (29767)
  c++ (29767)
  *c= 24 (29768)
  (                    1554: LUT_0[92] = 12) (29770)
  c++ (29770)
  *c= 12 (29771)
  (                    1555: LUT_0[93] = 28) (29773)
  c++ (29773)
  *c= 28 (29774)
  (                    1556: LUT_0[94] = 12) (29776)
  c++ (29776)
  *c= 12 (29777)
  (                    1557: LUT_0[95] = 12) (29779)
  c++ (29779)
  *c= 12 (29780)
  (                    1558: LUT_0[96] = 12) (29782)
  c++ (29782)
  *c= 12 (29783)
  (                    1559: LUT_0[97] = 56) (29785)
  c++ (29785)
  *c= 56 (29786)
  (                    1560: LUT_0[98] = 60) (29788)
  c++ (29788)
  *c= 60 (29789)
  (                    1561: LUT_0[99] = 60) (29791)
  c++ (29791)
  *c= 60 (29792)
  (                    1562: LUT_0[100] = 60) (29794)
  c++ (29794)
  *c= 60 (29795)
  (                    1563: LUT_0[101] = 56) (29797)
  c++ (29797)
  *c= 56 (29798)
  (                    1564: LUT_0[102] = 60) (29800)
  c++ (29800)
  *c= 60 (29801)
  (                    1565: LUT_0[103] = 60) (29803)
  c++ (29803)
  *c= 60 (29804)
  (                    1566: LUT_0[104] = 60) (29806)
  c++ (29806)
  *c= 60 (29807)
  (                    1567: LUT_0[105] = 56) (29809)
  c++ (29809)
  *c= 56 (29810)
  (                    1568: LUT_0[106] = 60) (29812)
  c++ (29812)
  *c= 60 (29813)
  (                    1569: LUT_0[107] = 60) (29815)
  c++ (29815)
  *c= 60 (29816)
  (                    1570: LUT_0[108] = 60) (29818)
  c++ (29818)
  *c= 60 (29819)
  (                    1571: LUT_0[109] = 60) (29821)
  c++ (29821)
  *c= 60 (29822)
  (                    1572: LUT_0[110] = 60) (29824)
  c++ (29824)
  *c= 60 (29825)
  (                    1573: LUT_0[111] = 56) (29827)
  c++ (29827)
  *c= 56 (29828)
  (                    1574: LUT_0[112] = 60) (29830)
  c++ (29830)
  *c= 60 (29831)
  (                    1575: LUT_0[113] = 60) (29833)
  c++ (29833)
  *c= 60 (29834)
  (                    1576: LUT_0[114] = 60) (29836)
  c++ (29836)
  *c= 60 (29837)
  (                    1577: LUT_0[115] = 60) (29839)
  c++ (29839)
  *c= 60 (29840)
  (                    1578: LUT_0[116] = 60) (29842)
  c++ (29842)
  *c= 60 (29843)
  (                    1579: LUT_0[117] = 56) (29845)
  c++ (29845)
  *c= 56 (29846)
  (                    1580: LUT_0[118] = 60) (29848)
  c++ (29848)
  *c= 60 (29849)
  (                    1581: LUT_0[119] = 60) (29851)
  c++ (29851)
  *c= 60 (29852)
  (                    1582: LUT_0[120] = 60) (29854)
  c++ (29854)
  *c= 60 (29855)
  (                    1583: LUT_0[121] = 60) (29857)
  c++ (29857)
  *c= 60 (29858)
  (                    1584: LUT_0[122] = 60) (29860)
  c++ (29860)
  *c= 60 (29861)
  (                    1585: LUT_0[123] = 24) (29863)
  c++ (29863)
  *c= 24 (29864)
  (                    1586: LUT_0[124] = 12) (29866)
  c++ (29866)
  *c= 12 (29867)
  (                    1587: LUT_0[125] = 28) (29869)
  c++ (29869)
  *c= 28 (29870)
  (                    1588: LUT_0[126] = 12) (29872)
  c++ (29872)
  *c= 12 (29873)
  (                    1589: LUT_0[127] = 0) (29875)
  c++ (29875)
  *c=0 (29876)
  (                    1590: LUT_0[128] = 0) (29877)
  c++ (29877)
  *c=0 (29878)
  (                    1591: LUT_0[129] = 1) (29879)
  c++ (29879)
  *c= 1 (29880)
  (                    1592: LUT_0[130] = 0) (29882)
  c++ (29882)
  *c=0 (29883)
  (                    1593: LUT_0[131] = 1) (29884)
  c++ (29884)
  *c= 1 (29885)
  (                    1594: LUT_0[132] = 0) (29887)
  c++ (29887)
  *c=0 (29888)
  (                    1595: LUT_0[133] = 1) (29889)
  c++ (29889)
  *c= 1 (29890)
  (                    1596: LUT_0[134] = 0) (29892)
  c++ (29892)
  *c=0 (29893)
  (                    1597: LUT_0[135] = 1) (29894)
  c++ (29894)
  *c= 1 (29895)
  (                    1598: LUT_0[136] = 0) (29897)
  c++ (29897)
  *c=0 (29898)
  (                    1599: LUT_0[137] = 1) (29899)
  c++ (29899)
  *c= 1 (29900)
  (                    1600: LUT_0[138] = 0) (29902)
  c++ (29902)
  *c=0 (29903)
  (                    1601: LUT_0[139] = 1) (29904)
  c++ (29904)
  *c= 1 (29905)
  (                    1602: LUT_0[140] = 0) (29907)
  c++ (29907)
  *c=0 (29908)
  (                    1603: LUT_0[141] = 1) (29909)
  c++ (29909)
  *c= 1 (29910)
  (                    1604: LUT_0[142] = 0) (29912)
  c++ (29912)
  *c=0 (29913)
  (                    1605: LUT_0[143] = 1) (29914)
  c++ (29914)
  *c= 1 (29915)
  (                    1606: LUT_0[144] = 0) (29917)
  c++ (29917)
  *c=0 (29918)
  (                    1607: LUT_0[145] = 1) (29919)
  c++ (29919)
  *c= 1 (29920)
  (                    1608: LUT_0[146] = 0) (29922)
  c++ (29922)
  *c=0 (29923)
  (                    1609: LUT_0[147] = 1) (29924)
  c++ (29924)
  *c= 1 (29925)
  (                    1610: LUT_0[148] = 0) (29927)
  c++ (29927)
  *c=0 (29928)
  (                    1611: LUT_0[149] = 1) (29929)
  c++ (29929)
  *c= 1 (29930)
  (                    1612: LUT_0[150] = 0) (29932)
  c++ (29932)
  *c=0 (29933)
  (                    1613: LUT_0[151] = 1) (29934)
  c++ (29934)
  *c= 1 (29935)
  (                    1614: LUT_0[152] = 0) (29937)
  c++ (29937)
  *c=0 (29938)
  (                    1615: LUT_0[153] = 1) (29939)
  c++ (29939)
  *c= 1 (29940)
  (                    1616: LUT_0[154] = 0) (29942)
  c++ (29942)
  *c=0 (29943)
  (                    1617: LUT_0[155] = 1) (29944)
  c++ (29944)
  *c= 1 (29945)
  (                    1618: LUT_0[156] = 0) (29947)
  c++ (29947)
  *c=0 (29948)
  (                    1619: LUT_0[157] = 1) (29949)
  c++ (29949)
  *c= 1 (29950)
  (                    1620: LUT_0[158] = 0) (29952)
  c++ (29952)
  *c=0 (29953)
  (                    1621: LUT_0[159] = 1) (29954)
  c++ (29954)
  *c= 1 (29955)
  (                    1622: LUT_0[160] = 0) (29957)
  c++ (29957)
  *c=0 (29958)
  (                    1623: LUT_0[161] = 1) (29959)
  c++ (29959)
  *c= 1 (29960)
  (                    1624: LUT_0[162] = 0) (29962)
  c++ (29962)
  *c=0 (29963)
  (                    1625: LUT_0[163] = 1) (29964)
  c++ (29964)
  *c= 1 (29965)
  (                    1626: LUT_0[164] = 0) (29967)
  c++ (29967)
  *c=0 (29968)
  (                    1627: LUT_0[165] = 1) (29969)
  c++ (29969)
  *c= 1 (29970)
  (                    1628: LUT_0[166] = 0) (29972)
  c++ (29972)
  *c=0 (29973)
  (                    1629: LUT_0[167] = 1) (29974)
  c++ (29974)
  *c= 1 (29975)
  (                    1630: LUT_0[168] = 0) (29977)
  c++ (29977)
  *c=0 (29978)
  (                    1631: LUT_0[169] = 1) (29979)
  c++ (29979)
  *c= 1 (29980)
  (                    1632: LUT_0[170] = 0) (29982)
  c++ (29982)
  *c=0 (29983)
  (                    1633: LUT_0[171] = 1) (29984)
  c++ (29984)
  *c= 1 (29985)
  (                    1634: LUT_0[172] = 0) (29987)
  c++ (29987)
  *c=0 (29988)
  (                    1635: LUT_0[173] = 1) (29989)
  c++ (29989)
  *c= 1 (29990)
  (                    1636: LUT_0[174] = 0) (29992)
  c++ (29992)
  *c=0 (29993)
  (                    1637: LUT_0[175] = 1) (29994)
  c++ (29994)
  *c= 1 (29995)
  (                    1638: LUT_0[176] = 0) (29997)
  c++ (29997)
  *c=0 (29998)
  (                    1639: LUT_0[177] = 1) (29999)
  c++ (29999)
  *c= 1 (30000)
  (                    1640: LUT_0[178] = 0) (30002)
  c++ (30002)
  *c=0 (30003)
  (                    1641: LUT_0[179] = 1) (30004)
  c++ (30004)
  *c= 1 (30005)
  (                    1642: LUT_0[180] = 0) (30007)
  c++ (30007)
  *c=0 (30008)
  (                    1643: LUT_0[181] = 1) (30009)
  c++ (30009)
  *c= 1 (30010)
  (                    1644: LUT_0[182] = 0) (30012)
  c++ (30012)
  *c=0 (30013)
  (                    1645: LUT_0[183] = 1) (30014)
  c++ (30014)
  *c= 1 (30015)
  (                    1646: LUT_0[184] = 0) (30017)
  c++ (30017)
  *c=0 (30018)
  (                    1647: LUT_0[185] = 1) (30019)
  c++ (30019)
  *c= 1 (30020)
  (                    1648: LUT_0[186] = 0) (30022)
  c++ (30022)
  *c=0 (30023)
  (                    1649: LUT_0[187] = 1) (30024)
  c++ (30024)
  *c= 1 (30025)
  (                    1650: LUT_0[188] = 0) (30027)
  c++ (30027)
  *c=0 (30028)
  (                    1651: LUT_0[189] = 1) (30029)
  c++ (30029)
  *c= 1 (30030)
  (                    1652: LUT_0[190] = 0) (30032)
  c++ (30032)
  *c=0 (30033)
  (                    1653: LUT_0[191] = 1) (30034)
  c++ (30034)
  *c= 1 (30035)
  (                    1654: LUT_0[192] = 2) (30037)
  c++ (30037)
  *c= 2 (30038)
  (                    1655: LUT_0[193] = 3) (30040)
  c++ (30040)
  *c= 3 (30041)
  (                    1656: LUT_0[194] = 2) (30043)
  c++ (30043)
  *c= 2 (30044)
  (                    1657: LUT_0[195] = 3) (30046)
  c++ (30046)
  *c= 3 (30047)
  (                    1658: LUT_0[196] = 2) (30049)
  c++ (30049)
  *c= 2 (30050)
  (                    1659: LUT_0[197] = 3) (30052)
  c++ (30052)
  *c= 3 (30053)
  (                    1660: LUT_0[198] = 2) (30055)
  c++ (30055)
  *c= 2 (30056)
  (                    1661: LUT_0[199] = 3) (30058)
  c++ (30058)
  *c= 3 (30059)
  (                    1662: LUT_0[200] = 2) (30061)
  c++ (30061)
  *c= 2 (30062)
  (                    1663: LUT_0[201] = 3) (30064)
  c++ (30064)
  *c= 3 (30065)
  (                    1664: LUT_0[202] = 2) (30067)
  c++ (30067)
  *c= 2 (30068)
  (                    1665: LUT_0[203] = 3) (30070)
  c++ (30070)
  *c= 3 (30071)
  (                    1666: LUT_0[204] = 2) (30073)
  c++ (30073)
  *c= 2 (30074)
  (                    1667: LUT_0[205] = 3) (30076)
  c++ (30076)
  *c= 3 (30077)
  (                    1668: LUT_0[206] = 2) (30079)
  c++ (30079)
  *c= 2 (30080)
  (                    1669: LUT_0[207] = 3) (30082)
  c++ (30082)
  *c= 3 (30083)
  (                    1670: LUT_0[208] = 2) (30085)
  c++ (30085)
  *c= 2 (30086)
  (                    1671: LUT_0[209] = 3) (30088)
  c++ (30088)
  *c= 3 (30089)
  (                    1672: LUT_0[210] = 2) (30091)
  c++ (30091)
  *c= 2 (30092)
  (                    1673: LUT_0[211] = 3) (30094)
  c++ (30094)
  *c= 3 (30095)
  (                    1674: LUT_0[212] = 2) (30097)
  c++ (30097)
  *c= 2 (30098)
  (                    1675: LUT_0[213] = 3) (30100)
  c++ (30100)
  *c= 3 (30101)
  (                    1676: LUT_0[214] = 2) (30103)
  c++ (30103)
  *c= 2 (30104)
  (                    1677: LUT_0[215] = 3) (30106)
  c++ (30106)
  *c= 3 (30107)
  (                    1678: LUT_0[216] = 2) (30109)
  c++ (30109)
  *c= 2 (30110)
  (                    1679: LUT_0[217] = 3) (30112)
  c++ (30112)
  *c= 3 (30113)
  (                    1680: LUT_0[218] = 2) (30115)
  c++ (30115)
  *c= 2 (30116)
  (                    1681: LUT_0[219] = 3) (30118)
  c++ (30118)
  *c= 3 (30119)
  (                    1682: LUT_0[220] = 2) (30121)
  c++ (30121)
  *c= 2 (30122)
  (                    1683: LUT_0[221] = 3) (30124)
  c++ (30124)
  *c= 3 (30125)
  (                    1684: LUT_0[222] = 2) (30127)
  c++ (30127)
  *c= 2 (30128)
  (                    1685: LUT_0[223] = 3) (30130)
  c++ (30130)
  *c= 3 (30131)
  (                    1686: LUT_0[224] = 2) (30133)
  c++ (30133)
  *c= 2 (30134)
  (                    1687: LUT_0[225] = 3) (30136)
  c++ (30136)
  *c= 3 (30137)
  (                    1688: LUT_0[226] = 2) (30139)
  c++ (30139)
  *c= 2 (30140)
  (                    1689: LUT_0[227] = 3) (30142)
  c++ (30142)
  *c= 3 (30143)
  (                    1690: LUT_0[228] = 2) (30145)
  c++ (30145)
  *c= 2 (30146)
  (                    1691: LUT_0[229] = 3) (30148)
  c++ (30148)
  *c= 3 (30149)
  (                    1692: LUT_0[230] = 2) (30151)
  c++ (30151)
  *c= 2 (30152)
  (                    1693: LUT_0[231] = 3) (30154)
  c++ (30154)
  *c= 3 (30155)
  (                    1694: LUT_0[232] = 2) (30157)
  c++ (30157)
  *c= 2 (30158)
  (                    1695: LUT_0[233] = 3) (30160)
  c++ (30160)
  *c= 3 (30161)
  (                    1696: LUT_0[234] = 2) (30163)
  c++ (30163)
  *c= 2 (30164)
  (                    1697: LUT_0[235] = 3) (30166)
  c++ (30166)
  *c= 3 (30167)
  (                    1698: LUT_0[236] = 2) (30169)
  c++ (30169)
  *c= 2 (30170)
  (                    1699: LUT_0[237] = 3) (30172)
  c++ (30172)
  *c= 3 (30173)
  (                    1700: LUT_0[238] = 2) (30175)
  c++ (30175)
  *c= 2 (30176)
  (                    1701: LUT_0[239] = 3) (30178)
  c++ (30178)
  *c= 3 (30179)
  (                    1702: LUT_0[240] = 2) (30181)
  c++ (30181)
  *c= 2 (30182)
  (                    1703: LUT_0[241] = 3) (30184)
  c++ (30184)
  *c= 3 (30185)
  (                    1704: LUT_0[242] = 2) (30187)
  c++ (30187)
  *c= 2 (30188)
  (                    1705: LUT_0[243] = 3) (30190)
  c++ (30190)
  *c= 3 (30191)
  (                    1706: LUT_0[244] = 2) (30193)
  c++ (30193)
  *c= 2 (30194)
  (                    1707: LUT_0[245] = 3) (30196)
  c++ (30196)
  *c= 3 (30197)
  (                    1708: LUT_0[246] = 2) (30199)
  c++ (30199)
  *c= 2 (30200)
  (                    1709: LUT_0[247] = 3) (30202)
  c++ (30202)
  *c= 3 (30203)
  (                    1710: LUT_0[248] = 2) (30205)
  c++ (30205)
  *c= 2 (30206)
  (                    1711: LUT_0[249] = 3) (30208)
  c++ (30208)
  *c= 3 (30209)
  (                    1712: LUT_0[250] = 2) (30211)
  c++ (30211)
  *c= 2 (30212)
  (                    1713: LUT_0[251] = 3) (30214)
  c++ (30214)
  *c= 3 (30215)
  (                    1714: LUT_0[252] = 2) (30217)
  c++ (30217)
  *c= 2 (30218)
  (                    1715: LUT_0[253] = 3) (30220)
  c++ (30220)
  *c= 3 (30221)
  (                    1716: LUT_0[254] = 2) (30223)
  c++ (30223)
  *c= 2 (30224)
  (                    1717: LUT_0[255] = 3) (30226)
  c++ (30226)
  *c= 3 (30227)
  a=c (30229)
  r=a 1 (30230)
  (                    1719: LUT_1 = alloc_pM〈256〉) (30232)
  (         H[t0+13]〈〉 = t0) (30232)
  d++ (30232)
  a=r 0 (30233)
  *d=a (30235)
  (saved bsp, return id:) (30236)
  (         H[t0+14]〈〉 = 113) (30236)
  d++ (30236)
  *d= 113 (30237)
  (push arguments:) (30239)
  (         H[t0+15]〈〉 = 256) (30239)
  d++ (30239)
  a= 1 (30240)
  a<<= 8 (30242)
  *d=a (30244)
  (         t0 = t0 + 14) (30245)
  c= 14 (30245)
  a=r 0 (30247)
  a+=c (30249)
  r=a 0 (30250)
  (         goto addr_alloc_pM) (30252)
  lj 323 (30252)
  (        :return_id_113:) (30255)
  (         t1 = t1 | 2147483648) (30255)
  a= 1 (30255)
  a<<= 31 (30257)
  c=a (30259)
  a=r 1 (30260)
  a|=c (30262)
  r=a 1 (30263)
  (         H[t0+13]〈LUT_1〉 = t1) (30265)
  a=r 0 (30265)
  a+= 13 (30267)
  d=a (30269)
  a=r 1 (30270)
  *d=a (30272)
  (                    1720: LUT_1[0] = 0) (30273)
  (         t1 = H[t0+13]〈LUT_1〉 & 2147483647) (30273)
  a=0 (30273)
  a-- (30274)
  a>>= 1 (30275)
  c=a (30277)
  a=*d (30278)
  a&=c (30279)
  r=a 1 (30280)
  (         t1 = t1 + 0) (30282)
  (         M[t1] = 0) (30282)
  c=a (30282)
  *c=0 (30283)
  (                    1721: LUT_1[1] = 0) (30284)
  c++ (30284)
  *c=0 (30285)
  (                    1722: LUT_1[2] = 0) (30286)
  c++ (30286)
  *c=0 (30287)
  (                    1723: LUT_1[3] = 0) (30288)
  c++ (30288)
  *c=0 (30289)
  (                    1724: LUT_1[4] = 0) (30290)
  c++ (30290)
  *c=0 (30291)
  (                    1725: LUT_1[5] = 0) (30292)
  c++ (30292)
  *c=0 (30293)
  (                    1726: LUT_1[6] = 0) (30294)
  c++ (30294)
  *c=0 (30295)
  (                    1727: LUT_1[7] = 0) (30296)
  c++ (30296)
  *c=0 (30297)
  (                    1728: LUT_1[8] = 0) (30298)
  c++ (30298)
  *c=0 (30299)
  (                    1729: LUT_1[9] = 0) (30300)
  c++ (30300)
  *c=0 (30301)
  (                    1730: LUT_1[10] = 0) (30302)
  c++ (30302)
  *c=0 (30303)
  (                    1731: LUT_1[11] = 0) (30304)
  c++ (30304)
  *c=0 (30305)
  (                    1732: LUT_1[12] = 0) (30306)
  c++ (30306)
  *c=0 (30307)
  (                    1733: LUT_1[13] = 0) (30308)
  c++ (30308)
  *c=0 (30309)
  (                    1734: LUT_1[14] = 0) (30310)
  c++ (30310)
  *c=0 (30311)
  (                    1735: LUT_1[15] = 0) (30312)
  c++ (30312)
  *c=0 (30313)
  (                    1736: LUT_1[16] = 0) (30314)
  c++ (30314)
  *c=0 (30315)
  (                    1737: LUT_1[17] = 0) (30316)
  c++ (30316)
  *c=0 (30317)
  (                    1738: LUT_1[18] = 0) (30318)
  c++ (30318)
  *c=0 (30319)
  (                    1739: LUT_1[19] = 0) (30320)
  c++ (30320)
  *c=0 (30321)
  (                    1740: LUT_1[20] = 0) (30322)
  c++ (30322)
  *c=0 (30323)
  (                    1741: LUT_1[21] = 0) (30324)
  c++ (30324)
  *c=0 (30325)
  (                    1742: LUT_1[22] = 0) (30326)
  c++ (30326)
  *c=0 (30327)
  (                    1743: LUT_1[23] = 0) (30328)
  c++ (30328)
  *c=0 (30329)
  (                    1744: LUT_1[24] = 0) (30330)
  c++ (30330)
  *c=0 (30331)
  (                    1745: LUT_1[25] = 0) (30332)
  c++ (30332)
  *c=0 (30333)
  (                    1746: LUT_1[26] = 0) (30334)
  c++ (30334)
  *c=0 (30335)
  (                    1747: LUT_1[27] = 0) (30336)
  c++ (30336)
  *c=0 (30337)
  (                    1748: LUT_1[28] = 0) (30338)
  c++ (30338)
  *c=0 (30339)
  (                    1749: LUT_1[29] = 0) (30340)
  c++ (30340)
  *c=0 (30341)
  (                    1750: LUT_1[30] = 0) (30342)
  c++ (30342)
  *c=0 (30343)
  (                    1751: LUT_1[31] = 0) (30344)
  c++ (30344)
  *c=0 (30345)
  (                    1752: LUT_1[32] = 0) (30346)
  c++ (30346)
  *c=0 (30347)
  (                    1753: LUT_1[33] = 1) (30348)
  c++ (30348)
  *c= 1 (30349)
  (                    1754: LUT_1[34] = 1) (30351)
  c++ (30351)
  *c= 1 (30352)
  (                    1755: LUT_1[35] = 1) (30354)
  c++ (30354)
  *c= 1 (30355)
  (                    1756: LUT_1[36] = 1) (30357)
  c++ (30357)
  *c= 1 (30358)
  (                    1757: LUT_1[37] = 1) (30360)
  c++ (30360)
  *c= 1 (30361)
  (                    1758: LUT_1[38] = 1) (30363)
  c++ (30363)
  *c= 1 (30364)
  (                    1759: LUT_1[39] = 1) (30366)
  c++ (30366)
  *c= 1 (30367)
  (                    1760: LUT_1[40] = 1) (30369)
  c++ (30369)
  *c= 1 (30370)
  (                    1761: LUT_1[41] = 1) (30372)
  c++ (30372)
  *c= 1 (30373)
  (                    1762: LUT_1[42] = 1) (30375)
  c++ (30375)
  *c= 1 (30376)
  (                    1763: LUT_1[43] = 1) (30378)
  c++ (30378)
  *c= 1 (30379)
  (                    1764: LUT_1[44] = 1) (30381)
  c++ (30381)
  *c= 1 (30382)
  (                    1765: LUT_1[45] = 1) (30384)
  c++ (30384)
  *c= 1 (30385)
  (                    1766: LUT_1[46] = 1) (30387)
  c++ (30387)
  *c= 1 (30388)
  (                    1767: LUT_1[47] = 1) (30390)
  c++ (30390)
  *c= 1 (30391)
  (                    1768: LUT_1[48] = 2) (30393)
  c++ (30393)
  *c= 2 (30394)
  (                    1769: LUT_1[49] = 2) (30396)
  c++ (30396)
  *c= 2 (30397)
  (                    1770: LUT_1[50] = 2) (30399)
  c++ (30399)
  *c= 2 (30400)
  (                    1771: LUT_1[51] = 2) (30402)
  c++ (30402)
  *c= 2 (30403)
  (                    1772: LUT_1[52] = 2) (30405)
  c++ (30405)
  *c= 2 (30406)
  (                    1773: LUT_1[53] = 2) (30408)
  c++ (30408)
  *c= 2 (30409)
  (                    1774: LUT_1[54] = 2) (30411)
  c++ (30411)
  *c= 2 (30412)
  (                    1775: LUT_1[55] = 2) (30414)
  c++ (30414)
  *c= 2 (30415)
  (                    1776: LUT_1[56] = 2) (30417)
  c++ (30417)
  *c= 2 (30418)
  (                    1777: LUT_1[57] = 2) (30420)
  c++ (30420)
  *c= 2 (30421)
  (                    1778: LUT_1[58] = 1) (30423)
  c++ (30423)
  *c= 1 (30424)
  (                    1779: LUT_1[59] = 1) (30426)
  c++ (30426)
  *c= 1 (30427)
  (                    1780: LUT_1[60] = 1) (30429)
  c++ (30429)
  *c= 1 (30430)
  (                    1781: LUT_1[61] = 1) (30432)
  c++ (30432)
  *c= 1 (30433)
  (                    1782: LUT_1[62] = 1) (30435)
  c++ (30435)
  *c= 1 (30436)
  (                    1783: LUT_1[63] = 1) (30438)
  c++ (30438)
  *c= 1 (30439)
  (                    1784: LUT_1[64] = 1) (30441)
  c++ (30441)
  *c= 1 (30442)
  (                    1785: LUT_1[65] = 2) (30444)
  c++ (30444)
  *c= 2 (30445)
  (                    1786: LUT_1[66] = 2) (30447)
  c++ (30447)
  *c= 2 (30448)
  (                    1787: LUT_1[67] = 2) (30450)
  c++ (30450)
  *c= 2 (30451)
  (                    1788: LUT_1[68] = 2) (30453)
  c++ (30453)
  *c= 2 (30454)
  (                    1789: LUT_1[69] = 2) (30456)
  c++ (30456)
  *c= 2 (30457)
  (                    1790: LUT_1[70] = 2) (30459)
  c++ (30459)
  *c= 2 (30460)
  (                    1791: LUT_1[71] = 2) (30462)
  c++ (30462)
  *c= 2 (30463)
  (                    1792: LUT_1[72] = 2) (30465)
  c++ (30465)
  *c= 2 (30466)
  (                    1793: LUT_1[73] = 2) (30468)
  c++ (30468)
  *c= 2 (30469)
  (                    1794: LUT_1[74] = 2) (30471)
  c++ (30471)
  *c= 2 (30472)
  (                    1795: LUT_1[75] = 2) (30474)
  c++ (30474)
  *c= 2 (30475)
  (                    1796: LUT_1[76] = 2) (30477)
  c++ (30477)
  *c= 2 (30478)
  (                    1797: LUT_1[77] = 2) (30480)
  c++ (30480)
  *c= 2 (30481)
  (                    1798: LUT_1[78] = 2) (30483)
  c++ (30483)
  *c= 2 (30484)
  (                    1799: LUT_1[79] = 2) (30486)
  c++ (30486)
  *c= 2 (30487)
  (                    1800: LUT_1[80] = 2) (30489)
  c++ (30489)
  *c= 2 (30490)
  (                    1801: LUT_1[81] = 2) (30492)
  c++ (30492)
  *c= 2 (30493)
  (                    1802: LUT_1[82] = 2) (30495)
  c++ (30495)
  *c= 2 (30496)
  (                    1803: LUT_1[83] = 2) (30498)
  c++ (30498)
  *c= 2 (30499)
  (                    1804: LUT_1[84] = 2) (30501)
  c++ (30501)
  *c= 2 (30502)
  (                    1805: LUT_1[85] = 2) (30504)
  c++ (30504)
  *c= 2 (30505)
  (                    1806: LUT_1[86] = 2) (30507)
  c++ (30507)
  *c= 2 (30508)
  (                    1807: LUT_1[87] = 2) (30510)
  c++ (30510)
  *c= 2 (30511)
  (                    1808: LUT_1[88] = 2) (30513)
  c++ (30513)
  *c= 2 (30514)
  (                    1809: LUT_1[89] = 2) (30516)
  c++ (30516)
  *c= 2 (30517)
  (                    1810: LUT_1[90] = 2) (30519)
  c++ (30519)
  *c= 2 (30520)
  (                    1811: LUT_1[91] = 1) (30522)
  c++ (30522)
  *c= 1 (30523)
  (                    1812: LUT_1[92] = 1) (30525)
  c++ (30525)
  *c= 1 (30526)
  (                    1813: LUT_1[93] = 1) (30528)
  c++ (30528)
  *c= 1 (30529)
  (                    1814: LUT_1[94] = 1) (30531)
  c++ (30531)
  *c= 1 (30532)
  (                    1815: LUT_1[95] = 1) (30534)
  c++ (30534)
  *c= 1 (30535)
  (                    1816: LUT_1[96] = 1) (30537)
  c++ (30537)
  *c= 1 (30538)
  (                    1817: LUT_1[97] = 3) (30540)
  c++ (30540)
  *c= 3 (30541)
  (                    1818: LUT_1[98] = 3) (30543)
  c++ (30543)
  *c= 3 (30544)
  (                    1819: LUT_1[99] = 3) (30546)
  c++ (30546)
  *c= 3 (30547)
  (                    1820: LUT_1[100] = 3) (30549)
  c++ (30549)
  *c= 3 (30550)
  (                    1821: LUT_1[101] = 3) (30552)
  c++ (30552)
  *c= 3 (30553)
  (                    1822: LUT_1[102] = 3) (30555)
  c++ (30555)
  *c= 3 (30556)
  (                    1823: LUT_1[103] = 3) (30558)
  c++ (30558)
  *c= 3 (30559)
  (                    1824: LUT_1[104] = 3) (30561)
  c++ (30561)
  *c= 3 (30562)
  (                    1825: LUT_1[105] = 3) (30564)
  c++ (30564)
  *c= 3 (30565)
  (                    1826: LUT_1[106] = 3) (30567)
  c++ (30567)
  *c= 3 (30568)
  (                    1827: LUT_1[107] = 3) (30570)
  c++ (30570)
  *c= 3 (30571)
  (                    1828: LUT_1[108] = 3) (30573)
  c++ (30573)
  *c= 3 (30574)
  (                    1829: LUT_1[109] = 3) (30576)
  c++ (30576)
  *c= 3 (30577)
  (                    1830: LUT_1[110] = 3) (30579)
  c++ (30579)
  *c= 3 (30580)
  (                    1831: LUT_1[111] = 3) (30582)
  c++ (30582)
  *c= 3 (30583)
  (                    1832: LUT_1[112] = 3) (30585)
  c++ (30585)
  *c= 3 (30586)
  (                    1833: LUT_1[113] = 3) (30588)
  c++ (30588)
  *c= 3 (30589)
  (                    1834: LUT_1[114] = 3) (30591)
  c++ (30591)
  *c= 3 (30592)
  (                    1835: LUT_1[115] = 3) (30594)
  c++ (30594)
  *c= 3 (30595)
  (                    1836: LUT_1[116] = 3) (30597)
  c++ (30597)
  *c= 3 (30598)
  (                    1837: LUT_1[117] = 3) (30600)
  c++ (30600)
  *c= 3 (30601)
  (                    1838: LUT_1[118] = 3) (30603)
  c++ (30603)
  *c= 3 (30604)
  (                    1839: LUT_1[119] = 3) (30606)
  c++ (30606)
  *c= 3 (30607)
  (                    1840: LUT_1[120] = 3) (30609)
  c++ (30609)
  *c= 3 (30610)
  (                    1841: LUT_1[121] = 3) (30612)
  c++ (30612)
  *c= 3 (30613)
  (                    1842: LUT_1[122] = 3) (30615)
  c++ (30615)
  *c= 3 (30616)
  (                    1843: LUT_1[123] = 1) (30618)
  c++ (30618)
  *c= 1 (30619)
  (                    1844: LUT_1[124] = 1) (30621)
  c++ (30621)
  *c= 1 (30622)
  (                    1845: LUT_1[125] = 1) (30624)
  c++ (30624)
  *c= 1 (30625)
  (                    1846: LUT_1[126] = 1) (30627)
  c++ (30627)
  *c= 1 (30628)
  (                    1847: LUT_1[127] = 0) (30630)
  c++ (30630)
  *c=0 (30631)
  (                    1848: LUT_1[128] = 0) (30632)
  c++ (30632)
  *c=0 (30633)
  (                    1849: LUT_1[129] = 0) (30634)
  c++ (30634)
  *c=0 (30635)
  (                    1850: LUT_1[130] = 0) (30636)
  c++ (30636)
  *c=0 (30637)
  (                    1851: LUT_1[131] = 0) (30638)
  c++ (30638)
  *c=0 (30639)
  (                    1852: LUT_1[132] = 0) (30640)
  c++ (30640)
  *c=0 (30641)
  (                    1853: LUT_1[133] = 0) (30642)
  c++ (30642)
  *c=0 (30643)
  (                    1854: LUT_1[134] = 0) (30644)
  c++ (30644)
  *c=0 (30645)
  (                    1855: LUT_1[135] = 0) (30646)
  c++ (30646)
  *c=0 (30647)
  (                    1856: LUT_1[136] = 0) (30648)
  c++ (30648)
  *c=0 (30649)
  (                    1857: LUT_1[137] = 0) (30650)
  c++ (30650)
  *c=0 (30651)
  (                    1858: LUT_1[138] = 0) (30652)
  c++ (30652)
  *c=0 (30653)
  (                    1859: LUT_1[139] = 0) (30654)
  c++ (30654)
  *c=0 (30655)
  (                    1860: LUT_1[140] = 0) (30656)
  c++ (30656)
  *c=0 (30657)
  (                    1861: LUT_1[141] = 0) (30658)
  c++ (30658)
  *c=0 (30659)
  (                    1862: LUT_1[142] = 0) (30660)
  c++ (30660)
  *c=0 (30661)
  (                    1863: LUT_1[143] = 0) (30662)
  c++ (30662)
  *c=0 (30663)
  (                    1864: LUT_1[144] = 0) (30664)
  c++ (30664)
  *c=0 (30665)
  (                    1865: LUT_1[145] = 0) (30666)
  c++ (30666)
  *c=0 (30667)
  (                    1866: LUT_1[146] = 0) (30668)
  c++ (30668)
  *c=0 (30669)
  (                    1867: LUT_1[147] = 0) (30670)
  c++ (30670)
  *c=0 (30671)
  (                    1868: LUT_1[148] = 0) (30672)
  c++ (30672)
  *c=0 (30673)
  (                    1869: LUT_1[149] = 0) (30674)
  c++ (30674)
  *c=0 (30675)
  (                    1870: LUT_1[150] = 0) (30676)
  c++ (30676)
  *c=0 (30677)
  (                    1871: LUT_1[151] = 0) (30678)
  c++ (30678)
  *c=0 (30679)
  (                    1872: LUT_1[152] = 0) (30680)
  c++ (30680)
  *c=0 (30681)
  (                    1873: LUT_1[153] = 0) (30682)
  c++ (30682)
  *c=0 (30683)
  (                    1874: LUT_1[154] = 0) (30684)
  c++ (30684)
  *c=0 (30685)
  (                    1875: LUT_1[155] = 0) (30686)
  c++ (30686)
  *c=0 (30687)
  (                    1876: LUT_1[156] = 0) (30688)
  c++ (30688)
  *c=0 (30689)
  (                    1877: LUT_1[157] = 0) (30690)
  c++ (30690)
  *c=0 (30691)
  (                    1878: LUT_1[158] = 0) (30692)
  c++ (30692)
  *c=0 (30693)
  (                    1879: LUT_1[159] = 0) (30694)
  c++ (30694)
  *c=0 (30695)
  (                    1880: LUT_1[160] = 0) (30696)
  c++ (30696)
  *c=0 (30697)
  (                    1881: LUT_1[161] = 0) (30698)
  c++ (30698)
  *c=0 (30699)
  (                    1882: LUT_1[162] = 0) (30700)
  c++ (30700)
  *c=0 (30701)
  (                    1883: LUT_1[163] = 0) (30702)
  c++ (30702)
  *c=0 (30703)
  (                    1884: LUT_1[164] = 0) (30704)
  c++ (30704)
  *c=0 (30705)
  (                    1885: LUT_1[165] = 0) (30706)
  c++ (30706)
  *c=0 (30707)
  (                    1886: LUT_1[166] = 0) (30708)
  c++ (30708)
  *c=0 (30709)
  (                    1887: LUT_1[167] = 0) (30710)
  c++ (30710)
  *c=0 (30711)
  (                    1888: LUT_1[168] = 0) (30712)
  c++ (30712)
  *c=0 (30713)
  (                    1889: LUT_1[169] = 0) (30714)
  c++ (30714)
  *c=0 (30715)
  (                    1890: LUT_1[170] = 0) (30716)
  c++ (30716)
  *c=0 (30717)
  (                    1891: LUT_1[171] = 0) (30718)
  c++ (30718)
  *c=0 (30719)
  (                    1892: LUT_1[172] = 0) (30720)
  c++ (30720)
  *c=0 (30721)
  (                    1893: LUT_1[173] = 0) (30722)
  c++ (30722)
  *c=0 (30723)
  (                    1894: LUT_1[174] = 0) (30724)
  c++ (30724)
  *c=0 (30725)
  (                    1895: LUT_1[175] = 0) (30726)
  c++ (30726)
  *c=0 (30727)
  (                    1896: LUT_1[176] = 0) (30728)
  c++ (30728)
  *c=0 (30729)
  (                    1897: LUT_1[177] = 0) (30730)
  c++ (30730)
  *c=0 (30731)
  (                    1898: LUT_1[178] = 0) (30732)
  c++ (30732)
  *c=0 (30733)
  (                    1899: LUT_1[179] = 0) (30734)
  c++ (30734)
  *c=0 (30735)
  (                    1900: LUT_1[180] = 0) (30736)
  c++ (30736)
  *c=0 (30737)
  (                    1901: LUT_1[181] = 0) (30738)
  c++ (30738)
  *c=0 (30739)
  (                    1902: LUT_1[182] = 0) (30740)
  c++ (30740)
  *c=0 (30741)
  (                    1903: LUT_1[183] = 0) (30742)
  c++ (30742)
  *c=0 (30743)
  (                    1904: LUT_1[184] = 0) (30744)
  c++ (30744)
  *c=0 (30745)
  (                    1905: LUT_1[185] = 0) (30746)
  c++ (30746)
  *c=0 (30747)
  (                    1906: LUT_1[186] = 0) (30748)
  c++ (30748)
  *c=0 (30749)
  (                    1907: LUT_1[187] = 0) (30750)
  c++ (30750)
  *c=0 (30751)
  (                    1908: LUT_1[188] = 0) (30752)
  c++ (30752)
  *c=0 (30753)
  (                    1909: LUT_1[189] = 0) (30754)
  c++ (30754)
  *c=0 (30755)
  (                    1910: LUT_1[190] = 0) (30756)
  c++ (30756)
  *c=0 (30757)
  (                    1911: LUT_1[191] = 0) (30758)
  c++ (30758)
  *c=0 (30759)
  (                    1912: LUT_1[192] = 0) (30760)
  c++ (30760)
  *c=0 (30761)
  (                    1913: LUT_1[193] = 0) (30762)
  c++ (30762)
  *c=0 (30763)
  (                    1914: LUT_1[194] = 0) (30764)
  c++ (30764)
  *c=0 (30765)
  (                    1915: LUT_1[195] = 0) (30766)
  c++ (30766)
  *c=0 (30767)
  (                    1916: LUT_1[196] = 0) (30768)
  c++ (30768)
  *c=0 (30769)
  (                    1917: LUT_1[197] = 0) (30770)
  c++ (30770)
  *c=0 (30771)
  (                    1918: LUT_1[198] = 0) (30772)
  c++ (30772)
  *c=0 (30773)
  (                    1919: LUT_1[199] = 0) (30774)
  c++ (30774)
  *c=0 (30775)
  (                    1920: LUT_1[200] = 0) (30776)
  c++ (30776)
  *c=0 (30777)
  (                    1921: LUT_1[201] = 0) (30778)
  c++ (30778)
  *c=0 (30779)
  (                    1922: LUT_1[202] = 0) (30780)
  c++ (30780)
  *c=0 (30781)
  (                    1923: LUT_1[203] = 0) (30782)
  c++ (30782)
  *c=0 (30783)
  (                    1924: LUT_1[204] = 0) (30784)
  c++ (30784)
  *c=0 (30785)
  (                    1925: LUT_1[205] = 0) (30786)
  c++ (30786)
  *c=0 (30787)
  (                    1926: LUT_1[206] = 0) (30788)
  c++ (30788)
  *c=0 (30789)
  (                    1927: LUT_1[207] = 0) (30790)
  c++ (30790)
  *c=0 (30791)
  (                    1928: LUT_1[208] = 0) (30792)
  c++ (30792)
  *c=0 (30793)
  (                    1929: LUT_1[209] = 0) (30794)
  c++ (30794)
  *c=0 (30795)
  (                    1930: LUT_1[210] = 0) (30796)
  c++ (30796)
  *c=0 (30797)
  (                    1931: LUT_1[211] = 0) (30798)
  c++ (30798)
  *c=0 (30799)
  (                    1932: LUT_1[212] = 0) (30800)
  c++ (30800)
  *c=0 (30801)
  (                    1933: LUT_1[213] = 0) (30802)
  c++ (30802)
  *c=0 (30803)
  (                    1934: LUT_1[214] = 0) (30804)
  c++ (30804)
  *c=0 (30805)
  (                    1935: LUT_1[215] = 0) (30806)
  c++ (30806)
  *c=0 (30807)
  (                    1936: LUT_1[216] = 0) (30808)
  c++ (30808)
  *c=0 (30809)
  (                    1937: LUT_1[217] = 0) (30810)
  c++ (30810)
  *c=0 (30811)
  (                    1938: LUT_1[218] = 0) (30812)
  c++ (30812)
  *c=0 (30813)
  (                    1939: LUT_1[219] = 0) (30814)
  c++ (30814)
  *c=0 (30815)
  (                    1940: LUT_1[220] = 0) (30816)
  c++ (30816)
  *c=0 (30817)
  (                    1941: LUT_1[221] = 0) (30818)
  c++ (30818)
  *c=0 (30819)
  (                    1942: LUT_1[222] = 0) (30820)
  c++ (30820)
  *c=0 (30821)
  (                    1943: LUT_1[223] = 0) (30822)
  c++ (30822)
  *c=0 (30823)
  (                    1944: LUT_1[224] = 2) (30824)
  c++ (30824)
  *c= 2 (30825)
  (                    1945: LUT_1[225] = 2) (30827)
  c++ (30827)
  *c= 2 (30828)
  (                    1946: LUT_1[226] = 2) (30830)
  c++ (30830)
  *c= 2 (30831)
  (                    1947: LUT_1[227] = 2) (30833)
  c++ (30833)
  *c= 2 (30834)
  (                    1948: LUT_1[228] = 2) (30836)
  c++ (30836)
  *c= 2 (30837)
  (                    1949: LUT_1[229] = 2) (30839)
  c++ (30839)
  *c= 2 (30840)
  (                    1950: LUT_1[230] = 2) (30842)
  c++ (30842)
  *c= 2 (30843)
  (                    1951: LUT_1[231] = 2) (30845)
  c++ (30845)
  *c= 2 (30846)
  (                    1952: LUT_1[232] = 2) (30848)
  c++ (30848)
  *c= 2 (30849)
  (                    1953: LUT_1[233] = 2) (30851)
  c++ (30851)
  *c= 2 (30852)
  (                    1954: LUT_1[234] = 2) (30854)
  c++ (30854)
  *c= 2 (30855)
  (                    1955: LUT_1[235] = 2) (30857)
  c++ (30857)
  *c= 2 (30858)
  (                    1956: LUT_1[236] = 2) (30860)
  c++ (30860)
  *c= 2 (30861)
  (                    1957: LUT_1[237] = 2) (30863)
  c++ (30863)
  *c= 2 (30864)
  (                    1958: LUT_1[238] = 2) (30866)
  c++ (30866)
  *c= 2 (30867)
  (                    1959: LUT_1[239] = 2) (30869)
  c++ (30869)
  *c= 2 (30870)
  (                    1960: LUT_1[240] = 2) (30872)
  c++ (30872)
  *c= 2 (30873)
  (                    1961: LUT_1[241] = 2) (30875)
  c++ (30875)
  *c= 2 (30876)
  (                    1962: LUT_1[242] = 2) (30878)
  c++ (30878)
  *c= 2 (30879)
  (                    1963: LUT_1[243] = 2) (30881)
  c++ (30881)
  *c= 2 (30882)
  (                    1964: LUT_1[244] = 2) (30884)
  c++ (30884)
  *c= 2 (30885)
  (                    1965: LUT_1[245] = 2) (30887)
  c++ (30887)
  *c= 2 (30888)
  (                    1966: LUT_1[246] = 2) (30890)
  c++ (30890)
  *c= 2 (30891)
  (                    1967: LUT_1[247] = 2) (30893)
  c++ (30893)
  *c= 2 (30894)
  (                    1968: LUT_1[248] = 2) (30896)
  c++ (30896)
  *c= 2 (30897)
  (                    1969: LUT_1[249] = 2) (30899)
  c++ (30899)
  *c= 2 (30900)
  (                    1970: LUT_1[250] = 2) (30902)
  c++ (30902)
  *c= 2 (30903)
  (                    1971: LUT_1[251] = 2) (30905)
  c++ (30905)
  *c= 2 (30906)
  (                    1972: LUT_1[252] = 2) (30908)
  c++ (30908)
  *c= 2 (30909)
  (                    1973: LUT_1[253] = 2) (30911)
  c++ (30911)
  *c= 2 (30912)
  (                    1974: LUT_1[254] = 2) (30914)
  c++ (30914)
  *c= 2 (30915)
  (                    1975: LUT_1[255] = 2) (30917)
  c++ (30917)
  *c= 2 (30918)
  a=c (30920)
  r=a 1 (30921)
  (                    1977: LUT_2 = alloc_pM〈256〉) (30923)
  (         H[t0+14]〈〉 = t0) (30923)
  d++ (30923)
  a=r 0 (30924)
  *d=a (30926)
  (saved bsp, return id:) (30927)
  (         H[t0+15]〈〉 = 114) (30927)
  d++ (30927)
  *d= 114 (30928)
  (push arguments:) (30930)
  (         H[t0+16]〈〉 = 256) (30930)
  d++ (30930)
  a= 1 (30931)
  a<<= 8 (30933)
  *d=a (30935)
  (         t0 = t0 + 15) (30936)
  c= 15 (30936)
  a=r 0 (30938)
  a+=c (30940)
  r=a 0 (30941)
  (         goto addr_alloc_pM) (30943)
  lj 323 (30943)
  (        :return_id_114:) (30946)
  (         t1 = t1 | 2147483648) (30946)
  a= 1 (30946)
  a<<= 31 (30948)
  c=a (30950)
  a=r 1 (30951)
  a|=c (30953)
  r=a 1 (30954)
  (         H[t0+14]〈LUT_2〉 = t1) (30956)
  a=r 0 (30956)
  a+= 14 (30958)
  d=a (30960)
  a=r 1 (30961)
  *d=a (30963)
  (                    1978: LUT_2[0] = 0) (30964)
  (         t1 = H[t0+14]〈LUT_2〉 & 2147483647) (30964)
  a=0 (30964)
  a-- (30965)
  a>>= 1 (30966)
  c=a (30968)
  a=*d (30969)
  a&=c (30970)
  r=a 1 (30971)
  (         t1 = t1 + 0) (30973)
  (         M[t1] = 0) (30973)
  c=a (30973)
  *c=0 (30974)
  (                    1979: LUT_2[1] = 1) (30975)
  c++ (30975)
  *c= 1 (30976)
  (                    1980: LUT_2[2] = 1) (30978)
  c++ (30978)
  *c= 1 (30979)
  (                    1981: LUT_2[3] = 1) (30981)
  c++ (30981)
  *c= 1 (30982)
  (                    1982: LUT_2[4] = 1) (30984)
  c++ (30984)
  *c= 1 (30985)
  (                    1983: LUT_2[5] = 1) (30987)
  c++ (30987)
  *c= 1 (30988)
  (                    1984: LUT_2[6] = 1) (30990)
  c++ (30990)
  *c= 1 (30991)
  (                    1985: LUT_2[7] = 1) (30993)
  c++ (30993)
  *c= 1 (30994)
  (                    1986: LUT_2[8] = 1) (30996)
  c++ (30996)
  *c= 1 (30997)
  (                    1987: LUT_2[9] = 1) (30999)
  c++ (30999)
  *c= 1 (31000)
  (                    1988: LUT_2[10] = 1) (31002)
  c++ (31002)
  *c= 1 (31003)
  (                    1989: LUT_2[11] = 1) (31005)
  c++ (31005)
  *c= 1 (31006)
  (                    1990: LUT_2[12] = 1) (31008)
  c++ (31008)
  *c= 1 (31009)
  (                    1991: LUT_2[13] = 1) (31011)
  c++ (31011)
  *c= 1 (31012)
  (                    1992: LUT_2[14] = 1) (31014)
  c++ (31014)
  *c= 1 (31015)
  (                    1993: LUT_2[15] = 1) (31017)
  c++ (31017)
  *c= 1 (31018)
  (                    1994: LUT_2[16] = 2) (31020)
  c++ (31020)
  *c= 2 (31021)
  (                    1995: LUT_2[17] = 2) (31023)
  c++ (31023)
  *c= 2 (31024)
  (                    1996: LUT_2[18] = 2) (31026)
  c++ (31026)
  *c= 2 (31027)
  (                    1997: LUT_2[19] = 2) (31029)
  c++ (31029)
  *c= 2 (31030)
  (                    1998: LUT_2[20] = 2) (31032)
  c++ (31032)
  *c= 2 (31033)
  (                    1999: LUT_2[21] = 2) (31035)
  c++ (31035)
  *c= 2 (31036)
  (                    2000: LUT_2[22] = 2) (31038)
  c++ (31038)
  *c= 2 (31039)
  (                    2001: LUT_2[23] = 2) (31041)
  c++ (31041)
  *c= 2 (31042)
  (                    2002: LUT_2[24] = 2) (31044)
  c++ (31044)
  *c= 2 (31045)
  (                    2003: LUT_2[25] = 2) (31047)
  c++ (31047)
  *c= 2 (31048)
  (                    2004: LUT_2[26] = 2) (31050)
  c++ (31050)
  *c= 2 (31051)
  (                    2005: LUT_2[27] = 2) (31053)
  c++ (31053)
  *c= 2 (31054)
  (                    2006: LUT_2[28] = 2) (31056)
  c++ (31056)
  *c= 2 (31057)
  (                    2007: LUT_2[29] = 2) (31059)
  c++ (31059)
  *c= 2 (31060)
  (                    2008: LUT_2[30] = 2) (31062)
  c++ (31062)
  *c= 2 (31063)
  (                    2009: LUT_2[31] = 2) (31065)
  c++ (31065)
  *c= 2 (31066)
  (                    2010: LUT_2[32] = 2) (31068)
  c++ (31068)
  *c= 2 (31069)
  (                    2011: LUT_2[33] = 2) (31071)
  c++ (31071)
  *c= 2 (31072)
  (                    2012: LUT_2[34] = 2) (31074)
  c++ (31074)
  *c= 2 (31075)
  (                    2013: LUT_2[35] = 2) (31077)
  c++ (31077)
  *c= 2 (31078)
  (                    2014: LUT_2[36] = 2) (31080)
  c++ (31080)
  *c= 2 (31081)
  (                    2015: LUT_2[37] = 2) (31083)
  c++ (31083)
  *c= 2 (31084)
  (                    2016: LUT_2[38] = 2) (31086)
  c++ (31086)
  *c= 2 (31087)
  (                    2017: LUT_2[39] = 2) (31089)
  c++ (31089)
  *c= 2 (31090)
  (                    2018: LUT_2[40] = 2) (31092)
  c++ (31092)
  *c= 2 (31093)
  (                    2019: LUT_2[41] = 2) (31095)
  c++ (31095)
  *c= 2 (31096)
  (                    2020: LUT_2[42] = 2) (31098)
  c++ (31098)
  *c= 2 (31099)
  (                    2021: LUT_2[43] = 2) (31101)
  c++ (31101)
  *c= 2 (31102)
  (                    2022: LUT_2[44] = 2) (31104)
  c++ (31104)
  *c= 2 (31105)
  (                    2023: LUT_2[45] = 2) (31107)
  c++ (31107)
  *c= 2 (31108)
  (                    2024: LUT_2[46] = 2) (31110)
  c++ (31110)
  *c= 2 (31111)
  (                    2025: LUT_2[47] = 2) (31113)
  c++ (31113)
  *c= 2 (31114)
  (                    2026: LUT_2[48] = 2) (31116)
  c++ (31116)
  *c= 2 (31117)
  (                    2027: LUT_2[49] = 2) (31119)
  c++ (31119)
  *c= 2 (31120)
  (                    2028: LUT_2[50] = 2) (31122)
  c++ (31122)
  *c= 2 (31123)
  (                    2029: LUT_2[51] = 2) (31125)
  c++ (31125)
  *c= 2 (31126)
  (                    2030: LUT_2[52] = 2) (31128)
  c++ (31128)
  *c= 2 (31129)
  (                    2031: LUT_2[53] = 2) (31131)
  c++ (31131)
  *c= 2 (31132)
  (                    2032: LUT_2[54] = 2) (31134)
  c++ (31134)
  *c= 2 (31135)
  (                    2033: LUT_2[55] = 2) (31137)
  c++ (31137)
  *c= 2 (31138)
  (                    2034: LUT_2[56] = 2) (31140)
  c++ (31140)
  *c= 2 (31141)
  (                    2035: LUT_2[57] = 2) (31143)
  c++ (31143)
  *c= 2 (31144)
  (                    2036: LUT_2[58] = 2) (31146)
  c++ (31146)
  *c= 2 (31147)
  (                    2037: LUT_2[59] = 2) (31149)
  c++ (31149)
  *c= 2 (31150)
  (                    2038: LUT_2[60] = 2) (31152)
  c++ (31152)
  *c= 2 (31153)
  (                    2039: LUT_2[61] = 2) (31155)
  c++ (31155)
  *c= 2 (31156)
  (                    2040: LUT_2[62] = 2) (31158)
  c++ (31158)
  *c= 2 (31159)
  (                    2041: LUT_2[63] = 2) (31161)
  c++ (31161)
  *c= 2 (31162)
  (                    2042: LUT_2[64] = 3) (31164)
  c++ (31164)
  *c= 3 (31165)
  (                    2043: LUT_2[65] = 3) (31167)
  c++ (31167)
  *c= 3 (31168)
  (                    2044: LUT_2[66] = 3) (31170)
  c++ (31170)
  *c= 3 (31171)
  (                    2045: LUT_2[67] = 3) (31173)
  c++ (31173)
  *c= 3 (31174)
  (                    2046: LUT_2[68] = 3) (31176)
  c++ (31176)
  *c= 3 (31177)
  (                    2047: LUT_2[69] = 3) (31179)
  c++ (31179)
  *c= 3 (31180)
  (                    2048: LUT_2[70] = 3) (31182)
  c++ (31182)
  *c= 3 (31183)
  (                    2049: LUT_2[71] = 3) (31185)
  c++ (31185)
  *c= 3 (31186)
  (                    2050: LUT_2[72] = 3) (31188)
  c++ (31188)
  *c= 3 (31189)
  (                    2051: LUT_2[73] = 3) (31191)
  c++ (31191)
  *c= 3 (31192)
  (                    2052: LUT_2[74] = 3) (31194)
  c++ (31194)
  *c= 3 (31195)
  (                    2053: LUT_2[75] = 3) (31197)
  c++ (31197)
  *c= 3 (31198)
  (                    2054: LUT_2[76] = 3) (31200)
  c++ (31200)
  *c= 3 (31201)
  (                    2055: LUT_2[77] = 3) (31203)
  c++ (31203)
  *c= 3 (31204)
  (                    2056: LUT_2[78] = 3) (31206)
  c++ (31206)
  *c= 3 (31207)
  (                    2057: LUT_2[79] = 3) (31209)
  c++ (31209)
  *c= 3 (31210)
  (                    2058: LUT_2[80] = 3) (31212)
  c++ (31212)
  *c= 3 (31213)
  (                    2059: LUT_2[81] = 3) (31215)
  c++ (31215)
  *c= 3 (31216)
  (                    2060: LUT_2[82] = 3) (31218)
  c++ (31218)
  *c= 3 (31219)
  (                    2061: LUT_2[83] = 3) (31221)
  c++ (31221)
  *c= 3 (31222)
  (                    2062: LUT_2[84] = 3) (31224)
  c++ (31224)
  *c= 3 (31225)
  (                    2063: LUT_2[85] = 3) (31227)
  c++ (31227)
  *c= 3 (31228)
  (                    2064: LUT_2[86] = 3) (31230)
  c++ (31230)
  *c= 3 (31231)
  (                    2065: LUT_2[87] = 3) (31233)
  c++ (31233)
  *c= 3 (31234)
  (                    2066: LUT_2[88] = 3) (31236)
  c++ (31236)
  *c= 3 (31237)
  (                    2067: LUT_2[89] = 3) (31239)
  c++ (31239)
  *c= 3 (31240)
  (                    2068: LUT_2[90] = 3) (31242)
  c++ (31242)
  *c= 3 (31243)
  (                    2069: LUT_2[91] = 3) (31245)
  c++ (31245)
  *c= 3 (31246)
  (                    2070: LUT_2[92] = 3) (31248)
  c++ (31248)
  *c= 3 (31249)
  (                    2071: LUT_2[93] = 3) (31251)
  c++ (31251)
  *c= 3 (31252)
  (                    2072: LUT_2[94] = 3) (31254)
  c++ (31254)
  *c= 3 (31255)
  (                    2073: LUT_2[95] = 3) (31257)
  c++ (31257)
  *c= 3 (31258)
  (                    2074: LUT_2[96] = 3) (31260)
  c++ (31260)
  *c= 3 (31261)
  (                    2075: LUT_2[97] = 3) (31263)
  c++ (31263)
  *c= 3 (31264)
  (                    2076: LUT_2[98] = 3) (31266)
  c++ (31266)
  *c= 3 (31267)
  (                    2077: LUT_2[99] = 3) (31269)
  c++ (31269)
  *c= 3 (31270)
  (                    2078: LUT_2[100] = 3) (31272)
  c++ (31272)
  *c= 3 (31273)
  (                    2079: LUT_2[101] = 3) (31275)
  c++ (31275)
  *c= 3 (31276)
  (                    2080: LUT_2[102] = 3) (31278)
  c++ (31278)
  *c= 3 (31279)
  (                    2081: LUT_2[103] = 3) (31281)
  c++ (31281)
  *c= 3 (31282)
  (                    2082: LUT_2[104] = 3) (31284)
  c++ (31284)
  *c= 3 (31285)
  (                    2083: LUT_2[105] = 3) (31287)
  c++ (31287)
  *c= 3 (31288)
  (                    2084: LUT_2[106] = 3) (31290)
  c++ (31290)
  *c= 3 (31291)
  (                    2085: LUT_2[107] = 3) (31293)
  c++ (31293)
  *c= 3 (31294)
  (                    2086: LUT_2[108] = 3) (31296)
  c++ (31296)
  *c= 3 (31297)
  (                    2087: LUT_2[109] = 3) (31299)
  c++ (31299)
  *c= 3 (31300)
  (                    2088: LUT_2[110] = 3) (31302)
  c++ (31302)
  *c= 3 (31303)
  (                    2089: LUT_2[111] = 3) (31305)
  c++ (31305)
  *c= 3 (31306)
  (                    2090: LUT_2[112] = 3) (31308)
  c++ (31308)
  *c= 3 (31309)
  (                    2091: LUT_2[113] = 3) (31311)
  c++ (31311)
  *c= 3 (31312)
  (                    2092: LUT_2[114] = 3) (31314)
  c++ (31314)
  *c= 3 (31315)
  (                    2093: LUT_2[115] = 3) (31317)
  c++ (31317)
  *c= 3 (31318)
  (                    2094: LUT_2[116] = 3) (31320)
  c++ (31320)
  *c= 3 (31321)
  (                    2095: LUT_2[117] = 3) (31323)
  c++ (31323)
  *c= 3 (31324)
  (                    2096: LUT_2[118] = 3) (31326)
  c++ (31326)
  *c= 3 (31327)
  (                    2097: LUT_2[119] = 3) (31329)
  c++ (31329)
  *c= 3 (31330)
  (                    2098: LUT_2[120] = 3) (31332)
  c++ (31332)
  *c= 3 (31333)
  (                    2099: LUT_2[121] = 3) (31335)
  c++ (31335)
  *c= 3 (31336)
  (                    2100: LUT_2[122] = 3) (31338)
  c++ (31338)
  *c= 3 (31339)
  (                    2101: LUT_2[123] = 3) (31341)
  c++ (31341)
  *c= 3 (31342)
  (                    2102: LUT_2[124] = 3) (31344)
  c++ (31344)
  *c= 3 (31345)
  (                    2103: LUT_2[125] = 3) (31347)
  c++ (31347)
  *c= 3 (31348)
  (                    2104: LUT_2[126] = 3) (31350)
  c++ (31350)
  *c= 3 (31351)
  (                    2105: LUT_2[127] = 3) (31353)
  c++ (31353)
  *c= 3 (31354)
  (                    2106: LUT_2[128] = 4) (31356)
  c++ (31356)
  *c= 4 (31357)
  (                    2107: LUT_2[129] = 4) (31359)
  c++ (31359)
  *c= 4 (31360)
  (                    2108: LUT_2[130] = 4) (31362)
  c++ (31362)
  *c= 4 (31363)
  (                    2109: LUT_2[131] = 4) (31365)
  c++ (31365)
  *c= 4 (31366)
  (                    2110: LUT_2[132] = 4) (31368)
  c++ (31368)
  *c= 4 (31369)
  (                    2111: LUT_2[133] = 4) (31371)
  c++ (31371)
  *c= 4 (31372)
  (                    2112: LUT_2[134] = 4) (31374)
  c++ (31374)
  *c= 4 (31375)
  (                    2113: LUT_2[135] = 4) (31377)
  c++ (31377)
  *c= 4 (31378)
  (                    2114: LUT_2[136] = 4) (31380)
  c++ (31380)
  *c= 4 (31381)
  (                    2115: LUT_2[137] = 4) (31383)
  c++ (31383)
  *c= 4 (31384)
  (                    2116: LUT_2[138] = 4) (31386)
  c++ (31386)
  *c= 4 (31387)
  (                    2117: LUT_2[139] = 4) (31389)
  c++ (31389)
  *c= 4 (31390)
  (                    2118: LUT_2[140] = 4) (31392)
  c++ (31392)
  *c= 4 (31393)
  (                    2119: LUT_2[141] = 4) (31395)
  c++ (31395)
  *c= 4 (31396)
  (                    2120: LUT_2[142] = 4) (31398)
  c++ (31398)
  *c= 4 (31399)
  (                    2121: LUT_2[143] = 4) (31401)
  c++ (31401)
  *c= 4 (31402)
  (                    2122: LUT_2[144] = 4) (31404)
  c++ (31404)
  *c= 4 (31405)
  (                    2123: LUT_2[145] = 4) (31407)
  c++ (31407)
  *c= 4 (31408)
  (                    2124: LUT_2[146] = 4) (31410)
  c++ (31410)
  *c= 4 (31411)
  (                    2125: LUT_2[147] = 4) (31413)
  c++ (31413)
  *c= 4 (31414)
  (                    2126: LUT_2[148] = 4) (31416)
  c++ (31416)
  *c= 4 (31417)
  (                    2127: LUT_2[149] = 4) (31419)
  c++ (31419)
  *c= 4 (31420)
  (                    2128: LUT_2[150] = 4) (31422)
  c++ (31422)
  *c= 4 (31423)
  (                    2129: LUT_2[151] = 4) (31425)
  c++ (31425)
  *c= 4 (31426)
  (                    2130: LUT_2[152] = 4) (31428)
  c++ (31428)
  *c= 4 (31429)
  (                    2131: LUT_2[153] = 4) (31431)
  c++ (31431)
  *c= 4 (31432)
  (                    2132: LUT_2[154] = 4) (31434)
  c++ (31434)
  *c= 4 (31435)
  (                    2133: LUT_2[155] = 4) (31437)
  c++ (31437)
  *c= 4 (31438)
  (                    2134: LUT_2[156] = 4) (31440)
  c++ (31440)
  *c= 4 (31441)
  (                    2135: LUT_2[157] = 4) (31443)
  c++ (31443)
  *c= 4 (31444)
  (                    2136: LUT_2[158] = 4) (31446)
  c++ (31446)
  *c= 4 (31447)
  (                    2137: LUT_2[159] = 4) (31449)
  c++ (31449)
  *c= 4 (31450)
  (                    2138: LUT_2[160] = 4) (31452)
  c++ (31452)
  *c= 4 (31453)
  (                    2139: LUT_2[161] = 4) (31455)
  c++ (31455)
  *c= 4 (31456)
  (                    2140: LUT_2[162] = 4) (31458)
  c++ (31458)
  *c= 4 (31459)
  (                    2141: LUT_2[163] = 4) (31461)
  c++ (31461)
  *c= 4 (31462)
  (                    2142: LUT_2[164] = 4) (31464)
  c++ (31464)
  *c= 4 (31465)
  (                    2143: LUT_2[165] = 4) (31467)
  c++ (31467)
  *c= 4 (31468)
  (                    2144: LUT_2[166] = 4) (31470)
  c++ (31470)
  *c= 4 (31471)
  (                    2145: LUT_2[167] = 4) (31473)
  c++ (31473)
  *c= 4 (31474)
  (                    2146: LUT_2[168] = 4) (31476)
  c++ (31476)
  *c= 4 (31477)
  (                    2147: LUT_2[169] = 4) (31479)
  c++ (31479)
  *c= 4 (31480)
  (                    2148: LUT_2[170] = 4) (31482)
  c++ (31482)
  *c= 4 (31483)
  (                    2149: LUT_2[171] = 4) (31485)
  c++ (31485)
  *c= 4 (31486)
  (                    2150: LUT_2[172] = 4) (31488)
  c++ (31488)
  *c= 4 (31489)
  (                    2151: LUT_2[173] = 4) (31491)
  c++ (31491)
  *c= 4 (31492)
  (                    2152: LUT_2[174] = 4) (31494)
  c++ (31494)
  *c= 4 (31495)
  (                    2153: LUT_2[175] = 4) (31497)
  c++ (31497)
  *c= 4 (31498)
  (                    2154: LUT_2[176] = 4) (31500)
  c++ (31500)
  *c= 4 (31501)
  (                    2155: LUT_2[177] = 4) (31503)
  c++ (31503)
  *c= 4 (31504)
  (                    2156: LUT_2[178] = 4) (31506)
  c++ (31506)
  *c= 4 (31507)
  (                    2157: LUT_2[179] = 4) (31509)
  c++ (31509)
  *c= 4 (31510)
  (                    2158: LUT_2[180] = 4) (31512)
  c++ (31512)
  *c= 4 (31513)
  (                    2159: LUT_2[181] = 4) (31515)
  c++ (31515)
  *c= 4 (31516)
  (                    2160: LUT_2[182] = 4) (31518)
  c++ (31518)
  *c= 4 (31519)
  (                    2161: LUT_2[183] = 4) (31521)
  c++ (31521)
  *c= 4 (31522)
  (                    2162: LUT_2[184] = 4) (31524)
  c++ (31524)
  *c= 4 (31525)
  (                    2163: LUT_2[185] = 4) (31527)
  c++ (31527)
  *c= 4 (31528)
  (                    2164: LUT_2[186] = 4) (31530)
  c++ (31530)
  *c= 4 (31531)
  (                    2165: LUT_2[187] = 4) (31533)
  c++ (31533)
  *c= 4 (31534)
  (                    2166: LUT_2[188] = 4) (31536)
  c++ (31536)
  *c= 4 (31537)
  (                    2167: LUT_2[189] = 4) (31539)
  c++ (31539)
  *c= 4 (31540)
  (                    2168: LUT_2[190] = 4) (31542)
  c++ (31542)
  *c= 4 (31543)
  (                    2169: LUT_2[191] = 4) (31545)
  c++ (31545)
  *c= 4 (31546)
  (                    2170: LUT_2[192] = 5) (31548)
  c++ (31548)
  *c= 5 (31549)
  (                    2171: LUT_2[193] = 5) (31551)
  c++ (31551)
  *c= 5 (31552)
  (                    2172: LUT_2[194] = 5) (31554)
  c++ (31554)
  *c= 5 (31555)
  (                    2173: LUT_2[195] = 5) (31557)
  c++ (31557)
  *c= 5 (31558)
  (                    2174: LUT_2[196] = 5) (31560)
  c++ (31560)
  *c= 5 (31561)
  (                    2175: LUT_2[197] = 5) (31563)
  c++ (31563)
  *c= 5 (31564)
  (                    2176: LUT_2[198] = 5) (31566)
  c++ (31566)
  *c= 5 (31567)
  (                    2177: LUT_2[199] = 5) (31569)
  c++ (31569)
  *c= 5 (31570)
  (                    2178: LUT_2[200] = 5) (31572)
  c++ (31572)
  *c= 5 (31573)
  (                    2179: LUT_2[201] = 5) (31575)
  c++ (31575)
  *c= 5 (31576)
  (                    2180: LUT_2[202] = 5) (31578)
  c++ (31578)
  *c= 5 (31579)
  (                    2181: LUT_2[203] = 5) (31581)
  c++ (31581)
  *c= 5 (31582)
  (                    2182: LUT_2[204] = 5) (31584)
  c++ (31584)
  *c= 5 (31585)
  (                    2183: LUT_2[205] = 5) (31587)
  c++ (31587)
  *c= 5 (31588)
  (                    2184: LUT_2[206] = 5) (31590)
  c++ (31590)
  *c= 5 (31591)
  (                    2185: LUT_2[207] = 5) (31593)
  c++ (31593)
  *c= 5 (31594)
  (                    2186: LUT_2[208] = 5) (31596)
  c++ (31596)
  *c= 5 (31597)
  (                    2187: LUT_2[209] = 5) (31599)
  c++ (31599)
  *c= 5 (31600)
  (                    2188: LUT_2[210] = 5) (31602)
  c++ (31602)
  *c= 5 (31603)
  (                    2189: LUT_2[211] = 5) (31605)
  c++ (31605)
  *c= 5 (31606)
  (                    2190: LUT_2[212] = 5) (31608)
  c++ (31608)
  *c= 5 (31609)
  (                    2191: LUT_2[213] = 5) (31611)
  c++ (31611)
  *c= 5 (31612)
  (                    2192: LUT_2[214] = 5) (31614)
  c++ (31614)
  *c= 5 (31615)
  (                    2193: LUT_2[215] = 5) (31617)
  c++ (31617)
  *c= 5 (31618)
  (                    2194: LUT_2[216] = 5) (31620)
  c++ (31620)
  *c= 5 (31621)
  (                    2195: LUT_2[217] = 5) (31623)
  c++ (31623)
  *c= 5 (31624)
  (                    2196: LUT_2[218] = 5) (31626)
  c++ (31626)
  *c= 5 (31627)
  (                    2197: LUT_2[219] = 5) (31629)
  c++ (31629)
  *c= 5 (31630)
  (                    2198: LUT_2[220] = 5) (31632)
  c++ (31632)
  *c= 5 (31633)
  (                    2199: LUT_2[221] = 5) (31635)
  c++ (31635)
  *c= 5 (31636)
  (                    2200: LUT_2[222] = 5) (31638)
  c++ (31638)
  *c= 5 (31639)
  (                    2201: LUT_2[223] = 5) (31641)
  c++ (31641)
  *c= 5 (31642)
  (                    2202: LUT_2[224] = 5) (31644)
  c++ (31644)
  *c= 5 (31645)
  (                    2203: LUT_2[225] = 5) (31647)
  c++ (31647)
  *c= 5 (31648)
  (                    2204: LUT_2[226] = 5) (31650)
  c++ (31650)
  *c= 5 (31651)
  (                    2205: LUT_2[227] = 5) (31653)
  c++ (31653)
  *c= 5 (31654)
  (                    2206: LUT_2[228] = 5) (31656)
  c++ (31656)
  *c= 5 (31657)
  (                    2207: LUT_2[229] = 5) (31659)
  c++ (31659)
  *c= 5 (31660)
  (                    2208: LUT_2[230] = 5) (31662)
  c++ (31662)
  *c= 5 (31663)
  (                    2209: LUT_2[231] = 5) (31665)
  c++ (31665)
  *c= 5 (31666)
  (                    2210: LUT_2[232] = 5) (31668)
  c++ (31668)
  *c= 5 (31669)
  (                    2211: LUT_2[233] = 5) (31671)
  c++ (31671)
  *c= 5 (31672)
  (                    2212: LUT_2[234] = 5) (31674)
  c++ (31674)
  *c= 5 (31675)
  (                    2213: LUT_2[235] = 5) (31677)
  c++ (31677)
  *c= 5 (31678)
  (                    2214: LUT_2[236] = 5) (31680)
  c++ (31680)
  *c= 5 (31681)
  (                    2215: LUT_2[237] = 5) (31683)
  c++ (31683)
  *c= 5 (31684)
  (                    2216: LUT_2[238] = 5) (31686)
  c++ (31686)
  *c= 5 (31687)
  (                    2217: LUT_2[239] = 5) (31689)
  c++ (31689)
  *c= 5 (31690)
  (                    2218: LUT_2[240] = 6) (31692)
  c++ (31692)
  *c= 6 (31693)
  (                    2219: LUT_2[241] = 6) (31695)
  c++ (31695)
  *c= 6 (31696)
  (                    2220: LUT_2[242] = 6) (31698)
  c++ (31698)
  *c= 6 (31699)
  (                    2221: LUT_2[243] = 6) (31701)
  c++ (31701)
  *c= 6 (31702)
  (                    2222: LUT_2[244] = 6) (31704)
  c++ (31704)
  *c= 6 (31705)
  (                    2223: LUT_2[245] = 6) (31707)
  c++ (31707)
  *c= 6 (31708)
  (                    2224: LUT_2[246] = 6) (31710)
  c++ (31710)
  *c= 6 (31711)
  (                    2225: LUT_2[247] = 6) (31713)
  c++ (31713)
  *c= 6 (31714)
  (                    2226: LUT_2[248] = 6) (31716)
  c++ (31716)
  *c= 6 (31717)
  (                    2227: LUT_2[249] = 6) (31719)
  c++ (31719)
  *c= 6 (31720)
  (                    2228: LUT_2[250] = 6) (31722)
  c++ (31722)
  *c= 6 (31723)
  (                    2229: LUT_2[251] = 6) (31725)
  c++ (31725)
  *c= 6 (31726)
  (                    2230: LUT_2[252] = 6) (31728)
  c++ (31728)
  *c= 6 (31729)
  (                    2231: LUT_2[253] = 6) (31731)
  c++ (31731)
  *c= 6 (31732)
  (                    2232: LUT_2[254] = 6) (31734)
  c++ (31734)
  *c= 6 (31735)
  (                    2233: LUT_2[255] = 7) (31737)
  c++ (31737)
  *c= 7 (31738)
  a=c (31740)
  r=a 1 (31741)
  (                    2236: table = alloc_pH〈704*4〉) (31743)
  (         t1 = 704 * 4) (31743)
  c= 4 (31743)
  a= 2 (31745)
  a<<= 8 (31747)
  a+= 192 (31749)
  a*=c (31751)
  r=a 1 (31752)
  (         H[t0+15]〈〉 = t0) (31754)
  d++ (31754)
  a=r 0 (31755)
  *d=a (31757)
  (saved bsp, return id:) (31758)
  (         H[t0+16]〈〉 = 115) (31758)
  d++ (31758)
  *d= 115 (31759)
  (push arguments:) (31761)
  (         H[t0+17]〈〉 = t1) (31761)
  d++ (31761)
  a=r 1 (31762)
  *d=a (31764)
  (         t0 = t0 + 16) (31765)
  c= 16 (31765)
  a=r 0 (31767)
  a+=c (31769)
  r=a 0 (31770)
  (         goto addr_alloc_pH) (31772)
  lj 1446 (31772)
  (        :return_id_115:) (31775)
  (         t2 = t1) (31775)
  a=r 1 (31775)
  r=a 2 (31777)
  (         H[t0+15]〈table〉 = t2) (31779)
  a=r 0 (31779)
  a+= 15 (31781)
  d=a (31783)
  a=r 2 (31784)
  *d=a (31786)
  (                    2237: insert_and_copy_length = 0) (31787)
  (         H[t0+16]〈insert_and_copy_length〉 = 0) (31787)
  d++ (31787)
  *d=0 (31788)
  (                    2238: while insert_and_copy_length < 704:) (31789)
  (        :while_1277:) (31789)
  (         t1 = H[t0+16]〈insert_and_copy_length〉 < 704) (31789)
  a= 2 (31789)
  a<<= 8 (31791)
  a+= 192 (31793)
  c=a (31795)
  a=r 0 (31796)
  a+= 16 (31798)
  d=a (31800)
  a=*d (31801)
  a<c (31802)
  a=0 (31803)
  jf 1 (31804)
  a++ (31806)
  r=a 1 (31807)
  (         ifN t1 goto whileend_1279) (31809)
  a== 0 (31809)
  jf 3 (31811)
  lj 34092 (31813)
  (                    2239:   if insert_and_copy_length >= 0 and insert_and_copy_length <= 63:) (31816)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 0) (31816)
  c=0 (31816)
  a=*d (31817)
  a==c (31818)
  jt 4 (31819)
  a>c (31821)
  a=0 (31822)
  jf 2 (31823)
  a= 1 (31825)
  r=a 2 (31827)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 63) (31829)
  c= 63 (31829)
  a=*d (31831)
  a==c (31832)
  jt 4 (31833)
  a<c (31835)
  a=0 (31836)
  jf 2 (31837)
  a= 1 (31839)
  r=a 3 (31841)
  (         t1 = t2 and t3) (31843)
  c=a (31843)
  a=r 2 (31844)
  a== 0 (31846)
  jt 1 (31848)
  a=c (31850)
  r=a 1 (31851)
  (         ifN t1 goto else_1283) (31853)
  a== 0 (31853)
  jf 3 (31855)
  lj 31867 (31857)
  (                    2240:     insert_length_code = 0) (31860)
  (         H[t0+17]〈insert_length_code〉 = 0) (31860)
  d++ (31860)
  *d=0 (31861)
  (                    2241:     copy_length_code = 0) (31862)
  (         H[t0+18]〈copy_length_code〉 = 0) (31862)
  d++ (31862)
  *d=0 (31863)
  (         goto endif_1284) (31864)
  lj 32517 (31864)
  (        :else_1283:) (31867)
  (                    2242:   elif insert_and_copy_length >= 64 and insert_and_copy_length <= 127:) (31867)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 64) (31867)
  c= 64 (31867)
  a=r 0 (31869)
  a+= 16 (31871)
  d=a (31873)
  a=*d (31874)
  a==c (31875)
  jt 4 (31876)
  a>c (31878)
  a=0 (31879)
  jf 2 (31880)
  a= 1 (31882)
  r=a 2 (31884)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 127) (31886)
  c= 127 (31886)
  a=*d (31888)
  a==c (31889)
  jt 4 (31890)
  a<c (31892)
  a=0 (31893)
  jf 2 (31894)
  a= 1 (31896)
  r=a 3 (31898)
  (         t1 = t2 and t3) (31900)
  c=a (31900)
  a=r 2 (31901)
  a== 0 (31903)
  jt 1 (31905)
  a=c (31907)
  r=a 1 (31908)
  (         ifN t1 goto else_1287) (31910)
  a== 0 (31910)
  jf 3 (31912)
  lj 31925 (31914)
  (                    2243:     insert_length_code = 0) (31917)
  (         H[t0+17]〈insert_length_code〉 = 0) (31917)
  d++ (31917)
  *d=0 (31918)
  (                    2244:     copy_length_code = 8) (31919)
  (         H[t0+18]〈copy_length_code〉 = 8) (31919)
  d++ (31919)
  *d= 8 (31920)
  (         goto endif_1288) (31922)
  lj 32517 (31922)
  (        :else_1287:) (31925)
  (                    2245:   elif insert_and_copy_length >= 128 and insert_and_copy_length <= 191:) (31925)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 128) (31925)
  c= 128 (31925)
  a=r 0 (31927)
  a+= 16 (31929)
  d=a (31931)
  a=*d (31932)
  a==c (31933)
  jt 4 (31934)
  a>c (31936)
  a=0 (31937)
  jf 2 (31938)
  a= 1 (31940)
  r=a 2 (31942)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 191) (31944)
  c= 191 (31944)
  a=*d (31946)
  a==c (31947)
  jt 4 (31948)
  a<c (31950)
  a=0 (31951)
  jf 2 (31952)
  a= 1 (31954)
  r=a 3 (31956)
  (         t1 = t2 and t3) (31958)
  c=a (31958)
  a=r 2 (31959)
  a== 0 (31961)
  jt 1 (31963)
  a=c (31965)
  r=a 1 (31966)
  (         ifN t1 goto else_1291) (31968)
  a== 0 (31968)
  jf 3 (31970)
  lj 31982 (31972)
  (                    2246:     insert_length_code = 0) (31975)
  (         H[t0+17]〈insert_length_code〉 = 0) (31975)
  d++ (31975)
  *d=0 (31976)
  (                    2247:     copy_length_code = 0) (31977)
  (         H[t0+18]〈copy_length_code〉 = 0) (31977)
  d++ (31977)
  *d=0 (31978)
  (         goto endif_1292) (31979)
  lj 32517 (31979)
  (        :else_1291:) (31982)
  (                    2248:   elif insert_and_copy_length >= 192 and insert_and_copy_length <= 255:) (31982)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 192) (31982)
  c= 192 (31982)
  a=r 0 (31984)
  a+= 16 (31986)
  d=a (31988)
  a=*d (31989)
  a==c (31990)
  jt 4 (31991)
  a>c (31993)
  a=0 (31994)
  jf 2 (31995)
  a= 1 (31997)
  r=a 2 (31999)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 255) (32001)
  c= 255 (32001)
  a=*d (32003)
  a==c (32004)
  jt 4 (32005)
  a<c (32007)
  a=0 (32008)
  jf 2 (32009)
  a= 1 (32011)
  r=a 3 (32013)
  (         t1 = t2 and t3) (32015)
  c=a (32015)
  a=r 2 (32016)
  a== 0 (32018)
  jt 1 (32020)
  a=c (32022)
  r=a 1 (32023)
  (         ifN t1 goto else_1295) (32025)
  a== 0 (32025)
  jf 3 (32027)
  lj 32040 (32029)
  (                    2249:     insert_length_code = 0) (32032)
  (         H[t0+17]〈insert_length_code〉 = 0) (32032)
  d++ (32032)
  *d=0 (32033)
  (                    2250:     copy_length_code = 8) (32034)
  (         H[t0+18]〈copy_length_code〉 = 8) (32034)
  d++ (32034)
  *d= 8 (32035)
  (         goto endif_1296) (32037)
  lj 32517 (32037)
  (        :else_1295:) (32040)
  (                    2251:   elif insert_and_copy_length >= 256 and insert_and_copy_length <= 319:) (32040)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 256) (32040)
  a= 1 (32040)
  a<<= 8 (32042)
  c=a (32044)
  a=r 0 (32045)
  a+= 16 (32047)
  d=a (32049)
  a=*d (32050)
  a==c (32051)
  jt 4 (32052)
  a>c (32054)
  a=0 (32055)
  jf 2 (32056)
  a= 1 (32058)
  r=a 2 (32060)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 319) (32062)
  a= 1 (32062)
  a<<= 8 (32064)
  a+= 63 (32066)
  c=a (32068)
  a=*d (32069)
  a==c (32070)
  jt 4 (32071)
  a<c (32073)
  a=0 (32074)
  jf 2 (32075)
  a= 1 (32077)
  r=a 3 (32079)
  (         t1 = t2 and t3) (32081)
  c=a (32081)
  a=r 2 (32082)
  a== 0 (32084)
  jt 1 (32086)
  a=c (32088)
  r=a 1 (32089)
  (         ifN t1 goto else_1299) (32091)
  a== 0 (32091)
  jf 3 (32093)
  lj 32106 (32095)
  (                    2252:     insert_length_code = 8) (32098)
  (         H[t0+17]〈insert_length_code〉 = 8) (32098)
  d++ (32098)
  *d= 8 (32099)
  (                    2253:     copy_length_code = 0) (32101)
  (         H[t0+18]〈copy_length_code〉 = 0) (32101)
  d++ (32101)
  *d=0 (32102)
  (         goto endif_1300) (32103)
  lj 32517 (32103)
  (        :else_1299:) (32106)
  (                    2254:   elif insert_and_copy_length >= 320 and insert_and_copy_length <= 383:) (32106)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 320) (32106)
  a= 1 (32106)
  a<<= 8 (32108)
  a+= 64 (32110)
  c=a (32112)
  a=r 0 (32113)
  a+= 16 (32115)
  d=a (32117)
  a=*d (32118)
  a==c (32119)
  jt 4 (32120)
  a>c (32122)
  a=0 (32123)
  jf 2 (32124)
  a= 1 (32126)
  r=a 2 (32128)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 383) (32130)
  a= 1 (32130)
  a<<= 8 (32132)
  a+= 127 (32134)
  c=a (32136)
  a=*d (32137)
  a==c (32138)
  jt 4 (32139)
  a<c (32141)
  a=0 (32142)
  jf 2 (32143)
  a= 1 (32145)
  r=a 3 (32147)
  (         t1 = t2 and t3) (32149)
  c=a (32149)
  a=r 2 (32150)
  a== 0 (32152)
  jt 1 (32154)
  a=c (32156)
  r=a 1 (32157)
  (         ifN t1 goto else_1303) (32159)
  a== 0 (32159)
  jf 3 (32161)
  lj 32175 (32163)
  (                    2255:     insert_length_code = 8) (32166)
  (         H[t0+17]〈insert_length_code〉 = 8) (32166)
  d++ (32166)
  *d= 8 (32167)
  (                    2256:     copy_length_code = 8) (32169)
  (         H[t0+18]〈copy_length_code〉 = 8) (32169)
  d++ (32169)
  *d= 8 (32170)
  (         goto endif_1304) (32172)
  lj 32517 (32172)
  (        :else_1303:) (32175)
  (                    2257:   elif insert_and_copy_length >= 384 and insert_and_copy_length <= 447:) (32175)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 384) (32175)
  a= 1 (32175)
  a<<= 8 (32177)
  a+= 128 (32179)
  c=a (32181)
  a=r 0 (32182)
  a+= 16 (32184)
  d=a (32186)
  a=*d (32187)
  a==c (32188)
  jt 4 (32189)
  a>c (32191)
  a=0 (32192)
  jf 2 (32193)
  a= 1 (32195)
  r=a 2 (32197)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 447) (32199)
  a= 1 (32199)
  a<<= 8 (32201)
  a+= 191 (32203)
  c=a (32205)
  a=*d (32206)
  a==c (32207)
  jt 4 (32208)
  a<c (32210)
  a=0 (32211)
  jf 2 (32212)
  a= 1 (32214)
  r=a 3 (32216)
  (         t1 = t2 and t3) (32218)
  c=a (32218)
  a=r 2 (32219)
  a== 0 (32221)
  jt 1 (32223)
  a=c (32225)
  r=a 1 (32226)
  (         ifN t1 goto else_1307) (32228)
  a== 0 (32228)
  jf 3 (32230)
  lj 32243 (32232)
  (                    2258:     insert_length_code = 0) (32235)
  (         H[t0+17]〈insert_length_code〉 = 0) (32235)
  d++ (32235)
  *d=0 (32236)
  (                    2259:     copy_length_code = 16) (32237)
  (         H[t0+18]〈copy_length_code〉 = 16) (32237)
  d++ (32237)
  *d= 16 (32238)
  (         goto endif_1308) (32240)
  lj 32517 (32240)
  (        :else_1307:) (32243)
  (                    2260:   elif insert_and_copy_length >= 448 and insert_and_copy_length <= 511:) (32243)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 448) (32243)
  a= 1 (32243)
  a<<= 8 (32245)
  a+= 192 (32247)
  c=a (32249)
  a=r 0 (32250)
  a+= 16 (32252)
  d=a (32254)
  a=*d (32255)
  a==c (32256)
  jt 4 (32257)
  a>c (32259)
  a=0 (32260)
  jf 2 (32261)
  a= 1 (32263)
  r=a 2 (32265)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 511) (32267)
  a= 1 (32267)
  a<<= 8 (32269)
  a+= 255 (32271)
  c=a (32273)
  a=*d (32274)
  a==c (32275)
  jt 4 (32276)
  a<c (32278)
  a=0 (32279)
  jf 2 (32280)
  a= 1 (32282)
  r=a 3 (32284)
  (         t1 = t2 and t3) (32286)
  c=a (32286)
  a=r 2 (32287)
  a== 0 (32289)
  jt 1 (32291)
  a=c (32293)
  r=a 1 (32294)
  (         ifN t1 goto else_1311) (32296)
  a== 0 (32296)
  jf 3 (32298)
  lj 32311 (32300)
  (                    2261:     insert_length_code = 16) (32303)
  (         H[t0+17]〈insert_length_code〉 = 16) (32303)
  d++ (32303)
  *d= 16 (32304)
  (                    2262:     copy_length_code = 0) (32306)
  (         H[t0+18]〈copy_length_code〉 = 0) (32306)
  d++ (32306)
  *d=0 (32307)
  (         goto endif_1312) (32308)
  lj 32517 (32308)
  (        :else_1311:) (32311)
  (                    2263:   elif insert_and_copy_length >= 512 and insert_and_copy_length <= 575:) (32311)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 512) (32311)
  a= 2 (32311)
  a<<= 8 (32313)
  c=a (32315)
  a=r 0 (32316)
  a+= 16 (32318)
  d=a (32320)
  a=*d (32321)
  a==c (32322)
  jt 4 (32323)
  a>c (32325)
  a=0 (32326)
  jf 2 (32327)
  a= 1 (32329)
  r=a 2 (32331)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 575) (32333)
  a= 2 (32333)
  a<<= 8 (32335)
  a+= 63 (32337)
  c=a (32339)
  a=*d (32340)
  a==c (32341)
  jt 4 (32342)
  a<c (32344)
  a=0 (32345)
  jf 2 (32346)
  a= 1 (32348)
  r=a 3 (32350)
  (         t1 = t2 and t3) (32352)
  c=a (32352)
  a=r 2 (32353)
  a== 0 (32355)
  jt 1 (32357)
  a=c (32359)
  r=a 1 (32360)
  (         ifN t1 goto else_1315) (32362)
  a== 0 (32362)
  jf 3 (32364)
  lj 32378 (32366)
  (                    2264:     insert_length_code = 8) (32369)
  (         H[t0+17]〈insert_length_code〉 = 8) (32369)
  d++ (32369)
  *d= 8 (32370)
  (                    2265:     copy_length_code = 16) (32372)
  (         H[t0+18]〈copy_length_code〉 = 16) (32372)
  d++ (32372)
  *d= 16 (32373)
  (         goto endif_1316) (32375)
  lj 32517 (32375)
  (        :else_1315:) (32378)
  (                    2266:   elif insert_and_copy_length >= 576 and insert_and_copy_length <= 639:) (32378)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 576) (32378)
  a= 2 (32378)
  a<<= 8 (32380)
  a+= 64 (32382)
  c=a (32384)
  a=r 0 (32385)
  a+= 16 (32387)
  d=a (32389)
  a=*d (32390)
  a==c (32391)
  jt 4 (32392)
  a>c (32394)
  a=0 (32395)
  jf 2 (32396)
  a= 1 (32398)
  r=a 2 (32400)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 639) (32402)
  a= 2 (32402)
  a<<= 8 (32404)
  a+= 127 (32406)
  c=a (32408)
  a=*d (32409)
  a==c (32410)
  jt 4 (32411)
  a<c (32413)
  a=0 (32414)
  jf 2 (32415)
  a= 1 (32417)
  r=a 3 (32419)
  (         t1 = t2 and t3) (32421)
  c=a (32421)
  a=r 2 (32422)
  a== 0 (32424)
  jt 1 (32426)
  a=c (32428)
  r=a 1 (32429)
  (         ifN t1 goto else_1319) (32431)
  a== 0 (32431)
  jf 3 (32433)
  lj 32447 (32435)
  (                    2267:     insert_length_code = 16) (32438)
  (         H[t0+17]〈insert_length_code〉 = 16) (32438)
  d++ (32438)
  *d= 16 (32439)
  (                    2268:     copy_length_code = 8) (32441)
  (         H[t0+18]〈copy_length_code〉 = 8) (32441)
  d++ (32441)
  *d= 8 (32442)
  (         goto endif_1320) (32444)
  lj 32517 (32444)
  (        :else_1319:) (32447)
  (                    2269:   elif insert_and_copy_length >= 640 and insert_and_copy_length <= 703:) (32447)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >= 640) (32447)
  a= 2 (32447)
  a<<= 8 (32449)
  a+= 128 (32451)
  c=a (32453)
  a=r 0 (32454)
  a+= 16 (32456)
  d=a (32458)
  a=*d (32459)
  a==c (32460)
  jt 4 (32461)
  a>c (32463)
  a=0 (32464)
  jf 2 (32465)
  a= 1 (32467)
  r=a 2 (32469)
  (         t3 = H[t0+16]〈insert_and_copy_length〉 <= 703) (32471)
  a= 2 (32471)
  a<<= 8 (32473)
  a+= 191 (32475)
  c=a (32477)
  a=*d (32478)
  a==c (32479)
  jt 4 (32480)
  a<c (32482)
  a=0 (32483)
  jf 2 (32484)
  a= 1 (32486)
  r=a 3 (32488)
  (         t1 = t2 and t3) (32490)
  c=a (32490)
  a=r 2 (32491)
  a== 0 (32493)
  jt 1 (32495)
  a=c (32497)
  r=a 1 (32498)
  (         ifN t1 goto else_1323) (32500)
  a== 0 (32500)
  jf 3 (32502)
  lj 32516 (32504)
  (                    2270:     insert_length_code = 16) (32507)
  (         H[t0+17]〈insert_length_code〉 = 16) (32507)
  d++ (32507)
  *d= 16 (32508)
  (                    2271:     copy_length_code = 16) (32510)
  (         H[t0+18]〈copy_length_code〉 = 16) (32510)
  d++ (32510)
  *d= 16 (32511)
  (         goto endif_1324) (32513)
  lj 32517 (32513)
  (        :else_1323:) (32516)
  (                    2273:     error〈〉 # print〈'unreachable'〉) (32516)
  (         error) (32516)
  error (32516)
  (        :endif_1324:) (32517)
  (        :endif_1320:) (32517)
  (        :endif_1316:) (32517)
  (        :endif_1312:) (32517)
  (        :endif_1308:) (32517)
  (        :endif_1304:) (32517)
  (        :endif_1300:) (32517)
  (        :endif_1296:) (32517)
  (        :endif_1292:) (32517)
  (        :endif_1288:) (32517)
  (        :endif_1284:) (32517)
  (                    2274:   insert_length_code += 0x07 & 〈insert_and_copy_length >> 3〉) (32517)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 >> 3) (32517)
  c= 3 (32517)
  a=r 0 (32519)
  a+= 16 (32521)
  d=a (32523)
  a=*d (32524)
  a>>=c (32525)
  r=a 2 (32526)
  (         t1 = 7 & t2) (32528)
  c=a (32528)
  a= 7 (32529)
  a&=c (32531)
  r=a 1 (32532)
  (         H[t0+17]〈insert_length_code〉 = H[t0+17]〈insert_length_code〉 + t1) (32534)
  c=a (32534)
  d++ (32535)
  a=*d (32536)
  a+=c (32537)
  c=a (32538)
  *d=c (32539)
  (                    2275:   copy_length_code += 0x07 & insert_and_copy_length) (32540)
  (         t1 = 7 & H[t0+16]〈insert_and_copy_length〉) (32540)
  d-- (32540)
  c=*d (32541)
  a= 7 (32542)
  a&=c (32544)
  r=a 1 (32545)
  (         H[t0+18]〈copy_length_code〉 = H[t0+18]〈copy_length_code〉 + t1) (32547)
  c=a (32547)
  a=r 0 (32548)
  a+= 18 (32550)
  d=a (32552)
  a=*d (32553)
  a+=c (32554)
  c=a (32555)
  *d=c (32556)
  (                    2276:   if insert_length_code >= 0 and insert_length_code <= 5:) (32557)
  (         t2 = H[t0+17]〈insert_length_code〉 >= 0) (32557)
  c=0 (32557)
  d-- (32558)
  a=*d (32559)
  a==c (32560)
  jt 4 (32561)
  a>c (32563)
  a=0 (32564)
  jf 2 (32565)
  a= 1 (32567)
  r=a 2 (32569)
  (         t3 = H[t0+17]〈insert_length_code〉 <= 5) (32571)
  c= 5 (32571)
  a=*d (32573)
  a==c (32574)
  jt 4 (32575)
  a<c (32577)
  a=0 (32578)
  jf 2 (32579)
  a= 1 (32581)
  r=a 3 (32583)
  (         t1 = t2 and t3) (32585)
  c=a (32585)
  a=r 2 (32586)
  a== 0 (32588)
  jt 1 (32590)
  a=c (32592)
  r=a 1 (32593)
  (         ifN t1 goto else_1327) (32595)
  a== 0 (32595)
  jf 3 (32597)
  lj 32614 (32599)
  (                    2277:     insert_length = insert_length_code) (32602)
  (         H[t0+19]〈insert_length〉 = H[t0+17]〈insert_length_code〉) (32602)
  c=*d (32602)
  a=r 0 (32603)
  a+= 19 (32605)
  d=a (32607)
  *d=c (32608)
  (                    2278:     extra_bits_insert = 0) (32609)
  (         H[t0+20]〈extra_bits_insert〉 = 0) (32609)
  d++ (32609)
  *d=0 (32610)
  (         goto endif_1328) (32611)
  lj 33295 (32611)
  (        :else_1327:) (32614)
  (                    2279:   elif insert_length_code == 6 or insert_length_code == 7:) (32614)
  (         t2 = H[t0+17]〈insert_length_code〉 == 6) (32614)
  c= 6 (32614)
  a=r 0 (32616)
  a+= 17 (32618)
  d=a (32620)
  a=*d (32621)
  a==c (32622)
  a=0 (32623)
  jf 1 (32624)
  a++ (32626)
  r=a 2 (32627)
  (         t3 = H[t0+17]〈insert_length_code〉 == 7) (32629)
  c= 7 (32629)
  a=*d (32631)
  a==c (32632)
  a=0 (32633)
  jf 1 (32634)
  a++ (32636)
  r=a 3 (32637)
  (         t1 = t2 or t3) (32639)
  c=a (32639)
  a=r 2 (32640)
  a== 0 (32642)
  jf 1 (32644)
  a=c (32646)
  r=a 1 (32647)
  (         ifN t1 goto else_1331) (32649)
  a== 0 (32649)
  jf 3 (32651)
  lj 32688 (32653)
  (                    2280:     insert_length = 6 + 2 * 〈insert_length_code - 6〉) (32656)
  (         t3 = H[t0+17]〈insert_length_code〉 - 6) (32656)
  c= 6 (32656)
  a=*d (32658)
  a-=c (32659)
  r=a 3 (32660)
  (         t2 = 2 * t3) (32662)
  c=a (32662)
  a= 2 (32663)
  a*=c (32665)
  r=a 2 (32666)
  (         t1 = 6 + t2) (32668)
  c=a (32668)
  a= 6 (32669)
  a+=c (32671)
  r=a 1 (32672)
  (         H[t0+19]〈insert_length〉 = t1) (32674)
  a=r 0 (32674)
  a+= 19 (32676)
  d=a (32678)
  a=r 1 (32679)
  *d=a (32681)
  (                    2281:     extra_bits_insert = 1) (32682)
  (         H[t0+20]〈extra_bits_insert〉 = 1) (32682)
  d++ (32682)
  *d= 1 (32683)
  (         goto endif_1332) (32685)
  lj 33295 (32685)
  (        :else_1331:) (32688)
  (                    2282:   elif insert_length_code == 8 or insert_length_code == 9:) (32688)
  (         t2 = H[t0+17]〈insert_length_code〉 == 8) (32688)
  c= 8 (32688)
  a=r 0 (32690)
  a+= 17 (32692)
  d=a (32694)
  a=*d (32695)
  a==c (32696)
  a=0 (32697)
  jf 1 (32698)
  a++ (32700)
  r=a 2 (32701)
  (         t3 = H[t0+17]〈insert_length_code〉 == 9) (32703)
  c= 9 (32703)
  a=*d (32705)
  a==c (32706)
  a=0 (32707)
  jf 1 (32708)
  a++ (32710)
  r=a 3 (32711)
  (         t1 = t2 or t3) (32713)
  c=a (32713)
  a=r 2 (32714)
  a== 0 (32716)
  jf 1 (32718)
  a=c (32720)
  r=a 1 (32721)
  (         ifN t1 goto else_1335) (32723)
  a== 0 (32723)
  jf 3 (32725)
  lj 32762 (32727)
  (                    2283:     insert_length = 10 + 4 * 〈insert_length_code - 8〉) (32730)
  (         t3 = H[t0+17]〈insert_length_code〉 - 8) (32730)
  c= 8 (32730)
  a=*d (32732)
  a-=c (32733)
  r=a 3 (32734)
  (         t2 = 4 * t3) (32736)
  c=a (32736)
  a= 4 (32737)
  a*=c (32739)
  r=a 2 (32740)
  (         t1 = 10 + t2) (32742)
  c=a (32742)
  a= 10 (32743)
  a+=c (32745)
  r=a 1 (32746)
  (         H[t0+19]〈insert_length〉 = t1) (32748)
  a=r 0 (32748)
  a+= 19 (32750)
  d=a (32752)
  a=r 1 (32753)
  *d=a (32755)
  (                    2284:     extra_bits_insert = 2) (32756)
  (         H[t0+20]〈extra_bits_insert〉 = 2) (32756)
  d++ (32756)
  *d= 2 (32757)
  (         goto endif_1336) (32759)
  lj 33295 (32759)
  (        :else_1335:) (32762)
  (                    2285:   elif insert_length_code == 10 or insert_length_code == 11:) (32762)
  (         t2 = H[t0+17]〈insert_length_code〉 == 10) (32762)
  c= 10 (32762)
  a=r 0 (32764)
  a+= 17 (32766)
  d=a (32768)
  a=*d (32769)
  a==c (32770)
  a=0 (32771)
  jf 1 (32772)
  a++ (32774)
  r=a 2 (32775)
  (         t3 = H[t0+17]〈insert_length_code〉 == 11) (32777)
  c= 11 (32777)
  a=*d (32779)
  a==c (32780)
  a=0 (32781)
  jf 1 (32782)
  a++ (32784)
  r=a 3 (32785)
  (         t1 = t2 or t3) (32787)
  c=a (32787)
  a=r 2 (32788)
  a== 0 (32790)
  jf 1 (32792)
  a=c (32794)
  r=a 1 (32795)
  (         ifN t1 goto else_1339) (32797)
  a== 0 (32797)
  jf 3 (32799)
  lj 32836 (32801)
  (                    2286:     insert_length = 18 + 8 * 〈insert_length_code - 10〉) (32804)
  (         t3 = H[t0+17]〈insert_length_code〉 - 10) (32804)
  c= 10 (32804)
  a=*d (32806)
  a-=c (32807)
  r=a 3 (32808)
  (         t2 = 8 * t3) (32810)
  c=a (32810)
  a= 8 (32811)
  a*=c (32813)
  r=a 2 (32814)
  (         t1 = 18 + t2) (32816)
  c=a (32816)
  a= 18 (32817)
  a+=c (32819)
  r=a 1 (32820)
  (         H[t0+19]〈insert_length〉 = t1) (32822)
  a=r 0 (32822)
  a+= 19 (32824)
  d=a (32826)
  a=r 1 (32827)
  *d=a (32829)
  (                    2287:     extra_bits_insert = 3) (32830)
  (         H[t0+20]〈extra_bits_insert〉 = 3) (32830)
  d++ (32830)
  *d= 3 (32831)
  (         goto endif_1340) (32833)
  lj 33295 (32833)
  (        :else_1339:) (32836)
  (                    2288:   elif insert_length_code == 12 or insert_length_code == 13:) (32836)
  (         t2 = H[t0+17]〈insert_length_code〉 == 12) (32836)
  c= 12 (32836)
  a=r 0 (32838)
  a+= 17 (32840)
  d=a (32842)
  a=*d (32843)
  a==c (32844)
  a=0 (32845)
  jf 1 (32846)
  a++ (32848)
  r=a 2 (32849)
  (         t3 = H[t0+17]〈insert_length_code〉 == 13) (32851)
  c= 13 (32851)
  a=*d (32853)
  a==c (32854)
  a=0 (32855)
  jf 1 (32856)
  a++ (32858)
  r=a 3 (32859)
  (         t1 = t2 or t3) (32861)
  c=a (32861)
  a=r 2 (32862)
  a== 0 (32864)
  jf 1 (32866)
  a=c (32868)
  r=a 1 (32869)
  (         ifN t1 goto else_1343) (32871)
  a== 0 (32871)
  jf 3 (32873)
  lj 32910 (32875)
  (                    2289:     insert_length = 34 + 16 * 〈insert_length_code - 12〉) (32878)
  (         t3 = H[t0+17]〈insert_length_code〉 - 12) (32878)
  c= 12 (32878)
  a=*d (32880)
  a-=c (32881)
  r=a 3 (32882)
  (         t2 = 16 * t3) (32884)
  c=a (32884)
  a= 16 (32885)
  a*=c (32887)
  r=a 2 (32888)
  (         t1 = 34 + t2) (32890)
  c=a (32890)
  a= 34 (32891)
  a+=c (32893)
  r=a 1 (32894)
  (         H[t0+19]〈insert_length〉 = t1) (32896)
  a=r 0 (32896)
  a+= 19 (32898)
  d=a (32900)
  a=r 1 (32901)
  *d=a (32903)
  (                    2290:     extra_bits_insert = 4) (32904)
  (         H[t0+20]〈extra_bits_insert〉 = 4) (32904)
  d++ (32904)
  *d= 4 (32905)
  (         goto endif_1344) (32907)
  lj 33295 (32907)
  (        :else_1343:) (32910)
  (                    2291:   elif insert_length_code == 14 or insert_length_code == 15:) (32910)
  (         t2 = H[t0+17]〈insert_length_code〉 == 14) (32910)
  c= 14 (32910)
  a=r 0 (32912)
  a+= 17 (32914)
  d=a (32916)
  a=*d (32917)
  a==c (32918)
  a=0 (32919)
  jf 1 (32920)
  a++ (32922)
  r=a 2 (32923)
  (         t3 = H[t0+17]〈insert_length_code〉 == 15) (32925)
  c= 15 (32925)
  a=*d (32927)
  a==c (32928)
  a=0 (32929)
  jf 1 (32930)
  a++ (32932)
  r=a 3 (32933)
  (         t1 = t2 or t3) (32935)
  c=a (32935)
  a=r 2 (32936)
  a== 0 (32938)
  jf 1 (32940)
  a=c (32942)
  r=a 1 (32943)
  (         ifN t1 goto else_1347) (32945)
  a== 0 (32945)
  jf 3 (32947)
  lj 32984 (32949)
  (                    2292:     insert_length = 66 + 32 * 〈insert_length_code - 14〉) (32952)
  (         t3 = H[t0+17]〈insert_length_code〉 - 14) (32952)
  c= 14 (32952)
  a=*d (32954)
  a-=c (32955)
  r=a 3 (32956)
  (         t2 = 32 * t3) (32958)
  c=a (32958)
  a= 32 (32959)
  a*=c (32961)
  r=a 2 (32962)
  (         t1 = 66 + t2) (32964)
  c=a (32964)
  a= 66 (32965)
  a+=c (32967)
  r=a 1 (32968)
  (         H[t0+19]〈insert_length〉 = t1) (32970)
  a=r 0 (32970)
  a+= 19 (32972)
  d=a (32974)
  a=r 1 (32975)
  *d=a (32977)
  (                    2293:     extra_bits_insert = 5) (32978)
  (         H[t0+20]〈extra_bits_insert〉 = 5) (32978)
  d++ (32978)
  *d= 5 (32979)
  (         goto endif_1348) (32981)
  lj 33295 (32981)
  (        :else_1347:) (32984)
  (                    2294:   elif insert_length_code == 16:) (32984)
  (         t1 = H[t0+17]〈insert_length_code〉 == 16) (32984)
  c= 16 (32984)
  a=r 0 (32986)
  a+= 17 (32988)
  d=a (32990)
  a=*d (32991)
  a==c (32992)
  a=0 (32993)
  jf 1 (32994)
  a++ (32996)
  r=a 1 (32997)
  (         ifN t1 goto else_1350) (32999)
  a== 0 (32999)
  jf 3 (33001)
  lj 33019 (33003)
  (                    2295:     insert_length = 130) (33006)
  (         H[t0+19]〈insert_length〉 = 130) (33006)
  a=r 0 (33006)
  a+= 19 (33008)
  d=a (33010)
  *d= 130 (33011)
  (                    2296:     extra_bits_insert = 6) (33013)
  (         H[t0+20]〈extra_bits_insert〉 = 6) (33013)
  d++ (33013)
  *d= 6 (33014)
  (         goto endif_1351) (33016)
  lj 33295 (33016)
  (        :else_1350:) (33019)
  (                    2297:   elif insert_length_code == 17:) (33019)
  (         t1 = H[t0+17]〈insert_length_code〉 == 17) (33019)
  c= 17 (33019)
  a=r 0 (33021)
  a+= 17 (33023)
  d=a (33025)
  a=*d (33026)
  a==c (33027)
  a=0 (33028)
  jf 1 (33029)
  a++ (33031)
  r=a 1 (33032)
  (         ifN t1 goto else_1353) (33034)
  a== 0 (33034)
  jf 3 (33036)
  lj 33054 (33038)
  (                    2298:     insert_length = 194) (33041)
  (         H[t0+19]〈insert_length〉 = 194) (33041)
  a=r 0 (33041)
  a+= 19 (33043)
  d=a (33045)
  *d= 194 (33046)
  (                    2299:     extra_bits_insert = 7) (33048)
  (         H[t0+20]〈extra_bits_insert〉 = 7) (33048)
  d++ (33048)
  *d= 7 (33049)
  (         goto endif_1354) (33051)
  lj 33295 (33051)
  (        :else_1353:) (33054)
  (                    2300:   elif insert_length_code == 18:) (33054)
  (         t1 = H[t0+17]〈insert_length_code〉 == 18) (33054)
  c= 18 (33054)
  a=r 0 (33056)
  a+= 17 (33058)
  d=a (33060)
  a=*d (33061)
  a==c (33062)
  a=0 (33063)
  jf 1 (33064)
  a++ (33066)
  r=a 1 (33067)
  (         ifN t1 goto else_1356) (33069)
  a== 0 (33069)
  jf 3 (33071)
  lj 33094 (33073)
  (                    2301:     insert_length = 322) (33076)
  (         H[t0+19]〈insert_length〉 = 322) (33076)
  a=r 0 (33076)
  a+= 19 (33078)
  d=a (33080)
  a= 1 (33081)
  a<<= 8 (33083)
  a+= 66 (33085)
  *d=a (33087)
  (                    2302:     extra_bits_insert = 8) (33088)
  (         H[t0+20]〈extra_bits_insert〉 = 8) (33088)
  d++ (33088)
  *d= 8 (33089)
  (         goto endif_1357) (33091)
  lj 33295 (33091)
  (        :else_1356:) (33094)
  (                    2303:   elif insert_length_code == 19:) (33094)
  (         t1 = H[t0+17]〈insert_length_code〉 == 19) (33094)
  c= 19 (33094)
  a=r 0 (33096)
  a+= 17 (33098)
  d=a (33100)
  a=*d (33101)
  a==c (33102)
  a=0 (33103)
  jf 1 (33104)
  a++ (33106)
  r=a 1 (33107)
  (         ifN t1 goto else_1359) (33109)
  a== 0 (33109)
  jf 3 (33111)
  lj 33134 (33113)
  (                    2304:     insert_length = 578) (33116)
  (         H[t0+19]〈insert_length〉 = 578) (33116)
  a=r 0 (33116)
  a+= 19 (33118)
  d=a (33120)
  a= 2 (33121)
  a<<= 8 (33123)
  a+= 66 (33125)
  *d=a (33127)
  (                    2305:     extra_bits_insert = 9) (33128)
  (         H[t0+20]〈extra_bits_insert〉 = 9) (33128)
  d++ (33128)
  *d= 9 (33129)
  (         goto endif_1360) (33131)
  lj 33295 (33131)
  (        :else_1359:) (33134)
  (                    2306:   elif insert_length_code == 20:) (33134)
  (         t1 = H[t0+17]〈insert_length_code〉 == 20) (33134)
  c= 20 (33134)
  a=r 0 (33136)
  a+= 17 (33138)
  d=a (33140)
  a=*d (33141)
  a==c (33142)
  a=0 (33143)
  jf 1 (33144)
  a++ (33146)
  r=a 1 (33147)
  (         ifN t1 goto else_1362) (33149)
  a== 0 (33149)
  jf 3 (33151)
  lj 33174 (33153)
  (                    2307:     insert_length = 1090) (33156)
  (         H[t0+19]〈insert_length〉 = 1090) (33156)
  a=r 0 (33156)
  a+= 19 (33158)
  d=a (33160)
  a= 4 (33161)
  a<<= 8 (33163)
  a+= 66 (33165)
  *d=a (33167)
  (                    2308:     extra_bits_insert = 10) (33168)
  (         H[t0+20]〈extra_bits_insert〉 = 10) (33168)
  d++ (33168)
  *d= 10 (33169)
  (         goto endif_1363) (33171)
  lj 33295 (33171)
  (        :else_1362:) (33174)
  (                    2309:   elif insert_length_code == 21:) (33174)
  (         t1 = H[t0+17]〈insert_length_code〉 == 21) (33174)
  c= 21 (33174)
  a=r 0 (33176)
  a+= 17 (33178)
  d=a (33180)
  a=*d (33181)
  a==c (33182)
  a=0 (33183)
  jf 1 (33184)
  a++ (33186)
  r=a 1 (33187)
  (         ifN t1 goto else_1365) (33189)
  a== 0 (33189)
  jf 3 (33191)
  lj 33214 (33193)
  (                    2310:     insert_length = 2114) (33196)
  (         H[t0+19]〈insert_length〉 = 2114) (33196)
  a=r 0 (33196)
  a+= 19 (33198)
  d=a (33200)
  a= 8 (33201)
  a<<= 8 (33203)
  a+= 66 (33205)
  *d=a (33207)
  (                    2311:     extra_bits_insert = 12) (33208)
  (         H[t0+20]〈extra_bits_insert〉 = 12) (33208)
  d++ (33208)
  *d= 12 (33209)
  (         goto endif_1366) (33211)
  lj 33295 (33211)
  (        :else_1365:) (33214)
  (                    2312:   elif insert_length_code == 22:) (33214)
  (         t1 = H[t0+17]〈insert_length_code〉 == 22) (33214)
  c= 22 (33214)
  a=r 0 (33216)
  a+= 17 (33218)
  d=a (33220)
  a=*d (33221)
  a==c (33222)
  a=0 (33223)
  jf 1 (33224)
  a++ (33226)
  r=a 1 (33227)
  (         ifN t1 goto else_1368) (33229)
  a== 0 (33229)
  jf 3 (33231)
  lj 33254 (33233)
  (                    2313:     insert_length = 6210) (33236)
  (         H[t0+19]〈insert_length〉 = 6210) (33236)
  a=r 0 (33236)
  a+= 19 (33238)
  d=a (33240)
  a= 24 (33241)
  a<<= 8 (33243)
  a+= 66 (33245)
  *d=a (33247)
  (                    2314:     extra_bits_insert = 14) (33248)
  (         H[t0+20]〈extra_bits_insert〉 = 14) (33248)
  d++ (33248)
  *d= 14 (33249)
  (         goto endif_1369) (33251)
  lj 33295 (33251)
  (        :else_1368:) (33254)
  (                    2315:   elif insert_length_code == 23:) (33254)
  (         t1 = H[t0+17]〈insert_length_code〉 == 23) (33254)
  c= 23 (33254)
  a=r 0 (33256)
  a+= 17 (33258)
  d=a (33260)
  a=*d (33261)
  a==c (33262)
  a=0 (33263)
  jf 1 (33264)
  a++ (33266)
  r=a 1 (33267)
  (         ifN t1 goto else_1371) (33269)
  a== 0 (33269)
  jf 3 (33271)
  lj 33294 (33273)
  (                    2316:     insert_length = 22594) (33276)
  (         H[t0+19]〈insert_length〉 = 22594) (33276)
  a=r 0 (33276)
  a+= 19 (33278)
  d=a (33280)
  a= 88 (33281)
  a<<= 8 (33283)
  a+= 66 (33285)
  *d=a (33287)
  (                    2317:     extra_bits_insert = 24) (33288)
  (         H[t0+20]〈extra_bits_insert〉 = 24) (33288)
  d++ (33288)
  *d= 24 (33289)
  (         goto endif_1372) (33291)
  lj 33295 (33291)
  (        :else_1371:) (33294)
  (                    2319:     error〈〉 # print〈'unreachable'〉) (33294)
  (         error) (33294)
  error (33294)
  (        :endif_1372:) (33295)
  (        :endif_1369:) (33295)
  (        :endif_1366:) (33295)
  (        :endif_1363:) (33295)
  (        :endif_1360:) (33295)
  (        :endif_1357:) (33295)
  (        :endif_1354:) (33295)
  (        :endif_1351:) (33295)
  (        :endif_1348:) (33295)
  (        :endif_1344:) (33295)
  (        :endif_1340:) (33295)
  (        :endif_1336:) (33295)
  (        :endif_1332:) (33295)
  (        :endif_1328:) (33295)
  (                    2320:   if copy_length_code >= 0 and copy_length_code <= 7:) (33295)
  (         t2 = H[t0+18]〈copy_length_code〉 >= 0) (33295)
  c=0 (33295)
  a=r 0 (33296)
  a+= 18 (33298)
  d=a (33300)
  a=*d (33301)
  a==c (33302)
  jt 4 (33303)
  a>c (33305)
  a=0 (33306)
  jf 2 (33307)
  a= 1 (33309)
  r=a 2 (33311)
  (         t3 = H[t0+18]〈copy_length_code〉 <= 7) (33313)
  c= 7 (33313)
  a=*d (33315)
  a==c (33316)
  jt 4 (33317)
  a<c (33319)
  a=0 (33320)
  jf 2 (33321)
  a= 1 (33323)
  r=a 3 (33325)
  (         t1 = t2 and t3) (33327)
  c=a (33327)
  a=r 2 (33328)
  a== 0 (33330)
  jt 1 (33332)
  a=c (33334)
  r=a 1 (33335)
  (         ifN t1 goto else_1375) (33337)
  a== 0 (33337)
  jf 3 (33339)
  lj 33363 (33341)
  (                    2321:     copy_length = copy_length_code + 2) (33344)
  (         t1 = H[t0+18]〈copy_length_code〉 + 2) (33344)
  c= 2 (33344)
  a=*d (33346)
  a+=c (33347)
  r=a 1 (33348)
  (         H[t0+21]〈copy_length〉 = t1) (33350)
  a=r 0 (33350)
  a+= 21 (33352)
  d=a (33354)
  a=r 1 (33355)
  *d=a (33357)
  (                    2322:     extra_bits_copy = 0) (33358)
  (         H[t0+22]〈extra_bits_copy〉 = 0) (33358)
  d++ (33358)
  *d=0 (33359)
  (         goto endif_1376) (33360)
  lj 33964 (33360)
  (        :else_1375:) (33363)
  (                    2323:   elif copy_length_code == 8 or copy_length_code == 9:) (33363)
  (         t2 = H[t0+18]〈copy_length_code〉 == 8) (33363)
  c= 8 (33363)
  a=r 0 (33365)
  a+= 18 (33367)
  d=a (33369)
  a=*d (33370)
  a==c (33371)
  a=0 (33372)
  jf 1 (33373)
  a++ (33375)
  r=a 2 (33376)
  (         t3 = H[t0+18]〈copy_length_code〉 == 9) (33378)
  c= 9 (33378)
  a=*d (33380)
  a==c (33381)
  a=0 (33382)
  jf 1 (33383)
  a++ (33385)
  r=a 3 (33386)
  (         t1 = t2 or t3) (33388)
  c=a (33388)
  a=r 2 (33389)
  a== 0 (33391)
  jf 1 (33393)
  a=c (33395)
  r=a 1 (33396)
  (         ifN t1 goto else_1379) (33398)
  a== 0 (33398)
  jf 3 (33400)
  lj 33437 (33402)
  (                    2324:     copy_length = 10 + 2 * 〈copy_length_code - 8〉) (33405)
  (         t3 = H[t0+18]〈copy_length_code〉 - 8) (33405)
  c= 8 (33405)
  a=*d (33407)
  a-=c (33408)
  r=a 3 (33409)
  (         t2 = 2 * t3) (33411)
  c=a (33411)
  a= 2 (33412)
  a*=c (33414)
  r=a 2 (33415)
  (         t1 = 10 + t2) (33417)
  c=a (33417)
  a= 10 (33418)
  a+=c (33420)
  r=a 1 (33421)
  (         H[t0+21]〈copy_length〉 = t1) (33423)
  a=r 0 (33423)
  a+= 21 (33425)
  d=a (33427)
  a=r 1 (33428)
  *d=a (33430)
  (                    2325:     extra_bits_copy = 1) (33431)
  (         H[t0+22]〈extra_bits_copy〉 = 1) (33431)
  d++ (33431)
  *d= 1 (33432)
  (         goto endif_1380) (33434)
  lj 33964 (33434)
  (        :else_1379:) (33437)
  (                    2326:   elif copy_length_code == 10 or copy_length_code == 11:) (33437)
  (         t2 = H[t0+18]〈copy_length_code〉 == 10) (33437)
  c= 10 (33437)
  a=r 0 (33439)
  a+= 18 (33441)
  d=a (33443)
  a=*d (33444)
  a==c (33445)
  a=0 (33446)
  jf 1 (33447)
  a++ (33449)
  r=a 2 (33450)
  (         t3 = H[t0+18]〈copy_length_code〉 == 11) (33452)
  c= 11 (33452)
  a=*d (33454)
  a==c (33455)
  a=0 (33456)
  jf 1 (33457)
  a++ (33459)
  r=a 3 (33460)
  (         t1 = t2 or t3) (33462)
  c=a (33462)
  a=r 2 (33463)
  a== 0 (33465)
  jf 1 (33467)
  a=c (33469)
  r=a 1 (33470)
  (         ifN t1 goto else_1383) (33472)
  a== 0 (33472)
  jf 3 (33474)
  lj 33511 (33476)
  (                    2327:     copy_length = 14 + 4 * 〈copy_length_code - 10〉) (33479)
  (         t3 = H[t0+18]〈copy_length_code〉 - 10) (33479)
  c= 10 (33479)
  a=*d (33481)
  a-=c (33482)
  r=a 3 (33483)
  (         t2 = 4 * t3) (33485)
  c=a (33485)
  a= 4 (33486)
  a*=c (33488)
  r=a 2 (33489)
  (         t1 = 14 + t2) (33491)
  c=a (33491)
  a= 14 (33492)
  a+=c (33494)
  r=a 1 (33495)
  (         H[t0+21]〈copy_length〉 = t1) (33497)
  a=r 0 (33497)
  a+= 21 (33499)
  d=a (33501)
  a=r 1 (33502)
  *d=a (33504)
  (                    2328:     extra_bits_copy = 2) (33505)
  (         H[t0+22]〈extra_bits_copy〉 = 2) (33505)
  d++ (33505)
  *d= 2 (33506)
  (         goto endif_1384) (33508)
  lj 33964 (33508)
  (        :else_1383:) (33511)
  (                    2329:   elif copy_length_code == 12 or copy_length_code == 13:) (33511)
  (         t2 = H[t0+18]〈copy_length_code〉 == 12) (33511)
  c= 12 (33511)
  a=r 0 (33513)
  a+= 18 (33515)
  d=a (33517)
  a=*d (33518)
  a==c (33519)
  a=0 (33520)
  jf 1 (33521)
  a++ (33523)
  r=a 2 (33524)
  (         t3 = H[t0+18]〈copy_length_code〉 == 13) (33526)
  c= 13 (33526)
  a=*d (33528)
  a==c (33529)
  a=0 (33530)
  jf 1 (33531)
  a++ (33533)
  r=a 3 (33534)
  (         t1 = t2 or t3) (33536)
  c=a (33536)
  a=r 2 (33537)
  a== 0 (33539)
  jf 1 (33541)
  a=c (33543)
  r=a 1 (33544)
  (         ifN t1 goto else_1387) (33546)
  a== 0 (33546)
  jf 3 (33548)
  lj 33585 (33550)
  (                    2330:     copy_length = 22 + 8 * 〈copy_length_code - 12〉) (33553)
  (         t3 = H[t0+18]〈copy_length_code〉 - 12) (33553)
  c= 12 (33553)
  a=*d (33555)
  a-=c (33556)
  r=a 3 (33557)
  (         t2 = 8 * t3) (33559)
  c=a (33559)
  a= 8 (33560)
  a*=c (33562)
  r=a 2 (33563)
  (         t1 = 22 + t2) (33565)
  c=a (33565)
  a= 22 (33566)
  a+=c (33568)
  r=a 1 (33569)
  (         H[t0+21]〈copy_length〉 = t1) (33571)
  a=r 0 (33571)
  a+= 21 (33573)
  d=a (33575)
  a=r 1 (33576)
  *d=a (33578)
  (                    2331:     extra_bits_copy = 3) (33579)
  (         H[t0+22]〈extra_bits_copy〉 = 3) (33579)
  d++ (33579)
  *d= 3 (33580)
  (         goto endif_1388) (33582)
  lj 33964 (33582)
  (        :else_1387:) (33585)
  (                    2332:   elif copy_length_code == 14 or copy_length_code == 15:) (33585)
  (         t2 = H[t0+18]〈copy_length_code〉 == 14) (33585)
  c= 14 (33585)
  a=r 0 (33587)
  a+= 18 (33589)
  d=a (33591)
  a=*d (33592)
  a==c (33593)
  a=0 (33594)
  jf 1 (33595)
  a++ (33597)
  r=a 2 (33598)
  (         t3 = H[t0+18]〈copy_length_code〉 == 15) (33600)
  c= 15 (33600)
  a=*d (33602)
  a==c (33603)
  a=0 (33604)
  jf 1 (33605)
  a++ (33607)
  r=a 3 (33608)
  (         t1 = t2 or t3) (33610)
  c=a (33610)
  a=r 2 (33611)
  a== 0 (33613)
  jf 1 (33615)
  a=c (33617)
  r=a 1 (33618)
  (         ifN t1 goto else_1391) (33620)
  a== 0 (33620)
  jf 3 (33622)
  lj 33659 (33624)
  (                    2333:     copy_length = 38 + 16 * 〈copy_length_code - 14〉) (33627)
  (         t3 = H[t0+18]〈copy_length_code〉 - 14) (33627)
  c= 14 (33627)
  a=*d (33629)
  a-=c (33630)
  r=a 3 (33631)
  (         t2 = 16 * t3) (33633)
  c=a (33633)
  a= 16 (33634)
  a*=c (33636)
  r=a 2 (33637)
  (         t1 = 38 + t2) (33639)
  c=a (33639)
  a= 38 (33640)
  a+=c (33642)
  r=a 1 (33643)
  (         H[t0+21]〈copy_length〉 = t1) (33645)
  a=r 0 (33645)
  a+= 21 (33647)
  d=a (33649)
  a=r 1 (33650)
  *d=a (33652)
  (                    2334:     extra_bits_copy = 4) (33653)
  (         H[t0+22]〈extra_bits_copy〉 = 4) (33653)
  d++ (33653)
  *d= 4 (33654)
  (         goto endif_1392) (33656)
  lj 33964 (33656)
  (        :else_1391:) (33659)
  (                    2335:   elif copy_length_code == 16 or copy_length_code == 17:) (33659)
  (         t2 = H[t0+18]〈copy_length_code〉 == 16) (33659)
  c= 16 (33659)
  a=r 0 (33661)
  a+= 18 (33663)
  d=a (33665)
  a=*d (33666)
  a==c (33667)
  a=0 (33668)
  jf 1 (33669)
  a++ (33671)
  r=a 2 (33672)
  (         t3 = H[t0+18]〈copy_length_code〉 == 17) (33674)
  c= 17 (33674)
  a=*d (33676)
  a==c (33677)
  a=0 (33678)
  jf 1 (33679)
  a++ (33681)
  r=a 3 (33682)
  (         t1 = t2 or t3) (33684)
  c=a (33684)
  a=r 2 (33685)
  a== 0 (33687)
  jf 1 (33689)
  a=c (33691)
  r=a 1 (33692)
  (         ifN t1 goto else_1395) (33694)
  a== 0 (33694)
  jf 3 (33696)
  lj 33733 (33698)
  (                    2336:     copy_length = 70 + 32 * 〈copy_length_code - 16〉) (33701)
  (         t3 = H[t0+18]〈copy_length_code〉 - 16) (33701)
  c= 16 (33701)
  a=*d (33703)
  a-=c (33704)
  r=a 3 (33705)
  (         t2 = 32 * t3) (33707)
  c=a (33707)
  a= 32 (33708)
  a*=c (33710)
  r=a 2 (33711)
  (         t1 = 70 + t2) (33713)
  c=a (33713)
  a= 70 (33714)
  a+=c (33716)
  r=a 1 (33717)
  (         H[t0+21]〈copy_length〉 = t1) (33719)
  a=r 0 (33719)
  a+= 21 (33721)
  d=a (33723)
  a=r 1 (33724)
  *d=a (33726)
  (                    2337:     extra_bits_copy = 5) (33727)
  (         H[t0+22]〈extra_bits_copy〉 = 5) (33727)
  d++ (33727)
  *d= 5 (33728)
  (         goto endif_1396) (33730)
  lj 33964 (33730)
  (        :else_1395:) (33733)
  (                    2338:   elif copy_length_code == 18:) (33733)
  (         t1 = H[t0+18]〈copy_length_code〉 == 18) (33733)
  c= 18 (33733)
  a=r 0 (33735)
  a+= 18 (33737)
  d=a (33739)
  a=*d (33740)
  a==c (33741)
  a=0 (33742)
  jf 1 (33743)
  a++ (33745)
  r=a 1 (33746)
  (         ifN t1 goto else_1398) (33748)
  a== 0 (33748)
  jf 3 (33750)
  lj 33768 (33752)
  (                    2339:     copy_length = 134) (33755)
  (         H[t0+21]〈copy_length〉 = 134) (33755)
  a=r 0 (33755)
  a+= 21 (33757)
  d=a (33759)
  *d= 134 (33760)
  (                    2340:     extra_bits_copy = 6) (33762)
  (         H[t0+22]〈extra_bits_copy〉 = 6) (33762)
  d++ (33762)
  *d= 6 (33763)
  (         goto endif_1399) (33765)
  lj 33964 (33765)
  (        :else_1398:) (33768)
  (                    2341:   elif copy_length_code == 19:) (33768)
  (         t1 = H[t0+18]〈copy_length_code〉 == 19) (33768)
  c= 19 (33768)
  a=r 0 (33770)
  a+= 18 (33772)
  d=a (33774)
  a=*d (33775)
  a==c (33776)
  a=0 (33777)
  jf 1 (33778)
  a++ (33780)
  r=a 1 (33781)
  (         ifN t1 goto else_1401) (33783)
  a== 0 (33783)
  jf 3 (33785)
  lj 33803 (33787)
  (                    2342:     copy_length = 198) (33790)
  (         H[t0+21]〈copy_length〉 = 198) (33790)
  a=r 0 (33790)
  a+= 21 (33792)
  d=a (33794)
  *d= 198 (33795)
  (                    2343:     extra_bits_copy = 7) (33797)
  (         H[t0+22]〈extra_bits_copy〉 = 7) (33797)
  d++ (33797)
  *d= 7 (33798)
  (         goto endif_1402) (33800)
  lj 33964 (33800)
  (        :else_1401:) (33803)
  (                    2344:   elif copy_length_code == 20:) (33803)
  (         t1 = H[t0+18]〈copy_length_code〉 == 20) (33803)
  c= 20 (33803)
  a=r 0 (33805)
  a+= 18 (33807)
  d=a (33809)
  a=*d (33810)
  a==c (33811)
  a=0 (33812)
  jf 1 (33813)
  a++ (33815)
  r=a 1 (33816)
  (         ifN t1 goto else_1404) (33818)
  a== 0 (33818)
  jf 3 (33820)
  lj 33843 (33822)
  (                    2345:     copy_length = 326) (33825)
  (         H[t0+21]〈copy_length〉 = 326) (33825)
  a=r 0 (33825)
  a+= 21 (33827)
  d=a (33829)
  a= 1 (33830)
  a<<= 8 (33832)
  a+= 70 (33834)
  *d=a (33836)
  (                    2346:     extra_bits_copy = 8) (33837)
  (         H[t0+22]〈extra_bits_copy〉 = 8) (33837)
  d++ (33837)
  *d= 8 (33838)
  (         goto endif_1405) (33840)
  lj 33964 (33840)
  (        :else_1404:) (33843)
  (                    2347:   elif copy_length_code == 21:) (33843)
  (         t1 = H[t0+18]〈copy_length_code〉 == 21) (33843)
  c= 21 (33843)
  a=r 0 (33845)
  a+= 18 (33847)
  d=a (33849)
  a=*d (33850)
  a==c (33851)
  a=0 (33852)
  jf 1 (33853)
  a++ (33855)
  r=a 1 (33856)
  (         ifN t1 goto else_1407) (33858)
  a== 0 (33858)
  jf 3 (33860)
  lj 33883 (33862)
  (                    2348:     copy_length = 582) (33865)
  (         H[t0+21]〈copy_length〉 = 582) (33865)
  a=r 0 (33865)
  a+= 21 (33867)
  d=a (33869)
  a= 2 (33870)
  a<<= 8 (33872)
  a+= 70 (33874)
  *d=a (33876)
  (                    2349:     extra_bits_copy = 9) (33877)
  (         H[t0+22]〈extra_bits_copy〉 = 9) (33877)
  d++ (33877)
  *d= 9 (33878)
  (         goto endif_1408) (33880)
  lj 33964 (33880)
  (        :else_1407:) (33883)
  (                    2350:   elif copy_length_code == 22:) (33883)
  (         t1 = H[t0+18]〈copy_length_code〉 == 22) (33883)
  c= 22 (33883)
  a=r 0 (33885)
  a+= 18 (33887)
  d=a (33889)
  a=*d (33890)
  a==c (33891)
  a=0 (33892)
  jf 1 (33893)
  a++ (33895)
  r=a 1 (33896)
  (         ifN t1 goto else_1410) (33898)
  a== 0 (33898)
  jf 3 (33900)
  lj 33923 (33902)
  (                    2351:     copy_length = 1094) (33905)
  (         H[t0+21]〈copy_length〉 = 1094) (33905)
  a=r 0 (33905)
  a+= 21 (33907)
  d=a (33909)
  a= 4 (33910)
  a<<= 8 (33912)
  a+= 70 (33914)
  *d=a (33916)
  (                    2352:     extra_bits_copy = 10) (33917)
  (         H[t0+22]〈extra_bits_copy〉 = 10) (33917)
  d++ (33917)
  *d= 10 (33918)
  (         goto endif_1411) (33920)
  lj 33964 (33920)
  (        :else_1410:) (33923)
  (                    2353:   elif copy_length_code == 23:) (33923)
  (         t1 = H[t0+18]〈copy_length_code〉 == 23) (33923)
  c= 23 (33923)
  a=r 0 (33925)
  a+= 18 (33927)
  d=a (33929)
  a=*d (33930)
  a==c (33931)
  a=0 (33932)
  jf 1 (33933)
  a++ (33935)
  r=a 1 (33936)
  (         ifN t1 goto else_1413) (33938)
  a== 0 (33938)
  jf 3 (33940)
  lj 33963 (33942)
  (                    2354:     copy_length = 2118) (33945)
  (         H[t0+21]〈copy_length〉 = 2118) (33945)
  a=r 0 (33945)
  a+= 21 (33947)
  d=a (33949)
  a= 8 (33950)
  a<<= 8 (33952)
  a+= 70 (33954)
  *d=a (33956)
  (                    2355:     extra_bits_copy = 24) (33957)
  (         H[t0+22]〈extra_bits_copy〉 = 24) (33957)
  d++ (33957)
  *d= 24 (33958)
  (         goto endif_1414) (33960)
  lj 33964 (33960)
  (        :else_1413:) (33963)
  (                    2357:     error〈〉 # print〈'unreachable'〉) (33963)
  (         error) (33963)
  error (33963)
  (        :endif_1414:) (33964)
  (        :endif_1411:) (33964)
  (        :endif_1408:) (33964)
  (        :endif_1405:) (33964)
  (        :endif_1402:) (33964)
  (        :endif_1399:) (33964)
  (        :endif_1396:) (33964)
  (        :endif_1392:) (33964)
  (        :endif_1388:) (33964)
  (        :endif_1384:) (33964)
  (        :endif_1380:) (33964)
  (        :endif_1376:) (33964)
  (                    2358:   table[insert_and_copy_length*4] = insert_length) (33964)
  (         t1 = H[t0+16]〈insert_and_copy_length〉 * 4) (33964)
  c= 4 (33964)
  a=r 0 (33966)
  a+= 16 (33968)
  d=a (33970)
  a=*d (33971)
  a*=c (33972)
  r=a 1 (33973)
  (         t2 = H[t0+15]〈table〉 + t1) (33975)
  c=a (33975)
  d-- (33976)
  a=*d (33977)
  a+=c (33978)
  r=a 2 (33979)
  (         H[t2]〈〉 = H[t0+19]〈insert_length〉) (33981)
  a=r 0 (33981)
  a+= 19 (33983)
  d=a (33985)
  c=*d (33986)
  d=r 2 (33987)
  *d=c (33989)
  (                    2359:   table[insert_and_copy_length*4 + 1] = extra_bits_insert) (33990)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 * 4) (33990)
  c= 4 (33990)
  a=r 0 (33992)
  a+= 16 (33994)
  d=a (33996)
  a=*d (33997)
  a*=c (33998)
  r=a 2 (33999)
  (         t1 = t2 + 1) (34001)
  c= 1 (34001)
  a+=c (34003)
  r=a 1 (34004)
  (         t2 = H[t0+15]〈table〉 + t1) (34006)
  c=a (34006)
  d-- (34007)
  a=*d (34008)
  a+=c (34009)
  r=a 2 (34010)
  (         H[t2]〈〉 = H[t0+20]〈extra_bits_insert〉) (34012)
  a=r 0 (34012)
  a+= 20 (34014)
  d=a (34016)
  c=*d (34017)
  d=r 2 (34018)
  *d=c (34020)
  (                    2360:   table[insert_and_copy_length*4 + 2] = copy_length) (34021)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 * 4) (34021)
  c= 4 (34021)
  a=r 0 (34023)
  a+= 16 (34025)
  d=a (34027)
  a=*d (34028)
  a*=c (34029)
  r=a 2 (34030)
  (         t1 = t2 + 2) (34032)
  c= 2 (34032)
  a+=c (34034)
  r=a 1 (34035)
  (         t2 = H[t0+15]〈table〉 + t1) (34037)
  c=a (34037)
  d-- (34038)
  a=*d (34039)
  a+=c (34040)
  r=a 2 (34041)
  (         H[t2]〈〉 = H[t0+21]〈copy_length〉) (34043)
  a=r 0 (34043)
  a+= 21 (34045)
  d=a (34047)
  c=*d (34048)
  d=r 2 (34049)
  *d=c (34051)
  (                    2361:   table[insert_and_copy_length*4 + 3] = extra_bits_copy) (34052)
  (         t2 = H[t0+16]〈insert_and_copy_length〉 * 4) (34052)
  c= 4 (34052)
  a=r 0 (34054)
  a+= 16 (34056)
  d=a (34058)
  a=*d (34059)
  a*=c (34060)
  r=a 2 (34061)
  (         t1 = t2 + 3) (34063)
  c= 3 (34063)
  a+=c (34065)
  r=a 1 (34066)
  (         t2 = H[t0+15]〈table〉 + t1) (34068)
  c=a (34068)
  d-- (34069)
  a=*d (34070)
  a+=c (34071)
  r=a 2 (34072)
  (         H[t2]〈〉 = H[t0+22]〈extra_bits_copy〉) (34074)
  a=r 0 (34074)
  a+= 22 (34076)
  d=a (34078)
  c=*d (34079)
  d=r 2 (34080)
  *d=c (34082)
  (                    2362:   insert_and_copy_length += 1) (34083)
  (         H[t0+16]〈insert_and_copy_length〉 = H[t0+16]〈insert_and_copy_length〉 + 1) (34083)
  a=r 0 (34083)
  a+= 16 (34085)
  d=a (34087)
  *d++ (34088)
  (         goto while_1277) (34089)
  lj 31789 (34089)
  (        :whileend_1279:) (34092)
  (                    2364: INSERT_LENGTHS_AND_COPY_LENGTHS = table) (34092)
  (         H[t0+23]〈INSERT_LENGTHS_AND_COPY_LENGTHS〉 = H[t0+15]〈table〉) (34092)
  a=r 0 (34092)
  a+= 15 (34094)
  d=a (34096)
  c=*d (34097)
  a=r 0 (34098)
  a+= 23 (34100)
  d=a (34102)
  *d=c (34103)
  (                    2368: PrefixCodeKind_Simple = 1) (34104)
  (         H[t0+24]〈PrefixCodeKind_Simple〉 = 1) (34104)
  d++ (34104)
  *d= 1 (34105)
  (                    2369: PrefixCodeKind_Complex = 2) (34107)
  (         H[t0+25]〈PrefixCodeKind_Complex〉 = 2) (34107)
  d++ (34107)
  *d= 2 (34108)
  (                    2370: PrefixCodeKind_Complex_data = NONE) (34110)
  (         H[t0+26]〈PrefixCodeKind_Complex_data〉 = 4294967295) (34110)
  d++ (34110)
  *d=0 (34111)
  *d-- (34112)
  (                    2374: StreamBegin = 1) (34113)
  (         H[t0+27]〈StreamBegin〉 = 1) (34113)
  d++ (34113)
  *d= 1 (34114)
  (                    2375: HeaderBegin = 2) (34116)
  (         H[t0+28]〈HeaderBegin〉 = 2) (34116)
  d++ (34116)
  *d= 2 (34117)
  (                    2376: WBits = 3) (34119)
  (         H[t0+29]〈WBits〉 = 3) (34119)
  d++ (34119)
  *d= 3 (34120)
  (                    2377: WBits_data = 0) (34122)
  (         H[t0+30]〈WBits_data〉 = 0) (34122)
  d++ (34122)
  *d=0 (34123)
  (                    2378: HeaderEnd = 4) (34124)
  (         H[t0+31]〈HeaderEnd〉 = 4) (34124)
  d++ (34124)
  *d= 4 (34125)
  (                    2379: HeaderMetaBlockBegin = 5) (34127)
  (         H[t0+32]〈HeaderMetaBlockBegin〉 = 5) (34127)
  d++ (34127)
  *d= 5 (34128)
  (                    2380: IsLast = 6) (34130)
  (         H[t0+33]〈IsLast〉 = 6) (34130)
  d++ (34130)
  *d= 6 (34131)
  (                    2381: IsLast_data = 0) (34133)
  (         H[t0+34]〈IsLast_data〉 = 0) (34133)
  d++ (34133)
  *d=0 (34134)
  (                    2382: IsLastEmpty = 7) (34135)
  (         H[t0+35]〈IsLastEmpty〉 = 7) (34135)
  d++ (34135)
  *d= 7 (34136)
  (                    2383: IsLastEmpty_data = 0) (34138)
  (         H[t0+36]〈IsLastEmpty_data〉 = 0) (34138)
  d++ (34138)
  *d=0 (34139)
  (                    2384: MNibbles = 8) (34140)
  (         H[t0+37]〈MNibbles〉 = 8) (34140)
  d++ (34140)
  *d= 8 (34141)
  (                    2385: MNibbles_data = 0) (34143)
  (         H[t0+38]〈MNibbles_data〉 = 0) (34143)
  d++ (34143)
  *d=0 (34144)
  (                    2386: MSkipBytes = 9) (34145)
  (         H[t0+39]〈MSkipBytes〉 = 9) (34145)
  d++ (34145)
  *d= 9 (34146)
  (                    2387: MSkipBytes_data = 0) (34148)
  (         H[t0+40]〈MSkipBytes_data〉 = 0) (34148)
  d++ (34148)
  *d=0 (34149)
  (                    2388: MSkipLen = 10) (34150)
  (         H[t0+41]〈MSkipLen〉 = 10) (34150)
  d++ (34150)
  *d= 10 (34151)
  (                    2389: MSkipLen_data = 0) (34153)
  (         H[t0+42]〈MSkipLen_data〉 = 0) (34153)
  d++ (34153)
  *d=0 (34154)
  (                    2390: MLen = 11) (34155)
  (         H[t0+43]〈MLen〉 = 11) (34155)
  d++ (34155)
  *d= 11 (34156)
  (                    2391: MLen_data = 0) (34158)
  (         H[t0+44]〈MLen_data〉 = 0) (34158)
  d++ (34158)
  *d=0 (34159)
  (                    2392: IsUncompressed = 12) (34160)
  (         H[t0+45]〈IsUncompressed〉 = 12) (34160)
  d++ (34160)
  *d= 12 (34161)
  (                    2393: IsUncompressed_data = 0) (34163)
  (         H[t0+46]〈IsUncompressed_data〉 = 0) (34163)
  d++ (34163)
  *d=0 (34164)
  (                    2394: MLenLiterals = 13) (34165)
  (         H[t0+47]〈MLenLiterals〉 = 13) (34165)
  d++ (34165)
  *d= 13 (34166)
  (                    2395: MLenLiterals_data = 0 # []) (34168)
  (         H[t0+48]〈MLenLiterals_data〉 = 0) (34168)
  d++ (34168)
  *d=0 (34169)
  (                    2396: NBltypesL = 14) (34170)
  (         H[t0+49]〈NBltypesL〉 = 14) (34170)
  d++ (34170)
  *d= 14 (34171)
  (                    2397: NBltypesL_data = 0) (34173)
  (         H[t0+50]〈NBltypesL_data〉 = 0) (34173)
  d++ (34173)
  *d=0 (34174)
  (                    2398: PrefixCodeBlockTypesLiterals = 15) (34175)
  (         H[t0+51]〈PrefixCodeBlockTypesLiterals〉 = 15) (34175)
  d++ (34175)
  *d= 15 (34176)
  (                    2399: PrefixCodeBlockTypesLiterals_data = 0  # 〈HuffmanCodes〉) (34178)
  (         H[t0+52]〈PrefixCodeBlockTypesLiterals_data〉 = 0) (34178)
  d++ (34178)
  *d=0 (34179)
  (                    2400: PrefixCodeBlockCountsLiterals = 16) (34180)
  (         H[t0+53]〈PrefixCodeBlockCountsLiterals〉 = 16) (34180)
  d++ (34180)
  *d= 16 (34181)
  (                    2401: PrefixCodeBlockCountsLiterals_data = 0 # 〈HuffmanCodes〉) (34183)
  (         H[t0+54]〈PrefixCodeBlockCountsLiterals_data〉 = 0) (34183)
  d++ (34183)
  *d=0 (34184)
  (                    2402: FirstBlockCountLiterals = 17) (34185)
  (         H[t0+55]〈FirstBlockCountLiterals〉 = 17) (34185)
  d++ (34185)
  *d= 17 (34186)
  (                    2403: FirstBlockCountLiterals_data = 0 # 〈BLen〉) (34188)
  (         H[t0+56]〈FirstBlockCountLiterals_data〉 = 0) (34188)
  d++ (34188)
  *d=0 (34189)
  (                    2404: NBltypesI = 18) (34190)
  (         H[t0+57]〈NBltypesI〉 = 18) (34190)
  d++ (34190)
  *d= 18 (34191)
  (                    2405: NBltypesI_data = 0) (34193)
  (         H[t0+58]〈NBltypesI_data〉 = 0) (34193)
  d++ (34193)
  *d=0 (34194)
  (                    2406: PrefixCodeBlockTypesInsertAndCopyLengths = 19) (34195)
  (         H[t0+59]〈PrefixCodeBlockTypesInsertAndCopyLengths〉 = 19) (34195)
  d++ (34195)
  *d= 19 (34196)
  (                    2407: PrefixCodeBlockTypesInsertAndCopyLengths_data = 0 # 〈HuffmanCodes〉) (34198)
  (         H[t0+60]〈PrefixCodeBlockTypesInsertAndCopyLengths_data〉 = 0) (34198)
  d++ (34198)
  *d=0 (34199)
  (                    2408: PrefixCodeBlockCountsInsertAndCopyLengths = 20) (34200)
  (         H[t0+61]〈PrefixCodeBlockCountsInsertAndCopyLengths〉 = 20) (34200)
  d++ (34200)
  *d= 20 (34201)
  (                    2409: PrefixCodeBlockCountsInsertAndCopyLengths_data = 0 # 〈HuffmanCodes〉) (34203)
  (         H[t0+62]〈PrefixCodeBlockCountsInsertAndCopyLengths_data〉 = 0) (34203)
  d++ (34203)
  *d=0 (34204)
  (                    2410: FirstBlockCountInsertAndCopyLengths = 21) (34205)
  (         H[t0+63]〈FirstBlockCountInsertAndCopyLengths〉 = 21) (34205)
  d++ (34205)
  *d= 21 (34206)
  (                    2411: FirstBlockCountInsertAndCopyLengths_data = 0) (34208)
  (         H[t0+64]〈FirstBlockCountInsertAndCopyLengths_data〉 = 0) (34208)
  d++ (34208)
  *d=0 (34209)
  (                    2412: NBltypesD = 22) (34210)
  (         H[t0+65]〈NBltypesD〉 = 22) (34210)
  d++ (34210)
  *d= 22 (34211)
  (                    2413: NBltypesD_data = 0 # 〈NBltypes〉) (34213)
  (         H[t0+66]〈NBltypesD_data〉 = 0) (34213)
  d++ (34213)
  *d=0 (34214)
  (                    2414: PrefixCodeBlockTypesDistances = 23) (34215)
  (         H[t0+67]〈PrefixCodeBlockTypesDistances〉 = 23) (34215)
  d++ (34215)
  *d= 23 (34216)
  (                    2415: PrefixCodeBlockTypesDistances_data = 0 # 〈HuffmanCodes〉) (34218)
  (         H[t0+68]〈PrefixCodeBlockTypesDistances_data〉 = 0) (34218)
  d++ (34218)
  *d=0 (34219)
  (                    2416: PrefixCodeBlockCountsDistances = 24) (34220)
  (         H[t0+69]〈PrefixCodeBlockCountsDistances〉 = 24) (34220)
  d++ (34220)
  *d= 24 (34221)
  (                    2417: PrefixCodeBlockCountsDistances_data = 0 # 〈HuffmanCodes〉) (34223)
  (         H[t0+70]〈PrefixCodeBlockCountsDistances_data〉 = 0) (34223)
  d++ (34223)
  *d=0 (34224)
  (                    2418: FirstBlockCountDistances = 25) (34225)
  (         H[t0+71]〈FirstBlockCountDistances〉 = 25) (34225)
  d++ (34225)
  *d= 25 (34226)
  (                    2419: FirstBlockCountDistances_data = 0 #〈BLen〉) (34228)
  (         H[t0+72]〈FirstBlockCountDistances_data〉 = 0) (34228)
  d++ (34228)
  *d=0 (34229)
  (                    2420: NPostfix = 26) (34230)
  (         H[t0+73]〈NPostfix〉 = 26) (34230)
  d++ (34230)
  *d= 26 (34231)
  (                    2421: NPostfix_data = 0) (34233)
  (         H[t0+74]〈NPostfix_data〉 = 0) (34233)
  d++ (34233)
  *d=0 (34234)
  (                    2422: NDirect = 27) (34235)
  (         H[t0+75]〈NDirect〉 = 27) (34235)
  d++ (34235)
  *d= 27 (34236)
  (                    2423: NDirect_data = 0) (34238)
  (         H[t0+76]〈NDirect_data〉 = 0) (34238)
  d++ (34238)
  *d=0 (34239)
  (                    2424: ContextModesLiterals = 28) (34240)
  (         H[t0+77]〈ContextModesLiterals〉 = 28) (34240)
  d++ (34240)
  *d= 28 (34241)
  (                    2425: ContextModesLiterals_data = 0 # 〈ContextModes〉) (34243)
  (         H[t0+78]〈ContextModesLiterals_data〉 = 0) (34243)
  d++ (34243)
  *d=0 (34244)
  (                    2426: NTreesL = 29) (34245)
  (         H[t0+79]〈NTreesL〉 = 29) (34245)
  d++ (34245)
  *d= 29 (34246)
  (                    2427: NTreesL_data = 0 # 〈NTrees〉) (34248)
  (         H[t0+80]〈NTreesL_data〉 = 0) (34248)
  d++ (34248)
  *d=0 (34249)
  (                    2428: NTreesD = 30) (34250)
  (         H[t0+81]〈NTreesD〉 = 30) (34250)
  d++ (34250)
  *d= 30 (34251)
  (                    2429: NTreesD_data = 0 #〈NTrees〉) (34253)
  (         H[t0+82]〈NTreesD_data〉 = 0) (34253)
  d++ (34253)
  *d=0 (34254)
  (                    2430: ContextMapDistances = 31) (34255)
  (         H[t0+83]〈ContextMapDistances〉 = 31) (34255)
  d++ (34255)
  *d= 31 (34256)
  (                    2431: ContextMapDistances_data = 0 # 〈ContextMap〉) (34258)
  (         H[t0+84]〈ContextMapDistances_data〉 = 0) (34258)
  d++ (34258)
  *d=0 (34259)
  (                    2432: ContextMapLiterals = 32) (34260)
  (         H[t0+85]〈ContextMapLiterals〉 = 32) (34260)
  d++ (34260)
  *d= 32 (34261)
  (                    2433: ContextMapLiterals_data = 0 # 〈ContextMap〉) (34263)
  (         H[t0+86]〈ContextMapLiterals_data〉 = 0) (34263)
  d++ (34263)
  *d=0 (34264)
  (                    2434: PrefixCodesLiterals = 33) (34265)
  (         H[t0+87]〈PrefixCodesLiterals〉 = 33) (34265)
  d++ (34265)
  *d= 33 (34266)
  (                    2435: PrefixCodesLiterals_data = 0 # 〈Vec<HuffmanCodes>〉) (34268)
  (         H[t0+88]〈PrefixCodesLiterals_data〉 = 0) (34268)
  d++ (34268)
  *d=0 (34269)
  (                    2436: PrefixCodesInsertAndCopyLengths = 34) (34270)
  (         H[t0+89]〈PrefixCodesInsertAndCopyLengths〉 = 34) (34270)
  d++ (34270)
  *d= 34 (34271)
  (                    2437: PrefixCodesInsertAndCopyLengths_data = 0 # 〈Vec<HuffmanCodes>〉) (34273)
  (         H[t0+90]〈PrefixCodesInsertAndCopyLengths_data〉 = 0) (34273)
  d++ (34273)
  *d=0 (34274)
  (                    2438: PrefixCodesDistances = 35) (34275)
  (         H[t0+91]〈PrefixCodesDistances〉 = 35) (34275)
  d++ (34275)
  *d= 35 (34276)
  (                    2439: PrefixCodesDistances_data = 0 # 〈Vec<HuffmanCodes>〉) (34278)
  (         H[t0+92]〈PrefixCodesDistances_data〉 = 0) (34278)
  d++ (34278)
  *d=0 (34279)
  (                    2440: DataMetaBlockBegin = 36) (34280)
  (         H[t0+93]〈DataMetaBlockBegin〉 = 36) (34280)
  d++ (34280)
  *d= 36 (34281)
  (                    2441: InsertAndCopyLength = 37) (34283)
  (         H[t0+94]〈InsertAndCopyLength〉 = 37) (34283)
  d++ (34283)
  *d= 37 (34284)
  (                    2442: InsertAndCopyLength_data = 0) (34286)
  (         H[t0+95]〈InsertAndCopyLength_data〉 = 0) (34286)
  d++ (34286)
  *d=0 (34287)
  (                    2443: InsertLengthAndCopyLength = 38) (34288)
  (         H[t0+96]〈InsertLengthAndCopyLength〉 = 38) (34288)
  d++ (34288)
  *d= 38 (34289)
  (                    2444: InsertLengthAndCopyLength_data_co_len = NONE) (34291)
  (         H[t0+97]〈InsertLengthAndCopyLength_data_co_len〉 = 4294967295) (34291)
  d++ (34291)
  *d=0 (34292)
  *d-- (34293)
  (                    2445: InsertLengthAndCopyLength_data_in_len = NONE) (34294)
  (         H[t0+98]〈InsertLengthAndCopyLength_data_in_len〉 = 4294967295) (34294)
  d++ (34294)
  *d=0 (34295)
  *d-- (34296)
  (                    2446: InsertLiterals = 39) (34297)
  (         H[t0+99]〈InsertLiterals〉 = 39) (34297)
  d++ (34297)
  *d= 39 (34298)
  (                    2447: InsertLiterals_data = 0 #〈Literals〉) (34300)
  (         H[t0+100]〈InsertLiterals_data〉 = 0) (34300)
  d++ (34300)
  *d=0 (34301)
  (                    2448: DistanceCode = 40) (34302)
  (         H[t0+101]〈DistanceCode〉 = 40) (34302)
  d++ (34302)
  *d= 40 (34303)
  (                    2449: DistanceCode_data = 0 #〈DistanceCode〉) (34305)
  (         H[t0+102]〈DistanceCode_data〉 = 0) (34305)
  d++ (34305)
  *d=0 (34306)
  (                    2450: Distance = 41) (34307)
  (         H[t0+103]〈Distance〉 = 41) (34307)
  d++ (34307)
  *d= 41 (34308)
  (                    2451: Distance_data = 0 # 〈Distance〉) (34310)
  (         H[t0+104]〈Distance_data〉 = 0) (34310)
  d++ (34310)
  *d=0 (34311)
  (                    2452: CopyLiterals = 42) (34312)
  (         H[t0+105]〈CopyLiterals〉 = 42) (34312)
  d++ (34312)
  *d= 42 (34313)
  (                    2453: CopyLiterals_data = 0 # 〈Literals〉) (34315)
  (         H[t0+106]〈CopyLiterals_data〉 = 0) (34315)
  d++ (34315)
  *d=0 (34316)
  (                    2454: DataMetaBlockEnd = 43) (34317)
  (         H[t0+107]〈DataMetaBlockEnd〉 = 43) (34317)
  d++ (34317)
  *d= 43 (34318)
  (                    2455: MetaBlockEnd = 44) (34320)
  (         H[t0+108]〈MetaBlockEnd〉 = 44) (34320)
  d++ (34320)
  *d= 44 (34321)
  (                    2456: StreamEnd = 45) (34323)
  (         H[t0+109]〈StreamEnd〉 = 45) (34323)
  d++ (34323)
  *d= 45 (34324)
  (                    2458: t_array = alloc_pH〈255〉) (34326)
  (         H[t0+110]〈〉 = t0) (34326)
  d++ (34326)
  a=r 0 (34327)
  *d=a (34329)
  (saved bsp, return id:) (34330)
  (         H[t0+111]〈〉 = 116) (34330)
  d++ (34330)
  *d= 116 (34331)
  (push arguments:) (34333)
  (         H[t0+112]〈〉 = 255) (34333)
  d++ (34333)
  *d= 255 (34334)
  (         t0 = t0 + 111) (34336)
  c= 111 (34336)
  a+=c (34338)
  r=a 0 (34339)
  (         goto addr_alloc_pH) (34341)
  lj 1446 (34341)
  (        :return_id_116:) (34344)
  (         H[t0+110]〈t_array〉 = t1) (34344)
  a=r 0 (34344)
  a+= 110 (34346)
  d=a (34348)
  a=r 1 (34349)
  *d=a (34351)
  (                    2459: i = 0) (34352)
  (         H[t0+111]〈i〉 = 0) (34352)
  d++ (34352)
  *d=0 (34353)
  (                    2460: while i < 255:) (34354)
  (        :while_1415:) (34354)
  (         t1 = H[t0+111]〈i〉 < 255) (34354)
  c= 255 (34354)
  a=r 0 (34356)
  a+= 111 (34358)
  d=a (34360)
  a=*d (34361)
  a<c (34362)
  a=0 (34363)
  jf 1 (34364)
  a++ (34366)
  r=a 1 (34367)
  (         ifN t1 goto whileend_1417) (34369)
  a== 0 (34369)
  jf 3 (34371)
  lj 34394 (34373)
  (                    2461:   t_array[i] = NONE) (34376)
  (         t1 = H[t0+110]〈t_array〉 + H[t0+111]〈i〉) (34376)
  c=*d (34376)
  d-- (34377)
  a=*d (34378)
  a+=c (34379)
  r=a 1 (34380)
  (         H[t1]〈〉 = 4294967295) (34382)
  d=a (34382)
  *d=0 (34383)
  *d-- (34384)
  (                    2462:   i += 1) (34385)
  (         H[t0+111]〈i〉 = H[t0+111]〈i〉 + 1) (34385)
  a=r 0 (34385)
  a+= 111 (34387)
  d=a (34389)
  *d++ (34390)
  (         goto while_1415) (34391)
  lj 34354 (34391)
  (        :whileend_1417:) (34394)
  (                    2463: t_array[1] = 16) (34394)
  (         t1 = H[t0+110]〈t_array〉 + 1) (34394)
  c= 1 (34394)
  a=r 0 (34396)
  a+= 110 (34398)
  d=a (34400)
  a=*d (34401)
  a+=c (34402)
  r=a 1 (34403)
  (         H[t1]〈〉 = 16) (34405)
  d=a (34405)
  *d= 16 (34406)
  (                    2464: t_array[24] = 21) (34408)
  (         t1 = H[t0+110]〈t_array〉 + 24) (34408)
  c= 24 (34408)
  a=r 0 (34410)
  a+= 110 (34412)
  d=a (34414)
  a=*d (34415)
  a+=c (34416)
  r=a 1 (34417)
  (         H[t1]〈〉 = 21) (34419)
  d=a (34419)
  *d= 21 (34420)
  (                    2465: t_array[25] = 19) (34422)
  (         t1 = t1 + 1) (34422)
  a++ (34422)
  r=a 1 (34423)
  (         H[t1]〈〉 = 19) (34425)
  d=a (34425)
  *d= 19 (34426)
  (                    2466: t_array[26] = 23) (34428)
  (         t1 = t1 + 1) (34428)
  a++ (34428)
  r=a 1 (34429)
  (         H[t1]〈〉 = 23) (34431)
  d=a (34431)
  *d= 23 (34432)
  (                    2467: t_array[27] = 18) (34434)
  (         t1 = t1 + 1) (34434)
  a++ (34434)
  r=a 1 (34435)
  (         H[t1]〈〉 = 18) (34437)
  d=a (34437)
  *d= 18 (34438)
  (                    2468: t_array[28] = 22) (34440)
  (         t1 = t1 + 1) (34440)
  a++ (34440)
  r=a 1 (34441)
  (         H[t1]〈〉 = 22) (34443)
  d=a (34443)
  *d= 22 (34444)
  (                    2469: t_array[29] = 20) (34446)
  (         t1 = t1 + 1) (34446)
  a++ (34446)
  r=a 1 (34447)
  (         H[t1]〈〉 = 20) (34449)
  d=a (34449)
  *d= 20 (34450)
  (                    2470: t_array[30] = 24) (34452)
  (         t1 = t1 + 1) (34452)
  a++ (34452)
  r=a 1 (34453)
  (         H[t1]〈〉 = 24) (34455)
  d=a (34455)
  *d= 24 (34456)
  (                    2471: t_array[191] = 17) (34458)
  (         t1 = H[t0+110]〈t_array〉 + 191) (34458)
  c= 191 (34458)
  a=r 0 (34460)
  a+= 110 (34462)
  d=a (34464)
  a=*d (34465)
  a+=c (34466)
  r=a 1 (34467)
  (         H[t1]〈〉 = 17) (34469)
  d=a (34469)
  *d= 17 (34470)
  (                    2472: t_array[192] = 12) (34472)
  (         t1 = t1 + 1) (34472)
  a++ (34472)
  r=a 1 (34473)
  (         H[t1]〈〉 = 12) (34475)
  d=a (34475)
  *d= 12 (34476)
  (                    2473: t_array[193] = 10) (34478)
  (         t1 = t1 + 1) (34478)
  a++ (34478)
  r=a 1 (34479)
  (         H[t1]〈〉 = 10) (34481)
  d=a (34481)
  *d= 10 (34482)
  (                    2474: t_array[194] = 14) (34484)
  (         t1 = t1 + 1) (34484)
  a++ (34484)
  r=a 1 (34485)
  (         H[t1]〈〉 = 14) (34487)
  d=a (34487)
  *d= 14 (34488)
  (                    2475: t_array[196] = 13) (34490)
  (         t1 = H[t0+110]〈t_array〉 + 196) (34490)
  c= 196 (34490)
  a=r 0 (34492)
  a+= 110 (34494)
  d=a (34496)
  a=*d (34497)
  a+=c (34498)
  r=a 1 (34499)
  (         H[t1]〈〉 = 13) (34501)
  d=a (34501)
  *d= 13 (34502)
  (                    2476: t_array[197] = 11) (34504)
  (         t1 = t1 + 1) (34504)
  a++ (34504)
  r=a 1 (34505)
  (         H[t1]〈〉 = 11) (34507)
  d=a (34507)
  *d= 11 (34508)
  (                    2477: t_array[198] = 15) (34510)
  (         t1 = t1 + 1) (34510)
  a++ (34510)
  r=a 1 (34511)
  (         H[t1]〈〉 = 15) (34513)
  d=a (34513)
  *d= 15 (34514)
  (                    2478: header_wbits_codes = tree_from_raw_data〈t_array, 15, 24〉) (34516)
  (         H[t0+112]〈〉 = t0) (34516)
  a=r 0 (34516)
  a+= 112 (34518)
  d=a (34520)
  a=r 0 (34521)
  *d=a (34523)
  (saved bsp, return id:) (34524)
  (         H[t0+113]〈〉 = 117) (34524)
  d++ (34524)
  *d= 117 (34525)
  (push arguments:) (34527)
  (         H[t0+114]〈〉 = H[t0+110]〈t_array〉) (34527)
  a+= 110 (34527)
  d=a (34529)
  c=*d (34530)
  a=r 0 (34531)
  a+= 114 (34533)
  d=a (34535)
  *d=c (34536)
  (         H[t0+115]〈〉 = 15) (34537)
  d++ (34537)
  *d= 15 (34538)
  (         H[t0+116]〈〉 = 24) (34540)
  d++ (34540)
  *d= 24 (34541)
  (         t0 = t0 + 113) (34543)
  c= 113 (34543)
  a=r 0 (34545)
  a+=c (34547)
  r=a 0 (34548)
  (         goto tree_from_raw_data) (34550)
  lj 5581 (34550)
  (        :return_id_117:) (34553)
  (         H[t0+112]〈header_wbits_codes〉 = t1) (34553)
  a=r 0 (34553)
  a+= 112 (34555)
  d=a (34557)
  a=r 1 (34558)
  *d=a (34560)
  (                    2480: t_array = alloc_pH〈31〉) (34561)
  (         H[t0+113]〈〉 = t0) (34561)
  d++ (34561)
  a=r 0 (34562)
  *d=a (34564)
  (saved bsp, return id:) (34565)
  (         H[t0+114]〈〉 = 118) (34565)
  d++ (34565)
  *d= 118 (34566)
  (push arguments:) (34568)
  (         H[t0+115]〈〉 = 31) (34568)
  d++ (34568)
  *d= 31 (34569)
  (         t0 = t0 + 114) (34571)
  c= 114 (34571)
  a+=c (34573)
  r=a 0 (34574)
  (         goto addr_alloc_pH) (34576)
  lj 1446 (34576)
  (        :return_id_118:) (34579)
  (         H[t0+110]〈t_array〉 = t1) (34579)
  a=r 0 (34579)
  a+= 110 (34581)
  d=a (34583)
  a=r 1 (34584)
  *d=a (34586)
  (                    2481: i = 0) (34587)
  (         H[t0+111]〈i〉 = 0) (34587)
  d++ (34587)
  *d=0 (34588)
  (                    2482: while i < 31:) (34589)
  (        :while_1419:) (34589)
  (         t1 = H[t0+111]〈i〉 < 31) (34589)
  c= 31 (34589)
  a=r 0 (34591)
  a+= 111 (34593)
  d=a (34595)
  a=*d (34596)
  a<c (34597)
  a=0 (34598)
  jf 1 (34599)
  a++ (34601)
  r=a 1 (34602)
  (         ifN t1 goto whileend_1421) (34604)
  a== 0 (34604)
  jf 3 (34606)
  lj 34629 (34608)
  (                    2483:   t_array[i] = NONE) (34611)
  (         t1 = H[t0+110]〈t_array〉 + H[t0+111]〈i〉) (34611)
  c=*d (34611)
  d-- (34612)
  a=*d (34613)
  a+=c (34614)
  r=a 1 (34615)
  (         H[t1]〈〉 = 4294967295) (34617)
  d=a (34617)
  *d=0 (34618)
  *d-- (34619)
  (                    2484:   i += 1) (34620)
  (         H[t0+111]〈i〉 = H[t0+111]〈i〉 + 1) (34620)
  a=r 0 (34620)
  a+= 111 (34622)
  d=a (34624)
  *d++ (34625)
  (         goto while_1419) (34626)
  lj 34589 (34626)
  (        :whileend_1421:) (34629)
  (                    2485: t_array[3] = 0) (34629)
  (         t1 = H[t0+110]〈t_array〉 + 3) (34629)
  c= 3 (34629)
  a=r 0 (34631)
  a+= 110 (34633)
  d=a (34635)
  a=*d (34636)
  a+=c (34637)
  r=a 1 (34638)
  (         H[t1]〈〉 = 0) (34640)
  d=a (34640)
  *d=0 (34641)
  (                    2486: t_array[4] = 3) (34642)
  (         t1 = t1 + 1) (34642)
  a++ (34642)
  r=a 1 (34643)
  (         H[t1]〈〉 = 3) (34645)
  d=a (34645)
  *d= 3 (34646)
  (                    2487: t_array[5] = 4) (34648)
  (         t1 = t1 + 1) (34648)
  a++ (34648)
  r=a 1 (34649)
  (         H[t1]〈〉 = 4) (34651)
  d=a (34651)
  *d= 4 (34652)
  (                    2488: t_array[13] = 2) (34654)
  (         t1 = H[t0+110]〈t_array〉 + 13) (34654)
  c= 13 (34654)
  a=r 0 (34656)
  a+= 110 (34658)
  d=a (34660)
  a=*d (34661)
  a+=c (34662)
  r=a 1 (34663)
  (         H[t1]〈〉 = 2) (34665)
  d=a (34665)
  *d= 2 (34666)
  (                    2489: t_array[29] = 1) (34668)
  (         t1 = H[t0+110]〈t_array〉 + 29) (34668)
  c= 29 (34668)
  a=r 0 (34670)
  a+= 110 (34672)
  d=a (34674)
  a=*d (34675)
  a+=c (34676)
  r=a 1 (34677)
  (         H[t1]〈〉 = 1) (34679)
  d=a (34679)
  *d= 1 (34680)
  (                    2490: t_array[30] = 5) (34682)
  (         t1 = t1 + 1) (34682)
  a++ (34682)
  r=a 1 (34683)
  (         H[t1]〈〉 = 5) (34685)
  d=a (34685)
  *d= 5 (34686)
  (                    2491: header_bit_lengths_code = tree_from_raw_data〈t_array, 6, 5〉) (34688)
  (         H[t0+113]〈〉 = t0) (34688)
  a=r 0 (34688)
  a+= 113 (34690)
  d=a (34692)
  a=r 0 (34693)
  *d=a (34695)
  (saved bsp, return id:) (34696)
  (         H[t0+114]〈〉 = 119) (34696)
  d++ (34696)
  *d= 119 (34697)
  (push arguments:) (34699)
  (         H[t0+115]〈〉 = H[t0+110]〈t_array〉) (34699)
  a+= 110 (34699)
  d=a (34701)
  c=*d (34702)
  a=r 0 (34703)
  a+= 115 (34705)
  d=a (34707)
  *d=c (34708)
  (         H[t0+116]〈〉 = 6) (34709)
  d++ (34709)
  *d= 6 (34710)
  (         H[t0+117]〈〉 = 5) (34712)
  d++ (34712)
  *d= 5 (34713)
  (         t0 = t0 + 114) (34715)
  c= 114 (34715)
  a=r 0 (34717)
  a+=c (34719)
  r=a 0 (34720)
  (         goto tree_from_raw_data) (34722)
  lj 5581 (34722)
  (        :return_id_119:) (34725)
  (         H[t0+113]〈header_bit_lengths_code〉 = t1) (34725)
  a=r 0 (34725)
  a+= 113 (34727)
  d=a (34729)
  a=r 1 (34730)
  *d=a (34732)
  (                    2493: t_array = alloc_pH〈31〉) (34733)
  (         H[t0+114]〈〉 = t0) (34733)
  d++ (34733)
  a=r 0 (34734)
  *d=a (34736)
  (saved bsp, return id:) (34737)
  (         H[t0+115]〈〉 = 120) (34737)
  d++ (34737)
  *d= 120 (34738)
  (push arguments:) (34740)
  (         H[t0+116]〈〉 = 31) (34740)
  d++ (34740)
  *d= 31 (34741)
  (         t0 = t0 + 115) (34743)
  c= 115 (34743)
  a+=c (34745)
  r=a 0 (34746)
  (         goto addr_alloc_pH) (34748)
  lj 1446 (34748)
  (        :return_id_120:) (34751)
  (         H[t0+110]〈t_array〉 = t1) (34751)
  a=r 0 (34751)
  a+= 110 (34753)
  d=a (34755)
  a=r 1 (34756)
  *d=a (34758)
  (                    2494: i = 0) (34759)
  (         H[t0+111]〈i〉 = 0) (34759)
  d++ (34759)
  *d=0 (34760)
  (                    2495: while i < 31:) (34761)
  (        :while_1423:) (34761)
  (         t1 = H[t0+111]〈i〉 < 31) (34761)
  c= 31 (34761)
  a=r 0 (34763)
  a+= 111 (34765)
  d=a (34767)
  a=*d (34768)
  a<c (34769)
  a=0 (34770)
  jf 1 (34771)
  a++ (34773)
  r=a 1 (34774)
  (         ifN t1 goto whileend_1425) (34776)
  a== 0 (34776)
  jf 3 (34778)
  lj 34801 (34780)
  (                    2496:   t_array[i] = NONE) (34783)
  (         t1 = H[t0+110]〈t_array〉 + H[t0+111]〈i〉) (34783)
  c=*d (34783)
  d-- (34784)
  a=*d (34785)
  a+=c (34786)
  r=a 1 (34787)
  (         H[t1]〈〉 = 4294967295) (34789)
  d=a (34789)
  *d=0 (34790)
  *d-- (34791)
  (                    2497:   i += 1) (34792)
  (         H[t0+111]〈i〉 = H[t0+111]〈i〉 + 1) (34792)
  a=r 0 (34792)
  a+= 111 (34794)
  d=a (34796)
  *d++ (34797)
  (         goto while_1423) (34798)
  lj 34761 (34798)
  (        :whileend_1425:) (34801)
  (                    2498: t_array[1] = 1) (34801)
  (         t1 = H[t0+110]〈t_array〉 + 1) (34801)
  c= 1 (34801)
  a=r 0 (34803)
  a+= 110 (34805)
  d=a (34807)
  a=*d (34808)
  a+=c (34809)
  r=a 1 (34810)
  (         H[t1]〈〉 = 1) (34812)
  d=a (34812)
  *d= 1 (34813)
  (                    2499: t_array[23] = 2) (34815)
  (         t1 = H[t0+110]〈t_array〉 + 23) (34815)
  c= 23 (34815)
  a=r 0 (34817)
  a+= 110 (34819)
  d=a (34821)
  a=*d (34822)
  a+=c (34823)
  r=a 1 (34824)
  (         H[t1]〈〉 = 2) (34826)
  d=a (34826)
  *d= 2 (34827)
  (                    2500: t_array[24] = 17) (34829)
  (         t1 = t1 + 1) (34829)
  a++ (34829)
  r=a 1 (34830)
  (         H[t1]〈〉 = 17) (34832)
  d=a (34832)
  *d= 17 (34833)
  (                    2501: t_array[25] = 5) (34835)
  (         t1 = t1 + 1) (34835)
  a++ (34835)
  r=a 1 (34836)
  (         H[t1]〈〉 = 5) (34838)
  d=a (34838)
  *d= 5 (34839)
  (                    2502: t_array[26] = 65) (34841)
  (         t1 = t1 + 1) (34841)
  a++ (34841)
  r=a 1 (34842)
  (         H[t1]〈〉 = 65) (34844)
  d=a (34844)
  *d= 65 (34845)
  (                    2503: t_array[27] = 3) (34847)
  (         t1 = t1 + 1) (34847)
  a++ (34847)
  r=a 1 (34848)
  (         H[t1]〈〉 = 3) (34850)
  d=a (34850)
  *d= 3 (34851)
  (                    2504: t_array[28] = 33) (34853)
  (         t1 = t1 + 1) (34853)
  a++ (34853)
  r=a 1 (34854)
  (         H[t1]〈〉 = 33) (34856)
  d=a (34856)
  *d= 33 (34857)
  (                    2505: t_array[29] = 9) (34859)
  (         t1 = t1 + 1) (34859)
  a++ (34859)
  r=a 1 (34860)
  (         H[t1]〈〉 = 9) (34862)
  d=a (34862)
  *d= 9 (34863)
  (                    2506: t_array[30] = 129) (34865)
  (         t1 = t1 + 1) (34865)
  a++ (34865)
  r=a 1 (34866)
  (         H[t1]〈〉 = 129) (34868)
  d=a (34868)
  *d= 129 (34869)
  (                    2507: header_bltype_codes = tree_from_raw_data〈t_array, 9, 129〉) (34871)
  (         H[t0+114]〈〉 = t0) (34871)
  a=r 0 (34871)
  a+= 114 (34873)
  d=a (34875)
  a=r 0 (34876)
  *d=a (34878)
  (saved bsp, return id:) (34879)
  (         H[t0+115]〈〉 = 121) (34879)
  d++ (34879)
  *d= 121 (34880)
  (push arguments:) (34882)
  (         H[t0+116]〈〉 = H[t0+110]〈t_array〉) (34882)
  a+= 110 (34882)
  d=a (34884)
  c=*d (34885)
  a=r 0 (34886)
  a+= 116 (34888)
  d=a (34890)
  *d=c (34891)
  (         H[t0+117]〈〉 = 9) (34892)
  d++ (34892)
  *d= 9 (34893)
  (         H[t0+118]〈〉 = 129) (34895)
  d++ (34895)
  *d= 129 (34896)
  (         t0 = t0 + 115) (34898)
  c= 115 (34898)
  a=r 0 (34900)
  a+=c (34902)
  r=a 0 (34903)
  (         goto tree_from_raw_data) (34905)
  lj 5581 (34905)
  (        :return_id_121:) (34908)
  (         H[t0+114]〈header_bltype_codes〉 = t1) (34908)
  a=r 0 (34908)
  a+= 114 (34910)
  d=a (34912)
  a=r 1 (34913)
  *d=a (34915)
  (                    2509: header_wbits = NONE) (34916)
  (         H[t0+115]〈header_wbits〉 = 4294967295) (34916)
  d++ (34916)
  *d=0 (34917)
  *d-- (34918)
  (                    2510: header_window_size = NONE) (34919)
  (         H[t0+116]〈header_window_size〉 = 4294967295) (34919)
  d++ (34919)
  *d=0 (34920)
  *d-- (34921)
  (                    2511: output_window = NONE # RingBuffer []) (34922)
  (         H[t0+117]〈output_window〉 = 4294967295) (34922)
  d++ (34922)
  *d=0 (34923)
  *d-- (34924)
  (                    2512: output_window_pointer = 0  # or NONE... # @TODO: add % NONE+1〈?〉 for + 1) (34925)
  (         H[t0+118]〈output_window_pointer〉 = 0) (34925)
  d++ (34925)
  *d=0 (34926)
  (                    2513: count_output = 0 # Decompressor.count_output) (34927)
  (         H[t0+119]〈count_output〉 = 0) (34927)
  d++ (34927)
  *d=0 (34928)
  (                    2514: distance_buf = alloc_pH〈4〉) (34929)
  (         H[t0+120]〈〉 = t0) (34929)
  d++ (34929)
  a=r 0 (34930)
  *d=a (34932)
  (saved bsp, return id:) (34933)
  (         H[t0+121]〈〉 = 122) (34933)
  d++ (34933)
  *d= 122 (34934)
  (push arguments:) (34936)
  (         H[t0+122]〈〉 = 4) (34936)
  d++ (34936)
  *d= 4 (34937)
  (         t0 = t0 + 121) (34939)
  c= 121 (34939)
  a+=c (34941)
  r=a 0 (34942)
  (         goto addr_alloc_pH) (34944)
  lj 1446 (34944)
  (        :return_id_122:) (34947)
  (         H[t0+120]〈distance_buf〉 = t1) (34947)
  a=r 0 (34947)
  a+= 120 (34949)
  d=a (34951)
  a=r 1 (34952)
  *d=a (34954)
  (                    2515: distance_buf[0] = 16  # reversed!) (34955)
  (         t1 = H[t0+120]〈distance_buf〉 + 0) (34955)
  c=0 (34955)
  a=*d (34956)
  a+=c (34957)
  r=a 1 (34958)
  (         H[t1]〈〉 = 16) (34960)
  d=a (34960)
  *d= 16 (34961)
  (                    2516: distance_buf[1] = 15) (34963)
  (         t1 = t1 + 1) (34963)
  a++ (34963)
  r=a 1 (34964)
  (         H[t1]〈〉 = 15) (34966)
  d=a (34966)
  *d= 15 (34967)
  (                    2517: distance_buf[2] = 11) (34969)
  (         t1 = t1 + 1) (34969)
  a++ (34969)
  r=a 1 (34970)
  (         H[t1]〈〉 = 11) (34972)
  d=a (34972)
  *d= 11 (34973)
  (                    2518: distance_buf[3] = 4) (34975)
  (         t1 = t1 + 1) (34975)
  a++ (34975)
  r=a 1 (34976)
  (         H[t1]〈〉 = 4) (34978)
  d=a (34978)
  *d= 4 (34979)
  (                    2519: distance_buf_pointer = 3) (34981)
  (         H[t0+121]〈distance_buf_pointer〉 = 3) (34981)
  a=r 0 (34981)
  a+= 121 (34983)
  d=a (34985)
  *d= 3 (34986)
  (                    2520: literal_buf = alloc_pM〈2〉) (34988)
  (         H[t0+122]〈〉 = t0) (34988)
  d++ (34988)
  a=r 0 (34989)
  *d=a (34991)
  (saved bsp, return id:) (34992)
  (         H[t0+123]〈〉 = 123) (34992)
  d++ (34992)
  *d= 123 (34993)
  (push arguments:) (34995)
  (         H[t0+124]〈〉 = 2) (34995)
  d++ (34995)
  *d= 2 (34996)
  (         t0 = t0 + 123) (34998)
  c= 123 (34998)
  a+=c (35000)
  r=a 0 (35001)
  (         goto addr_alloc_pM) (35003)
  lj 323 (35003)
  (        :return_id_123:) (35006)
  (         t1 = t1 | 2147483648) (35006)
  a= 1 (35006)
  a<<= 31 (35008)
  c=a (35010)
  a=r 1 (35011)
  a|=c (35013)
  r=a 1 (35014)
  (         H[t0+122]〈literal_buf〉 = t1) (35016)
  a=r 0 (35016)
  a+= 122 (35018)
  d=a (35020)
  a=r 1 (35021)
  *d=a (35023)
  (                    2521: literal_buf[0] = 0) (35024)
  (         t1 = H[t0+122]〈literal_buf〉 & 2147483647) (35024)
  a=0 (35024)
  a-- (35025)
  a>>= 1 (35026)
  c=a (35028)
  a=*d (35029)
  a&=c (35030)
  r=a 1 (35031)
  (         t1 = t1 + 0) (35033)
  (         M[t1] = 0) (35033)
  c=a (35033)
  *c=0 (35034)
  (                    2522: literal_buf[1] = 0) (35035)
  c++ (35035)
  *c=0 (35036)
  a=c (35037)
  r=a 1 (35038)
  (                    2523: literal_buf_pointer = 0) (35040)
  (         H[t0+123]〈literal_buf_pointer〉 = 0) (35040)
  d++ (35040)
  *d=0 (35041)
  (                    2524: meta_block_header_is_last = NONE) (35042)
  (         H[t0+124]〈meta_block_header_is_last〉 = 4294967295) (35042)
  d++ (35042)
  *d=0 (35043)
  *d-- (35044)
  (                    2525: meta_block_header_is_last_empty = NONE) (35045)
  (         H[t0+125]〈meta_block_header_is_last_empty〉 = 4294967295) (35045)
  d++ (35045)
  *d=0 (35046)
  *d-- (35047)
  (                    2526: meta_block_header_m_nibbles = NONE) (35048)
  (         H[t0+126]〈meta_block_header_m_nibbles〉 = 4294967295) (35048)
  d++ (35048)
  *d=0 (35049)
  *d-- (35050)
  (                    2527: meta_block_header_m_skip_bytes = NONE) (35051)
  (         H[t0+127]〈meta_block_header_m_skip_bytes〉 = 4294967295) (35051)
  d++ (35051)
  *d=0 (35052)
  *d-- (35053)
  (                    2528: meta_block_header_m_skip_len = NONE) (35054)
  (         H[t0+128]〈meta_block_header_m_skip_len〉 = 4294967295) (35054)
  d++ (35054)
  *d=0 (35055)
  *d-- (35056)
  (                    2529: meta_block_header_m_len = NONE) (35057)
  (         H[t0+129]〈meta_block_header_m_len〉 = 4294967295) (35057)
  d++ (35057)
  *d=0 (35058)
  *d-- (35059)
  (                    2530: meta_block_header_is_uncompressed = NONE) (35060)
  (         H[t0+130]〈meta_block_header_is_uncompressed〉 = 4294967295) (35060)
  d++ (35060)
  *d=0 (35061)
  *d-- (35062)
  (                    2531: meta_block_header_n_bltypes_l = NONE) (35063)
  (         H[t0+131]〈meta_block_header_n_bltypes_l〉 = 4294967295) (35063)
  d++ (35063)
  *d=0 (35064)
  *d-- (35065)
  (                    2532: meta_block_header_n_bltypes_i = NONE) (35066)
  (         H[t0+132]〈meta_block_header_n_bltypes_i〉 = 4294967295) (35066)
  d++ (35066)
  *d=0 (35067)
  *d-- (35068)
  (                    2533: meta_block_header_n_bltypes_d = NONE) (35069)
  (         H[t0+133]〈meta_block_header_n_bltypes_d〉 = 4294967295) (35069)
  d++ (35069)
  *d=0 (35070)
  *d-- (35071)
  (                    2534: meta_block_header_n_postfix = NONE) (35072)
  (         H[t0+134]〈meta_block_header_n_postfix〉 = 4294967295) (35072)
  d++ (35072)
  *d=0 (35073)
  *d-- (35074)
  (                    2535: meta_block_header_n_direct = NONE) (35075)
  (         H[t0+135]〈meta_block_header_n_direct〉 = 4294967295) (35075)
  d++ (35075)
  *d=0 (35076)
  *d-- (35077)
  (                    2536: meta_block_header_n_trees_l = NONE) (35078)
  (         H[t0+136]〈meta_block_header_n_trees_l〉 = 4294967295) (35078)
  d++ (35078)
  *d=0 (35079)
  *d-- (35080)
  (                    2537: meta_block_header_n_trees_d = NONE) (35081)
  (         H[t0+137]〈meta_block_header_n_trees_d〉 = 4294967295) (35081)
  d++ (35081)
  *d=0 (35082)
  *d-- (35083)
  (                    2538: meta_block_header_c_map_l = NONE) (35084)
  (         H[t0+138]〈meta_block_header_c_map_l〉 = 4294967295) (35084)
  d++ (35084)
  *d=0 (35085)
  *d-- (35086)
  (                    2539: meta_block_header_c_map_d = NONE) (35087)
  (         H[t0+139]〈meta_block_header_c_map_d〉 = 4294967295) (35087)
  d++ (35087)
  *d=0 (35088)
  *d-- (35089)
  (                    2540: meta_block_prefix_tree_block_types_literals = NONE) (35090)
  (         H[t0+140]〈meta_block_prefix_tree_block_types_literals〉 = 4294967295) (35090)
  d++ (35090)
  *d=0 (35091)
  *d-- (35092)
  (                    2541: meta_block_prefix_tree_block_counts_literals = NONE) (35093)
  (         H[t0+141]〈meta_block_prefix_tree_block_counts_literals〉 = 4294967295) (35093)
  d++ (35093)
  *d=0 (35094)
  *d-- (35095)
  (                    2542: meta_block_prefix_trees_literals = NONE) (35096)
  (         H[t0+142]〈meta_block_prefix_trees_literals〉 = 4294967295) (35096)
  d++ (35096)
  *d=0 (35097)
  *d-- (35098)
  (                    2543: meta_block_count_output = 0) (35099)
  (         H[t0+143]〈meta_block_count_output〉 = 0) (35099)
  d++ (35099)
  *d=0 (35100)
  (                    2544: meta_block_btype_l = 0) (35101)
  (         H[t0+144]〈meta_block_btype_l〉 = 0) (35101)
  d++ (35101)
  *d=0 (35102)
  (                    2545: meta_block_btype_l_prev = 1) (35103)
  (         H[t0+145]〈meta_block_btype_l_prev〉 = 1) (35103)
  d++ (35103)
  *d= 1 (35104)
  (                    2546: meta_block_blen_l = NONE) (35106)
  (         H[t0+146]〈meta_block_blen_l〉 = 4294967295) (35106)
  d++ (35106)
  *d=0 (35107)
  *d-- (35108)
  (                    2547: meta_block_blen_i = NONE) (35109)
  (         H[t0+147]〈meta_block_blen_i〉 = 4294967295) (35109)
  d++ (35109)
  *d=0 (35110)
  *d-- (35111)
  (                    2548: meta_block_blen_d = NONE) (35112)
  (         H[t0+148]〈meta_block_blen_d〉 = 4294967295) (35112)
  d++ (35112)
  *d=0 (35113)
  *d-- (35114)
  (                    2549: meta_block_btype_i = 0) (35115)
  (         H[t0+149]〈meta_block_btype_i〉 = 0) (35115)
  d++ (35115)
  *d=0 (35116)
  (                    2550: meta_block_btype_i_prev = 1) (35117)
  (         H[t0+150]〈meta_block_btype_i_prev〉 = 1) (35117)
  d++ (35117)
  *d= 1 (35118)
  (                    2551: meta_block_btype_d = 0) (35120)
  (         H[t0+151]〈meta_block_btype_d〉 = 0) (35120)
  d++ (35120)
  *d=0 (35121)
  (                    2552: meta_block_btype_d_prev = 1) (35122)
  (         H[t0+152]〈meta_block_btype_d_prev〉 = 1) (35122)
  d++ (35122)
  *d= 1 (35123)
  (                    2553: meta_block_prefix_tree_block_types_insert_and_copy_lengths = NONE    # @TODO: cast here already for type information) (35125)
  (         H[t0+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 = 4294967295) (35125)
  d++ (35125)
  *d=0 (35126)
  *d-- (35127)
  (                    2554: meta_block_prefix_tree_block_counts_insert_and_copy_lengths = NONE) (35128)
  (         H[t0+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 = 4294967295) (35128)
  d++ (35128)
  *d=0 (35129)
  *d-- (35130)
  (                    2555: meta_block_prefix_tree_block_types_distances = NONE) (35131)
  (         H[t0+155]〈meta_block_prefix_tree_block_types_distances〉 = 4294967295) (35131)
  d++ (35131)
  *d=0 (35132)
  *d-- (35133)
  (                    2556: meta_block_prefix_tree_block_counts_distances = NONE) (35134)
  (         H[t0+156]〈meta_block_prefix_tree_block_counts_distances〉 = 4294967295) (35134)
  d++ (35134)
  *d=0 (35135)
  *d-- (35136)
  (                    2557: meta_block_prefix_trees_insert_and_copy_lengths = NONE) (35137)
  (         H[t0+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 = 4294967295) (35137)
  d++ (35137)
  *d=0 (35138)
  *d-- (35139)
  (                    2558: meta_block_prefix_trees_distances = NONE) (35140)
  (         H[t0+158]〈meta_block_prefix_trees_distances〉 = 4294967295) (35140)
  d++ (35140)
  *d=0 (35141)
  *d-- (35142)
  (                    2559: meta_block_context_modes_literals = NONE) (35143)
  (         H[t0+159]〈meta_block_context_modes_literals〉 = 4294967295) (35143)
  d++ (35143)
  *d=0 (35144)
  *d-- (35145)
  (                    2560: meta_block_insert_and_copy_length = NONE) (35146)
  (         H[t0+160]〈meta_block_insert_and_copy_length〉 = 4294967295) (35146)
  d++ (35146)
  *d=0 (35147)
  *d-- (35148)
  (                    2561: meta_block_copy_length = NONE) (35149)
  (         H[t0+161]〈meta_block_copy_length〉 = 4294967295) (35149)
  d++ (35149)
  *d=0 (35150)
  *d-- (35151)
  (                    2562: meta_block_insert_length = NONE) (35152)
  (         H[t0+162]〈meta_block_insert_length〉 = 4294967295) (35152)
  d++ (35152)
  *d=0 (35153)
  *d-- (35154)
  (                    2563: meta_block_distance = NONE) (35155)
  (         H[t0+163]〈meta_block_distance〉 = 4294967295) (35155)
  d++ (35155)
  *d=0 (35156)
  *d-- (35157)
  (                    2564: meta_block_distance_code = NONE) (35158)
  (         H[t0+164]〈meta_block_distance_code〉 = 4294967295) (35158)
  d++ (35158)
  *d=0 (35159)
  *d-- (35160)
  (                    2567: state = StreamBegin) (35161)
  (         H[t0+165]〈state〉 = H[t0+27]〈StreamBegin〉) (35161)
  a=r 0 (35161)
  a+= 27 (35163)
  d=a (35165)
  c=*d (35166)
  a=r 0 (35167)
  a+= 165 (35169)
  d=a (35171)
  *d=c (35172)
  (                    2569: def parse_wbits〈〉:) (35173)
  (         goto parse_wbits_end~) (35173)
  lj 35241 (35173)
  (        :parse_wbits:) (35176)
  (         MarkTempVarStart) (35176)
  (                    2570:   return lookup_symbol〈header_wbits_codes〉) (35176)
  (         H[t0+1]〈〉 = t0) (35176)
  a=r 0 (35176)
  a++ (35178)
  d=a (35179)
  a=r 0 (35180)
  *d=a (35182)
  (saved bsp, return id:) (35183)
  (         H[t0+2]〈〉 = 124) (35183)
  d++ (35183)
  *d= 124 (35184)
  (push arguments:) (35186)
  (         H[t0+3]〈〉 = H[t252+112]〈header_wbits_codes〉) (35186)
  a=r 252 (35186)
  a+= 112 (35188)
  d=a (35190)
  c=*d (35191)
  a=r 0 (35192)
  a+= 3 (35194)
  d=a (35196)
  *d=c (35197)
  (         t0 = t0 + 2) (35198)
  c= 2 (35198)
  a=r 0 (35200)
  a+=c (35202)
  r=a 0 (35203)
  (         goto lookup_symbol) (35205)
  lj 6923 (35205)
  (        :return_id_124:) (35208)
  (         t1 = t1) (35208)
  (         t2 = H[t0]〈〉) (35208)
  d=r 0 (35208)
  a=*d (35210)
  r=a 2 (35211)
  (         t0 = t0 - 1) (35213)
  a=r 0 (35213)
  a-- (35215)
  r=a 0 (35216)
  (         t0 = H[t0]〈〉) (35218)
  d=a (35218)
  a=*d (35219)
  r=a 0 (35220)
  (         goto find_label_ret_id) (35222)
  lj 62666 (35222)
  (insert return as it might not be done by the function:) (35225)
  (         t2 = H[t0]〈〉) (35225)
  d=a (35225)
  a=*d (35226)
  r=a 2 (35227)
  (         t0 = t0 - 1) (35229)
  a=r 0 (35229)
  a-- (35231)
  r=a 0 (35232)
  (         t0 = H[t0]〈〉) (35234)
  d=a (35234)
  a=*d (35235)
  r=a 0 (35236)
  (         goto find_label_ret_id) (35238)
  lj 62666 (35238)
  (         MarkTempVarEnd) (35241)
  (        :parse_wbits_end~:) (35241)
  (                    2572: def parse_is_last〈〉:) (35241)
  (         goto parse_is_last_end~) (35241)
  lj 35325 (35241)
  (        :parse_is_last:) (35244)
  (         MarkTempVarStart) (35244)
  (                    2573:   global IsLast_data) (35244)
  (Global IsLast_data via H[t252+34]) (35244)
  (                    2574:   if read_bit〈〉:) (35244)
  (         H[t0+1]〈〉 = t0) (35244)
  a=r 0 (35244)
  a++ (35246)
  d=a (35247)
  a=r 0 (35248)
  *d=a (35250)
  (saved bsp, return id:) (35251)
  (         H[t0+2]〈〉 = 125) (35251)
  d++ (35251)
  *d= 125 (35252)
  (push arguments:) (35254)
  (         t0 = t0 + 2) (35254)
  c= 2 (35254)
  a+=c (35256)
  r=a 0 (35257)
  (         goto read_bit) (35259)
  lj 4578 (35259)
  (        :return_id_125:) (35262)
  (         ifN t1 goto else_1427) (35262)
  a=r 1 (35262)
  a== 0 (35264)
  jf 3 (35266)
  lj 35275 (35268)
  (                    2575:     error〈〉 # eof) (35271)
  (         error) (35271)
  error (35271)
  (         goto endif_1428) (35272)
  lj 35308 (35272)
  (        :else_1427:) (35275)
  (                    2577:     IsLast_data = read_bit_result) (35275)
  (         H[t252+34]〈IsLast_data〉 = H[t252+6]〈read_bit_result〉) (35275)
  a=r 252 (35275)
  a+= 6 (35277)
  d=a (35279)
  c=*d (35280)
  a=r 252 (35281)
  a+= 34 (35283)
  d=a (35285)
  *d=c (35286)
  (                    2578:     return IsLast) (35287)
  (         t1 = H[t252+33]〈IsLast〉) (35287)
  d-- (35287)
  a=*d (35288)
  r=a 1 (35289)
  (         t2 = H[t0]〈〉) (35291)
  d=r 0 (35291)
  a=*d (35293)
  r=a 2 (35294)
  (         t0 = t0 - 1) (35296)
  a=r 0 (35296)
  a-- (35298)
  r=a 0 (35299)
  (         t0 = H[t0]〈〉) (35301)
  d=a (35301)
  a=*d (35302)
  r=a 0 (35303)
  (         goto find_label_ret_id) (35305)
  lj 62666 (35305)
  (        :endif_1428:) (35308)
  (insert return as it might not be done by the function:) (35308)
  (         t2 = H[t0]〈〉) (35308)
  d=r 0 (35308)
  a=*d (35310)
  r=a 2 (35311)
  (         t0 = t0 - 1) (35313)
  a=r 0 (35313)
  a-- (35315)
  r=a 0 (35316)
  (         t0 = H[t0]〈〉) (35318)
  d=a (35318)
  a=*d (35319)
  r=a 0 (35320)
  (         goto find_label_ret_id) (35322)
  lj 62666 (35322)
  (         MarkTempVarEnd) (35325)
  (        :parse_is_last_end~:) (35325)
  (                    2580: def parse_is_last_empty〈〉:) (35325)
  (         goto parse_is_last_empty_end~) (35325)
  lj 35409 (35325)
  (        :parse_is_last_empty:) (35328)
  (         MarkTempVarStart) (35328)
  (                    2581:   global IsLastEmpty_data) (35328)
  (Global IsLastEmpty_data via H[t252+36]) (35328)
  (                    2582:   if read_bit〈〉:) (35328)
  (         H[t0+1]〈〉 = t0) (35328)
  a=r 0 (35328)
  a++ (35330)
  d=a (35331)
  a=r 0 (35332)
  *d=a (35334)
  (saved bsp, return id:) (35335)
  (         H[t0+2]〈〉 = 126) (35335)
  d++ (35335)
  *d= 126 (35336)
  (push arguments:) (35338)
  (         t0 = t0 + 2) (35338)
  c= 2 (35338)
  a+=c (35340)
  r=a 0 (35341)
  (         goto read_bit) (35343)
  lj 4578 (35343)
  (        :return_id_126:) (35346)
  (         ifN t1 goto else_1429) (35346)
  a=r 1 (35346)
  a== 0 (35348)
  jf 3 (35350)
  lj 35359 (35352)
  (                    2583:     error〈〉 # eof) (35355)
  (         error) (35355)
  error (35355)
  (         goto endif_1430) (35356)
  lj 35392 (35356)
  (        :else_1429:) (35359)
  (                    2585:     IsLastEmpty_data = read_bit_result) (35359)
  (         H[t252+36]〈IsLastEmpty_data〉 = H[t252+6]〈read_bit_result〉) (35359)
  a=r 252 (35359)
  a+= 6 (35361)
  d=a (35363)
  c=*d (35364)
  a=r 252 (35365)
  a+= 36 (35367)
  d=a (35369)
  *d=c (35370)
  (                    2586:     return IsLastEmpty) (35371)
  (         t1 = H[t252+35]〈IsLastEmpty〉) (35371)
  d-- (35371)
  a=*d (35372)
  r=a 1 (35373)
  (         t2 = H[t0]〈〉) (35375)
  d=r 0 (35375)
  a=*d (35377)
  r=a 2 (35378)
  (         t0 = t0 - 1) (35380)
  a=r 0 (35380)
  a-- (35382)
  r=a 0 (35383)
  (         t0 = H[t0]〈〉) (35385)
  d=a (35385)
  a=*d (35386)
  r=a 0 (35387)
  (         goto find_label_ret_id) (35389)
  lj 62666 (35389)
  (        :endif_1430:) (35392)
  (insert return as it might not be done by the function:) (35392)
  (         t2 = H[t0]〈〉) (35392)
  d=r 0 (35392)
  a=*d (35394)
  r=a 2 (35395)
  (         t0 = t0 - 1) (35397)
  a=r 0 (35397)
  a-- (35399)
  r=a 0 (35400)
  (         t0 = H[t0]〈〉) (35402)
  d=a (35402)
  a=*d (35403)
  r=a 0 (35404)
  (         goto find_label_ret_id) (35406)
  lj 62666 (35406)
  (         MarkTempVarEnd) (35409)
  (        :parse_is_last_empty_end~:) (35409)
  (                    2588: def parse_m_nibbles〈〉:) (35409)
  (         goto parse_m_nibbles_end~) (35409)
  lj 35555 (35409)
  (        :parse_m_nibbles:) (35412)
  (         MarkTempVarStart) (35412)
  (                    2589:   global MNibbles_data) (35412)
  (Global MNibbles_data via H[t252+38]) (35412)
  (                    2590:   if read_u32_from_n_bits〈2〉:) (35412)
  (         H[t0+1]〈〉 = t0) (35412)
  a=r 0 (35412)
  a++ (35414)
  d=a (35415)
  a=r 0 (35416)
  *d=a (35418)
  (saved bsp, return id:) (35419)
  (         H[t0+2]〈〉 = 127) (35419)
  d++ (35419)
  *d= 127 (35420)
  (push arguments:) (35422)
  (         H[t0+3]〈〉 = 2) (35422)
  d++ (35422)
  *d= 2 (35423)
  (         t0 = t0 + 2) (35425)
  c= 2 (35425)
  a+=c (35427)
  r=a 0 (35428)
  (         goto read_u32_from_n_bits) (35430)
  lj 4857 (35430)
  (        :return_id_127:) (35433)
  (         ifN t1 goto else_1431) (35433)
  a=r 1 (35433)
  a== 0 (35435)
  jf 3 (35437)
  lj 35446 (35439)
  (                    2591:     error〈〉 # eof) (35442)
  (         error) (35442)
  error (35442)
  (         goto endif_1432) (35443)
  lj 35446 (35443)
  (        :else_1431:) (35446)
  (        :endif_1432:) (35446)
  (                    2592:   if read_u32_from_n_bits_result == 3:) (35446)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 == 3) (35446)
  c= 3 (35446)
  a=r 252 (35448)
  a+= 7 (35450)
  d=a (35452)
  a=*d (35453)
  a==c (35454)
  a=0 (35455)
  jf 1 (35456)
  a++ (35458)
  r=a 1 (35459)
  (         ifN t1 goto else_1434) (35461)
  a== 0 (35461)
  jf 3 (35463)
  lj 35498 (35465)
  (                    2593:     MNibbles_data = 0) (35468)
  (         H[t252+38]〈MNibbles_data〉 = 0) (35468)
  a=r 252 (35468)
  a+= 38 (35470)
  d=a (35472)
  *d=0 (35473)
  (                    2594:     return MNibbles) (35474)
  (         t1 = H[t252+37]〈MNibbles〉) (35474)
  d-- (35474)
  a=*d (35475)
  r=a 1 (35476)
  (         t2 = H[t0]〈〉) (35478)
  d=r 0 (35478)
  a=*d (35480)
  r=a 2 (35481)
  (         t0 = t0 - 1) (35483)
  a=r 0 (35483)
  a-- (35485)
  r=a 0 (35486)
  (         t0 = H[t0]〈〉) (35488)
  d=a (35488)
  a=*d (35489)
  r=a 0 (35490)
  (         goto find_label_ret_id) (35492)
  lj 62666 (35492)
  (         goto endif_1435) (35495)
  lj 35538 (35495)
  (        :else_1434:) (35498)
  (                    2596:     MNibbles_data = read_u32_from_n_bits_result + 4) (35498)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 + 4) (35498)
  c= 4 (35498)
  a=r 252 (35500)
  a+= 7 (35502)
  d=a (35504)
  a=*d (35505)
  a+=c (35506)
  r=a 1 (35507)
  (         H[t252+38]〈MNibbles_data〉 = t1) (35509)
  a=r 252 (35509)
  a+= 38 (35511)
  d=a (35513)
  a=r 1 (35514)
  *d=a (35516)
  (                    2597:     return MNibbles) (35517)
  (         t1 = H[t252+37]〈MNibbles〉) (35517)
  d-- (35517)
  a=*d (35518)
  r=a 1 (35519)
  (         t2 = H[t0]〈〉) (35521)
  d=r 0 (35521)
  a=*d (35523)
  r=a 2 (35524)
  (         t0 = t0 - 1) (35526)
  a=r 0 (35526)
  a-- (35528)
  r=a 0 (35529)
  (         t0 = H[t0]〈〉) (35531)
  d=a (35531)
  a=*d (35532)
  r=a 0 (35533)
  (         goto find_label_ret_id) (35535)
  lj 62666 (35535)
  (        :endif_1435:) (35538)
  (insert return as it might not be done by the function:) (35538)
  (         t2 = H[t0]〈〉) (35538)
  d=r 0 (35538)
  a=*d (35540)
  r=a 2 (35541)
  (         t0 = t0 - 1) (35543)
  a=r 0 (35543)
  a-- (35545)
  r=a 0 (35546)
  (         t0 = H[t0]〈〉) (35548)
  d=a (35548)
  a=*d (35549)
  r=a 0 (35550)
  (         goto find_label_ret_id) (35552)
  lj 62666 (35552)
  (         MarkTempVarEnd) (35555)
  (        :parse_m_nibbles_end~:) (35555)
  (                    2599: def parse_m_skip_bytes〈〉:) (35555)
  (         goto parse_m_skip_bytes_end~) (35555)
  lj 35641 (35555)
  (        :parse_m_skip_bytes:) (35558)
  (         MarkTempVarStart) (35558)
  (                    2600:   global MSkipBytes_data) (35558)
  (Global MSkipBytes_data via H[t252+40]) (35558)
  (                    2601:   if read_u32_from_n_bits〈2〉:) (35558)
  (         H[t0+1]〈〉 = t0) (35558)
  a=r 0 (35558)
  a++ (35560)
  d=a (35561)
  a=r 0 (35562)
  *d=a (35564)
  (saved bsp, return id:) (35565)
  (         H[t0+2]〈〉 = 128) (35565)
  d++ (35565)
  *d= 128 (35566)
  (push arguments:) (35568)
  (         H[t0+3]〈〉 = 2) (35568)
  d++ (35568)
  *d= 2 (35569)
  (         t0 = t0 + 2) (35571)
  c= 2 (35571)
  a+=c (35573)
  r=a 0 (35574)
  (         goto read_u32_from_n_bits) (35576)
  lj 4857 (35576)
  (        :return_id_128:) (35579)
  (         ifN t1 goto else_1436) (35579)
  a=r 1 (35579)
  a== 0 (35581)
  jf 3 (35583)
  lj 35592 (35585)
  (                    2602:     error〈〉 # eof) (35588)
  (         error) (35588)
  error (35588)
  (         goto endif_1437) (35589)
  lj 35592 (35589)
  (        :else_1436:) (35592)
  (        :endif_1437:) (35592)
  (                    2603:   MSkipBytes_data = read_u32_from_n_bits_result) (35592)
  (         H[t252+40]〈MSkipBytes_data〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (35592)
  a=r 252 (35592)
  a+= 7 (35594)
  d=a (35596)
  c=*d (35597)
  a=r 252 (35598)
  a+= 40 (35600)
  d=a (35602)
  *d=c (35603)
  (                    2604:   return MSkipBytes) (35604)
  (         t1 = H[t252+39]〈MSkipBytes〉) (35604)
  d-- (35604)
  a=*d (35605)
  r=a 1 (35606)
  (         t2 = H[t0]〈〉) (35608)
  d=r 0 (35608)
  a=*d (35610)
  r=a 2 (35611)
  (         t0 = t0 - 1) (35613)
  a=r 0 (35613)
  a-- (35615)
  r=a 0 (35616)
  (         t0 = H[t0]〈〉) (35618)
  d=a (35618)
  a=*d (35619)
  r=a 0 (35620)
  (         goto find_label_ret_id) (35622)
  lj 62666 (35622)
  (insert return as it might not be done by the function:) (35625)
  (         t2 = H[t0]〈〉) (35625)
  d=a (35625)
  a=*d (35626)
  r=a 2 (35627)
  (         t0 = t0 - 1) (35629)
  a=r 0 (35629)
  a-- (35631)
  r=a 0 (35632)
  (         t0 = H[t0]〈〉) (35634)
  d=a (35634)
  a=*d (35635)
  r=a 0 (35636)
  (         goto find_label_ret_id) (35638)
  lj 62666 (35638)
  (         MarkTempVarEnd) (35641)
  (        :parse_m_skip_bytes_end~:) (35641)
  (                    2606: def parse_m_skip_len〈〉:) (35641)
  (         goto parse_m_skip_len_end~) (35641)
  lj 36010 (35641)
  (        :parse_m_skip_len:) (35644)
  (         MarkTempVarStart) (35644)
  (                    2607:     global MSkipLen_data) (35644)
  (Global MSkipLen_data via H[t252+42]) (35644)
  (                    2608:     bytes_ = read_fixed_length_string〈meta_block_header_m_skip_bytes〉) (35644)
  (         H[t0+1]〈〉 = t0) (35644)
  a=r 0 (35644)
  a++ (35646)
  d=a (35647)
  a=r 0 (35648)
  *d=a (35650)
  (saved bsp, return id:) (35651)
  (         H[t0+2]〈〉 = 129) (35651)
  d++ (35651)
  *d= 129 (35652)
  (push arguments:) (35654)
  (         H[t0+3]〈〉 = H[t252+127]〈meta_block_header_m_skip_bytes〉) (35654)
  a=r 252 (35654)
  a+= 127 (35656)
  d=a (35658)
  c=*d (35659)
  a=r 0 (35660)
  a+= 3 (35662)
  d=a (35664)
  *d=c (35665)
  (         t0 = t0 + 2) (35666)
  c= 2 (35666)
  a=r 0 (35668)
  a+=c (35670)
  r=a 0 (35671)
  (         goto read_fixed_length_string) (35673)
  lj 5371 (35673)
  (        :return_id_129:) (35676)
  (         H[t0+1]〈bytes_〉 = t1) (35676)
  a=r 0 (35676)
  a++ (35678)
  d=a (35679)
  a=r 1 (35680)
  *d=a (35682)
  (                    2609:     if bytes_ == NONE:) (35683)
  (         t1 = H[t0+1]〈bytes_〉 == 4294967295) (35683)
  c=0 (35683)
  c-- (35684)
  a=*d (35685)
  a==c (35686)
  a=0 (35687)
  jf 1 (35688)
  a++ (35690)
  r=a 1 (35691)
  (         ifN t1 goto else_1439) (35693)
  a== 0 (35693)
  jf 3 (35695)
  lj 35704 (35697)
  (                    2610:       error〈〉 # eof) (35700)
  (         error) (35700)
  error (35700)
  (         goto endif_1440) (35701)
  lj 35704 (35701)
  (        :else_1439:) (35704)
  (        :endif_1440:) (35704)
  (                    2611:     if meta_block_header_m_skip_bytes > 1 and bytes_[meta_block_header_m_skip_bytes - 1] == 0:) (35704)
  (         t2 = H[t252+127]〈meta_block_header_m_skip_bytes〉 > 1) (35704)
  c= 1 (35704)
  a=r 252 (35706)
  a+= 127 (35708)
  d=a (35710)
  a=*d (35711)
  a>c (35712)
  a=0 (35713)
  jf 1 (35714)
  a++ (35716)
  r=a 2 (35717)
  (         t4 = H[t252+127]〈meta_block_header_m_skip_bytes〉 - 1) (35719)
  c= 1 (35719)
  a=*d (35721)
  a-=c (35722)
  r=a 4 (35723)
  (         t5 = H[t0+1]〈bytes_〉 >> 31) (35725)
  c= 31 (35725)
  a=r 0 (35727)
  a++ (35729)
  d=a (35730)
  a=*d (35731)
  a>>=c (35732)
  r=a 5 (35733)
  (         if t5 goto isM_1442) (35735)
  a== 0 (35735)
  jt 3 (35737)
  lj 35755 (35739)
  (         t5 = H[t0+1]〈bytes_〉 + t4) (35742)
  c=r 4 (35742)
  a=*d (35744)
  a+=c (35745)
  r=a 5 (35746)
  (         t5 = H[t5]〈〉) (35748)
  d=a (35748)
  a=*d (35749)
  r=a 5 (35750)
  (         goto MorHdone_1443) (35752)
  lj 35777 (35752)
  (        :isM_1442:) (35755)
  (         t5 = H[t0+1]〈bytes_〉 & 2147483647) (35755)
  a=0 (35755)
  a-- (35756)
  a>>= 1 (35757)
  c=a (35759)
  a=r 0 (35760)
  a++ (35762)
  d=a (35763)
  a=*d (35764)
  a&=c (35765)
  r=a 5 (35766)
  (         t5 = t5 + t4) (35768)
  c=r 4 (35768)
  a+=c (35770)
  r=a 5 (35771)
  (         t5 = M[t5]) (35773)
  b=a (35773)
  a=*b (35774)
  r=a 5 (35775)
  (        :MorHdone_1443:) (35777)
  (         t3 = t5 == 0) (35777)
  c=0 (35777)
  a=r 5 (35778)
  a==c (35780)
  a=0 (35781)
  jf 1 (35782)
  a++ (35784)
  r=a 3 (35785)
  (         t1 = t2 and t3) (35787)
  c=a (35787)
  a=r 2 (35788)
  a== 0 (35790)
  jt 1 (35792)
  a=c (35794)
  r=a 1 (35795)
  (         ifN t1 goto else_1445) (35797)
  a== 0 (35797)
  jf 3 (35799)
  lj 35808 (35801)
  (                    2612:       error〈〉) (35804)
  (         error) (35804)
  error (35804)
  (         goto endif_1446) (35805)
  lj 35808 (35805)
  (        :else_1445:) (35808)
  (        :endif_1446:) (35808)
  (                    2613:     MSkipLen_data = 0) (35808)
  (         H[t252+42]〈MSkipLen_data〉 = 0) (35808)
  a=r 252 (35808)
  a+= 42 (35810)
  d=a (35812)
  *d=0 (35813)
  (                    2614:     i = 0) (35814)
  (         H[t0+2]〈i〉 = 0) (35814)
  a=r 0 (35814)
  a+= 2 (35816)
  d=a (35818)
  *d=0 (35819)
  (                    2615:     while i < meta_block_header_m_skip_bytes:) (35820)
  (        :while_1447:) (35820)
  (         t1 = H[t0+2]〈i〉 < H[t252+127]〈meta_block_header_m_skip_bytes〉) (35820)
  a=r 252 (35820)
  a+= 127 (35822)
  d=a (35824)
  c=*d (35825)
  a=r 0 (35826)
  a+= 2 (35828)
  d=a (35830)
  a=*d (35831)
  a<c (35832)
  a=0 (35833)
  jf 1 (35834)
  a++ (35836)
  r=a 1 (35837)
  (         ifN t1 goto whileend_1449) (35839)
  a== 0 (35839)
  jf 3 (35841)
  lj 35927 (35843)
  (                    2616:       MSkipLen_data = MSkipLen_data | 〈bytes_[i] << i〉  # u32!) (35846)
  (         t3 = H[t0+1]〈bytes_〉 >> 31) (35846)
  c= 31 (35846)
  d-- (35848)
  a=*d (35849)
  a>>=c (35850)
  r=a 3 (35851)
  (         if t3 goto isM_1451) (35853)
  a== 0 (35853)
  jt 3 (35855)
  lj 35874 (35857)
  (         t3 = H[t0+1]〈bytes_〉 + H[t0+2]〈i〉) (35860)
  d++ (35860)
  c=*d (35861)
  d-- (35862)
  a=*d (35863)
  a+=c (35864)
  r=a 3 (35865)
  (         t3 = H[t3]〈〉) (35867)
  d=a (35867)
  a=*d (35868)
  r=a 3 (35869)
  (         goto MorHdone_1452) (35871)
  lj 35896 (35871)
  (        :isM_1451:) (35874)
  (         t3 = H[t0+1]〈bytes_〉 & 2147483647) (35874)
  a=0 (35874)
  a-- (35875)
  a>>= 1 (35876)
  c=a (35878)
  a=r 0 (35879)
  a++ (35881)
  d=a (35882)
  a=*d (35883)
  a&=c (35884)
  r=a 3 (35885)
  (         t3 = t3 + H[t0+2]〈i〉) (35887)
  d++ (35887)
  c=*d (35888)
  a+=c (35889)
  r=a 3 (35890)
  (         t3 = M[t3]) (35892)
  b=a (35892)
  a=*b (35893)
  r=a 3 (35894)
  (        :MorHdone_1452:) (35896)
  (         t2 = t3 << H[t0+2]〈i〉) (35896)
  a=r 0 (35896)
  a+= 2 (35898)
  d=a (35900)
  c=*d (35901)
  a=r 3 (35902)
  a<<=c (35904)
  r=a 2 (35905)
  (         t1 = H[t252+42]〈MSkipLen_data〉 | t2) (35907)
  c=a (35907)
  a=r 252 (35908)
  a+= 42 (35910)
  d=a (35912)
  a=*d (35913)
  a|=c (35914)
  r=a 1 (35915)
  (         H[t252+42]〈MSkipLen_data〉 = t1) (35917)
  *d=a (35917)
  (                    2617:       i += 1) (35918)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (35918)
  a=r 0 (35918)
  a+= 2 (35920)
  d=a (35922)
  *d++ (35923)
  (         goto while_1447) (35924)
  lj 35820 (35924)
  (        :whileend_1449:) (35927)
  (                    2618:     free_pM〈bytes_〉) (35927)
  (         t1 = H[t0+1]〈bytes_〉 & 2147483647) (35927)
  a=0 (35927)
  a-- (35928)
  a>>= 1 (35929)
  c=a (35931)
  a=r 0 (35932)
  a++ (35934)
  d=a (35935)
  a=*d (35936)
  a&=c (35937)
  r=a 1 (35938)
  (         H[t0+4]〈〉 = t0) (35940)
  a=r 0 (35940)
  a+= 4 (35942)
  d=a (35944)
  a=r 0 (35945)
  *d=a (35947)
  (saved bsp, return id:) (35948)
  (         H[t0+5]〈〉 = 130) (35948)
  d++ (35948)
  *d= 130 (35949)
  (push arguments:) (35951)
  (         H[t0+6]〈〉 = t1) (35951)
  d++ (35951)
  a=r 1 (35952)
  *d=a (35954)
  (         t0 = t0 + 5) (35955)
  c= 5 (35955)
  a=r 0 (35957)
  a+=c (35959)
  r=a 0 (35960)
  (         goto addr_free_pM) (35962)
  lj 2406 (35962)
  (        :return_id_130:) (35965)
  (         t2 = t1) (35965)
  a=r 1 (35965)
  r=a 2 (35967)
  (                    2619:     return MSkipLen) (35969)
  (         t1 = H[t252+41]〈MSkipLen〉) (35969)
  a=r 252 (35969)
  a+= 41 (35971)
  d=a (35973)
  a=*d (35974)
  r=a 1 (35975)
  (         t2 = H[t0]〈〉) (35977)
  d=r 0 (35977)
  a=*d (35979)
  r=a 2 (35980)
  (         t0 = t0 - 1) (35982)
  a=r 0 (35982)
  a-- (35984)
  r=a 0 (35985)
  (         t0 = H[t0]〈〉) (35987)
  d=a (35987)
  a=*d (35988)
  r=a 0 (35989)
  (         goto find_label_ret_id) (35991)
  lj 62666 (35991)
  (insert return as it might not be done by the function:) (35994)
  (         t2 = H[t0]〈〉) (35994)
  d=a (35994)
  a=*d (35995)
  r=a 2 (35996)
  (         t0 = t0 - 1) (35998)
  a=r 0 (35998)
  a-- (36000)
  r=a 0 (36001)
  (         t0 = H[t0]〈〉) (36003)
  d=a (36003)
  a=*d (36004)
  r=a 0 (36005)
  (         goto find_label_ret_id) (36007)
  lj 62666 (36007)
  (         MarkTempVarEnd) (36010)
  (        :parse_m_skip_len_end~:) (36010)
  (                    2621: def parse_m_len〈〉:) (36010)
  (         goto parse_m_len_end~) (36010)
  lj 36179 (36010)
  (        :parse_m_len:) (36013)
  (         MarkTempVarStart) (36013)
  (                    2622:     global MLen_data) (36013)
  (Global MLen_data via H[t252+44]) (36013)
  (                    2623:     if read_u32_from_n_nibbles〈meta_block_header_m_nibbles〉:) (36013)
  (         H[t0+1]〈〉 = t0) (36013)
  a=r 0 (36013)
  a++ (36015)
  d=a (36016)
  a=r 0 (36017)
  *d=a (36019)
  (saved bsp, return id:) (36020)
  (         H[t0+2]〈〉 = 131) (36020)
  d++ (36020)
  *d= 131 (36021)
  (push arguments:) (36023)
  (         H[t0+3]〈〉 = H[t252+126]〈meta_block_header_m_nibbles〉) (36023)
  a=r 252 (36023)
  a+= 126 (36025)
  d=a (36027)
  c=*d (36028)
  a=r 0 (36029)
  a+= 3 (36031)
  d=a (36033)
  *d=c (36034)
  (         t0 = t0 + 2) (36035)
  c= 2 (36035)
  a=r 0 (36037)
  a+=c (36039)
  r=a 0 (36040)
  (         goto read_u32_from_n_nibbles) (36042)
  lj 5196 (36042)
  (        :return_id_131:) (36045)
  (         ifN t1 goto else_1453) (36045)
  a=r 1 (36045)
  a== 0 (36047)
  jf 3 (36049)
  lj 36058 (36051)
  (                    2624:       error〈〉) (36054)
  (         error) (36054)
  error (36054)
  (         goto endif_1454) (36055)
  lj 36058 (36055)
  (        :else_1453:) (36058)
  (        :endif_1454:) (36058)
  (                    2625:     if meta_block_header_m_nibbles > 4 and 〈read_u32_from_n_nibbles_result >> 〈〈meta_block_header_m_nibbles - 1〉*4〉 == 0〉:) (36058)
  (         t2 = H[t252+126]〈meta_block_header_m_nibbles〉 > 4) (36058)
  c= 4 (36058)
  a=r 252 (36060)
  a+= 126 (36062)
  d=a (36064)
  a=*d (36065)
  a>c (36066)
  a=0 (36067)
  jf 1 (36068)
  a++ (36070)
  r=a 2 (36071)
  (         t6 = H[t252+126]〈meta_block_header_m_nibbles〉 - 1) (36073)
  c= 1 (36073)
  a=*d (36075)
  a-=c (36076)
  r=a 6 (36077)
  (         t5 = t6 * 4) (36079)
  c= 4 (36079)
  a*=c (36081)
  r=a 5 (36082)
  (         t4 = H[t252+8]〈read_u32_from_n_nibbles_result〉 >> t5) (36084)
  c=a (36084)
  a=r 252 (36085)
  a+= 8 (36087)
  d=a (36089)
  a=*d (36090)
  a>>=c (36091)
  r=a 4 (36092)
  (         t3 = t4 == 0) (36094)
  c=0 (36094)
  a==c (36095)
  a=0 (36096)
  jf 1 (36097)
  a++ (36099)
  r=a 3 (36100)
  (         t1 = t2 and t3) (36102)
  c=a (36102)
  a=r 2 (36103)
  a== 0 (36105)
  jt 1 (36107)
  a=c (36109)
  r=a 1 (36110)
  (         ifN t1 goto else_1457) (36112)
  a== 0 (36112)
  jf 3 (36114)
  lj 36123 (36116)
  (                    2626:       error〈〉 # NonZeroTrailerNibble) (36119)
  (         error) (36119)
  error (36119)
  (         goto endif_1458) (36120)
  lj 36123 (36120)
  (        :else_1457:) (36123)
  (        :endif_1458:) (36123)
  (                    2627:     MLen_data = read_u32_from_n_nibbles_result + 1) (36123)
  (         t1 = H[t252+8]〈read_u32_from_n_nibbles_result〉 + 1) (36123)
  c= 1 (36123)
  a=r 252 (36125)
  a+= 8 (36127)
  d=a (36129)
  a=*d (36130)
  a+=c (36131)
  r=a 1 (36132)
  (         H[t252+44]〈MLen_data〉 = t1) (36134)
  a=r 252 (36134)
  a+= 44 (36136)
  d=a (36138)
  a=r 1 (36139)
  *d=a (36141)
  (                    2628:     return MLen) (36142)
  (         t1 = H[t252+43]〈MLen〉) (36142)
  d-- (36142)
  a=*d (36143)
  r=a 1 (36144)
  (         t2 = H[t0]〈〉) (36146)
  d=r 0 (36146)
  a=*d (36148)
  r=a 2 (36149)
  (         t0 = t0 - 1) (36151)
  a=r 0 (36151)
  a-- (36153)
  r=a 0 (36154)
  (         t0 = H[t0]〈〉) (36156)
  d=a (36156)
  a=*d (36157)
  r=a 0 (36158)
  (         goto find_label_ret_id) (36160)
  lj 62666 (36160)
  (insert return as it might not be done by the function:) (36163)
  (         t2 = H[t0]〈〉) (36163)
  d=a (36163)
  a=*d (36164)
  r=a 2 (36165)
  (         t0 = t0 - 1) (36167)
  a=r 0 (36167)
  a-- (36169)
  r=a 0 (36170)
  (         t0 = H[t0]〈〉) (36172)
  d=a (36172)
  a=*d (36173)
  r=a 0 (36174)
  (         goto find_label_ret_id) (36176)
  lj 62666 (36176)
  (         MarkTempVarEnd) (36179)
  (        :parse_m_len_end~:) (36179)
  (                    2630: def parse_is_uncompressed〈〉:) (36179)
  (         goto parse_is_uncompressed_end~) (36179)
  lj 36262 (36179)
  (        :parse_is_uncompressed:) (36182)
  (         MarkTempVarStart) (36182)
  (                    2631:     global IsUncompressed_data) (36182)
  (Global IsUncompressed_data via H[t252+46]) (36182)
  (                    2632:     if read_bit〈〉:) (36182)
  (         H[t0+1]〈〉 = t0) (36182)
  a=r 0 (36182)
  a++ (36184)
  d=a (36185)
  a=r 0 (36186)
  *d=a (36188)
  (saved bsp, return id:) (36189)
  (         H[t0+2]〈〉 = 132) (36189)
  d++ (36189)
  *d= 132 (36190)
  (push arguments:) (36192)
  (         t0 = t0 + 2) (36192)
  c= 2 (36192)
  a+=c (36194)
  r=a 0 (36195)
  (         goto read_bit) (36197)
  lj 4578 (36197)
  (        :return_id_132:) (36200)
  (         ifN t1 goto else_1459) (36200)
  a=r 1 (36200)
  a== 0 (36202)
  jf 3 (36204)
  lj 36213 (36206)
  (                    2633:       error〈〉) (36209)
  (         error) (36209)
  error (36209)
  (         goto endif_1460) (36210)
  lj 36213 (36210)
  (        :else_1459:) (36213)
  (        :endif_1460:) (36213)
  (                    2634:     IsUncompressed_data = read_bit_result) (36213)
  (         H[t252+46]〈IsUncompressed_data〉 = H[t252+6]〈read_bit_result〉) (36213)
  a=r 252 (36213)
  a+= 6 (36215)
  d=a (36217)
  c=*d (36218)
  a=r 252 (36219)
  a+= 46 (36221)
  d=a (36223)
  *d=c (36224)
  (                    2635:     return IsUncompressed) (36225)
  (         t1 = H[t252+45]〈IsUncompressed〉) (36225)
  d-- (36225)
  a=*d (36226)
  r=a 1 (36227)
  (         t2 = H[t0]〈〉) (36229)
  d=r 0 (36229)
  a=*d (36231)
  r=a 2 (36232)
  (         t0 = t0 - 1) (36234)
  a=r 0 (36234)
  a-- (36236)
  r=a 0 (36237)
  (         t0 = H[t0]〈〉) (36239)
  d=a (36239)
  a=*d (36240)
  r=a 0 (36241)
  (         goto find_label_ret_id) (36243)
  lj 62666 (36243)
  (insert return as it might not be done by the function:) (36246)
  (         t2 = H[t0]〈〉) (36246)
  d=a (36246)
  a=*d (36247)
  r=a 2 (36248)
  (         t0 = t0 - 1) (36250)
  a=r 0 (36250)
  a-- (36252)
  r=a 0 (36253)
  (         t0 = H[t0]〈〉) (36255)
  d=a (36255)
  a=*d (36256)
  r=a 0 (36257)
  (         goto find_label_ret_id) (36259)
  lj 62666 (36259)
  (         MarkTempVarEnd) (36262)
  (        :parse_is_uncompressed_end~:) (36262)
  (                    2637: def parse_mlen_literals〈〉:) (36262)
  (         goto parse_mlen_literals_end~) (36262)
  lj 36367 (36262)
  (        :parse_mlen_literals:) (36265)
  (         MarkTempVarStart) (36265)
  (                    2638:     global MLenLiterals_data) (36265)
  (Global MLenLiterals_data via H[t252+48]) (36265)
  (                    2639:     MLenLiterals_data = read_fixed_length_string〈meta_block_header_m_len〉) (36265)
  (         H[t0+1]〈〉 = t0) (36265)
  a=r 0 (36265)
  a++ (36267)
  d=a (36268)
  a=r 0 (36269)
  *d=a (36271)
  (saved bsp, return id:) (36272)
  (         H[t0+2]〈〉 = 133) (36272)
  d++ (36272)
  *d= 133 (36273)
  (push arguments:) (36275)
  (         H[t0+3]〈〉 = H[t252+129]〈meta_block_header_m_len〉) (36275)
  a=r 252 (36275)
  a+= 129 (36277)
  d=a (36279)
  c=*d (36280)
  a=r 0 (36281)
  a+= 3 (36283)
  d=a (36285)
  *d=c (36286)
  (         t0 = t0 + 2) (36287)
  c= 2 (36287)
  a=r 0 (36289)
  a+=c (36291)
  r=a 0 (36292)
  (         goto read_fixed_length_string) (36294)
  lj 5371 (36294)
  (        :return_id_133:) (36297)
  (         H[t252+48]〈MLenLiterals_data〉 = t1) (36297)
  a=r 252 (36297)
  a+= 48 (36299)
  d=a (36301)
  a=r 1 (36302)
  *d=a (36304)
  (                    2640:     if MLenLiterals_data == NONE:) (36305)
  (         t1 = H[t252+48]〈MLenLiterals_data〉 == 4294967295) (36305)
  c=0 (36305)
  c-- (36306)
  a=*d (36307)
  a==c (36308)
  a=0 (36309)
  jf 1 (36310)
  a++ (36312)
  r=a 1 (36313)
  (         ifN t1 goto else_1462) (36315)
  a== 0 (36315)
  jf 3 (36317)
  lj 36326 (36319)
  (                    2641:       error〈〉) (36322)
  (         error) (36322)
  error (36322)
  (         goto endif_1463) (36323)
  lj 36326 (36323)
  (        :else_1462:) (36326)
  (        :endif_1463:) (36326)
  (                    2642:     return MLenLiterals) (36326)
  (         t1 = H[t252+47]〈MLenLiterals〉) (36326)
  a=r 252 (36326)
  a+= 47 (36328)
  d=a (36330)
  a=*d (36331)
  r=a 1 (36332)
  (         t2 = H[t0]〈〉) (36334)
  d=r 0 (36334)
  a=*d (36336)
  r=a 2 (36337)
  (         t0 = t0 - 1) (36339)
  a=r 0 (36339)
  a-- (36341)
  r=a 0 (36342)
  (         t0 = H[t0]〈〉) (36344)
  d=a (36344)
  a=*d (36345)
  r=a 0 (36346)
  (         goto find_label_ret_id) (36348)
  lj 62666 (36348)
  (insert return as it might not be done by the function:) (36351)
  (         t2 = H[t0]〈〉) (36351)
  d=a (36351)
  a=*d (36352)
  r=a 2 (36353)
  (         t0 = t0 - 1) (36355)
  a=r 0 (36355)
  a-- (36357)
  r=a 0 (36358)
  (         t0 = H[t0]〈〉) (36360)
  d=a (36360)
  a=*d (36361)
  r=a 0 (36362)
  (         goto find_label_ret_id) (36364)
  lj 62666 (36364)
  (         MarkTempVarEnd) (36367)
  (        :parse_mlen_literals_end~:) (36367)
  (                    2644: def parse_n_bltypes〈〉:) (36367)
  (         goto parse_n_bltypes_end~) (36367)
  lj 36776 (36367)
  (        :parse_n_bltypes:) (36370)
  (         MarkTempVarStart) (36370)
  (                    2645:   value = lookup_symbol〈header_bltype_codes〉) (36370)
  (         H[t0+1]〈〉 = t0) (36370)
  a=r 0 (36370)
  a++ (36372)
  d=a (36373)
  a=r 0 (36374)
  *d=a (36376)
  (saved bsp, return id:) (36377)
  (         H[t0+2]〈〉 = 134) (36377)
  d++ (36377)
  *d= 134 (36378)
  (push arguments:) (36380)
  (         H[t0+3]〈〉 = H[t252+114]〈header_bltype_codes〉) (36380)
  a=r 252 (36380)
  a+= 114 (36382)
  d=a (36384)
  c=*d (36385)
  a=r 0 (36386)
  a+= 3 (36388)
  d=a (36390)
  *d=c (36391)
  (         t0 = t0 + 2) (36392)
  c= 2 (36392)
  a=r 0 (36394)
  a+=c (36396)
  r=a 0 (36397)
  (         goto lookup_symbol) (36399)
  lj 6923 (36399)
  (        :return_id_134:) (36402)
  (         H[t0+1]〈value〉 = t1) (36402)
  a=r 0 (36402)
  a++ (36404)
  d=a (36405)
  a=r 1 (36406)
  *d=a (36408)
  (                    2646:   if value == 1 or value == 2:) (36409)
  (         t2 = H[t0+1]〈value〉 == 1) (36409)
  c= 1 (36409)
  a=*d (36411)
  a==c (36412)
  a=0 (36413)
  jf 1 (36414)
  a++ (36416)
  r=a 2 (36417)
  (         t3 = H[t0+1]〈value〉 == 2) (36419)
  c= 2 (36419)
  a=*d (36421)
  a==c (36422)
  a=0 (36423)
  jf 1 (36424)
  a++ (36426)
  r=a 3 (36427)
  (         t1 = t2 or t3) (36429)
  c=a (36429)
  a=r 2 (36430)
  a== 0 (36432)
  jf 1 (36434)
  a=c (36436)
  r=a 1 (36437)
  (         ifN t1 goto else_1466) (36439)
  a== 0 (36439)
  jf 3 (36441)
  lj 36451 (36443)
  (                    2647:     extra_bits = 0) (36446)
  (         H[t0+2]〈extra_bits〉 = 0) (36446)
  d++ (36446)
  *d=0 (36447)
  (         goto endif_1467) (36448)
  lj 36640 (36448)
  (        :else_1466:) (36451)
  (                    2648:   elif value == 3:) (36451)
  (         t1 = H[t0+1]〈value〉 == 3) (36451)
  c= 3 (36451)
  a=r 0 (36453)
  a++ (36455)
  d=a (36456)
  a=*d (36457)
  a==c (36458)
  a=0 (36459)
  jf 1 (36460)
  a++ (36462)
  r=a 1 (36463)
  (         ifN t1 goto else_1469) (36465)
  a== 0 (36465)
  jf 3 (36467)
  lj 36478 (36469)
  (                    2649:     extra_bits = 1) (36472)
  (         H[t0+2]〈extra_bits〉 = 1) (36472)
  d++ (36472)
  *d= 1 (36473)
  (         goto endif_1470) (36475)
  lj 36640 (36475)
  (        :else_1469:) (36478)
  (                    2650:   elif value == 5:) (36478)
  (         t1 = H[t0+1]〈value〉 == 5) (36478)
  c= 5 (36478)
  a=r 0 (36480)
  a++ (36482)
  d=a (36483)
  a=*d (36484)
  a==c (36485)
  a=0 (36486)
  jf 1 (36487)
  a++ (36489)
  r=a 1 (36490)
  (         ifN t1 goto else_1472) (36492)
  a== 0 (36492)
  jf 3 (36494)
  lj 36505 (36496)
  (                    2651:     extra_bits = 2) (36499)
  (         H[t0+2]〈extra_bits〉 = 2) (36499)
  d++ (36499)
  *d= 2 (36500)
  (         goto endif_1473) (36502)
  lj 36640 (36502)
  (        :else_1472:) (36505)
  (                    2652:   elif value == 9:) (36505)
  (         t1 = H[t0+1]〈value〉 == 9) (36505)
  c= 9 (36505)
  a=r 0 (36507)
  a++ (36509)
  d=a (36510)
  a=*d (36511)
  a==c (36512)
  a=0 (36513)
  jf 1 (36514)
  a++ (36516)
  r=a 1 (36517)
  (         ifN t1 goto else_1475) (36519)
  a== 0 (36519)
  jf 3 (36521)
  lj 36532 (36523)
  (                    2653:     extra_bits = 3) (36526)
  (         H[t0+2]〈extra_bits〉 = 3) (36526)
  d++ (36526)
  *d= 3 (36527)
  (         goto endif_1476) (36529)
  lj 36640 (36529)
  (        :else_1475:) (36532)
  (                    2654:   elif value == 17:) (36532)
  (         t1 = H[t0+1]〈value〉 == 17) (36532)
  c= 17 (36532)
  a=r 0 (36534)
  a++ (36536)
  d=a (36537)
  a=*d (36538)
  a==c (36539)
  a=0 (36540)
  jf 1 (36541)
  a++ (36543)
  r=a 1 (36544)
  (         ifN t1 goto else_1478) (36546)
  a== 0 (36546)
  jf 3 (36548)
  lj 36559 (36550)
  (                    2655:     extra_bits = 4) (36553)
  (         H[t0+2]〈extra_bits〉 = 4) (36553)
  d++ (36553)
  *d= 4 (36554)
  (         goto endif_1479) (36556)
  lj 36640 (36556)
  (        :else_1478:) (36559)
  (                    2656:   elif value == 33:) (36559)
  (         t1 = H[t0+1]〈value〉 == 33) (36559)
  c= 33 (36559)
  a=r 0 (36561)
  a++ (36563)
  d=a (36564)
  a=*d (36565)
  a==c (36566)
  a=0 (36567)
  jf 1 (36568)
  a++ (36570)
  r=a 1 (36571)
  (         ifN t1 goto else_1481) (36573)
  a== 0 (36573)
  jf 3 (36575)
  lj 36586 (36577)
  (                    2657:     extra_bits = 5) (36580)
  (         H[t0+2]〈extra_bits〉 = 5) (36580)
  d++ (36580)
  *d= 5 (36581)
  (         goto endif_1482) (36583)
  lj 36640 (36583)
  (        :else_1481:) (36586)
  (                    2658:   elif value == 65:) (36586)
  (         t1 = H[t0+1]〈value〉 == 65) (36586)
  c= 65 (36586)
  a=r 0 (36588)
  a++ (36590)
  d=a (36591)
  a=*d (36592)
  a==c (36593)
  a=0 (36594)
  jf 1 (36595)
  a++ (36597)
  r=a 1 (36598)
  (         ifN t1 goto else_1484) (36600)
  a== 0 (36600)
  jf 3 (36602)
  lj 36613 (36604)
  (                    2659:     extra_bits = 6) (36607)
  (         H[t0+2]〈extra_bits〉 = 6) (36607)
  d++ (36607)
  *d= 6 (36608)
  (         goto endif_1485) (36610)
  lj 36640 (36610)
  (        :else_1484:) (36613)
  (                    2660:   elif value == 129:) (36613)
  (         t1 = H[t0+1]〈value〉 == 129) (36613)
  c= 129 (36613)
  a=r 0 (36615)
  a++ (36617)
  d=a (36618)
  a=*d (36619)
  a==c (36620)
  a=0 (36621)
  jf 1 (36622)
  a++ (36624)
  r=a 1 (36625)
  (         ifN t1 goto else_1487) (36627)
  a== 0 (36627)
  jf 3 (36629)
  lj 36640 (36631)
  (                    2661:     extra_bits = 7) (36634)
  (         H[t0+2]〈extra_bits〉 = 7) (36634)
  d++ (36634)
  *d= 7 (36635)
  (         goto endif_1488) (36637)
  lj 36640 (36637)
  (        :else_1487:) (36640)
  (        :endif_1488:) (36640)
  (        :endif_1485:) (36640)
  (        :endif_1482:) (36640)
  (        :endif_1479:) (36640)
  (        :endif_1476:) (36640)
  (        :endif_1473:) (36640)
  (        :endif_1470:) (36640)
  (        :endif_1467:) (36640)
  (                    2662:   if extra_bits > 0:) (36640)
  (         t1 = H[t0+2]〈extra_bits〉 > 0) (36640)
  c=0 (36640)
  a=r 0 (36641)
  a+= 2 (36643)
  d=a (36645)
  a=*d (36646)
  a>c (36647)
  a=0 (36648)
  jf 1 (36649)
  a++ (36651)
  r=a 1 (36652)
  (         ifN t1 goto else_1490) (36654)
  a== 0 (36654)
  jf 3 (36656)
  lj 36735 (36658)
  (                    2663:     if read_u32_from_n_bits〈extra_bits〉:) (36661)
  (         H[t0+3]〈〉 = t0) (36661)
  d++ (36661)
  a=r 0 (36662)
  *d=a (36664)
  (saved bsp, return id:) (36665)
  (         H[t0+4]〈〉 = 135) (36665)
  d++ (36665)
  *d= 135 (36666)
  (push arguments:) (36668)
  (         H[t0+5]〈〉 = H[t0+2]〈extra_bits〉) (36668)
  a+= 2 (36668)
  d=a (36670)
  c=*d (36671)
  a=r 0 (36672)
  a+= 5 (36674)
  d=a (36676)
  *d=c (36677)
  (         t0 = t0 + 4) (36678)
  c= 4 (36678)
  a=r 0 (36680)
  a+=c (36682)
  r=a 0 (36683)
  (         goto read_u32_from_n_bits) (36685)
  lj 4857 (36685)
  (        :return_id_135:) (36688)
  (         ifN t1 goto else_1492) (36688)
  a=r 1 (36688)
  a== 0 (36690)
  jf 3 (36692)
  lj 36701 (36694)
  (                    2664:       error〈〉) (36697)
  (         error) (36697)
  error (36697)
  (         goto endif_1493) (36698)
  lj 36701 (36698)
  (        :else_1492:) (36701)
  (        :endif_1493:) (36701)
  (                    2665:     return value + read_u32_from_n_bits_result) (36701)
  (         t1 = H[t0+1]〈value〉 + H[t252+7]〈read_u32_from_n_bits_result〉) (36701)
  a=r 252 (36701)
  a+= 7 (36703)
  d=a (36705)
  c=*d (36706)
  a=r 0 (36707)
  a++ (36709)
  d=a (36710)
  a=*d (36711)
  a+=c (36712)
  r=a 1 (36713)
  (         t1 = t1) (36715)
  (         t2 = H[t0]〈〉) (36715)
  d=r 0 (36715)
  a=*d (36717)
  r=a 2 (36718)
  (         t0 = t0 - 1) (36720)
  a=r 0 (36720)
  a-- (36722)
  r=a 0 (36723)
  (         t0 = H[t0]〈〉) (36725)
  d=a (36725)
  a=*d (36726)
  r=a 0 (36727)
  (         goto find_label_ret_id) (36729)
  lj 62666 (36729)
  (         goto endif_1491) (36732)
  lj 36759 (36732)
  (        :else_1490:) (36735)
  (                    2667:     return value) (36735)
  (         t1 = H[t0+1]〈value〉) (36735)
  a=r 0 (36735)
  a++ (36737)
  d=a (36738)
  a=*d (36739)
  r=a 1 (36740)
  (         t2 = H[t0]〈〉) (36742)
  d=r 0 (36742)
  a=*d (36744)
  r=a 2 (36745)
  (         t0 = t0 - 1) (36747)
  a=r 0 (36747)
  a-- (36749)
  r=a 0 (36750)
  (         t0 = H[t0]〈〉) (36752)
  d=a (36752)
  a=*d (36753)
  r=a 0 (36754)
  (         goto find_label_ret_id) (36756)
  lj 62666 (36756)
  (        :endif_1491:) (36759)
  (insert return as it might not be done by the function:) (36759)
  (         t2 = H[t0]〈〉) (36759)
  d=r 0 (36759)
  a=*d (36761)
  r=a 2 (36762)
  (         t0 = t0 - 1) (36764)
  a=r 0 (36764)
  a-- (36766)
  r=a 0 (36767)
  (         t0 = H[t0]〈〉) (36769)
  d=a (36769)
  a=*d (36770)
  r=a 0 (36771)
  (         goto find_label_ret_id) (36773)
  lj 62666 (36773)
  (         MarkTempVarEnd) (36776)
  (        :parse_n_bltypes_end~:) (36776)
  (                    2669: def parse_n_bltypes_l〈〉:) (36776)
  (         goto parse_n_bltypes_l_end~) (36776)
  lj 36867 (36776)
  (        :parse_n_bltypes_l:) (36779)
  (         MarkTempVarStart) (36779)
  (                    2670:   global NBltypesL_data) (36779)
  (Global NBltypesL_data via H[t252+50]) (36779)
  (                    2671:   NBltypesL_data = parse_n_bltypes〈〉) (36779)
  (         H[t0+1]〈〉 = t0) (36779)
  a=r 0 (36779)
  a++ (36781)
  d=a (36782)
  a=r 0 (36783)
  *d=a (36785)
  (saved bsp, return id:) (36786)
  (         H[t0+2]〈〉 = 136) (36786)
  d++ (36786)
  *d= 136 (36787)
  (push arguments:) (36789)
  (         t0 = t0 + 2) (36789)
  c= 2 (36789)
  a+=c (36791)
  r=a 0 (36792)
  (         goto parse_n_bltypes) (36794)
  lj 36370 (36794)
  (        :return_id_136:) (36797)
  (         H[t252+50]〈NBltypesL_data〉 = t1) (36797)
  a=r 252 (36797)
  a+= 50 (36799)
  d=a (36801)
  a=r 1 (36802)
  *d=a (36804)
  (                    2672:   if NBltypesL_data == NONE:) (36805)
  (         t1 = H[t252+50]〈NBltypesL_data〉 == 4294967295) (36805)
  c=0 (36805)
  c-- (36806)
  a=*d (36807)
  a==c (36808)
  a=0 (36809)
  jf 1 (36810)
  a++ (36812)
  r=a 1 (36813)
  (         ifN t1 goto else_1495) (36815)
  a== 0 (36815)
  jf 3 (36817)
  lj 36826 (36819)
  (                    2673:     error〈〉) (36822)
  (         error) (36822)
  error (36822)
  (         goto endif_1496) (36823)
  lj 36826 (36823)
  (        :else_1495:) (36826)
  (        :endif_1496:) (36826)
  (                    2674:   return NBltypesL) (36826)
  (         t1 = H[t252+49]〈NBltypesL〉) (36826)
  a=r 252 (36826)
  a+= 49 (36828)
  d=a (36830)
  a=*d (36831)
  r=a 1 (36832)
  (         t2 = H[t0]〈〉) (36834)
  d=r 0 (36834)
  a=*d (36836)
  r=a 2 (36837)
  (         t0 = t0 - 1) (36839)
  a=r 0 (36839)
  a-- (36841)
  r=a 0 (36842)
  (         t0 = H[t0]〈〉) (36844)
  d=a (36844)
  a=*d (36845)
  r=a 0 (36846)
  (         goto find_label_ret_id) (36848)
  lj 62666 (36848)
  (insert return as it might not be done by the function:) (36851)
  (         t2 = H[t0]〈〉) (36851)
  d=a (36851)
  a=*d (36852)
  r=a 2 (36853)
  (         t0 = t0 - 1) (36855)
  a=r 0 (36855)
  a-- (36857)
  r=a 0 (36858)
  (         t0 = H[t0]〈〉) (36860)
  d=a (36860)
  a=*d (36861)
  r=a 0 (36862)
  (         goto find_label_ret_id) (36864)
  lj 62666 (36864)
  (         MarkTempVarEnd) (36867)
  (        :parse_n_bltypes_l_end~:) (36867)
  (                    2676: def parse_n_bltypes_i〈〉:) (36867)
  (         goto parse_n_bltypes_i_end~) (36867)
  lj 36958 (36867)
  (        :parse_n_bltypes_i:) (36870)
  (         MarkTempVarStart) (36870)
  (                    2677:   global NBltypesI_data) (36870)
  (Global NBltypesI_data via H[t252+58]) (36870)
  (                    2678:   NBltypesI_data = parse_n_bltypes〈〉) (36870)
  (         H[t0+1]〈〉 = t0) (36870)
  a=r 0 (36870)
  a++ (36872)
  d=a (36873)
  a=r 0 (36874)
  *d=a (36876)
  (saved bsp, return id:) (36877)
  (         H[t0+2]〈〉 = 137) (36877)
  d++ (36877)
  *d= 137 (36878)
  (push arguments:) (36880)
  (         t0 = t0 + 2) (36880)
  c= 2 (36880)
  a+=c (36882)
  r=a 0 (36883)
  (         goto parse_n_bltypes) (36885)
  lj 36370 (36885)
  (        :return_id_137:) (36888)
  (         H[t252+58]〈NBltypesI_data〉 = t1) (36888)
  a=r 252 (36888)
  a+= 58 (36890)
  d=a (36892)
  a=r 1 (36893)
  *d=a (36895)
  (                    2679:   if NBltypesI_data == NONE:) (36896)
  (         t1 = H[t252+58]〈NBltypesI_data〉 == 4294967295) (36896)
  c=0 (36896)
  c-- (36897)
  a=*d (36898)
  a==c (36899)
  a=0 (36900)
  jf 1 (36901)
  a++ (36903)
  r=a 1 (36904)
  (         ifN t1 goto else_1498) (36906)
  a== 0 (36906)
  jf 3 (36908)
  lj 36917 (36910)
  (                    2680:     error〈〉) (36913)
  (         error) (36913)
  error (36913)
  (         goto endif_1499) (36914)
  lj 36917 (36914)
  (        :else_1498:) (36917)
  (        :endif_1499:) (36917)
  (                    2681:   return NBltypesI) (36917)
  (         t1 = H[t252+57]〈NBltypesI〉) (36917)
  a=r 252 (36917)
  a+= 57 (36919)
  d=a (36921)
  a=*d (36922)
  r=a 1 (36923)
  (         t2 = H[t0]〈〉) (36925)
  d=r 0 (36925)
  a=*d (36927)
  r=a 2 (36928)
  (         t0 = t0 - 1) (36930)
  a=r 0 (36930)
  a-- (36932)
  r=a 0 (36933)
  (         t0 = H[t0]〈〉) (36935)
  d=a (36935)
  a=*d (36936)
  r=a 0 (36937)
  (         goto find_label_ret_id) (36939)
  lj 62666 (36939)
  (insert return as it might not be done by the function:) (36942)
  (         t2 = H[t0]〈〉) (36942)
  d=a (36942)
  a=*d (36943)
  r=a 2 (36944)
  (         t0 = t0 - 1) (36946)
  a=r 0 (36946)
  a-- (36948)
  r=a 0 (36949)
  (         t0 = H[t0]〈〉) (36951)
  d=a (36951)
  a=*d (36952)
  r=a 0 (36953)
  (         goto find_label_ret_id) (36955)
  lj 62666 (36955)
  (         MarkTempVarEnd) (36958)
  (        :parse_n_bltypes_i_end~:) (36958)
  (                    2683: def parse_n_bltypes_d〈〉:) (36958)
  (         goto parse_n_bltypes_d_end~) (36958)
  lj 37049 (36958)
  (        :parse_n_bltypes_d:) (36961)
  (         MarkTempVarStart) (36961)
  (                    2684:   global NBltypesD_data) (36961)
  (Global NBltypesD_data via H[t252+66]) (36961)
  (                    2685:   NBltypesD_data = parse_n_bltypes〈〉) (36961)
  (         H[t0+1]〈〉 = t0) (36961)
  a=r 0 (36961)
  a++ (36963)
  d=a (36964)
  a=r 0 (36965)
  *d=a (36967)
  (saved bsp, return id:) (36968)
  (         H[t0+2]〈〉 = 138) (36968)
  d++ (36968)
  *d= 138 (36969)
  (push arguments:) (36971)
  (         t0 = t0 + 2) (36971)
  c= 2 (36971)
  a+=c (36973)
  r=a 0 (36974)
  (         goto parse_n_bltypes) (36976)
  lj 36370 (36976)
  (        :return_id_138:) (36979)
  (         H[t252+66]〈NBltypesD_data〉 = t1) (36979)
  a=r 252 (36979)
  a+= 66 (36981)
  d=a (36983)
  a=r 1 (36984)
  *d=a (36986)
  (                    2686:   if NBltypesD_data == NONE:) (36987)
  (         t1 = H[t252+66]〈NBltypesD_data〉 == 4294967295) (36987)
  c=0 (36987)
  c-- (36988)
  a=*d (36989)
  a==c (36990)
  a=0 (36991)
  jf 1 (36992)
  a++ (36994)
  r=a 1 (36995)
  (         ifN t1 goto else_1501) (36997)
  a== 0 (36997)
  jf 3 (36999)
  lj 37008 (37001)
  (                    2687:     error〈〉) (37004)
  (         error) (37004)
  error (37004)
  (         goto endif_1502) (37005)
  lj 37008 (37005)
  (        :else_1501:) (37008)
  (        :endif_1502:) (37008)
  (                    2688:   return NBltypesD) (37008)
  (         t1 = H[t252+65]〈NBltypesD〉) (37008)
  a=r 252 (37008)
  a+= 65 (37010)
  d=a (37012)
  a=*d (37013)
  r=a 1 (37014)
  (         t2 = H[t0]〈〉) (37016)
  d=r 0 (37016)
  a=*d (37018)
  r=a 2 (37019)
  (         t0 = t0 - 1) (37021)
  a=r 0 (37021)
  a-- (37023)
  r=a 0 (37024)
  (         t0 = H[t0]〈〉) (37026)
  d=a (37026)
  a=*d (37027)
  r=a 0 (37028)
  (         goto find_label_ret_id) (37030)
  lj 62666 (37030)
  (insert return as it might not be done by the function:) (37033)
  (         t2 = H[t0]〈〉) (37033)
  d=a (37033)
  a=*d (37034)
  r=a 2 (37035)
  (         t0 = t0 - 1) (37037)
  a=r 0 (37037)
  a-- (37039)
  r=a 0 (37040)
  (         t0 = H[t0]〈〉) (37042)
  d=a (37042)
  a=*d (37043)
  r=a 0 (37044)
  (         goto find_label_ret_id) (37046)
  lj 62666 (37046)
  (         MarkTempVarEnd) (37049)
  (        :parse_n_bltypes_d_end~:) (37049)
  (                    2690: def parse_n_postfix〈〉:) (37049)
  (         goto parse_n_postfix_end~) (37049)
  lj 37135 (37049)
  (        :parse_n_postfix:) (37052)
  (         MarkTempVarStart) (37052)
  (                    2691:   global NPostfix_data) (37052)
  (Global NPostfix_data via H[t252+74]) (37052)
  (                    2692:   if read_u32_from_n_bits〈2〉:) (37052)
  (         H[t0+1]〈〉 = t0) (37052)
  a=r 0 (37052)
  a++ (37054)
  d=a (37055)
  a=r 0 (37056)
  *d=a (37058)
  (saved bsp, return id:) (37059)
  (         H[t0+2]〈〉 = 139) (37059)
  d++ (37059)
  *d= 139 (37060)
  (push arguments:) (37062)
  (         H[t0+3]〈〉 = 2) (37062)
  d++ (37062)
  *d= 2 (37063)
  (         t0 = t0 + 2) (37065)
  c= 2 (37065)
  a+=c (37067)
  r=a 0 (37068)
  (         goto read_u32_from_n_bits) (37070)
  lj 4857 (37070)
  (        :return_id_139:) (37073)
  (         ifN t1 goto else_1503) (37073)
  a=r 1 (37073)
  a== 0 (37075)
  jf 3 (37077)
  lj 37086 (37079)
  (                    2693:     error〈〉) (37082)
  (         error) (37082)
  error (37082)
  (         goto endif_1504) (37083)
  lj 37086 (37083)
  (        :else_1503:) (37086)
  (        :endif_1504:) (37086)
  (                    2694:   NPostfix_data = read_u32_from_n_bits_result) (37086)
  (         H[t252+74]〈NPostfix_data〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (37086)
  a=r 252 (37086)
  a+= 7 (37088)
  d=a (37090)
  c=*d (37091)
  a=r 252 (37092)
  a+= 74 (37094)
  d=a (37096)
  *d=c (37097)
  (                    2695:   return NPostfix) (37098)
  (         t1 = H[t252+73]〈NPostfix〉) (37098)
  d-- (37098)
  a=*d (37099)
  r=a 1 (37100)
  (         t2 = H[t0]〈〉) (37102)
  d=r 0 (37102)
  a=*d (37104)
  r=a 2 (37105)
  (         t0 = t0 - 1) (37107)
  a=r 0 (37107)
  a-- (37109)
  r=a 0 (37110)
  (         t0 = H[t0]〈〉) (37112)
  d=a (37112)
  a=*d (37113)
  r=a 0 (37114)
  (         goto find_label_ret_id) (37116)
  lj 62666 (37116)
  (insert return as it might not be done by the function:) (37119)
  (         t2 = H[t0]〈〉) (37119)
  d=a (37119)
  a=*d (37120)
  r=a 2 (37121)
  (         t0 = t0 - 1) (37123)
  a=r 0 (37123)
  a-- (37125)
  r=a 0 (37126)
  (         t0 = H[t0]〈〉) (37128)
  d=a (37128)
  a=*d (37129)
  r=a 0 (37130)
  (         goto find_label_ret_id) (37132)
  lj 62666 (37132)
  (         MarkTempVarEnd) (37135)
  (        :parse_n_postfix_end~:) (37135)
  (                    2697: def parse_n_direct〈〉:) (37135)
  (         goto parse_n_direct_end~) (37135)
  lj 37232 (37135)
  (        :parse_n_direct:) (37138)
  (         MarkTempVarStart) (37138)
  (                    2698:   global NDirect_data) (37138)
  (Global NDirect_data via H[t252+76]) (37138)
  (                    2699:   if read_u32_from_n_bits〈4〉:) (37138)
  (         H[t0+1]〈〉 = t0) (37138)
  a=r 0 (37138)
  a++ (37140)
  d=a (37141)
  a=r 0 (37142)
  *d=a (37144)
  (saved bsp, return id:) (37145)
  (         H[t0+2]〈〉 = 140) (37145)
  d++ (37145)
  *d= 140 (37146)
  (push arguments:) (37148)
  (         H[t0+3]〈〉 = 4) (37148)
  d++ (37148)
  *d= 4 (37149)
  (         t0 = t0 + 2) (37151)
  c= 2 (37151)
  a+=c (37153)
  r=a 0 (37154)
  (         goto read_u32_from_n_bits) (37156)
  lj 4857 (37156)
  (        :return_id_140:) (37159)
  (         ifN t1 goto else_1505) (37159)
  a=r 1 (37159)
  a== 0 (37161)
  jf 3 (37163)
  lj 37172 (37165)
  (                    2700:     error〈〉) (37168)
  (         error) (37168)
  error (37168)
  (         goto endif_1506) (37169)
  lj 37172 (37169)
  (        :else_1505:) (37172)
  (        :endif_1506:) (37172)
  (                    2701:   NDirect_data = read_u32_from_n_bits_result << meta_block_header_n_postfix) (37172)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 << H[t252+134]〈meta_block_header_n_postfix〉) (37172)
  a=r 252 (37172)
  a+= 134 (37174)
  d=a (37176)
  c=*d (37177)
  a=r 252 (37178)
  a+= 7 (37180)
  d=a (37182)
  a=*d (37183)
  a<<=c (37184)
  r=a 1 (37185)
  (         H[t252+76]〈NDirect_data〉 = t1) (37187)
  a=r 252 (37187)
  a+= 76 (37189)
  d=a (37191)
  a=r 1 (37192)
  *d=a (37194)
  (                    2702:   return NDirect) (37195)
  (         t1 = H[t252+75]〈NDirect〉) (37195)
  d-- (37195)
  a=*d (37196)
  r=a 1 (37197)
  (         t2 = H[t0]〈〉) (37199)
  d=r 0 (37199)
  a=*d (37201)
  r=a 2 (37202)
  (         t0 = t0 - 1) (37204)
  a=r 0 (37204)
  a-- (37206)
  r=a 0 (37207)
  (         t0 = H[t0]〈〉) (37209)
  d=a (37209)
  a=*d (37210)
  r=a 0 (37211)
  (         goto find_label_ret_id) (37213)
  lj 62666 (37213)
  (insert return as it might not be done by the function:) (37216)
  (         t2 = H[t0]〈〉) (37216)
  d=a (37216)
  a=*d (37217)
  r=a 2 (37218)
  (         t0 = t0 - 1) (37220)
  a=r 0 (37220)
  a-- (37222)
  r=a 0 (37223)
  (         t0 = H[t0]〈〉) (37225)
  d=a (37225)
  a=*d (37226)
  r=a 0 (37227)
  (         goto find_label_ret_id) (37229)
  lj 62666 (37229)
  (         MarkTempVarEnd) (37232)
  (        :parse_n_direct_end~:) (37232)
  (                    2704: def parse_context_modes_literals〈〉:) (37232)
  (         goto parse_context_modes_literals_end~) (37232)
  lj 37426 (37232)
  (        :parse_context_modes_literals:) (37235)
  (         MarkTempVarStart) (37235)
  (                    2705:   global ContextModesLiterals_data) (37235)
  (Global ContextModesLiterals_data via H[t252+78]) (37235)
  (                    2706:   ContextModesLiterals_data = alloc_pM〈meta_block_header_n_bltypes_l〉) (37235)
  (         H[t0+1]〈〉 = t0) (37235)
  a=r 0 (37235)
  a++ (37237)
  d=a (37238)
  a=r 0 (37239)
  *d=a (37241)
  (saved bsp, return id:) (37242)
  (         H[t0+2]〈〉 = 141) (37242)
  d++ (37242)
  *d= 141 (37243)
  (push arguments:) (37245)
  (         H[t0+3]〈〉 = H[t252+131]〈meta_block_header_n_bltypes_l〉) (37245)
  a=r 252 (37245)
  a+= 131 (37247)
  d=a (37249)
  c=*d (37250)
  a=r 0 (37251)
  a+= 3 (37253)
  d=a (37255)
  *d=c (37256)
  (         t0 = t0 + 2) (37257)
  c= 2 (37257)
  a=r 0 (37259)
  a+=c (37261)
  r=a 0 (37262)
  (         goto addr_alloc_pM) (37264)
  lj 323 (37264)
  (        :return_id_141:) (37267)
  (         t1 = t1 | 2147483648) (37267)
  a= 1 (37267)
  a<<= 31 (37269)
  c=a (37271)
  a=r 1 (37272)
  a|=c (37274)
  r=a 1 (37275)
  (         H[t252+78]〈ContextModesLiterals_data〉 = t1) (37277)
  a=r 252 (37277)
  a+= 78 (37279)
  d=a (37281)
  a=r 1 (37282)
  *d=a (37284)
  (                    2707:   i = 0) (37285)
  (         H[t0+1]〈i〉 = 0) (37285)
  a=r 0 (37285)
  a++ (37287)
  d=a (37288)
  *d=0 (37289)
  (                    2708:   while i < meta_block_header_n_bltypes_l:) (37290)
  (        :while_1507:) (37290)
  (         t1 = H[t0+1]〈i〉 < H[t252+131]〈meta_block_header_n_bltypes_l〉) (37290)
  a=r 252 (37290)
  a+= 131 (37292)
  d=a (37294)
  c=*d (37295)
  a=r 0 (37296)
  a++ (37298)
  d=a (37299)
  a=*d (37300)
  a<c (37301)
  a=0 (37302)
  jf 1 (37303)
  a++ (37305)
  r=a 1 (37306)
  (         ifN t1 goto whileend_1509) (37308)
  a== 0 (37308)
  jf 3 (37310)
  lj 37385 (37312)
  (                    2709:     if read_u32_from_n_bits〈2〉:) (37315)
  (         H[t0+2]〈〉 = t0) (37315)
  d++ (37315)
  a=r 0 (37316)
  *d=a (37318)
  (saved bsp, return id:) (37319)
  (         H[t0+3]〈〉 = 142) (37319)
  d++ (37319)
  *d= 142 (37320)
  (push arguments:) (37322)
  (         H[t0+4]〈〉 = 2) (37322)
  d++ (37322)
  *d= 2 (37323)
  (         t0 = t0 + 3) (37325)
  c= 3 (37325)
  a+=c (37327)
  r=a 0 (37328)
  (         goto read_u32_from_n_bits) (37330)
  lj 4857 (37330)
  (        :return_id_142:) (37333)
  (         ifN t1 goto else_1511) (37333)
  a=r 1 (37333)
  a== 0 (37335)
  jf 3 (37337)
  lj 37346 (37339)
  (                    2710:       error〈〉) (37342)
  (         error) (37342)
  error (37342)
  (         goto endif_1512) (37343)
  lj 37346 (37343)
  (        :else_1511:) (37346)
  (        :endif_1512:) (37346)
  (                    2711:     ContextModesLiterals_data[i] = read_u32_from_n_bits_result) (37346)
  (         t1 = H[t252+78]〈ContextModesLiterals_data〉 & 2147483647) (37346)
  a=0 (37346)
  a-- (37347)
  a>>= 1 (37348)
  c=a (37350)
  a=r 252 (37351)
  a+= 78 (37353)
  d=a (37355)
  a=*d (37356)
  a&=c (37357)
  r=a 1 (37358)
  (         t1 = t1 + H[t0+1]〈i〉) (37360)
  a=r 0 (37360)
  a++ (37362)
  d=a (37363)
  c=*d (37364)
  a=r 1 (37365)
  a+=c (37367)
  r=a 1 (37368)
  (         M[t1] = H[t252+7]〈read_u32_from_n_bits_result〉) (37370)
  c=a (37370)
  a=r 252 (37371)
  a+= 7 (37373)
  d=a (37375)
  *c=*d (37376)
  (                    2712:     i += 1) (37377)
  (         H[t0+1]〈i〉 = H[t0+1]〈i〉 + 1) (37377)
  a=r 0 (37377)
  a++ (37379)
  d=a (37380)
  *d++ (37381)
  (         goto while_1507) (37382)
  lj 37290 (37382)
  (        :whileend_1509:) (37385)
  (                    2713:   return ContextModesLiterals) (37385)
  (         t1 = H[t252+77]〈ContextModesLiterals〉) (37385)
  a=r 252 (37385)
  a+= 77 (37387)
  d=a (37389)
  a=*d (37390)
  r=a 1 (37391)
  (         t2 = H[t0]〈〉) (37393)
  d=r 0 (37393)
  a=*d (37395)
  r=a 2 (37396)
  (         t0 = t0 - 1) (37398)
  a=r 0 (37398)
  a-- (37400)
  r=a 0 (37401)
  (         t0 = H[t0]〈〉) (37403)
  d=a (37403)
  a=*d (37404)
  r=a 0 (37405)
  (         goto find_label_ret_id) (37407)
  lj 62666 (37407)
  (insert return as it might not be done by the function:) (37410)
  (         t2 = H[t0]〈〉) (37410)
  d=a (37410)
  a=*d (37411)
  r=a 2 (37412)
  (         t0 = t0 - 1) (37414)
  a=r 0 (37414)
  a-- (37416)
  r=a 0 (37417)
  (         t0 = H[t0]〈〉) (37419)
  d=a (37419)
  a=*d (37420)
  r=a 0 (37421)
  (         goto find_label_ret_id) (37423)
  lj 62666 (37423)
  (         MarkTempVarEnd) (37426)
  (        :parse_context_modes_literals_end~:) (37426)
  (                    2715: def parse_n_trees_l〈〉:) (37426)
  (         goto parse_n_trees_l_end~) (37426)
  lj 37517 (37426)
  (        :parse_n_trees_l:) (37429)
  (         MarkTempVarStart) (37429)
  (                    2716:   global NTreesL_data) (37429)
  (Global NTreesL_data via H[t252+80]) (37429)
  (                    2717:   NTreesL_data = parse_n_bltypes〈〉) (37429)
  (         H[t0+1]〈〉 = t0) (37429)
  a=r 0 (37429)
  a++ (37431)
  d=a (37432)
  a=r 0 (37433)
  *d=a (37435)
  (saved bsp, return id:) (37436)
  (         H[t0+2]〈〉 = 143) (37436)
  d++ (37436)
  *d= 143 (37437)
  (push arguments:) (37439)
  (         t0 = t0 + 2) (37439)
  c= 2 (37439)
  a+=c (37441)
  r=a 0 (37442)
  (         goto parse_n_bltypes) (37444)
  lj 36370 (37444)
  (        :return_id_143:) (37447)
  (         H[t252+80]〈NTreesL_data〉 = t1) (37447)
  a=r 252 (37447)
  a+= 80 (37449)
  d=a (37451)
  a=r 1 (37452)
  *d=a (37454)
  (                    2718:   if NTreesL_data == NONE:) (37455)
  (         t1 = H[t252+80]〈NTreesL_data〉 == 4294967295) (37455)
  c=0 (37455)
  c-- (37456)
  a=*d (37457)
  a==c (37458)
  a=0 (37459)
  jf 1 (37460)
  a++ (37462)
  r=a 1 (37463)
  (         ifN t1 goto else_1514) (37465)
  a== 0 (37465)
  jf 3 (37467)
  lj 37476 (37469)
  (                    2719:     error〈〉) (37472)
  (         error) (37472)
  error (37472)
  (         goto endif_1515) (37473)
  lj 37476 (37473)
  (        :else_1514:) (37476)
  (        :endif_1515:) (37476)
  (                    2720:   return NTreesL) (37476)
  (         t1 = H[t252+79]〈NTreesL〉) (37476)
  a=r 252 (37476)
  a+= 79 (37478)
  d=a (37480)
  a=*d (37481)
  r=a 1 (37482)
  (         t2 = H[t0]〈〉) (37484)
  d=r 0 (37484)
  a=*d (37486)
  r=a 2 (37487)
  (         t0 = t0 - 1) (37489)
  a=r 0 (37489)
  a-- (37491)
  r=a 0 (37492)
  (         t0 = H[t0]〈〉) (37494)
  d=a (37494)
  a=*d (37495)
  r=a 0 (37496)
  (         goto find_label_ret_id) (37498)
  lj 62666 (37498)
  (insert return as it might not be done by the function:) (37501)
  (         t2 = H[t0]〈〉) (37501)
  d=a (37501)
  a=*d (37502)
  r=a 2 (37503)
  (         t0 = t0 - 1) (37505)
  a=r 0 (37505)
  a-- (37507)
  r=a 0 (37508)
  (         t0 = H[t0]〈〉) (37510)
  d=a (37510)
  a=*d (37511)
  r=a 0 (37512)
  (         goto find_label_ret_id) (37514)
  lj 62666 (37514)
  (         MarkTempVarEnd) (37517)
  (        :parse_n_trees_l_end~:) (37517)
  (                    2722: def parse_n_trees_d〈〉:) (37517)
  (         goto parse_n_trees_d_end~) (37517)
  lj 37608 (37517)
  (        :parse_n_trees_d:) (37520)
  (         MarkTempVarStart) (37520)
  (                    2723:   global NTreesD_data) (37520)
  (Global NTreesD_data via H[t252+82]) (37520)
  (                    2724:   NTreesD_data = parse_n_bltypes〈〉) (37520)
  (         H[t0+1]〈〉 = t0) (37520)
  a=r 0 (37520)
  a++ (37522)
  d=a (37523)
  a=r 0 (37524)
  *d=a (37526)
  (saved bsp, return id:) (37527)
  (         H[t0+2]〈〉 = 144) (37527)
  d++ (37527)
  *d= 144 (37528)
  (push arguments:) (37530)
  (         t0 = t0 + 2) (37530)
  c= 2 (37530)
  a+=c (37532)
  r=a 0 (37533)
  (         goto parse_n_bltypes) (37535)
  lj 36370 (37535)
  (        :return_id_144:) (37538)
  (         H[t252+82]〈NTreesD_data〉 = t1) (37538)
  a=r 252 (37538)
  a+= 82 (37540)
  d=a (37542)
  a=r 1 (37543)
  *d=a (37545)
  (                    2725:   if NTreesD_data == NONE:) (37546)
  (         t1 = H[t252+82]〈NTreesD_data〉 == 4294967295) (37546)
  c=0 (37546)
  c-- (37547)
  a=*d (37548)
  a==c (37549)
  a=0 (37550)
  jf 1 (37551)
  a++ (37553)
  r=a 1 (37554)
  (         ifN t1 goto else_1517) (37556)
  a== 0 (37556)
  jf 3 (37558)
  lj 37567 (37560)
  (                    2726:     error〈〉) (37563)
  (         error) (37563)
  error (37563)
  (         goto endif_1518) (37564)
  lj 37567 (37564)
  (        :else_1517:) (37567)
  (        :endif_1518:) (37567)
  (                    2727:   return NTreesD) (37567)
  (         t1 = H[t252+81]〈NTreesD〉) (37567)
  a=r 252 (37567)
  a+= 81 (37569)
  d=a (37571)
  a=*d (37572)
  r=a 1 (37573)
  (         t2 = H[t0]〈〉) (37575)
  d=r 0 (37575)
  a=*d (37577)
  r=a 2 (37578)
  (         t0 = t0 - 1) (37580)
  a=r 0 (37580)
  a-- (37582)
  r=a 0 (37583)
  (         t0 = H[t0]〈〉) (37585)
  d=a (37585)
  a=*d (37586)
  r=a 0 (37587)
  (         goto find_label_ret_id) (37589)
  lj 62666 (37589)
  (insert return as it might not be done by the function:) (37592)
  (         t2 = H[t0]〈〉) (37592)
  d=a (37592)
  a=*d (37593)
  r=a 2 (37594)
  (         t0 = t0 - 1) (37596)
  a=r 0 (37596)
  a-- (37598)
  r=a 0 (37599)
  (         t0 = H[t0]〈〉) (37601)
  d=a (37601)
  a=*d (37602)
  r=a 0 (37603)
  (         goto find_label_ret_id) (37605)
  lj 62666 (37605)
  (         MarkTempVarEnd) (37608)
  (        :parse_n_trees_d_end~:) (37608)
  (                    2729: def parse_prefix_code_kind〈〉:) (37608)
  (         goto parse_prefix_code_kind_end~) (37608)
  lj 37744 (37608)
  (        :parse_prefix_code_kind:) (37611)
  (         MarkTempVarStart) (37611)
  (                    2730:   global PrefixCodeKind_Complex_data) (37611)
  (Global PrefixCodeKind_Complex_data via H[t252+26]) (37611)
  (                    2731:   if read_u32_from_n_bits〈2〉:) (37611)
  (         H[t0+1]〈〉 = t0) (37611)
  a=r 0 (37611)
  a++ (37613)
  d=a (37614)
  a=r 0 (37615)
  *d=a (37617)
  (saved bsp, return id:) (37618)
  (         H[t0+2]〈〉 = 145) (37618)
  d++ (37618)
  *d= 145 (37619)
  (push arguments:) (37621)
  (         H[t0+3]〈〉 = 2) (37621)
  d++ (37621)
  *d= 2 (37622)
  (         t0 = t0 + 2) (37624)
  c= 2 (37624)
  a+=c (37626)
  r=a 0 (37627)
  (         goto read_u32_from_n_bits) (37629)
  lj 4857 (37629)
  (        :return_id_145:) (37632)
  (         ifN t1 goto else_1519) (37632)
  a=r 1 (37632)
  a== 0 (37634)
  jf 3 (37636)
  lj 37645 (37638)
  (                    2732:     error〈〉) (37641)
  (         error) (37641)
  error (37641)
  (         goto endif_1520) (37642)
  lj 37645 (37642)
  (        :else_1519:) (37645)
  (        :endif_1520:) (37645)
  (                    2733:   if read_u32_from_n_bits_result == 1:) (37645)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 == 1) (37645)
  c= 1 (37645)
  a=r 252 (37647)
  a+= 7 (37649)
  d=a (37651)
  a=*d (37652)
  a==c (37653)
  a=0 (37654)
  jf 1 (37655)
  a++ (37657)
  r=a 1 (37658)
  (         ifN t1 goto else_1522) (37660)
  a== 0 (37660)
  jf 3 (37662)
  lj 37695 (37664)
  (                    2734:     return PrefixCodeKind_Simple) (37667)
  (         t1 = H[t252+24]〈PrefixCodeKind_Simple〉) (37667)
  a=r 252 (37667)
  a+= 24 (37669)
  d=a (37671)
  a=*d (37672)
  r=a 1 (37673)
  (         t2 = H[t0]〈〉) (37675)
  d=r 0 (37675)
  a=*d (37677)
  r=a 2 (37678)
  (         t0 = t0 - 1) (37680)
  a=r 0 (37680)
  a-- (37682)
  r=a 0 (37683)
  (         t0 = H[t0]〈〉) (37685)
  d=a (37685)
  a=*d (37686)
  r=a 0 (37687)
  (         goto find_label_ret_id) (37689)
  lj 62666 (37689)
  (         goto endif_1523) (37692)
  lj 37695 (37692)
  (        :else_1522:) (37695)
  (        :endif_1523:) (37695)
  (                    2735:   PrefixCodeKind_Complex_data = read_u32_from_n_bits_result) (37695)
  (         H[t252+26]〈PrefixCodeKind_Complex_data〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (37695)
  a=r 252 (37695)
  a+= 7 (37697)
  d=a (37699)
  c=*d (37700)
  a=r 252 (37701)
  a+= 26 (37703)
  d=a (37705)
  *d=c (37706)
  (                    2736:   return PrefixCodeKind_Complex) (37707)
  (         t1 = H[t252+25]〈PrefixCodeKind_Complex〉) (37707)
  d-- (37707)
  a=*d (37708)
  r=a 1 (37709)
  (         t2 = H[t0]〈〉) (37711)
  d=r 0 (37711)
  a=*d (37713)
  r=a 2 (37714)
  (         t0 = t0 - 1) (37716)
  a=r 0 (37716)
  a-- (37718)
  r=a 0 (37719)
  (         t0 = H[t0]〈〉) (37721)
  d=a (37721)
  a=*d (37722)
  r=a 0 (37723)
  (         goto find_label_ret_id) (37725)
  lj 62666 (37725)
  (insert return as it might not be done by the function:) (37728)
  (         t2 = H[t0]〈〉) (37728)
  d=a (37728)
  a=*d (37729)
  r=a 2 (37730)
  (         t0 = t0 - 1) (37732)
  a=r 0 (37732)
  a-- (37734)
  r=a 0 (37735)
  (         t0 = H[t0]〈〉) (37737)
  d=a (37737)
  a=*d (37738)
  r=a 0 (37739)
  (         goto find_label_ret_id) (37741)
  lj 62666 (37741)
  (         MarkTempVarEnd) (37744)
  (        :parse_prefix_code_kind_end~:) (37744)
  (                    2738: def parse_simple_prefix_code〈alphabet_size〉:) (37744)
  (         goto parse_simple_prefix_code_end~) (37744)
  lj 39559 (37744)
  (        :parse_simple_prefix_code:) (37747)
  (         MarkTempVarStart) (37747)
  (Arg alphabet_size at t0 + 1) (37747)
  (                    2740:   bit_width = alphabet_size - 1) (37747)
  (         t1 = H[t0+1]〈alphabet_size〉 - 1) (37747)
  c= 1 (37747)
  a=r 0 (37749)
  a++ (37751)
  d=a (37752)
  a=*d (37753)
  a-=c (37754)
  r=a 1 (37755)
  (         H[t0+2]〈bit_width〉 = t1) (37757)
  d++ (37757)
  *d=a (37758)
  (                    2741:   n = 0) (37759)
  (         H[t0+3]〈n〉 = 0) (37759)
  d++ (37759)
  *d=0 (37760)
  (                    2743:   if bit_width == 0:) (37761)
  (         t1 = H[t0+2]〈bit_width〉 == 0) (37761)
  c=0 (37761)
  d-- (37762)
  a=*d (37763)
  a==c (37764)
  a=0 (37765)
  jf 1 (37766)
  a++ (37768)
  r=a 1 (37769)
  (         ifN t1 goto else_1525) (37771)
  a== 0 (37771)
  jf 3 (37773)
  lj 37784 (37775)
  (                    2744:     n = 16) (37778)
  (         H[t0+3]〈n〉 = 16) (37778)
  d++ (37778)
  *d= 16 (37779)
  (         goto endif_1526) (37781)
  lj 37844 (37781)
  (        :else_1525:) (37784)
  (                    2746:     while True:) (37784)
  (        :while_1527:) (37784)
  (         ifN 1 goto whileend_1529) (37784)
  a= 1 (37784)
  a== 0 (37786)
  jf 3 (37788)
  lj 37844 (37790)
  (                    2747:         if bit_width >= 32768:  # 2**15) (37793)
  (         t1 = H[t0+2]〈bit_width〉 >= 32768) (37793)
  a= 128 (37793)
  a<<= 8 (37795)
  c=a (37797)
  a=r 0 (37798)
  a+= 2 (37800)
  d=a (37802)
  a=*d (37803)
  a==c (37804)
  jt 4 (37805)
  a>c (37807)
  a=0 (37808)
  jf 2 (37809)
  a= 1 (37811)
  r=a 1 (37813)
  (         ifN t1 goto else_1531) (37815)
  a== 0 (37815)
  jf 3 (37817)
  lj 37828 (37819)
  (                    2748:           break) (37822)
  (         goto whileend_1529) (37822)
  lj 37844 (37822)
  (         goto endif_1532) (37825)
  lj 37828 (37825)
  (        :else_1531:) (37828)
  (        :endif_1532:) (37828)
  (                    2749:         n += 1) (37828)
  (         H[t0+3]〈n〉 = H[t0+3]〈n〉 + 1) (37828)
  a=r 0 (37828)
  a+= 3 (37830)
  d=a (37832)
  *d++ (37833)
  (                    2750:         bit_width <<= 1) (37834)
  (         H[t0+2]〈bit_width〉 = H[t0+2]〈bit_width〉 << 1) (37834)
  c= 1 (37834)
  d-- (37836)
  a=*d (37837)
  a<<=c (37838)
  c=a (37839)
  *d=c (37840)
  (         goto while_1527) (37841)
  lj 37784 (37841)
  (        :whileend_1529:) (37844)
  (        :endif_1526:) (37844)
  (                    2751:   bit_width = 16 - n) (37844)
  (         t1 = 16 - H[t0+3]〈n〉) (37844)
  a=r 0 (37844)
  a+= 3 (37846)
  d=a (37848)
  c=*d (37849)
  a= 16 (37850)
  a-=c (37852)
  r=a 1 (37853)
  (         H[t0+2]〈bit_width〉 = t1) (37855)
  d-- (37855)
  *d=a (37856)
  (                    2752:   if read_u32_from_n_bits〈2〉:) (37857)
  (         H[t0+4]〈〉 = t0) (37857)
  a=r 0 (37857)
  a+= 4 (37859)
  d=a (37861)
  a=r 0 (37862)
  *d=a (37864)
  (saved bsp, return id:) (37865)
  (         H[t0+5]〈〉 = 146) (37865)
  d++ (37865)
  *d= 146 (37866)
  (push arguments:) (37868)
  (         H[t0+6]〈〉 = 2) (37868)
  d++ (37868)
  *d= 2 (37869)
  (         t0 = t0 + 5) (37871)
  c= 5 (37871)
  a+=c (37873)
  r=a 0 (37874)
  (         goto read_u32_from_n_bits) (37876)
  lj 4857 (37876)
  (        :return_id_146:) (37879)
  (         ifN t1 goto else_1533) (37879)
  a=r 1 (37879)
  a== 0 (37881)
  jf 3 (37883)
  lj 37892 (37885)
  (                    2753:     error〈〉) (37888)
  (         error) (37888)
  error (37888)
  (         goto endif_1534) (37889)
  lj 37892 (37889)
  (        :else_1533:) (37892)
  (        :endif_1534:) (37892)
  (                    2754:   n_sym = read_u32_from_n_bits_result + 1) (37892)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 + 1) (37892)
  c= 1 (37892)
  a=r 252 (37894)
  a+= 7 (37896)
  d=a (37898)
  a=*d (37899)
  a+=c (37900)
  r=a 1 (37901)
  (         H[t0+4]〈n_sym〉 = t1) (37903)
  a=r 0 (37903)
  a+= 4 (37905)
  d=a (37907)
  a=r 1 (37908)
  *d=a (37910)
  (                    2755:   symbols = alloc_pH〈n_sym〉) (37911)
  (         H[t0+5]〈〉 = t0) (37911)
  d++ (37911)
  a=r 0 (37912)
  *d=a (37914)
  (saved bsp, return id:) (37915)
  (         H[t0+6]〈〉 = 147) (37915)
  d++ (37915)
  *d= 147 (37916)
  (push arguments:) (37918)
  (         H[t0+7]〈〉 = H[t0+4]〈n_sym〉) (37918)
  a+= 4 (37918)
  d=a (37920)
  c=*d (37921)
  a=r 0 (37922)
  a+= 7 (37924)
  d=a (37926)
  *d=c (37927)
  (         t0 = t0 + 6) (37928)
  c= 6 (37928)
  a=r 0 (37930)
  a+=c (37932)
  r=a 0 (37933)
  (         goto addr_alloc_pH) (37935)
  lj 1446 (37935)
  (        :return_id_147:) (37938)
  (         H[t0+5]〈symbols〉 = t1) (37938)
  a=r 0 (37938)
  a+= 5 (37940)
  d=a (37942)
  a=r 1 (37943)
  *d=a (37945)
  (                    2756:   i = 0) (37946)
  (         H[t0+6]〈i〉 = 0) (37946)
  d++ (37946)
  *d=0 (37947)
  (                    2757:   while i < n_sym:) (37948)
  (        :while_1535:) (37948)
  (         t1 = H[t0+6]〈i〉 < H[t0+4]〈n_sym〉) (37948)
  a=r 0 (37948)
  a+= 4 (37950)
  d=a (37952)
  c=*d (37953)
  a=r 0 (37954)
  a+= 6 (37956)
  d=a (37958)
  a=*d (37959)
  a<c (37960)
  a=0 (37961)
  jf 1 (37962)
  a++ (37964)
  r=a 1 (37965)
  (         ifN t1 goto whileend_1537) (37967)
  a== 0 (37967)
  jf 3 (37969)
  lj 38072 (37971)
  (                    2758:     if read_u32_from_n_bits〈bit_width〉:) (37974)
  (         H[t0+7]〈〉 = t0) (37974)
  d++ (37974)
  a=r 0 (37975)
  *d=a (37977)
  (saved bsp, return id:) (37978)
  (         H[t0+8]〈〉 = 148) (37978)
  d++ (37978)
  *d= 148 (37979)
  (push arguments:) (37981)
  (         H[t0+9]〈〉 = H[t0+2]〈bit_width〉) (37981)
  a+= 2 (37981)
  d=a (37983)
  c=*d (37984)
  a=r 0 (37985)
  a+= 9 (37987)
  d=a (37989)
  *d=c (37990)
  (         t0 = t0 + 8) (37991)
  c= 8 (37991)
  a=r 0 (37993)
  a+=c (37995)
  r=a 0 (37996)
  (         goto read_u32_from_n_bits) (37998)
  lj 4857 (37998)
  (        :return_id_148:) (38001)
  (         ifN t1 goto else_1539) (38001)
  a=r 1 (38001)
  a== 0 (38003)
  jf 3 (38005)
  lj 38014 (38007)
  (                    2759:       error〈〉) (38010)
  (         error) (38010)
  error (38010)
  (         goto endif_1540) (38011)
  lj 38014 (38011)
  (        :else_1539:) (38014)
  (        :endif_1540:) (38014)
  (                    2760:     if read_u32_from_n_bits_result < alphabet_size:) (38014)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 < H[t0+1]〈alphabet_size〉) (38014)
  a=r 0 (38014)
  a++ (38016)
  d=a (38017)
  c=*d (38018)
  a=r 252 (38019)
  a+= 7 (38021)
  d=a (38023)
  a=*d (38024)
  a<c (38025)
  a=0 (38026)
  jf 1 (38027)
  a++ (38029)
  r=a 1 (38030)
  (         ifN t1 goto else_1542) (38032)
  a== 0 (38032)
  jf 3 (38034)
  lj 38062 (38036)
  (                    2761:       symbols[i] = read_u32_from_n_bits_result) (38039)
  (         t1 = H[t0+5]〈symbols〉 + H[t0+6]〈i〉) (38039)
  a=r 0 (38039)
  a+= 6 (38041)
  d=a (38043)
  c=*d (38044)
  d-- (38045)
  a=*d (38046)
  a+=c (38047)
  r=a 1 (38048)
  (         H[t1]〈〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (38050)
  a=r 252 (38050)
  a+= 7 (38052)
  d=a (38054)
  c=*d (38055)
  d=r 1 (38056)
  *d=c (38058)
  (         goto endif_1543) (38059)
  lj 38063 (38059)
  (        :else_1542:) (38062)
  (                    2763:       error〈〉  # InvalidSymbol) (38062)
  (         error) (38062)
  error (38062)
  (        :endif_1543:) (38063)
  (                    2764:     i += 1) (38063)
  (         H[t0+6]〈i〉 = H[t0+6]〈i〉 + 1) (38063)
  a=r 0 (38063)
  a+= 6 (38065)
  d=a (38067)
  *d++ (38068)
  (         goto while_1535) (38069)
  lj 37948 (38069)
  (        :whileend_1537:) (38072)
  (                    2765:   i = 0) (38072)
  (         H[t0+6]〈i〉 = 0) (38072)
  a=r 0 (38072)
  a+= 6 (38074)
  d=a (38076)
  *d=0 (38077)
  (                    2766:   while i < n_sym - 1:) (38078)
  (        :while_1544:) (38078)
  (         t2 = H[t0+4]〈n_sym〉 - 1) (38078)
  c= 1 (38078)
  a=r 0 (38080)
  a+= 4 (38082)
  d=a (38084)
  a=*d (38085)
  a-=c (38086)
  r=a 2 (38087)
  (         t1 = H[t0+6]〈i〉 < t2) (38089)
  c=a (38089)
  a=r 0 (38090)
  a+= 6 (38092)
  d=a (38094)
  a=*d (38095)
  a<c (38096)
  a=0 (38097)
  jf 1 (38098)
  a++ (38100)
  r=a 1 (38101)
  (         ifN t1 goto whileend_1546) (38103)
  a== 0 (38103)
  jf 3 (38105)
  lj 38213 (38107)
  (                    2767:     j = i+1) (38110)
  (         t1 = H[t0+6]〈i〉 + 1) (38110)
  c= 1 (38110)
  a=*d (38112)
  a+=c (38113)
  r=a 1 (38114)
  (         H[t0+7]〈j〉 = t1) (38116)
  d++ (38116)
  *d=a (38117)
  (                    2768:     while j < n_sym:) (38118)
  (        :while_1548:) (38118)
  (         t1 = H[t0+7]〈j〉 < H[t0+4]〈n_sym〉) (38118)
  a=r 0 (38118)
  a+= 4 (38120)
  d=a (38122)
  c=*d (38123)
  a=r 0 (38124)
  a+= 7 (38126)
  d=a (38128)
  a=*d (38129)
  a<c (38130)
  a=0 (38131)
  jf 1 (38132)
  a++ (38134)
  r=a 1 (38135)
  (         ifN t1 goto whileend_1550) (38137)
  a== 0 (38137)
  jf 3 (38139)
  lj 38204 (38141)
  (                    2769:       if symbols[i] == symbols[j]:) (38144)
  (         t2 = H[t0+5]〈symbols〉 + H[t0+6]〈i〉) (38144)
  d-- (38144)
  c=*d (38145)
  d-- (38146)
  a=*d (38147)
  a+=c (38148)
  r=a 2 (38149)
  (         t2 = H[t2]〈〉) (38151)
  d=a (38151)
  a=*d (38152)
  r=a 2 (38153)
  (         t3 = H[t0+5]〈symbols〉 + H[t0+7]〈j〉) (38155)
  a=r 0 (38155)
  a+= 7 (38157)
  d=a (38159)
  c=*d (38160)
  a=r 0 (38161)
  a+= 5 (38163)
  d=a (38165)
  a=*d (38166)
  a+=c (38167)
  r=a 3 (38168)
  (         t3 = H[t3]〈〉) (38170)
  d=a (38170)
  a=*d (38171)
  r=a 3 (38172)
  (         t1 = t2 == t3) (38174)
  c=a (38174)
  a=r 2 (38175)
  a==c (38177)
  a=0 (38178)
  jf 1 (38179)
  a++ (38181)
  r=a 1 (38182)
  (         ifN t1 goto else_1553) (38184)
  a== 0 (38184)
  jf 3 (38186)
  lj 38195 (38188)
  (                    2770:         error〈〉 # InvalidSymbol) (38191)
  (         error) (38191)
  error (38191)
  (         goto endif_1554) (38192)
  lj 38195 (38192)
  (        :else_1553:) (38195)
  (        :endif_1554:) (38195)
  (                    2771:       j += 1) (38195)
  (         H[t0+7]〈j〉 = H[t0+7]〈j〉 + 1) (38195)
  a=r 0 (38195)
  a+= 7 (38197)
  d=a (38199)
  *d++ (38200)
  (         goto while_1548) (38201)
  lj 38118 (38201)
  (        :whileend_1550:) (38204)
  (                    2772:     i += 1) (38204)
  (         H[t0+6]〈i〉 = H[t0+6]〈i〉 + 1) (38204)
  a=r 0 (38204)
  a+= 6 (38206)
  d=a (38208)
  *d++ (38209)
  (         goto while_1544) (38210)
  lj 38078 (38210)
  (        :whileend_1546:) (38213)
  (                    2773:   if n_sym == 4:) (38213)
  (         t1 = H[t0+4]〈n_sym〉 == 4) (38213)
  c= 4 (38213)
  a=r 0 (38215)
  a+= 4 (38217)
  d=a (38219)
  a=*d (38220)
  a==c (38221)
  a=0 (38222)
  jf 1 (38223)
  a++ (38225)
  r=a 1 (38226)
  (         ifN t1 goto else_1556) (38228)
  a== 0 (38228)
  jf 3 (38230)
  lj 38282 (38232)
  (                    2774:     if read_bit〈〉:) (38235)
  (         H[t0+8]〈〉 = t0) (38235)
  a=r 0 (38235)
  a+= 8 (38237)
  d=a (38239)
  a=r 0 (38240)
  *d=a (38242)
  (saved bsp, return id:) (38243)
  (         H[t0+9]〈〉 = 149) (38243)
  d++ (38243)
  *d= 149 (38244)
  (push arguments:) (38246)
  (         t0 = t0 + 9) (38246)
  c= 9 (38246)
  a+=c (38248)
  r=a 0 (38249)
  (         goto read_bit) (38251)
  lj 4578 (38251)
  (        :return_id_149:) (38254)
  (         ifN t1 goto else_1558) (38254)
  a=r 1 (38254)
  a== 0 (38256)
  jf 3 (38258)
  lj 38267 (38260)
  (                    2775:       error〈〉 # eof) (38263)
  (         error) (38263)
  error (38263)
  (         goto endif_1559) (38264)
  lj 38267 (38264)
  (        :else_1558:) (38267)
  (        :endif_1559:) (38267)
  (                    2776:     tree_select = read_bit_result) (38267)
  (         H[t0+8]〈tree_select〉 = H[t252+6]〈read_bit_result〉) (38267)
  a=r 252 (38267)
  a+= 6 (38269)
  d=a (38271)
  c=*d (38272)
  a=r 0 (38273)
  a+= 8 (38275)
  d=a (38277)
  *d=c (38278)
  (         goto endif_1557) (38279)
  lj 38289 (38279)
  (        :else_1556:) (38282)
  (                    2778:     tree_select = NONE) (38282)
  (         H[t0+8]〈tree_select〉 = 4294967295) (38282)
  a=r 0 (38282)
  a+= 8 (38284)
  d=a (38286)
  *d=0 (38287)
  *d-- (38288)
  (        :endif_1557:) (38289)
  (                    2779:   if n_sym == 1 and tree_select == NONE:) (38289)
  (         t2 = H[t0+4]〈n_sym〉 == 1) (38289)
  c= 1 (38289)
  a=r 0 (38291)
  a+= 4 (38293)
  d=a (38295)
  a=*d (38296)
  a==c (38297)
  a=0 (38298)
  jf 1 (38299)
  a++ (38301)
  r=a 2 (38302)
  (         t3 = H[t0+8]〈tree_select〉 == 4294967295) (38304)
  c=0 (38304)
  c-- (38305)
  a=r 0 (38306)
  a+= 8 (38308)
  d=a (38310)
  a=*d (38311)
  a==c (38312)
  a=0 (38313)
  jf 1 (38314)
  a++ (38316)
  r=a 3 (38317)
  (         t1 = t2 and t3) (38319)
  c=a (38319)
  a=r 2 (38320)
  a== 0 (38322)
  jt 1 (38324)
  a=c (38326)
  r=a 1 (38327)
  (         ifN t1 goto else_1562) (38329)
  a== 0 (38329)
  jf 3 (38331)
  lj 38386 (38333)
  (                    2780:     code_lengths = alloc_pM〈1〉) (38336)
  (         H[t0+9]〈〉 = t0) (38336)
  d++ (38336)
  a=r 0 (38337)
  *d=a (38339)
  (saved bsp, return id:) (38340)
  (         H[t0+10]〈〉 = 150) (38340)
  d++ (38340)
  *d= 150 (38341)
  (push arguments:) (38343)
  (         H[t0+11]〈〉 = 1) (38343)
  d++ (38343)
  *d= 1 (38344)
  (         t0 = t0 + 10) (38346)
  c= 10 (38346)
  a+=c (38348)
  r=a 0 (38349)
  (         goto addr_alloc_pM) (38351)
  lj 323 (38351)
  (        :return_id_150:) (38354)
  (         t1 = t1 | 2147483648) (38354)
  a= 1 (38354)
  a<<= 31 (38356)
  c=a (38358)
  a=r 1 (38359)
  a|=c (38361)
  r=a 1 (38362)
  (         H[t0+9]〈code_lengths〉 = t1) (38364)
  a=r 0 (38364)
  a+= 9 (38366)
  d=a (38368)
  a=r 1 (38369)
  *d=a (38371)
  (                    2781:     code_lengths[0] = 0) (38372)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (38372)
  a=0 (38372)
  a-- (38373)
  a>>= 1 (38374)
  c=a (38376)
  a=*d (38377)
  a&=c (38378)
  r=a 1 (38379)
  (         t1 = t1 + 0) (38381)
  (         M[t1] = 0) (38381)
  c=a (38381)
  *c=0 (38382)
  (         goto endif_1563) (38383)
  lj 39393 (38383)
  (        :else_1562:) (38386)
  (                    2782:   elif n_sym == 2 and tree_select == NONE:) (38386)
  (         t2 = H[t0+4]〈n_sym〉 == 2) (38386)
  c= 2 (38386)
  a=r 0 (38388)
  a+= 4 (38390)
  d=a (38392)
  a=*d (38393)
  a==c (38394)
  a=0 (38395)
  jf 1 (38396)
  a++ (38398)
  r=a 2 (38399)
  (         t3 = H[t0+8]〈tree_select〉 == 4294967295) (38401)
  c=0 (38401)
  c-- (38402)
  a=r 0 (38403)
  a+= 8 (38405)
  d=a (38407)
  a=*d (38408)
  a==c (38409)
  a=0 (38410)
  jf 1 (38411)
  a++ (38413)
  r=a 3 (38414)
  (         t1 = t2 and t3) (38416)
  c=a (38416)
  a=r 2 (38417)
  a== 0 (38419)
  jt 1 (38421)
  a=c (38423)
  r=a 1 (38424)
  (         ifN t1 goto else_1566) (38426)
  a== 0 (38426)
  jf 3 (38428)
  lj 38604 (38430)
  (                    2783:     tmp_ = symbols[0]) (38433)
  (         t1 = H[t0+5]〈symbols〉 + 0) (38433)
  c=0 (38433)
  a=r 0 (38434)
  a+= 5 (38436)
  d=a (38438)
  a=*d (38439)
  a+=c (38440)
  r=a 1 (38441)
  (         t1 = H[t1]〈〉) (38443)
  d=a (38443)
  a=*d (38444)
  r=a 1 (38445)
  (         H[t0+10]〈tmp_〉 = t1) (38447)
  a=r 0 (38447)
  a+= 10 (38449)
  d=a (38451)
  a=r 1 (38452)
  *d=a (38454)
  (                    2784:     if tmp_ > symbols[1]:) (38455)
  (         t2 = H[t0+5]〈symbols〉 + 1) (38455)
  c= 1 (38455)
  a=r 0 (38457)
  a+= 5 (38459)
  d=a (38461)
  a=*d (38462)
  a+=c (38463)
  r=a 2 (38464)
  (         t2 = H[t2]〈〉) (38466)
  d=a (38466)
  a=*d (38467)
  r=a 2 (38468)
  (         t1 = H[t0+10]〈tmp_〉 > t2) (38470)
  c=a (38470)
  a=r 0 (38471)
  a+= 10 (38473)
  d=a (38475)
  a=*d (38476)
  a>c (38477)
  a=0 (38478)
  jf 1 (38479)
  a++ (38481)
  r=a 1 (38482)
  (         ifN t1 goto else_1569) (38484)
  a== 0 (38484)
  jf 3 (38486)
  lj 38543 (38488)
  (                    2785:       symbols[0] = symbols[1]) (38491)
  (         t1 = H[t0+5]〈symbols〉 + 1) (38491)
  c= 1 (38491)
  a=r 0 (38493)
  a+= 5 (38495)
  d=a (38497)
  a=*d (38498)
  a+=c (38499)
  r=a 1 (38500)
  (         t1 = H[t1]〈〉) (38502)
  d=a (38502)
  a=*d (38503)
  r=a 1 (38504)
  (         t2 = H[t0+5]〈symbols〉 + 0) (38506)
  c=0 (38506)
  a=r 0 (38507)
  a+= 5 (38509)
  d=a (38511)
  a=*d (38512)
  a+=c (38513)
  r=a 2 (38514)
  (         H[t2]〈〉 = t1) (38516)
  d=a (38516)
  a=r 1 (38517)
  *d=a (38519)
  (                    2786:       symbols[1] = tmp_) (38520)
  (         t1 = H[t0+5]〈symbols〉 + 1) (38520)
  c= 1 (38520)
  a=r 0 (38522)
  a+= 5 (38524)
  d=a (38526)
  a=*d (38527)
  a+=c (38528)
  r=a 1 (38529)
  (         H[t1]〈〉 = H[t0+10]〈tmp_〉) (38531)
  a=r 0 (38531)
  a+= 10 (38533)
  d=a (38535)
  c=*d (38536)
  d=r 1 (38537)
  *d=c (38539)
  (         goto endif_1570) (38540)
  lj 38543 (38540)
  (        :else_1569:) (38543)
  (        :endif_1570:) (38543)
  (                    2787:     code_lengths = alloc_pM〈2〉) (38543)
  (         H[t0+11]〈〉 = t0) (38543)
  a=r 0 (38543)
  a+= 11 (38545)
  d=a (38547)
  a=r 0 (38548)
  *d=a (38550)
  (saved bsp, return id:) (38551)
  (         H[t0+12]〈〉 = 151) (38551)
  d++ (38551)
  *d= 151 (38552)
  (push arguments:) (38554)
  (         H[t0+13]〈〉 = 2) (38554)
  d++ (38554)
  *d= 2 (38555)
  (         t0 = t0 + 12) (38557)
  c= 12 (38557)
  a+=c (38559)
  r=a 0 (38560)
  (         goto addr_alloc_pM) (38562)
  lj 323 (38562)
  (        :return_id_151:) (38565)
  (         t1 = t1 | 2147483648) (38565)
  a= 1 (38565)
  a<<= 31 (38567)
  c=a (38569)
  a=r 1 (38570)
  a|=c (38572)
  r=a 1 (38573)
  (         H[t0+9]〈code_lengths〉 = t1) (38575)
  a=r 0 (38575)
  a+= 9 (38577)
  d=a (38579)
  a=r 1 (38580)
  *d=a (38582)
  (                    2788:     code_lengths[0] = 1) (38583)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (38583)
  a=0 (38583)
  a-- (38584)
  a>>= 1 (38585)
  c=a (38587)
  a=*d (38588)
  a&=c (38589)
  r=a 1 (38590)
  (         t1 = t1 + 0) (38592)
  (         M[t1] = 1) (38592)
  c=a (38592)
  *c= 1 (38593)
  (                    2789:     code_lengths[1] = 1) (38595)
  c++ (38595)
  *c= 1 (38596)
  a=c (38598)
  r=a 1 (38599)
  (         goto endif_1567) (38601)
  lj 39393 (38601)
  (        :else_1566:) (38604)
  (                    2790:   elif n_sym == 3 and tree_select == NONE:) (38604)
  (         t2 = H[t0+4]〈n_sym〉 == 3) (38604)
  c= 3 (38604)
  a=r 0 (38606)
  a+= 4 (38608)
  d=a (38610)
  a=*d (38611)
  a==c (38612)
  a=0 (38613)
  jf 1 (38614)
  a++ (38616)
  r=a 2 (38617)
  (         t3 = H[t0+8]〈tree_select〉 == 4294967295) (38619)
  c=0 (38619)
  c-- (38620)
  a=r 0 (38621)
  a+= 8 (38623)
  d=a (38625)
  a=*d (38626)
  a==c (38627)
  a=0 (38628)
  jf 1 (38629)
  a++ (38631)
  r=a 3 (38632)
  (         t1 = t2 and t3) (38634)
  c=a (38634)
  a=r 2 (38635)
  a== 0 (38637)
  jt 1 (38639)
  a=c (38641)
  r=a 1 (38642)
  (         ifN t1 goto else_1573) (38644)
  a== 0 (38644)
  jf 3 (38646)
  lj 38827 (38648)
  (                    2792:     tmp_ = symbols[1]) (38651)
  (         t1 = H[t0+5]〈symbols〉 + 1) (38651)
  c= 1 (38651)
  a=r 0 (38653)
  a+= 5 (38655)
  d=a (38657)
  a=*d (38658)
  a+=c (38659)
  r=a 1 (38660)
  (         t1 = H[t1]〈〉) (38662)
  d=a (38662)
  a=*d (38663)
  r=a 1 (38664)
  (         H[t0+10]〈tmp_〉 = t1) (38666)
  a=r 0 (38666)
  a+= 10 (38668)
  d=a (38670)
  a=r 1 (38671)
  *d=a (38673)
  (                    2793:     if tmp_ > symbols[2]:) (38674)
  (         t2 = H[t0+5]〈symbols〉 + 2) (38674)
  c= 2 (38674)
  a=r 0 (38676)
  a+= 5 (38678)
  d=a (38680)
  a=*d (38681)
  a+=c (38682)
  r=a 2 (38683)
  (         t2 = H[t2]〈〉) (38685)
  d=a (38685)
  a=*d (38686)
  r=a 2 (38687)
  (         t1 = H[t0+10]〈tmp_〉 > t2) (38689)
  c=a (38689)
  a=r 0 (38690)
  a+= 10 (38692)
  d=a (38694)
  a=*d (38695)
  a>c (38696)
  a=0 (38697)
  jf 1 (38698)
  a++ (38700)
  r=a 1 (38701)
  (         ifN t1 goto else_1576) (38703)
  a== 0 (38703)
  jf 3 (38705)
  lj 38763 (38707)
  (                    2794:       symbols[1] = symbols[2]) (38710)
  (         t1 = H[t0+5]〈symbols〉 + 2) (38710)
  c= 2 (38710)
  a=r 0 (38712)
  a+= 5 (38714)
  d=a (38716)
  a=*d (38717)
  a+=c (38718)
  r=a 1 (38719)
  (         t1 = H[t1]〈〉) (38721)
  d=a (38721)
  a=*d (38722)
  r=a 1 (38723)
  (         t2 = H[t0+5]〈symbols〉 + 1) (38725)
  c= 1 (38725)
  a=r 0 (38727)
  a+= 5 (38729)
  d=a (38731)
  a=*d (38732)
  a+=c (38733)
  r=a 2 (38734)
  (         H[t2]〈〉 = t1) (38736)
  d=a (38736)
  a=r 1 (38737)
  *d=a (38739)
  (                    2795:       symbols[2] = tmp_) (38740)
  (         t1 = H[t0+5]〈symbols〉 + 2) (38740)
  c= 2 (38740)
  a=r 0 (38742)
  a+= 5 (38744)
  d=a (38746)
  a=*d (38747)
  a+=c (38748)
  r=a 1 (38749)
  (         H[t1]〈〉 = H[t0+10]〈tmp_〉) (38751)
  a=r 0 (38751)
  a+= 10 (38753)
  d=a (38755)
  c=*d (38756)
  d=r 1 (38757)
  *d=c (38759)
  (         goto endif_1577) (38760)
  lj 38763 (38760)
  (        :else_1576:) (38763)
  (        :endif_1577:) (38763)
  (                    2796:     code_lengths = alloc_pM〈3〉) (38763)
  (         H[t0+11]〈〉 = t0) (38763)
  a=r 0 (38763)
  a+= 11 (38765)
  d=a (38767)
  a=r 0 (38768)
  *d=a (38770)
  (saved bsp, return id:) (38771)
  (         H[t0+12]〈〉 = 152) (38771)
  d++ (38771)
  *d= 152 (38772)
  (push arguments:) (38774)
  (         H[t0+13]〈〉 = 3) (38774)
  d++ (38774)
  *d= 3 (38775)
  (         t0 = t0 + 12) (38777)
  c= 12 (38777)
  a+=c (38779)
  r=a 0 (38780)
  (         goto addr_alloc_pM) (38782)
  lj 323 (38782)
  (        :return_id_152:) (38785)
  (         t1 = t1 | 2147483648) (38785)
  a= 1 (38785)
  a<<= 31 (38787)
  c=a (38789)
  a=r 1 (38790)
  a|=c (38792)
  r=a 1 (38793)
  (         H[t0+9]〈code_lengths〉 = t1) (38795)
  a=r 0 (38795)
  a+= 9 (38797)
  d=a (38799)
  a=r 1 (38800)
  *d=a (38802)
  (                    2797:     code_lengths[0] = 1) (38803)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (38803)
  a=0 (38803)
  a-- (38804)
  a>>= 1 (38805)
  c=a (38807)
  a=*d (38808)
  a&=c (38809)
  r=a 1 (38810)
  (         t1 = t1 + 0) (38812)
  (         M[t1] = 1) (38812)
  c=a (38812)
  *c= 1 (38813)
  (                    2798:     code_lengths[1] = 2) (38815)
  c++ (38815)
  *c= 2 (38816)
  (                    2799:     code_lengths[2] = 2) (38818)
  c++ (38818)
  *c= 2 (38819)
  a=c (38821)
  r=a 1 (38822)
  (         goto endif_1574) (38824)
  lj 39393 (38824)
  (        :else_1573:) (38827)
  (                    2800:   elif n_sym == 4 and tree_select == 0:) (38827)
  (         t2 = H[t0+4]〈n_sym〉 == 4) (38827)
  c= 4 (38827)
  a=r 0 (38829)
  a+= 4 (38831)
  d=a (38833)
  a=*d (38834)
  a==c (38835)
  a=0 (38836)
  jf 1 (38837)
  a++ (38839)
  r=a 2 (38840)
  (         t3 = H[t0+8]〈tree_select〉 == 0) (38842)
  c=0 (38842)
  a=r 0 (38843)
  a+= 8 (38845)
  d=a (38847)
  a=*d (38848)
  a==c (38849)
  a=0 (38850)
  jf 1 (38851)
  a++ (38853)
  r=a 3 (38854)
  (         t1 = t2 and t3) (38856)
  c=a (38856)
  a=r 2 (38857)
  a== 0 (38859)
  jt 1 (38861)
  a=c (38863)
  r=a 1 (38864)
  (         ifN t1 goto else_1580) (38866)
  a== 0 (38866)
  jf 3 (38868)
  lj 39166 (38870)
  (                    2802:     i = 1) (38873)
  (         H[t0+6]〈i〉 = 1) (38873)
  a=r 0 (38873)
  a+= 6 (38875)
  d=a (38877)
  *d= 1 (38878)
  (                    2803:     while i < n_sym:) (38880)
  (        :while_1582:) (38880)
  (         t1 = H[t0+6]〈i〉 < H[t0+4]〈n_sym〉) (38880)
  a=r 0 (38880)
  a+= 4 (38882)
  d=a (38884)
  c=*d (38885)
  a=r 0 (38886)
  a+= 6 (38888)
  d=a (38890)
  a=*d (38891)
  a<c (38892)
  a=0 (38893)
  jf 1 (38894)
  a++ (38896)
  r=a 1 (38897)
  (         ifN t1 goto whileend_1584) (38899)
  a== 0 (38899)
  jf 3 (38901)
  lj 39099 (38903)
  (                    2804:       x = symbols[i]) (38906)
  (         t1 = H[t0+5]〈symbols〉 + H[t0+6]〈i〉) (38906)
  c=*d (38906)
  d-- (38907)
  a=*d (38908)
  a+=c (38909)
  r=a 1 (38910)
  (         t1 = H[t1]〈〉) (38912)
  d=a (38912)
  a=*d (38913)
  r=a 1 (38914)
  (         H[t0+11]〈x〉 = t1) (38916)
  a=r 0 (38916)
  a+= 11 (38918)
  d=a (38920)
  a=r 1 (38921)
  *d=a (38923)
  (                    2805:       j = i - 1) (38924)
  (         t1 = H[t0+6]〈i〉 - 1) (38924)
  c= 1 (38924)
  a=r 0 (38926)
  a+= 6 (38928)
  d=a (38930)
  a=*d (38931)
  a-=c (38932)
  r=a 1 (38933)
  (         H[t0+7]〈j〉 = t1) (38935)
  d++ (38935)
  *d=a (38936)
  (                    2806:       while j >= 0 and symbols[j] > x:) (38937)
  (        :while_1586:) (38937)
  (         t2 = H[t0+7]〈j〉 >= 0) (38937)
  c=0 (38937)
  a=r 0 (38938)
  a+= 7 (38940)
  d=a (38942)
  a=*d (38943)
  a==c (38944)
  jt 4 (38945)
  a>c (38947)
  a=0 (38948)
  jf 2 (38949)
  a= 1 (38951)
  r=a 2 (38953)
  (         t4 = H[t0+5]〈symbols〉 + H[t0+7]〈j〉) (38955)
  c=*d (38955)
  a=r 0 (38956)
  a+= 5 (38958)
  d=a (38960)
  a=*d (38961)
  a+=c (38962)
  r=a 4 (38963)
  (         t4 = H[t4]〈〉) (38965)
  d=a (38965)
  a=*d (38966)
  r=a 4 (38967)
  (         t3 = t4 > H[t0+11]〈x〉) (38969)
  a=r 0 (38969)
  a+= 11 (38971)
  d=a (38973)
  c=*d (38974)
  a=r 4 (38975)
  a>c (38977)
  a=0 (38978)
  jf 1 (38979)
  a++ (38981)
  r=a 3 (38982)
  (         t1 = t2 and t3) (38984)
  c=a (38984)
  a=r 2 (38985)
  a== 0 (38987)
  jt 1 (38989)
  a=c (38991)
  r=a 1 (38992)
  (         ifN t1 goto whileend_1588) (38994)
  a== 0 (38994)
  jf 3 (38996)
  lj 39060 (38998)
  (                    2807:           symbols[j+1] = symbols[j]) (39001)
  (         t1 = H[t0+5]〈symbols〉 + H[t0+7]〈j〉) (39001)
  a=r 0 (39001)
  a+= 7 (39003)
  d=a (39005)
  c=*d (39006)
  a=r 0 (39007)
  a+= 5 (39009)
  d=a (39011)
  a=*d (39012)
  a+=c (39013)
  r=a 1 (39014)
  (         t1 = H[t1]〈〉) (39016)
  d=a (39016)
  a=*d (39017)
  r=a 1 (39018)
  (         t2 = H[t0+7]〈j〉 + 1) (39020)
  c= 1 (39020)
  a=r 0 (39022)
  a+= 7 (39024)
  d=a (39026)
  a=*d (39027)
  a+=c (39028)
  r=a 2 (39029)
  (         t3 = H[t0+5]〈symbols〉 + t2) (39031)
  c=a (39031)
  a=r 0 (39032)
  a+= 5 (39034)
  d=a (39036)
  a=*d (39037)
  a+=c (39038)
  r=a 3 (39039)
  (         H[t3]〈〉 = t1) (39041)
  d=a (39041)
  a=r 1 (39042)
  *d=a (39044)
  (                    2808:           j = j - 1) (39045)
  (         t1 = H[t0+7]〈j〉 - 1) (39045)
  c= 1 (39045)
  a=r 0 (39047)
  a+= 7 (39049)
  d=a (39051)
  a=*d (39052)
  a-=c (39053)
  r=a 1 (39054)
  (         H[t0+7]〈j〉 = t1) (39056)
  *d=a (39056)
  (         goto while_1586) (39057)
  lj 38937 (39057)
  (        :whileend_1588:) (39060)
  (                    2809:       symbols[j+1] = x) (39060)
  (         t1 = H[t0+7]〈j〉 + 1) (39060)
  c= 1 (39060)
  a=r 0 (39062)
  a+= 7 (39064)
  d=a (39066)
  a=*d (39067)
  a+=c (39068)
  r=a 1 (39069)
  (         t2 = H[t0+5]〈symbols〉 + t1) (39071)
  c=a (39071)
  a=r 0 (39072)
  a+= 5 (39074)
  d=a (39076)
  a=*d (39077)
  a+=c (39078)
  r=a 2 (39079)
  (         H[t2]〈〉 = H[t0+11]〈x〉) (39081)
  a=r 0 (39081)
  a+= 11 (39083)
  d=a (39085)
  c=*d (39086)
  d=r 2 (39087)
  *d=c (39089)
  (                    2810:       i += 1) (39090)
  (         H[t0+6]〈i〉 = H[t0+6]〈i〉 + 1) (39090)
  a=r 0 (39090)
  a+= 6 (39092)
  d=a (39094)
  *d++ (39095)
  (         goto while_1582) (39096)
  lj 38880 (39096)
  (        :whileend_1584:) (39099)
  (                    2811:     code_lengths = alloc_pM〈4〉) (39099)
  (         H[t0+12]〈〉 = t0) (39099)
  a=r 0 (39099)
  a+= 12 (39101)
  d=a (39103)
  a=r 0 (39104)
  *d=a (39106)
  (saved bsp, return id:) (39107)
  (         H[t0+13]〈〉 = 153) (39107)
  d++ (39107)
  *d= 153 (39108)
  (push arguments:) (39110)
  (         H[t0+14]〈〉 = 4) (39110)
  d++ (39110)
  *d= 4 (39111)
  (         t0 = t0 + 13) (39113)
  c= 13 (39113)
  a+=c (39115)
  r=a 0 (39116)
  (         goto addr_alloc_pM) (39118)
  lj 323 (39118)
  (        :return_id_153:) (39121)
  (         t1 = t1 | 2147483648) (39121)
  a= 1 (39121)
  a<<= 31 (39123)
  c=a (39125)
  a=r 1 (39126)
  a|=c (39128)
  r=a 1 (39129)
  (         H[t0+9]〈code_lengths〉 = t1) (39131)
  a=r 0 (39131)
  a+= 9 (39133)
  d=a (39135)
  a=r 1 (39136)
  *d=a (39138)
  (                    2812:     code_lengths[0] = 2) (39139)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (39139)
  a=0 (39139)
  a-- (39140)
  a>>= 1 (39141)
  c=a (39143)
  a=*d (39144)
  a&=c (39145)
  r=a 1 (39146)
  (         t1 = t1 + 0) (39148)
  (         M[t1] = 2) (39148)
  c=a (39148)
  *c= 2 (39149)
  (                    2813:     code_lengths[1] = 2) (39151)
  c++ (39151)
  *c= 2 (39152)
  (                    2814:     code_lengths[2] = 2) (39154)
  c++ (39154)
  *c= 2 (39155)
  (                    2815:     code_lengths[3] = 2) (39157)
  c++ (39157)
  *c= 2 (39158)
  a=c (39160)
  r=a 1 (39161)
  (         goto endif_1581) (39163)
  lj 39393 (39163)
  (        :else_1580:) (39166)
  (                    2816:   elif n_sym == 4 and tree_select == 1:) (39166)
  (         t2 = H[t0+4]〈n_sym〉 == 4) (39166)
  c= 4 (39166)
  a=r 0 (39168)
  a+= 4 (39170)
  d=a (39172)
  a=*d (39173)
  a==c (39174)
  a=0 (39175)
  jf 1 (39176)
  a++ (39178)
  r=a 2 (39179)
  (         t3 = H[t0+8]〈tree_select〉 == 1) (39181)
  c= 1 (39181)
  a=r 0 (39183)
  a+= 8 (39185)
  d=a (39187)
  a=*d (39188)
  a==c (39189)
  a=0 (39190)
  jf 1 (39191)
  a++ (39193)
  r=a 3 (39194)
  (         t1 = t2 and t3) (39196)
  c=a (39196)
  a=r 2 (39197)
  a== 0 (39199)
  jt 1 (39201)
  a=c (39203)
  r=a 1 (39204)
  (         ifN t1 goto else_1593) (39206)
  a== 0 (39206)
  jf 3 (39208)
  lj 39392 (39210)
  (                    2818:     tmp_ = symbols[2]) (39213)
  (         t1 = H[t0+5]〈symbols〉 + 2) (39213)
  c= 2 (39213)
  a=r 0 (39215)
  a+= 5 (39217)
  d=a (39219)
  a=*d (39220)
  a+=c (39221)
  r=a 1 (39222)
  (         t1 = H[t1]〈〉) (39224)
  d=a (39224)
  a=*d (39225)
  r=a 1 (39226)
  (         H[t0+10]〈tmp_〉 = t1) (39228)
  a=r 0 (39228)
  a+= 10 (39230)
  d=a (39232)
  a=r 1 (39233)
  *d=a (39235)
  (                    2819:     if tmp_ > symbols[3]:) (39236)
  (         t2 = H[t0+5]〈symbols〉 + 3) (39236)
  c= 3 (39236)
  a=r 0 (39238)
  a+= 5 (39240)
  d=a (39242)
  a=*d (39243)
  a+=c (39244)
  r=a 2 (39245)
  (         t2 = H[t2]〈〉) (39247)
  d=a (39247)
  a=*d (39248)
  r=a 2 (39249)
  (         t1 = H[t0+10]〈tmp_〉 > t2) (39251)
  c=a (39251)
  a=r 0 (39252)
  a+= 10 (39254)
  d=a (39256)
  a=*d (39257)
  a>c (39258)
  a=0 (39259)
  jf 1 (39260)
  a++ (39262)
  r=a 1 (39263)
  (         ifN t1 goto else_1596) (39265)
  a== 0 (39265)
  jf 3 (39267)
  lj 39325 (39269)
  (                    2820:       symbols[2] = symbols[3]) (39272)
  (         t1 = H[t0+5]〈symbols〉 + 3) (39272)
  c= 3 (39272)
  a=r 0 (39274)
  a+= 5 (39276)
  d=a (39278)
  a=*d (39279)
  a+=c (39280)
  r=a 1 (39281)
  (         t1 = H[t1]〈〉) (39283)
  d=a (39283)
  a=*d (39284)
  r=a 1 (39285)
  (         t2 = H[t0+5]〈symbols〉 + 2) (39287)
  c= 2 (39287)
  a=r 0 (39289)
  a+= 5 (39291)
  d=a (39293)
  a=*d (39294)
  a+=c (39295)
  r=a 2 (39296)
  (         H[t2]〈〉 = t1) (39298)
  d=a (39298)
  a=r 1 (39299)
  *d=a (39301)
  (                    2821:       symbols[3] = tmp_) (39302)
  (         t1 = H[t0+5]〈symbols〉 + 3) (39302)
  c= 3 (39302)
  a=r 0 (39304)
  a+= 5 (39306)
  d=a (39308)
  a=*d (39309)
  a+=c (39310)
  r=a 1 (39311)
  (         H[t1]〈〉 = H[t0+10]〈tmp_〉) (39313)
  a=r 0 (39313)
  a+= 10 (39315)
  d=a (39317)
  c=*d (39318)
  d=r 1 (39319)
  *d=c (39321)
  (         goto endif_1597) (39322)
  lj 39325 (39322)
  (        :else_1596:) (39325)
  (        :endif_1597:) (39325)
  (                    2822:     code_lengths = alloc_pM〈4〉) (39325)
  (         H[t0+12]〈〉 = t0) (39325)
  a=r 0 (39325)
  a+= 12 (39327)
  d=a (39329)
  a=r 0 (39330)
  *d=a (39332)
  (saved bsp, return id:) (39333)
  (         H[t0+13]〈〉 = 154) (39333)
  d++ (39333)
  *d= 154 (39334)
  (push arguments:) (39336)
  (         H[t0+14]〈〉 = 4) (39336)
  d++ (39336)
  *d= 4 (39337)
  (         t0 = t0 + 13) (39339)
  c= 13 (39339)
  a+=c (39341)
  r=a 0 (39342)
  (         goto addr_alloc_pM) (39344)
  lj 323 (39344)
  (        :return_id_154:) (39347)
  (         t1 = t1 | 2147483648) (39347)
  a= 1 (39347)
  a<<= 31 (39349)
  c=a (39351)
  a=r 1 (39352)
  a|=c (39354)
  r=a 1 (39355)
  (         H[t0+9]〈code_lengths〉 = t1) (39357)
  a=r 0 (39357)
  a+= 9 (39359)
  d=a (39361)
  a=r 1 (39362)
  *d=a (39364)
  (                    2823:     code_lengths[0] = 1) (39365)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (39365)
  a=0 (39365)
  a-- (39366)
  a>>= 1 (39367)
  c=a (39369)
  a=*d (39370)
  a&=c (39371)
  r=a 1 (39372)
  (         t1 = t1 + 0) (39374)
  (         M[t1] = 1) (39374)
  c=a (39374)
  *c= 1 (39375)
  (                    2824:     code_lengths[1] = 2) (39377)
  c++ (39377)
  *c= 2 (39378)
  (                    2825:     code_lengths[2] = 3) (39380)
  c++ (39380)
  *c= 3 (39381)
  (                    2826:     code_lengths[3] = 3) (39383)
  c++ (39383)
  *c= 3 (39384)
  a=c (39386)
  r=a 1 (39387)
  (         goto endif_1594) (39389)
  lj 39393 (39389)
  (        :else_1593:) (39392)
  (                    2828:     error〈〉  # unreachable as len〈symbols〉<=4) (39392)
  (         error) (39392)
  error (39392)
  (        :endif_1594:) (39393)
  (        :endif_1581:) (39393)
  (        :endif_1574:) (39393)
  (        :endif_1567:) (39393)
  (        :endif_1563:) (39393)
  (                    2829:   ret = codes_from_lengths_and_symbols〈code_lengths, symbols〉) (39393)
  (         H[t0+12]〈〉 = t0) (39393)
  a=r 0 (39393)
  a+= 12 (39395)
  d=a (39397)
  a=r 0 (39398)
  *d=a (39400)
  (saved bsp, return id:) (39401)
  (         H[t0+13]〈〉 = 155) (39401)
  d++ (39401)
  *d= 155 (39402)
  (push arguments:) (39404)
  (         H[t0+14]〈〉 = H[t0+9]〈code_lengths〉) (39404)
  a+= 9 (39404)
  d=a (39406)
  c=*d (39407)
  a=r 0 (39408)
  a+= 14 (39410)
  d=a (39412)
  *d=c (39413)
  (         H[t0+15]〈〉 = H[t0+5]〈symbols〉) (39414)
  a=r 0 (39414)
  a+= 5 (39416)
  d=a (39418)
  c=*d (39419)
  a=r 0 (39420)
  a+= 15 (39422)
  d=a (39424)
  *d=c (39425)
  (         t0 = t0 + 13) (39426)
  c= 13 (39426)
  a=r 0 (39428)
  a+=c (39430)
  r=a 0 (39431)
  (         goto codes_from_lengths_and_symbols) (39433)
  lj 7345 (39433)
  (        :return_id_155:) (39436)
  (         H[t0+12]〈ret〉 = t1) (39436)
  a=r 0 (39436)
  a+= 12 (39438)
  d=a (39440)
  a=r 1 (39441)
  *d=a (39443)
  (                    2830:   free_pM〈code_lengths〉) (39444)
  (         t1 = H[t0+9]〈code_lengths〉 & 2147483647) (39444)
  a=0 (39444)
  a-- (39445)
  a>>= 1 (39446)
  c=a (39448)
  a=r 0 (39449)
  a+= 9 (39451)
  d=a (39453)
  a=*d (39454)
  a&=c (39455)
  r=a 1 (39456)
  (         H[t0+13]〈〉 = t0) (39458)
  a=r 0 (39458)
  a+= 13 (39460)
  d=a (39462)
  a=r 0 (39463)
  *d=a (39465)
  (saved bsp, return id:) (39466)
  (         H[t0+14]〈〉 = 156) (39466)
  d++ (39466)
  *d= 156 (39467)
  (push arguments:) (39469)
  (         H[t0+15]〈〉 = t1) (39469)
  d++ (39469)
  a=r 1 (39470)
  *d=a (39472)
  (         t0 = t0 + 14) (39473)
  c= 14 (39473)
  a=r 0 (39475)
  a+=c (39477)
  r=a 0 (39478)
  (         goto addr_free_pM) (39480)
  lj 2406 (39480)
  (        :return_id_156:) (39483)
  (         t2 = t1) (39483)
  a=r 1 (39483)
  r=a 2 (39485)
  (                    2831:   free_pH〈symbols〉) (39487)
  (         H[t0+13]〈〉 = t0) (39487)
  a=r 0 (39487)
  a+= 13 (39489)
  d=a (39491)
  a=r 0 (39492)
  *d=a (39494)
  (saved bsp, return id:) (39495)
  (         H[t0+14]〈〉 = 157) (39495)
  d++ (39495)
  *d= 157 (39496)
  (push arguments:) (39498)
  (         H[t0+15]〈〉 = H[t0+5]〈symbols〉) (39498)
  a+= 5 (39498)
  d=a (39500)
  c=*d (39501)
  a=r 0 (39502)
  a+= 15 (39504)
  d=a (39506)
  *d=c (39507)
  (         t0 = t0 + 14) (39508)
  c= 14 (39508)
  a=r 0 (39510)
  a+=c (39512)
  r=a 0 (39513)
  (         goto addr_free_pH) (39515)
  lj 2913 (39515)
  (        :return_id_157:) (39518)
  (                    2832:   return ret) (39518)
  (         t1 = H[t0+12]〈ret〉) (39518)
  a=r 0 (39518)
  a+= 12 (39520)
  d=a (39522)
  a=*d (39523)
  r=a 1 (39524)
  (         t2 = H[t0]〈〉) (39526)
  d=r 0 (39526)
  a=*d (39528)
  r=a 2 (39529)
  (         t0 = t0 - 1) (39531)
  a=r 0 (39531)
  a-- (39533)
  r=a 0 (39534)
  (         t0 = H[t0]〈〉) (39536)
  d=a (39536)
  a=*d (39537)
  r=a 0 (39538)
  (         goto find_label_ret_id) (39540)
  lj 62666 (39540)
  (insert return as it might not be done by the function:) (39543)
  (         t2 = H[t0]〈〉) (39543)
  d=a (39543)
  a=*d (39544)
  r=a 2 (39545)
  (         t0 = t0 - 1) (39547)
  a=r 0 (39547)
  a-- (39549)
  r=a 0 (39550)
  (         t0 = H[t0]〈〉) (39552)
  d=a (39552)
  a=*d (39553)
  r=a 0 (39554)
  (         goto find_label_ret_id) (39556)
  lj 62666 (39556)
  (         MarkTempVarEnd) (39559)
  (        :parse_simple_prefix_code_end~:) (39559)
  (                    2834: def parse_complex_prefix_code〈h_skip, alphabet_size〉:) (39559)
  (         goto parse_complex_prefix_code_end~) (39559)
  lj 42379 (39559)
  (        :parse_complex_prefix_code:) (39562)
  (         MarkTempVarStart) (39562)
  (Arg h_skip at t0 + 1) (39562)
  (Arg alphabet_size at t0 + 2) (39562)
  (                    2837:   bit_lengths_code = header_bit_lengths_code) (39562)
  (         H[t0+3]〈bit_lengths_code〉 = H[t252+113]〈header_bit_lengths_code〉) (39562)
  a=r 252 (39562)
  a+= 113 (39564)
  d=a (39566)
  c=*d (39567)
  a=r 0 (39568)
  a+= 3 (39570)
  d=a (39572)
  *d=c (39573)
  (                    2838:   code_lengths = alloc_pM〈18〉) (39574)
  (         H[t0+4]〈〉 = t0) (39574)
  d++ (39574)
  a=r 0 (39575)
  *d=a (39577)
  (saved bsp, return id:) (39578)
  (         H[t0+5]〈〉 = 158) (39578)
  d++ (39578)
  *d= 158 (39579)
  (push arguments:) (39581)
  (         H[t0+6]〈〉 = 18) (39581)
  d++ (39581)
  *d= 18 (39582)
  (         t0 = t0 + 5) (39584)
  c= 5 (39584)
  a+=c (39586)
  r=a 0 (39587)
  (         goto addr_alloc_pM) (39589)
  lj 323 (39589)
  (        :return_id_158:) (39592)
  (         t1 = t1 | 2147483648) (39592)
  a= 1 (39592)
  a<<= 31 (39594)
  c=a (39596)
  a=r 1 (39597)
  a|=c (39599)
  r=a 1 (39600)
  (         H[t0+4]〈code_lengths〉 = t1) (39602)
  a=r 0 (39602)
  a+= 4 (39604)
  d=a (39606)
  a=r 1 (39607)
  *d=a (39609)
  (                    2839:   i = 0) (39610)
  (         H[t0+5]〈i〉 = 0) (39610)
  d++ (39610)
  *d=0 (39611)
  (                    2840:   while i < 18:) (39612)
  (        :while_1598:) (39612)
  (         t1 = H[t0+5]〈i〉 < 18) (39612)
  c= 18 (39612)
  a=r 0 (39614)
  a+= 5 (39616)
  d=a (39618)
  a=*d (39619)
  a<c (39620)
  a=0 (39621)
  jf 1 (39622)
  a++ (39624)
  r=a 1 (39625)
  (         ifN t1 goto whileend_1600) (39627)
  a== 0 (39627)
  jf 3 (39629)
  lj 39655 (39631)
  (                    2841:     code_lengths[i] = 0) (39634)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (39634)
  a=0 (39634)
  a-- (39635)
  a>>= 1 (39636)
  c=a (39638)
  d-- (39639)
  a=*d (39640)
  a&=c (39641)
  r=a 1 (39642)
  (         t1 = t1 + H[t0+5]〈i〉) (39644)
  d++ (39644)
  c=*d (39645)
  a+=c (39646)
  r=a 1 (39647)
  (         M[t1] = 0) (39649)
  c=a (39649)
  *c=0 (39650)
  (                    2842:     i += 1) (39651)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (39651)
  *d++ (39651)
  (         goto while_1598) (39652)
  lj 39612 (39652)
  (        :whileend_1600:) (39655)
  (                    2843:   sum_ = 0) (39655)
  (         H[t0+6]〈sum_〉 = 0) (39655)
  a=r 0 (39655)
  a+= 6 (39657)
  d=a (39659)
  *d=0 (39660)
  (                    2844:   len_non_zero_codelengths = 0) (39661)
  (         H[t0+7]〈len_non_zero_codelengths〉 = 0) (39661)
  d++ (39661)
  *d=0 (39662)
  (                    2845:   i = h_skip) (39663)
  (         H[t0+5]〈i〉 = H[t0+1]〈h_skip〉) (39663)
  a=r 0 (39663)
  a++ (39665)
  d=a (39666)
  c=*d (39667)
  a=r 0 (39668)
  a+= 5 (39670)
  d=a (39672)
  *d=c (39673)
  (                    2846:   while i < 18:) (39674)
  (        :while_1602:) (39674)
  (         t1 = H[t0+5]〈i〉 < 18) (39674)
  c= 18 (39674)
  a=r 0 (39676)
  a+= 5 (39678)
  d=a (39680)
  a=*d (39681)
  a<c (39682)
  a=0 (39683)
  jf 1 (39684)
  a++ (39686)
  r=a 1 (39687)
  (         ifN t1 goto whileend_1604) (39689)
  a== 0 (39689)
  jf 3 (39691)
  lj 39879 (39693)
  (                    2847:     code_length = lookup_symbol〈bit_lengths_code〉) (39696)
  (         H[t0+8]〈〉 = t0) (39696)
  a=r 0 (39696)
  a+= 8 (39698)
  d=a (39700)
  a=r 0 (39701)
  *d=a (39703)
  (saved bsp, return id:) (39704)
  (         H[t0+9]〈〉 = 159) (39704)
  d++ (39704)
  *d= 159 (39705)
  (push arguments:) (39707)
  (         H[t0+10]〈〉 = H[t0+3]〈bit_lengths_code〉) (39707)
  a+= 3 (39707)
  d=a (39709)
  c=*d (39710)
  a=r 0 (39711)
  a+= 10 (39713)
  d=a (39715)
  *d=c (39716)
  (         t0 = t0 + 9) (39717)
  c= 9 (39717)
  a=r 0 (39719)
  a+=c (39721)
  r=a 0 (39722)
  (         goto lookup_symbol) (39724)
  lj 6923 (39724)
  (        :return_id_159:) (39727)
  (         H[t0+8]〈code_length〉 = t1) (39727)
  a=r 0 (39727)
  a+= 8 (39729)
  d=a (39731)
  a=r 1 (39732)
  *d=a (39734)
  (                    2848:     if code_length == NONE:) (39735)
  (         t1 = H[t0+8]〈code_length〉 == 4294967295) (39735)
  c=0 (39735)
  c-- (39736)
  a=*d (39737)
  a==c (39738)
  a=0 (39739)
  jf 1 (39740)
  a++ (39742)
  r=a 1 (39743)
  (         ifN t1 goto else_1607) (39745)
  a== 0 (39745)
  jf 3 (39747)
  lj 39756 (39749)
  (                    2849:       error〈〉) (39752)
  (         error) (39752)
  error (39752)
  (         goto endif_1608) (39753)
  lj 39756 (39753)
  (        :else_1607:) (39756)
  (        :endif_1608:) (39756)
  (                    2850:     code_lengths[i] = code_length) (39756)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (39756)
  a=0 (39756)
  a-- (39757)
  a>>= 1 (39758)
  c=a (39760)
  a=r 0 (39761)
  a+= 4 (39763)
  d=a (39765)
  a=*d (39766)
  a&=c (39767)
  r=a 1 (39768)
  (         t1 = t1 + H[t0+5]〈i〉) (39770)
  d++ (39770)
  c=*d (39771)
  a+=c (39772)
  r=a 1 (39773)
  (         M[t1] = H[t0+8]〈code_length〉) (39775)
  c=a (39775)
  a=r 0 (39776)
  a+= 8 (39778)
  d=a (39780)
  *c=*d (39781)
  (                    2851:     if code_length > 0:) (39782)
  (         t1 = H[t0+8]〈code_length〉 > 0) (39782)
  c=0 (39782)
  a=*d (39783)
  a>c (39784)
  a=0 (39785)
  jf 1 (39786)
  a++ (39788)
  r=a 1 (39789)
  (         ifN t1 goto else_1610) (39791)
  a== 0 (39791)
  jf 3 (39793)
  lj 39870 (39795)
  (                    2852:         sum_ = sum_ + 〈32 >> code_length〉) (39798)
  (         t2 = 32 >> H[t0+8]〈code_length〉) (39798)
  c=*d (39798)
  a= 32 (39799)
  a>>=c (39801)
  r=a 2 (39802)
  (         t1 = H[t0+6]〈sum_〉 + t2) (39804)
  c=a (39804)
  a=r 0 (39805)
  a+= 6 (39807)
  d=a (39809)
  a=*d (39810)
  a+=c (39811)
  r=a 1 (39812)
  (         H[t0+6]〈sum_〉 = t1) (39814)
  *d=a (39814)
  (                    2853:         len_non_zero_codelengths += 1) (39815)
  (         H[t0+7]〈len_non_zero_codelengths〉 = H[t0+7]〈len_non_zero_codelengths〉 + 1) (39815)
  d++ (39815)
  *d++ (39816)
  (                    2859:         if sum_ == 32:) (39817)
  (         t1 = H[t0+6]〈sum_〉 == 32) (39817)
  c= 32 (39817)
  d-- (39819)
  a=*d (39820)
  a==c (39821)
  a=0 (39822)
  jf 1 (39823)
  a++ (39825)
  r=a 1 (39826)
  (         ifN t1 goto else_1613) (39828)
  a== 0 (39828)
  jf 3 (39830)
  lj 39841 (39832)
  (                    2860:           break) (39835)
  (         goto whileend_1604) (39835)
  lj 39879 (39835)
  (         goto endif_1614) (39838)
  lj 39841 (39838)
  (        :else_1613:) (39841)
  (        :endif_1614:) (39841)
  (                    2861:         if sum_ > 32:) (39841)
  (         t1 = H[t0+6]〈sum_〉 > 32) (39841)
  c= 32 (39841)
  a=r 0 (39843)
  a+= 6 (39845)
  d=a (39847)
  a=*d (39848)
  a>c (39849)
  a=0 (39850)
  jf 1 (39851)
  a++ (39853)
  r=a 1 (39854)
  (         ifN t1 goto else_1616) (39856)
  a== 0 (39856)
  jf 3 (39858)
  lj 39867 (39860)
  (                    2862:           error〈〉 # CodeLengthsChecksum) (39863)
  (         error) (39863)
  error (39863)
  (         goto endif_1617) (39864)
  lj 39867 (39864)
  (        :else_1616:) (39867)
  (        :endif_1617:) (39867)
  (         goto endif_1611) (39867)
  lj 39870 (39867)
  (        :else_1610:) (39870)
  (        :endif_1611:) (39870)
  (                    2863:     i += 1) (39870)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (39870)
  a=r 0 (39870)
  a+= 5 (39872)
  d=a (39874)
  *d++ (39875)
  (         goto while_1602) (39876)
  lj 39674 (39876)
  (        :whileend_1604:) (39879)
  (                    2864:   if len_non_zero_codelengths == 0:) (39879)
  (         t1 = H[t0+7]〈len_non_zero_codelengths〉 == 0) (39879)
  c=0 (39879)
  a=r 0 (39880)
  a+= 7 (39882)
  d=a (39884)
  a=*d (39885)
  a==c (39886)
  a=0 (39887)
  jf 1 (39888)
  a++ (39890)
  r=a 1 (39891)
  (         ifN t1 goto else_1619) (39893)
  a== 0 (39893)
  jf 3 (39895)
  lj 39904 (39897)
  (                    2865:     error〈〉  # NoCodeLength) (39900)
  (         error) (39900)
  error (39900)
  (         goto endif_1620) (39901)
  lj 39904 (39901)
  (        :else_1619:) (39904)
  (        :endif_1620:) (39904)
  (                    2866:   if len_non_zero_codelengths >= 2 and sum_ < 32:) (39904)
  (         t2 = H[t0+7]〈len_non_zero_codelengths〉 >= 2) (39904)
  c= 2 (39904)
  a=r 0 (39906)
  a+= 7 (39908)
  d=a (39910)
  a=*d (39911)
  a==c (39912)
  jt 4 (39913)
  a>c (39915)
  a=0 (39916)
  jf 2 (39917)
  a= 1 (39919)
  r=a 2 (39921)
  (         t3 = H[t0+6]〈sum_〉 < 32) (39923)
  c= 32 (39923)
  d-- (39925)
  a=*d (39926)
  a<c (39927)
  a=0 (39928)
  jf 1 (39929)
  a++ (39931)
  r=a 3 (39932)
  (         t1 = t2 and t3) (39934)
  c=a (39934)
  a=r 2 (39935)
  a== 0 (39937)
  jt 1 (39939)
  a=c (39941)
  r=a 1 (39942)
  (         ifN t1 goto else_1623) (39944)
  a== 0 (39944)
  jf 3 (39946)
  lj 39955 (39948)
  (                    2867:     error〈〉  # CodeLengthsChecksum) (39951)
  (         error) (39951)
  error (39951)
  (         goto endif_1624) (39952)
  lj 39955 (39952)
  (        :else_1623:) (39955)
  (        :endif_1624:) (39955)
  (                    2868:   new_code_lengths = alloc_pM〈18〉) (39955)
  (         H[t0+9]〈〉 = t0) (39955)
  a=r 0 (39955)
  a+= 9 (39957)
  d=a (39959)
  a=r 0 (39960)
  *d=a (39962)
  (saved bsp, return id:) (39963)
  (         H[t0+10]〈〉 = 160) (39963)
  d++ (39963)
  *d= 160 (39964)
  (push arguments:) (39966)
  (         H[t0+11]〈〉 = 18) (39966)
  d++ (39966)
  *d= 18 (39967)
  (         t0 = t0 + 10) (39969)
  c= 10 (39969)
  a+=c (39971)
  r=a 0 (39972)
  (         goto addr_alloc_pM) (39974)
  lj 323 (39974)
  (        :return_id_160:) (39977)
  (         t1 = t1 | 2147483648) (39977)
  a= 1 (39977)
  a<<= 31 (39979)
  c=a (39981)
  a=r 1 (39982)
  a|=c (39984)
  r=a 1 (39985)
  (         H[t0+9]〈new_code_lengths〉 = t1) (39987)
  a=r 0 (39987)
  a+= 9 (39989)
  d=a (39991)
  a=r 1 (39992)
  *d=a (39994)
  (                    2869:   new_code_lengths[0] = code_lengths[4]) (39995)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (39995)
  a=0 (39995)
  a-- (39996)
  a>>= 1 (39997)
  c=a (39999)
  a=r 0 (40000)
  a+= 4 (40002)
  d=a (40004)
  a=*d (40005)
  a&=c (40006)
  r=a 1 (40007)
  (         t1 = t1 + 4) (40009)
  c= 4 (40009)
  a+=c (40011)
  r=a 1 (40012)
  (         t1 = M[t1]) (40014)
  b=a (40014)
  a=*b (40015)
  r=a 1 (40016)
  (         t2 = H[t0+9]〈new_code_lengths〉 & 2147483647) (40018)
  a=0 (40018)
  a-- (40019)
  a>>= 1 (40020)
  c=a (40022)
  a=r 0 (40023)
  a+= 9 (40025)
  d=a (40027)
  a=*d (40028)
  a&=c (40029)
  r=a 2 (40030)
  (         t2 = t2 + 0) (40032)
  (         M[t2] = t1) (40032)
  c=a (40032)
  a=r 1 (40033)
  *c=a (40035)
  (                    2870:   new_code_lengths[1] = code_lengths[0]) (40036)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40036)
  a=0 (40036)
  a-- (40037)
  a>>= 1 (40038)
  c=a (40040)
  a=r 0 (40041)
  a+= 4 (40043)
  d=a (40045)
  a=*d (40046)
  a&=c (40047)
  r=a 1 (40048)
  (         t1 = t1 + 0) (40050)
  (         t1 = M[t1]) (40050)
  b=a (40050)
  a=*b (40051)
  r=a 1 (40052)
  (         t2 = t2 + 1) (40054)
  a=r 2 (40054)
  a++ (40056)
  r=a 2 (40057)
  (         M[t2] = t1) (40059)
  c=a (40059)
  a=r 1 (40060)
  *c=a (40062)
  (                    2871:   new_code_lengths[2] = code_lengths[1]) (40063)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40063)
  a=0 (40063)
  a-- (40064)
  a>>= 1 (40065)
  c=a (40067)
  a=*d (40068)
  a&=c (40069)
  r=a 1 (40070)
  (         t1 = t1 + 1) (40072)
  a++ (40072)
  r=a 1 (40073)
  (         t1 = M[t1]) (40075)
  b=a (40075)
  a=*b (40076)
  r=a 1 (40077)
  (         t2 = t2 + 1) (40079)
  a=r 2 (40079)
  a++ (40081)
  r=a 2 (40082)
  (         M[t2] = t1) (40084)
  c=a (40084)
  a=r 1 (40085)
  *c=a (40087)
  (                    2872:   new_code_lengths[3] = code_lengths[2]) (40088)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40088)
  a=0 (40088)
  a-- (40089)
  a>>= 1 (40090)
  c=a (40092)
  a=*d (40093)
  a&=c (40094)
  r=a 1 (40095)
  (         t1 = t1 + 2) (40097)
  c= 2 (40097)
  a+=c (40099)
  r=a 1 (40100)
  (         t1 = M[t1]) (40102)
  b=a (40102)
  a=*b (40103)
  r=a 1 (40104)
  (         t2 = t2 + 1) (40106)
  a=r 2 (40106)
  a++ (40108)
  r=a 2 (40109)
  (         M[t2] = t1) (40111)
  c=a (40111)
  a=r 1 (40112)
  *c=a (40114)
  (                    2873:   new_code_lengths[4] = code_lengths[3]) (40115)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40115)
  a=0 (40115)
  a-- (40116)
  a>>= 1 (40117)
  c=a (40119)
  a=*d (40120)
  a&=c (40121)
  r=a 1 (40122)
  (         t1 = t1 + 3) (40124)
  c= 3 (40124)
  a+=c (40126)
  r=a 1 (40127)
  (         t1 = M[t1]) (40129)
  b=a (40129)
  a=*b (40130)
  r=a 1 (40131)
  (         t2 = t2 + 1) (40133)
  a=r 2 (40133)
  a++ (40135)
  r=a 2 (40136)
  (         M[t2] = t1) (40138)
  c=a (40138)
  a=r 1 (40139)
  *c=a (40141)
  (                    2874:   new_code_lengths[5] = code_lengths[5]) (40142)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40142)
  a=0 (40142)
  a-- (40143)
  a>>= 1 (40144)
  c=a (40146)
  a=*d (40147)
  a&=c (40148)
  r=a 1 (40149)
  (         t1 = t1 + 5) (40151)
  c= 5 (40151)
  a+=c (40153)
  r=a 1 (40154)
  (         t1 = M[t1]) (40156)
  b=a (40156)
  a=*b (40157)
  r=a 1 (40158)
  (         t2 = t2 + 1) (40160)
  a=r 2 (40160)
  a++ (40162)
  r=a 2 (40163)
  (         M[t2] = t1) (40165)
  c=a (40165)
  a=r 1 (40166)
  *c=a (40168)
  (                    2875:   new_code_lengths[6] = code_lengths[7]) (40169)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40169)
  a=0 (40169)
  a-- (40170)
  a>>= 1 (40171)
  c=a (40173)
  a=*d (40174)
  a&=c (40175)
  r=a 1 (40176)
  (         t1 = t1 + 7) (40178)
  c= 7 (40178)
  a+=c (40180)
  r=a 1 (40181)
  (         t1 = M[t1]) (40183)
  b=a (40183)
  a=*b (40184)
  r=a 1 (40185)
  (         t2 = t2 + 1) (40187)
  a=r 2 (40187)
  a++ (40189)
  r=a 2 (40190)
  (         M[t2] = t1) (40192)
  c=a (40192)
  a=r 1 (40193)
  *c=a (40195)
  (                    2876:   new_code_lengths[7] = code_lengths[9]) (40196)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40196)
  a=0 (40196)
  a-- (40197)
  a>>= 1 (40198)
  c=a (40200)
  a=*d (40201)
  a&=c (40202)
  r=a 1 (40203)
  (         t1 = t1 + 9) (40205)
  c= 9 (40205)
  a+=c (40207)
  r=a 1 (40208)
  (         t1 = M[t1]) (40210)
  b=a (40210)
  a=*b (40211)
  r=a 1 (40212)
  (         t2 = t2 + 1) (40214)
  a=r 2 (40214)
  a++ (40216)
  r=a 2 (40217)
  (         M[t2] = t1) (40219)
  c=a (40219)
  a=r 1 (40220)
  *c=a (40222)
  (                    2877:   new_code_lengths[8] = code_lengths[10]) (40223)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40223)
  a=0 (40223)
  a-- (40224)
  a>>= 1 (40225)
  c=a (40227)
  a=*d (40228)
  a&=c (40229)
  r=a 1 (40230)
  (         t1 = t1 + 10) (40232)
  c= 10 (40232)
  a+=c (40234)
  r=a 1 (40235)
  (         t1 = M[t1]) (40237)
  b=a (40237)
  a=*b (40238)
  r=a 1 (40239)
  (         t2 = t2 + 1) (40241)
  a=r 2 (40241)
  a++ (40243)
  r=a 2 (40244)
  (         M[t2] = t1) (40246)
  c=a (40246)
  a=r 1 (40247)
  *c=a (40249)
  (                    2878:   new_code_lengths[9] = code_lengths[11]) (40250)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40250)
  a=0 (40250)
  a-- (40251)
  a>>= 1 (40252)
  c=a (40254)
  a=*d (40255)
  a&=c (40256)
  r=a 1 (40257)
  (         t1 = t1 + 11) (40259)
  c= 11 (40259)
  a+=c (40261)
  r=a 1 (40262)
  (         t1 = M[t1]) (40264)
  b=a (40264)
  a=*b (40265)
  r=a 1 (40266)
  (         t2 = t2 + 1) (40268)
  a=r 2 (40268)
  a++ (40270)
  r=a 2 (40271)
  (         M[t2] = t1) (40273)
  c=a (40273)
  a=r 1 (40274)
  *c=a (40276)
  (                    2879:   new_code_lengths[10] = code_lengths[12]) (40277)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40277)
  a=0 (40277)
  a-- (40278)
  a>>= 1 (40279)
  c=a (40281)
  a=*d (40282)
  a&=c (40283)
  r=a 1 (40284)
  (         t1 = t1 + 12) (40286)
  c= 12 (40286)
  a+=c (40288)
  r=a 1 (40289)
  (         t1 = M[t1]) (40291)
  b=a (40291)
  a=*b (40292)
  r=a 1 (40293)
  (         t2 = t2 + 1) (40295)
  a=r 2 (40295)
  a++ (40297)
  r=a 2 (40298)
  (         M[t2] = t1) (40300)
  c=a (40300)
  a=r 1 (40301)
  *c=a (40303)
  (                    2880:   new_code_lengths[11] = code_lengths[13]) (40304)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40304)
  a=0 (40304)
  a-- (40305)
  a>>= 1 (40306)
  c=a (40308)
  a=*d (40309)
  a&=c (40310)
  r=a 1 (40311)
  (         t1 = t1 + 13) (40313)
  c= 13 (40313)
  a+=c (40315)
  r=a 1 (40316)
  (         t1 = M[t1]) (40318)
  b=a (40318)
  a=*b (40319)
  r=a 1 (40320)
  (         t2 = t2 + 1) (40322)
  a=r 2 (40322)
  a++ (40324)
  r=a 2 (40325)
  (         M[t2] = t1) (40327)
  c=a (40327)
  a=r 1 (40328)
  *c=a (40330)
  (                    2881:   new_code_lengths[12] = code_lengths[14]) (40331)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40331)
  a=0 (40331)
  a-- (40332)
  a>>= 1 (40333)
  c=a (40335)
  a=*d (40336)
  a&=c (40337)
  r=a 1 (40338)
  (         t1 = t1 + 14) (40340)
  c= 14 (40340)
  a+=c (40342)
  r=a 1 (40343)
  (         t1 = M[t1]) (40345)
  b=a (40345)
  a=*b (40346)
  r=a 1 (40347)
  (         t2 = t2 + 1) (40349)
  a=r 2 (40349)
  a++ (40351)
  r=a 2 (40352)
  (         M[t2] = t1) (40354)
  c=a (40354)
  a=r 1 (40355)
  *c=a (40357)
  (                    2882:   new_code_lengths[13] = code_lengths[15]) (40358)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40358)
  a=0 (40358)
  a-- (40359)
  a>>= 1 (40360)
  c=a (40362)
  a=*d (40363)
  a&=c (40364)
  r=a 1 (40365)
  (         t1 = t1 + 15) (40367)
  c= 15 (40367)
  a+=c (40369)
  r=a 1 (40370)
  (         t1 = M[t1]) (40372)
  b=a (40372)
  a=*b (40373)
  r=a 1 (40374)
  (         t2 = t2 + 1) (40376)
  a=r 2 (40376)
  a++ (40378)
  r=a 2 (40379)
  (         M[t2] = t1) (40381)
  c=a (40381)
  a=r 1 (40382)
  *c=a (40384)
  (                    2883:   new_code_lengths[14] = code_lengths[16]) (40385)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40385)
  a=0 (40385)
  a-- (40386)
  a>>= 1 (40387)
  c=a (40389)
  a=*d (40390)
  a&=c (40391)
  r=a 1 (40392)
  (         t1 = t1 + 16) (40394)
  c= 16 (40394)
  a+=c (40396)
  r=a 1 (40397)
  (         t1 = M[t1]) (40399)
  b=a (40399)
  a=*b (40400)
  r=a 1 (40401)
  (         t2 = t2 + 1) (40403)
  a=r 2 (40403)
  a++ (40405)
  r=a 2 (40406)
  (         M[t2] = t1) (40408)
  c=a (40408)
  a=r 1 (40409)
  *c=a (40411)
  (                    2884:   new_code_lengths[15] = code_lengths[17]) (40412)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40412)
  a=0 (40412)
  a-- (40413)
  a>>= 1 (40414)
  c=a (40416)
  a=*d (40417)
  a&=c (40418)
  r=a 1 (40419)
  (         t1 = t1 + 17) (40421)
  c= 17 (40421)
  a+=c (40423)
  r=a 1 (40424)
  (         t1 = M[t1]) (40426)
  b=a (40426)
  a=*b (40427)
  r=a 1 (40428)
  (         t2 = t2 + 1) (40430)
  a=r 2 (40430)
  a++ (40432)
  r=a 2 (40433)
  (         M[t2] = t1) (40435)
  c=a (40435)
  a=r 1 (40436)
  *c=a (40438)
  (                    2885:   new_code_lengths[16] = code_lengths[8]) (40439)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40439)
  a=0 (40439)
  a-- (40440)
  a>>= 1 (40441)
  c=a (40443)
  a=*d (40444)
  a&=c (40445)
  r=a 1 (40446)
  (         t1 = t1 + 8) (40448)
  c= 8 (40448)
  a+=c (40450)
  r=a 1 (40451)
  (         t1 = M[t1]) (40453)
  b=a (40453)
  a=*b (40454)
  r=a 1 (40455)
  (         t2 = t2 + 1) (40457)
  a=r 2 (40457)
  a++ (40459)
  r=a 2 (40460)
  (         M[t2] = t1) (40462)
  c=a (40462)
  a=r 1 (40463)
  *c=a (40465)
  (                    2886:   new_code_lengths[17] = code_lengths[6]) (40466)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40466)
  a=0 (40466)
  a-- (40467)
  a>>= 1 (40468)
  c=a (40470)
  a=*d (40471)
  a&=c (40472)
  r=a 1 (40473)
  (         t1 = t1 + 6) (40475)
  c= 6 (40475)
  a+=c (40477)
  r=a 1 (40478)
  (         t1 = M[t1]) (40480)
  b=a (40480)
  a=*b (40481)
  r=a 1 (40482)
  (         t2 = t2 + 1) (40484)
  a=r 2 (40484)
  a++ (40486)
  r=a 2 (40487)
  (         M[t2] = t1) (40489)
  c=a (40489)
  a=r 1 (40490)
  *c=a (40492)
  (                    2887:   free_pM〈code_lengths〉) (40493)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40493)
  a=0 (40493)
  a-- (40494)
  a>>= 1 (40495)
  c=a (40497)
  a=*d (40498)
  a&=c (40499)
  r=a 1 (40500)
  (         H[t0+10]〈〉 = t0) (40502)
  a=r 0 (40502)
  a+= 10 (40504)
  d=a (40506)
  a=r 0 (40507)
  *d=a (40509)
  (saved bsp, return id:) (40510)
  (         H[t0+11]〈〉 = 161) (40510)
  d++ (40510)
  *d= 161 (40511)
  (push arguments:) (40513)
  (         H[t0+12]〈〉 = t1) (40513)
  d++ (40513)
  a=r 1 (40514)
  *d=a (40516)
  (         t0 = t0 + 11) (40517)
  c= 11 (40517)
  a=r 0 (40519)
  a+=c (40521)
  r=a 0 (40522)
  (         goto addr_free_pM) (40524)
  lj 2406 (40524)
  (        :return_id_161:) (40527)
  (         t2 = t1) (40527)
  a=r 1 (40527)
  r=a 2 (40529)
  (                    2888:   code_lengths = new_code_lengths) (40531)
  (         H[t0+4]〈code_lengths〉 = H[t0+9]〈new_code_lengths〉) (40531)
  a=r 0 (40531)
  a+= 9 (40533)
  d=a (40535)
  c=*d (40536)
  a=r 0 (40537)
  a+= 4 (40539)
  d=a (40541)
  *d=c (40542)
  (                    2889:   symbols = alloc_pH〈18〉) (40543)
  (         H[t0+10]〈〉 = t0) (40543)
  a=r 0 (40543)
  a+= 10 (40545)
  d=a (40547)
  a=r 0 (40548)
  *d=a (40550)
  (saved bsp, return id:) (40551)
  (         H[t0+11]〈〉 = 162) (40551)
  d++ (40551)
  *d= 162 (40552)
  (push arguments:) (40554)
  (         H[t0+12]〈〉 = 18) (40554)
  d++ (40554)
  *d= 18 (40555)
  (         t0 = t0 + 11) (40557)
  c= 11 (40557)
  a+=c (40559)
  r=a 0 (40560)
  (         goto addr_alloc_pH) (40562)
  lj 1446 (40562)
  (        :return_id_162:) (40565)
  (         H[t0+10]〈symbols〉 = t1) (40565)
  a=r 0 (40565)
  a+= 10 (40567)
  d=a (40569)
  a=r 1 (40570)
  *d=a (40572)
  (                    2890:   i = 0) (40573)
  (         H[t0+5]〈i〉 = 0) (40573)
  a=r 0 (40573)
  a+= 5 (40575)
  d=a (40577)
  *d=0 (40578)
  (                    2891:   while i < 18:) (40579)
  (        :while_1625:) (40579)
  (         t1 = H[t0+5]〈i〉 < 18) (40579)
  c= 18 (40579)
  a=r 0 (40581)
  a+= 5 (40583)
  d=a (40585)
  a=*d (40586)
  a<c (40587)
  a=0 (40588)
  jf 1 (40589)
  a++ (40591)
  r=a 1 (40592)
  (         ifN t1 goto whileend_1627) (40594)
  a== 0 (40594)
  jf 3 (40596)
  lj 40629 (40598)
  (                    2892:     symbols[i] = i) (40601)
  (         t1 = H[t0+10]〈symbols〉 + H[t0+5]〈i〉) (40601)
  c=*d (40601)
  a=r 0 (40602)
  a+= 10 (40604)
  d=a (40606)
  a=*d (40607)
  a+=c (40608)
  r=a 1 (40609)
  (         H[t1]〈〉 = H[t0+5]〈i〉) (40611)
  a=r 0 (40611)
  a+= 5 (40613)
  d=a (40615)
  c=*d (40616)
  d=r 1 (40617)
  *d=c (40619)
  (                    2893:     i += 1) (40620)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (40620)
  a=r 0 (40620)
  a+= 5 (40622)
  d=a (40624)
  *d++ (40625)
  (         goto while_1625) (40626)
  lj 40579 (40626)
  (        :whileend_1627:) (40629)
  (                    2894:   prefix_code_code_lengths = codes_from_lengths_and_symbols〈code_lengths, symbols〉) (40629)
  (         H[t0+11]〈〉 = t0) (40629)
  a=r 0 (40629)
  a+= 11 (40631)
  d=a (40633)
  a=r 0 (40634)
  *d=a (40636)
  (saved bsp, return id:) (40637)
  (         H[t0+12]〈〉 = 163) (40637)
  d++ (40637)
  *d= 163 (40638)
  (push arguments:) (40640)
  (         H[t0+13]〈〉 = H[t0+4]〈code_lengths〉) (40640)
  a+= 4 (40640)
  d=a (40642)
  c=*d (40643)
  a=r 0 (40644)
  a+= 13 (40646)
  d=a (40648)
  *d=c (40649)
  (         H[t0+14]〈〉 = H[t0+10]〈symbols〉) (40650)
  a=r 0 (40650)
  a+= 10 (40652)
  d=a (40654)
  c=*d (40655)
  a=r 0 (40656)
  a+= 14 (40658)
  d=a (40660)
  *d=c (40661)
  (         t0 = t0 + 12) (40662)
  c= 12 (40662)
  a=r 0 (40664)
  a+=c (40666)
  r=a 0 (40667)
  (         goto codes_from_lengths_and_symbols) (40669)
  lj 7345 (40669)
  (        :return_id_163:) (40672)
  (         H[t0+11]〈prefix_code_code_lengths〉 = t1) (40672)
  a=r 0 (40672)
  a+= 11 (40674)
  d=a (40676)
  a=r 1 (40677)
  *d=a (40679)
  (                    2895:   free_pM〈code_lengths〉) (40680)
  (         t1 = H[t0+4]〈code_lengths〉 & 2147483647) (40680)
  a=0 (40680)
  a-- (40681)
  a>>= 1 (40682)
  c=a (40684)
  a=r 0 (40685)
  a+= 4 (40687)
  d=a (40689)
  a=*d (40690)
  a&=c (40691)
  r=a 1 (40692)
  (         H[t0+12]〈〉 = t0) (40694)
  a=r 0 (40694)
  a+= 12 (40696)
  d=a (40698)
  a=r 0 (40699)
  *d=a (40701)
  (saved bsp, return id:) (40702)
  (         H[t0+13]〈〉 = 164) (40702)
  d++ (40702)
  *d= 164 (40703)
  (push arguments:) (40705)
  (         H[t0+14]〈〉 = t1) (40705)
  d++ (40705)
  a=r 1 (40706)
  *d=a (40708)
  (         t0 = t0 + 13) (40709)
  c= 13 (40709)
  a=r 0 (40711)
  a+=c (40713)
  r=a 0 (40714)
  (         goto addr_free_pM) (40716)
  lj 2406 (40716)
  (        :return_id_164:) (40719)
  (         t2 = t1) (40719)
  a=r 1 (40719)
  r=a 2 (40721)
  (                    2896:   actual_code_lengths = alloc_pM〈alphabet_size〉) (40723)
  (         H[t0+12]〈〉 = t0) (40723)
  a=r 0 (40723)
  a+= 12 (40725)
  d=a (40727)
  a=r 0 (40728)
  *d=a (40730)
  (saved bsp, return id:) (40731)
  (         H[t0+13]〈〉 = 165) (40731)
  d++ (40731)
  *d= 165 (40732)
  (push arguments:) (40734)
  (         H[t0+14]〈〉 = H[t0+2]〈alphabet_size〉) (40734)
  a+= 2 (40734)
  d=a (40736)
  c=*d (40737)
  a=r 0 (40738)
  a+= 14 (40740)
  d=a (40742)
  *d=c (40743)
  (         t0 = t0 + 13) (40744)
  c= 13 (40744)
  a=r 0 (40746)
  a+=c (40748)
  r=a 0 (40749)
  (         goto addr_alloc_pM) (40751)
  lj 323 (40751)
  (        :return_id_165:) (40754)
  (         t1 = t1 | 2147483648) (40754)
  a= 1 (40754)
  a<<= 31 (40756)
  c=a (40758)
  a=r 1 (40759)
  a|=c (40761)
  r=a 1 (40762)
  (         H[t0+12]〈actual_code_lengths〉 = t1) (40764)
  a=r 0 (40764)
  a+= 12 (40766)
  d=a (40768)
  a=r 1 (40769)
  *d=a (40771)
  (                    2897:   i = 0) (40772)
  (         H[t0+5]〈i〉 = 0) (40772)
  a=r 0 (40772)
  a+= 5 (40774)
  d=a (40776)
  *d=0 (40777)
  (                    2898:   while i < alphabet_size:) (40778)
  (        :while_1629:) (40778)
  (         t1 = H[t0+5]〈i〉 < H[t0+2]〈alphabet_size〉) (40778)
  a=r 0 (40778)
  a+= 2 (40780)
  d=a (40782)
  c=*d (40783)
  a=r 0 (40784)
  a+= 5 (40786)
  d=a (40788)
  a=*d (40789)
  a<c (40790)
  a=0 (40791)
  jf 1 (40792)
  a++ (40794)
  r=a 1 (40795)
  (         ifN t1 goto whileend_1631) (40797)
  a== 0 (40797)
  jf 3 (40799)
  lj 40835 (40801)
  (                    2899:     actual_code_lengths[i] = 0) (40804)
  (         t1 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (40804)
  a=0 (40804)
  a-- (40805)
  a>>= 1 (40806)
  c=a (40808)
  a=r 0 (40809)
  a+= 12 (40811)
  d=a (40813)
  a=*d (40814)
  a&=c (40815)
  r=a 1 (40816)
  (         t1 = t1 + H[t0+5]〈i〉) (40818)
  a=r 0 (40818)
  a+= 5 (40820)
  d=a (40822)
  c=*d (40823)
  a=r 1 (40824)
  a+=c (40826)
  r=a 1 (40827)
  (         M[t1] = 0) (40829)
  c=a (40829)
  *c=0 (40830)
  (                    2900:     i += 1) (40831)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (40831)
  *d++ (40831)
  (         goto while_1629) (40832)
  lj 40778 (40832)
  (        :whileend_1631:) (40835)
  (                    2901:   sum_ = 0) (40835)
  (         H[t0+6]〈sum_〉 = 0) (40835)
  a=r 0 (40835)
  a+= 6 (40837)
  d=a (40839)
  *d=0 (40840)
  (                    2902:   last_symbol = NONE) (40841)
  (         H[t0+13]〈last_symbol〉 = 4294967295) (40841)
  a=r 0 (40841)
  a+= 13 (40843)
  d=a (40845)
  *d=0 (40846)
  *d-- (40847)
  (                    2903:   last_repeat = NONE) (40848)
  (         H[t0+14]〈last_repeat〉 = 4294967295) (40848)
  d++ (40848)
  *d=0 (40849)
  *d-- (40850)
  (                    2904:   last_non_zero_codelength = 8) (40851)
  (         H[t0+15]〈last_non_zero_codelength〉 = 8) (40851)
  d++ (40851)
  *d= 8 (40852)
  (                    2905:   i = 0) (40854)
  (         H[t0+5]〈i〉 = 0) (40854)
  a=r 0 (40854)
  a+= 5 (40856)
  d=a (40858)
  *d=0 (40859)
  (                    2906:   while i < alphabet_size:) (40860)
  (        :while_1633:) (40860)
  (         t1 = H[t0+5]〈i〉 < H[t0+2]〈alphabet_size〉) (40860)
  a=r 0 (40860)
  a+= 2 (40862)
  d=a (40864)
  c=*d (40865)
  a=r 0 (40866)
  a+= 5 (40868)
  d=a (40870)
  a=*d (40871)
  a<c (40872)
  a=0 (40873)
  jf 1 (40874)
  a++ (40876)
  r=a 1 (40877)
  (         ifN t1 goto whileend_1635) (40879)
  a== 0 (40879)
  jf 3 (40881)
  lj 42022 (40883)
  (                    2907:     code_length_code = lookup_symbol〈prefix_code_code_lengths〉) (40886)
  (         H[t0+16]〈〉 = t0) (40886)
  a=r 0 (40886)
  a+= 16 (40888)
  d=a (40890)
  a=r 0 (40891)
  *d=a (40893)
  (saved bsp, return id:) (40894)
  (         H[t0+17]〈〉 = 166) (40894)
  d++ (40894)
  *d= 166 (40895)
  (push arguments:) (40897)
  (         H[t0+18]〈〉 = H[t0+11]〈prefix_code_code_lengths〉) (40897)
  a+= 11 (40897)
  d=a (40899)
  c=*d (40900)
  a=r 0 (40901)
  a+= 18 (40903)
  d=a (40905)
  *d=c (40906)
  (         t0 = t0 + 17) (40907)
  c= 17 (40907)
  a=r 0 (40909)
  a+=c (40911)
  r=a 0 (40912)
  (         goto lookup_symbol) (40914)
  lj 6923 (40914)
  (        :return_id_166:) (40917)
  (         H[t0+16]〈code_length_code〉 = t1) (40917)
  a=r 0 (40917)
  a+= 16 (40919)
  d=a (40921)
  a=r 1 (40922)
  *d=a (40924)
  (                    2908:     if code_length_code == NONE:) (40925)
  (         t1 = H[t0+16]〈code_length_code〉 == 4294967295) (40925)
  c=0 (40925)
  c-- (40926)
  a=*d (40927)
  a==c (40928)
  a=0 (40929)
  jf 1 (40930)
  a++ (40932)
  r=a 1 (40933)
  (         ifN t1 goto else_1638) (40935)
  a== 0 (40935)
  jf 3 (40937)
  lj 40946 (40939)
  (                    2909:       error〈〉) (40942)
  (         error) (40942)
  error (40942)
  (         goto endif_1639) (40943)
  lj 40946 (40943)
  (        :else_1638:) (40946)
  (        :endif_1639:) (40946)
  (                    2910:     if code_length_code >= 0 and code_length_code <= 15:) (40946)
  (         t2 = H[t0+16]〈code_length_code〉 >= 0) (40946)
  c=0 (40946)
  a=r 0 (40947)
  a+= 16 (40949)
  d=a (40951)
  a=*d (40952)
  a==c (40953)
  jt 4 (40954)
  a>c (40956)
  a=0 (40957)
  jf 2 (40958)
  a= 1 (40960)
  r=a 2 (40962)
  (         t3 = H[t0+16]〈code_length_code〉 <= 15) (40964)
  c= 15 (40964)
  a=*d (40966)
  a==c (40967)
  jt 4 (40968)
  a<c (40970)
  a=0 (40971)
  jf 2 (40972)
  a= 1 (40974)
  r=a 3 (40976)
  (         t1 = t2 and t3) (40978)
  c=a (40978)
  a=r 2 (40979)
  a== 0 (40981)
  jt 1 (40983)
  a=c (40985)
  r=a 1 (40986)
  (         ifN t1 goto else_1642) (40988)
  a== 0 (40988)
  jf 3 (40990)
  lj 41152 (40992)
  (                    2911:       actual_code_lengths[i] = code_length_code) (40995)
  (         t1 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (40995)
  a=0 (40995)
  a-- (40996)
  a>>= 1 (40997)
  c=a (40999)
  a=r 0 (41000)
  a+= 12 (41002)
  d=a (41004)
  a=*d (41005)
  a&=c (41006)
  r=a 1 (41007)
  (         t1 = t1 + H[t0+5]〈i〉) (41009)
  a=r 0 (41009)
  a+= 5 (41011)
  d=a (41013)
  c=*d (41014)
  a=r 1 (41015)
  a+=c (41017)
  r=a 1 (41018)
  (         M[t1] = H[t0+16]〈code_length_code〉) (41020)
  c=a (41020)
  a=r 0 (41021)
  a+= 16 (41023)
  d=a (41025)
  *c=*d (41026)
  (                    2912:       i += 1) (41027)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (41027)
  a=r 0 (41027)
  a+= 5 (41029)
  d=a (41031)
  *d++ (41032)
  (                    2913:       last_symbol = code_length_code) (41033)
  (         H[t0+13]〈last_symbol〉 = H[t0+16]〈code_length_code〉) (41033)
  a=r 0 (41033)
  a+= 16 (41035)
  d=a (41037)
  c=*d (41038)
  a=r 0 (41039)
  a+= 13 (41041)
  d=a (41043)
  *d=c (41044)
  (                    2914:       last_repeat = NONE) (41045)
  (         H[t0+14]〈last_repeat〉 = 4294967295) (41045)
  d++ (41045)
  *d=0 (41046)
  *d-- (41047)
  (                    2915:       if code_length_code > 0:) (41048)
  (         t1 = H[t0+16]〈code_length_code〉 > 0) (41048)
  c=0 (41048)
  a=r 0 (41049)
  a+= 16 (41051)
  d=a (41053)
  a=*d (41054)
  a>c (41055)
  a=0 (41056)
  jf 1 (41057)
  a++ (41059)
  r=a 1 (41060)
  (         ifN t1 goto else_1645) (41062)
  a== 0 (41062)
  jf 3 (41064)
  lj 41149 (41066)
  (                    2916:         last_non_zero_codelength = code_length_code) (41069)
  (         H[t0+15]〈last_non_zero_codelength〉 = H[t0+16]〈code_length_code〉) (41069)
  c=*d (41069)
  d-- (41070)
  *d=c (41071)
  (                    2917:         sum_ += 32768 >> code_length_code) (41072)
  (         t1 = 32768 >> H[t0+16]〈code_length_code〉) (41072)
  d++ (41072)
  c=*d (41073)
  a= 128 (41074)
  a<<= 8 (41076)
  a>>=c (41078)
  r=a 1 (41079)
  (         H[t0+6]〈sum_〉 = H[t0+6]〈sum_〉 + t1) (41081)
  c=a (41081)
  a=r 0 (41082)
  a+= 6 (41084)
  d=a (41086)
  a=*d (41087)
  a+=c (41088)
  c=a (41089)
  *d=c (41090)
  (                    2918:         if sum_ == 32768:) (41091)
  (         t1 = H[t0+6]〈sum_〉 == 32768) (41091)
  a= 128 (41091)
  a<<= 8 (41093)
  c=a (41095)
  a=*d (41096)
  a==c (41097)
  a=0 (41098)
  jf 1 (41099)
  a++ (41101)
  r=a 1 (41102)
  (         ifN t1 goto else_1648) (41104)
  a== 0 (41104)
  jf 3 (41106)
  lj 41117 (41108)
  (                    2919:           break) (41111)
  (         goto whileend_1635) (41111)
  lj 42022 (41111)
  (         goto endif_1649) (41114)
  lj 41146 (41114)
  (        :else_1648:) (41117)
  (                    2920:         elif sum_ > 32768:) (41117)
  (         t1 = H[t0+6]〈sum_〉 > 32768) (41117)
  a= 128 (41117)
  a<<= 8 (41119)
  c=a (41121)
  a=r 0 (41122)
  a+= 6 (41124)
  d=a (41126)
  a=*d (41127)
  a>c (41128)
  a=0 (41129)
  jf 1 (41130)
  a++ (41132)
  r=a 1 (41133)
  (         ifN t1 goto else_1651) (41135)
  a== 0 (41135)
  jf 3 (41137)
  lj 41146 (41139)
  (                    2921:           error〈〉  # CodeLengthsChecksum) (41142)
  (         error) (41142)
  error (41142)
  (         goto endif_1652) (41143)
  lj 41146 (41143)
  (        :else_1651:) (41146)
  (        :endif_1652:) (41146)
  (        :endif_1649:) (41146)
  (         goto endif_1646) (41146)
  lj 41149 (41146)
  (        :else_1645:) (41149)
  (        :endif_1646:) (41149)
  (         goto endif_1643) (41149)
  lj 42019 (41149)
  (        :else_1642:) (41152)
  (                    2922:     elif code_length_code == 16:) (41152)
  (         t1 = H[t0+16]〈code_length_code〉 == 16) (41152)
  c= 16 (41152)
  a=r 0 (41154)
  a+= 16 (41156)
  d=a (41158)
  a=*d (41159)
  a==c (41160)
  a=0 (41161)
  jf 1 (41162)
  a++ (41164)
  r=a 1 (41165)
  (         ifN t1 goto else_1654) (41167)
  a== 0 (41167)
  jf 3 (41169)
  lj 41755 (41171)
  (                    2923:       if read_u32_from_n_bits〈2〉:) (41174)
  (         H[t0+17]〈〉 = t0) (41174)
  d++ (41174)
  a=r 0 (41175)
  *d=a (41177)
  (saved bsp, return id:) (41178)
  (         H[t0+18]〈〉 = 167) (41178)
  d++ (41178)
  *d= 167 (41179)
  (push arguments:) (41181)
  (         H[t0+19]〈〉 = 2) (41181)
  d++ (41181)
  *d= 2 (41182)
  (         t0 = t0 + 18) (41184)
  c= 18 (41184)
  a+=c (41186)
  r=a 0 (41187)
  (         goto read_u32_from_n_bits) (41189)
  lj 4857 (41189)
  (        :return_id_167:) (41192)
  (         ifN t1 goto else_1656) (41192)
  a=r 1 (41192)
  a== 0 (41194)
  jf 3 (41196)
  lj 41205 (41198)
  (                    2924:         error〈〉  # UnexpectedEOF) (41201)
  (         error) (41201)
  error (41201)
  (         goto endif_1657) (41202)
  lj 41205 (41202)
  (        :else_1656:) (41205)
  (        :endif_1657:) (41205)
  (                    2925:       extra_bits = read_u32_from_n_bits_result) (41205)
  (         H[t0+17]〈extra_bits〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (41205)
  a=r 252 (41205)
  a+= 7 (41207)
  d=a (41209)
  c=*d (41210)
  a=r 0 (41211)
  a+= 17 (41213)
  d=a (41215)
  *d=c (41216)
  (                    2926:       if last_symbol == 16 and last_repeat != NONE:) (41217)
  (         t2 = H[t0+13]〈last_symbol〉 == 16) (41217)
  c= 16 (41217)
  a=r 0 (41219)
  a+= 13 (41221)
  d=a (41223)
  a=*d (41224)
  a==c (41225)
  a=0 (41226)
  jf 1 (41227)
  a++ (41229)
  r=a 2 (41230)
  (         t3 = H[t0+14]〈last_repeat〉 != 4294967295) (41232)
  c=0 (41232)
  c-- (41233)
  d++ (41234)
  a=*d (41235)
  a==c (41236)
  a=0 (41237)
  jt 1 (41238)
  a++ (41240)
  r=a 3 (41241)
  (         t1 = t2 and t3) (41243)
  c=a (41243)
  a=r 2 (41244)
  a== 0 (41246)
  jt 1 (41248)
  a=c (41250)
  r=a 1 (41251)
  (         ifN t1 goto else_1660) (41253)
  a== 0 (41253)
  jf 3 (41255)
  lj 41520 (41257)
  (                    2927:         new_repeat = 4 * 〈last_repeat - 2〉 + extra_bits + 3) (41260)
  (         t4 = H[t0+14]〈last_repeat〉 - 2) (41260)
  c= 2 (41260)
  a=*d (41262)
  a-=c (41263)
  r=a 4 (41264)
  (         t3 = 4 * t4) (41266)
  c=a (41266)
  a= 4 (41267)
  a*=c (41269)
  r=a 3 (41270)
  (         t2 = t3 + H[t0+17]〈extra_bits〉) (41272)
  a=r 0 (41272)
  a+= 17 (41274)
  d=a (41276)
  c=*d (41277)
  a=r 3 (41278)
  a+=c (41280)
  r=a 2 (41281)
  (         t1 = t2 + 3) (41283)
  c= 3 (41283)
  a+=c (41285)
  r=a 1 (41286)
  (         H[t0+18]〈new_repeat〉 = t1) (41288)
  d++ (41288)
  *d=a (41289)
  (                    2928:         if i + new_repeat - last_repeat > alphabet_size:) (41290)
  (         t3 = H[t0+5]〈i〉 + H[t0+18]〈new_repeat〉) (41290)
  c=*d (41290)
  a=r 0 (41291)
  a+= 5 (41293)
  d=a (41295)
  a=*d (41296)
  a+=c (41297)
  r=a 3 (41298)
  (         t2 = t3 - H[t0+14]〈last_repeat〉) (41300)
  a=r 0 (41300)
  a+= 14 (41302)
  d=a (41304)
  c=*d (41305)
  a=r 3 (41306)
  a-=c (41308)
  r=a 2 (41309)
  (         t1 = t2 > H[t0+2]〈alphabet_size〉) (41311)
  a=r 0 (41311)
  a+= 2 (41313)
  d=a (41315)
  c=*d (41316)
  a=r 2 (41317)
  a>c (41319)
  a=0 (41320)
  jf 1 (41321)
  a++ (41323)
  r=a 1 (41324)
  (         ifN t1 goto else_1663) (41326)
  a== 0 (41326)
  jf 3 (41328)
  lj 41337 (41330)
  (                    2929:           error〈〉  # ParseErrorComplexPrefixCodeLengths) (41333)
  (         error) (41333)
  error (41333)
  (         goto endif_1664) (41334)
  lj 41337 (41334)
  (        :else_1663:) (41337)
  (        :endif_1664:) (41337)
  (                    2930:         j = 0) (41337)
  (         H[t0+19]〈j〉 = 0) (41337)
  a=r 0 (41337)
  a+= 19 (41339)
  d=a (41341)
  *d=0 (41342)
  (                    2931:         while j < new_repeat - last_repeat:) (41343)
  (        :while_1665:) (41343)
  (         t2 = H[t0+18]〈new_repeat〉 - H[t0+14]〈last_repeat〉) (41343)
  a=r 0 (41343)
  a+= 14 (41345)
  d=a (41347)
  c=*d (41348)
  a=r 0 (41349)
  a+= 18 (41351)
  d=a (41353)
  a=*d (41354)
  a-=c (41355)
  r=a 2 (41356)
  (         t1 = H[t0+19]〈j〉 < t2) (41358)
  c=a (41358)
  d++ (41359)
  a=*d (41360)
  a<c (41361)
  a=0 (41362)
  jf 1 (41363)
  a++ (41365)
  r=a 1 (41366)
  (         ifN t1 goto whileend_1667) (41368)
  a== 0 (41368)
  jf 3 (41370)
  lj 41445 (41372)
  (                    2932:           actual_code_lengths[i] = last_non_zero_codelength) (41375)
  (         t1 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (41375)
  a=0 (41375)
  a-- (41376)
  a>>= 1 (41377)
  c=a (41379)
  a=r 0 (41380)
  a+= 12 (41382)
  d=a (41384)
  a=*d (41385)
  a&=c (41386)
  r=a 1 (41387)
  (         t1 = t1 + H[t0+5]〈i〉) (41389)
  a=r 0 (41389)
  a+= 5 (41391)
  d=a (41393)
  c=*d (41394)
  a=r 1 (41395)
  a+=c (41397)
  r=a 1 (41398)
  (         M[t1] = H[t0+15]〈last_non_zero_codelength〉) (41400)
  c=a (41400)
  a=r 0 (41401)
  a+= 15 (41403)
  d=a (41405)
  *c=*d (41406)
  (                    2933:           i += 1) (41407)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (41407)
  a=r 0 (41407)
  a+= 5 (41409)
  d=a (41411)
  *d++ (41412)
  (                    2934:           sum_ += 32768 >> last_non_zero_codelength) (41413)
  (         t1 = 32768 >> H[t0+15]〈last_non_zero_codelength〉) (41413)
  a=r 0 (41413)
  a+= 15 (41415)
  d=a (41417)
  c=*d (41418)
  a= 128 (41419)
  a<<= 8 (41421)
  a>>=c (41423)
  r=a 1 (41424)
  (         H[t0+6]〈sum_〉 = H[t0+6]〈sum_〉 + t1) (41426)
  c=a (41426)
  a=r 0 (41427)
  a+= 6 (41429)
  d=a (41431)
  a=*d (41432)
  a+=c (41433)
  c=a (41434)
  *d=c (41435)
  (                    2935:           j += 1) (41436)
  (         H[t0+19]〈j〉 = H[t0+19]〈j〉 + 1) (41436)
  a=r 0 (41436)
  a+= 19 (41438)
  d=a (41440)
  *d++ (41441)
  (         goto while_1665) (41442)
  lj 41343 (41442)
  (        :whileend_1667:) (41445)
  (                    2936:         if sum_ == 32768:) (41445)
  (         t1 = H[t0+6]〈sum_〉 == 32768) (41445)
  a= 128 (41445)
  a<<= 8 (41447)
  c=a (41449)
  a=r 0 (41450)
  a+= 6 (41452)
  d=a (41454)
  a=*d (41455)
  a==c (41456)
  a=0 (41457)
  jf 1 (41458)
  a++ (41460)
  r=a 1 (41461)
  (         ifN t1 goto else_1670) (41463)
  a== 0 (41463)
  jf 3 (41465)
  lj 41476 (41467)
  (                    2937:           break) (41470)
  (         goto whileend_1635) (41470)
  lj 42022 (41470)
  (         goto endif_1671) (41473)
  lj 41505 (41473)
  (        :else_1670:) (41476)
  (                    2938:         elif sum_ > 32768:) (41476)
  (         t1 = H[t0+6]〈sum_〉 > 32768) (41476)
  a= 128 (41476)
  a<<= 8 (41478)
  c=a (41480)
  a=r 0 (41481)
  a+= 6 (41483)
  d=a (41485)
  a=*d (41486)
  a>c (41487)
  a=0 (41488)
  jf 1 (41489)
  a++ (41491)
  r=a 1 (41492)
  (         ifN t1 goto else_1673) (41494)
  a== 0 (41494)
  jf 3 (41496)
  lj 41505 (41498)
  (                    2939:           error〈〉  # CodeLengthsChecksum) (41501)
  (         error) (41501)
  error (41501)
  (         goto endif_1674) (41502)
  lj 41505 (41502)
  (        :else_1673:) (41505)
  (        :endif_1674:) (41505)
  (        :endif_1671:) (41505)
  (                    2940:         last_repeat = new_repeat) (41505)
  (         H[t0+14]〈last_repeat〉 = H[t0+18]〈new_repeat〉) (41505)
  a=r 0 (41505)
  a+= 18 (41507)
  d=a (41509)
  c=*d (41510)
  a=r 0 (41511)
  a+= 14 (41513)
  d=a (41515)
  *d=c (41516)
  (         goto endif_1661) (41517)
  lj 41745 (41517)
  (        :else_1660:) (41520)
  (                    2942:         repeat = 3 + extra_bits) (41520)
  (         t1 = 3 + H[t0+17]〈extra_bits〉) (41520)
  a=r 0 (41520)
  a+= 17 (41522)
  d=a (41524)
  c=*d (41525)
  a= 3 (41526)
  a+=c (41528)
  r=a 1 (41529)
  (         H[t0+20]〈repeat〉 = t1) (41531)
  a=r 0 (41531)
  a+= 20 (41533)
  d=a (41535)
  a=r 1 (41536)
  *d=a (41538)
  (                    2943:         if i + repeat > alphabet_size:) (41539)
  (         t2 = H[t0+5]〈i〉 + H[t0+20]〈repeat〉) (41539)
  c=*d (41539)
  a=r 0 (41540)
  a+= 5 (41542)
  d=a (41544)
  a=*d (41545)
  a+=c (41546)
  r=a 2 (41547)
  (         t1 = t2 > H[t0+2]〈alphabet_size〉) (41549)
  a=r 0 (41549)
  a+= 2 (41551)
  d=a (41553)
  c=*d (41554)
  a=r 2 (41555)
  a>c (41557)
  a=0 (41558)
  jf 1 (41559)
  a++ (41561)
  r=a 1 (41562)
  (         ifN t1 goto else_1676) (41564)
  a== 0 (41564)
  jf 3 (41566)
  lj 41575 (41568)
  (                    2944:           error〈〉  # ParseErrorComplexPrefixCodeLengths) (41571)
  (         error) (41571)
  error (41571)
  (         goto endif_1677) (41572)
  lj 41575 (41572)
  (        :else_1676:) (41575)
  (        :endif_1677:) (41575)
  (                    2945:         j = 0) (41575)
  (         H[t0+19]〈j〉 = 0) (41575)
  a=r 0 (41575)
  a+= 19 (41577)
  d=a (41579)
  *d=0 (41580)
  (                    2946:         while j < repeat:) (41581)
  (        :while_1678:) (41581)
  (         t1 = H[t0+19]〈j〉 < H[t0+20]〈repeat〉) (41581)
  a=r 0 (41581)
  a+= 20 (41583)
  d=a (41585)
  c=*d (41586)
  d-- (41587)
  a=*d (41588)
  a<c (41589)
  a=0 (41590)
  jf 1 (41591)
  a++ (41593)
  r=a 1 (41594)
  (         ifN t1 goto whileend_1680) (41596)
  a== 0 (41596)
  jf 3 (41598)
  lj 41673 (41600)
  (                    2947:           actual_code_lengths[i] = last_non_zero_codelength) (41603)
  (         t1 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (41603)
  a=0 (41603)
  a-- (41604)
  a>>= 1 (41605)
  c=a (41607)
  a=r 0 (41608)
  a+= 12 (41610)
  d=a (41612)
  a=*d (41613)
  a&=c (41614)
  r=a 1 (41615)
  (         t1 = t1 + H[t0+5]〈i〉) (41617)
  a=r 0 (41617)
  a+= 5 (41619)
  d=a (41621)
  c=*d (41622)
  a=r 1 (41623)
  a+=c (41625)
  r=a 1 (41626)
  (         M[t1] = H[t0+15]〈last_non_zero_codelength〉) (41628)
  c=a (41628)
  a=r 0 (41629)
  a+= 15 (41631)
  d=a (41633)
  *c=*d (41634)
  (                    2948:           i += 1) (41635)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (41635)
  a=r 0 (41635)
  a+= 5 (41637)
  d=a (41639)
  *d++ (41640)
  (                    2949:           sum_ += 32768 >> last_non_zero_codelength) (41641)
  (         t1 = 32768 >> H[t0+15]〈last_non_zero_codelength〉) (41641)
  a=r 0 (41641)
  a+= 15 (41643)
  d=a (41645)
  c=*d (41646)
  a= 128 (41647)
  a<<= 8 (41649)
  a>>=c (41651)
  r=a 1 (41652)
  (         H[t0+6]〈sum_〉 = H[t0+6]〈sum_〉 + t1) (41654)
  c=a (41654)
  a=r 0 (41655)
  a+= 6 (41657)
  d=a (41659)
  a=*d (41660)
  a+=c (41661)
  c=a (41662)
  *d=c (41663)
  (                    2950:           j += 1) (41664)
  (         H[t0+19]〈j〉 = H[t0+19]〈j〉 + 1) (41664)
  a=r 0 (41664)
  a+= 19 (41666)
  d=a (41668)
  *d++ (41669)
  (         goto while_1678) (41670)
  lj 41581 (41670)
  (        :whileend_1680:) (41673)
  (                    2951:         if sum_ == 32768:) (41673)
  (         t1 = H[t0+6]〈sum_〉 == 32768) (41673)
  a= 128 (41673)
  a<<= 8 (41675)
  c=a (41677)
  a=r 0 (41678)
  a+= 6 (41680)
  d=a (41682)
  a=*d (41683)
  a==c (41684)
  a=0 (41685)
  jf 1 (41686)
  a++ (41688)
  r=a 1 (41689)
  (         ifN t1 goto else_1683) (41691)
  a== 0 (41691)
  jf 3 (41693)
  lj 41704 (41695)
  (                    2952:           break) (41698)
  (         goto whileend_1635) (41698)
  lj 42022 (41698)
  (         goto endif_1684) (41701)
  lj 41733 (41701)
  (        :else_1683:) (41704)
  (                    2953:         elif sum_ > 32768:) (41704)
  (         t1 = H[t0+6]〈sum_〉 > 32768) (41704)
  a= 128 (41704)
  a<<= 8 (41706)
  c=a (41708)
  a=r 0 (41709)
  a+= 6 (41711)
  d=a (41713)
  a=*d (41714)
  a>c (41715)
  a=0 (41716)
  jf 1 (41717)
  a++ (41719)
  r=a 1 (41720)
  (         ifN t1 goto else_1686) (41722)
  a== 0 (41722)
  jf 3 (41724)
  lj 41733 (41726)
  (                    2954:           error〈〉  # CodeLengthsChecksum) (41729)
  (         error) (41729)
  error (41729)
  (         goto endif_1687) (41730)
  lj 41733 (41730)
  (        :else_1686:) (41733)
  (        :endif_1687:) (41733)
  (        :endif_1684:) (41733)
  (                    2955:         last_repeat = repeat) (41733)
  (         H[t0+14]〈last_repeat〉 = H[t0+20]〈repeat〉) (41733)
  a=r 0 (41733)
  a+= 20 (41735)
  d=a (41737)
  c=*d (41738)
  a=r 0 (41739)
  a+= 14 (41741)
  d=a (41743)
  *d=c (41744)
  (        :endif_1661:) (41745)
  (                    2956:       last_symbol = 16) (41745)
  (         H[t0+13]〈last_symbol〉 = 16) (41745)
  a=r 0 (41745)
  a+= 13 (41747)
  d=a (41749)
  *d= 16 (41750)
  (         goto endif_1655) (41752)
  lj 42019 (41752)
  (        :else_1654:) (41755)
  (                    2957:     elif code_length_code == 17:) (41755)
  (         t1 = H[t0+16]〈code_length_code〉 == 17) (41755)
  c= 17 (41755)
  a=r 0 (41757)
  a+= 16 (41759)
  d=a (41761)
  a=*d (41762)
  a==c (41763)
  a=0 (41764)
  jf 1 (41765)
  a++ (41767)
  r=a 1 (41768)
  (         ifN t1 goto else_1689) (41770)
  a== 0 (41770)
  jf 3 (41772)
  lj 42018 (41774)
  (                    2958:       if read_u32_from_n_bits〈3〉:) (41777)
  (         H[t0+21]〈〉 = t0) (41777)
  a=r 0 (41777)
  a+= 21 (41779)
  d=a (41781)
  a=r 0 (41782)
  *d=a (41784)
  (saved bsp, return id:) (41785)
  (         H[t0+22]〈〉 = 168) (41785)
  d++ (41785)
  *d= 168 (41786)
  (push arguments:) (41788)
  (         H[t0+23]〈〉 = 3) (41788)
  d++ (41788)
  *d= 3 (41789)
  (         t0 = t0 + 22) (41791)
  c= 22 (41791)
  a+=c (41793)
  r=a 0 (41794)
  (         goto read_u32_from_n_bits) (41796)
  lj 4857 (41796)
  (        :return_id_168:) (41799)
  (         ifN t1 goto else_1691) (41799)
  a=r 1 (41799)
  a== 0 (41801)
  jf 3 (41803)
  lj 41812 (41805)
  (                    2959:         error〈〉  # UnexpectedEOF) (41808)
  (         error) (41808)
  error (41808)
  (         goto endif_1692) (41809)
  lj 41812 (41809)
  (        :else_1691:) (41812)
  (        :endif_1692:) (41812)
  (                    2960:       extra_bits = read_u32_from_n_bits_result) (41812)
  (         H[t0+17]〈extra_bits〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (41812)
  a=r 252 (41812)
  a+= 7 (41814)
  d=a (41816)
  c=*d (41817)
  a=r 0 (41818)
  a+= 17 (41820)
  d=a (41822)
  *d=c (41823)
  (                    2961:       if last_symbol == 17 and last_repeat != NONE:) (41824)
  (         t2 = H[t0+13]〈last_symbol〉 == 17) (41824)
  c= 17 (41824)
  a=r 0 (41826)
  a+= 13 (41828)
  d=a (41830)
  a=*d (41831)
  a==c (41832)
  a=0 (41833)
  jf 1 (41834)
  a++ (41836)
  r=a 2 (41837)
  (         t3 = H[t0+14]〈last_repeat〉 != 4294967295) (41839)
  c=0 (41839)
  c-- (41840)
  d++ (41841)
  a=*d (41842)
  a==c (41843)
  a=0 (41844)
  jt 1 (41845)
  a++ (41847)
  r=a 3 (41848)
  (         t1 = t2 and t3) (41850)
  c=a (41850)
  a=r 2 (41851)
  a== 0 (41853)
  jt 1 (41855)
  a=c (41857)
  r=a 1 (41858)
  (         ifN t1 goto else_1695) (41860)
  a== 0 (41860)
  jf 3 (41862)
  lj 41937 (41864)
  (                    2962:         new_repeat = 〈8 * 〈last_repeat - 2〉〉 + extra_bits + 3) (41867)
  (         t4 = H[t0+14]〈last_repeat〉 - 2) (41867)
  c= 2 (41867)
  a=*d (41869)
  a-=c (41870)
  r=a 4 (41871)
  (         t3 = 8 * t4) (41873)
  c=a (41873)
  a= 8 (41874)
  a*=c (41876)
  r=a 3 (41877)
  (         t2 = t3 + H[t0+17]〈extra_bits〉) (41879)
  a=r 0 (41879)
  a+= 17 (41881)
  d=a (41883)
  c=*d (41884)
  a=r 3 (41885)
  a+=c (41887)
  r=a 2 (41888)
  (         t1 = t2 + 3) (41890)
  c= 3 (41890)
  a+=c (41892)
  r=a 1 (41893)
  (         H[t0+18]〈new_repeat〉 = t1) (41895)
  d++ (41895)
  *d=a (41896)
  (                    2963:         i += new_repeat - last_repeat) (41897)
  (         t1 = H[t0+18]〈new_repeat〉 - H[t0+14]〈last_repeat〉) (41897)
  a=r 0 (41897)
  a+= 14 (41899)
  d=a (41901)
  c=*d (41902)
  a=r 0 (41903)
  a+= 18 (41905)
  d=a (41907)
  a=*d (41908)
  a-=c (41909)
  r=a 1 (41910)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + t1) (41912)
  c=a (41912)
  a=r 0 (41913)
  a+= 5 (41915)
  d=a (41917)
  a=*d (41918)
  a+=c (41919)
  c=a (41920)
  *d=c (41921)
  (                    2964:         last_repeat = new_repeat) (41922)
  (         H[t0+14]〈last_repeat〉 = H[t0+18]〈new_repeat〉) (41922)
  a=r 0 (41922)
  a+= 18 (41924)
  d=a (41926)
  c=*d (41927)
  a=r 0 (41928)
  a+= 14 (41930)
  d=a (41932)
  *d=c (41933)
  (         goto endif_1696) (41934)
  lj 41978 (41934)
  (        :else_1695:) (41937)
  (                    2966:         repeat = 3 + extra_bits) (41937)
  (         t1 = 3 + H[t0+17]〈extra_bits〉) (41937)
  a=r 0 (41937)
  a+= 17 (41939)
  d=a (41941)
  c=*d (41942)
  a= 3 (41943)
  a+=c (41945)
  r=a 1 (41946)
  (         H[t0+20]〈repeat〉 = t1) (41948)
  a=r 0 (41948)
  a+= 20 (41950)
  d=a (41952)
  a=r 1 (41953)
  *d=a (41955)
  (                    2967:         i += repeat) (41956)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + H[t0+20]〈repeat〉) (41956)
  c=*d (41956)
  a=r 0 (41957)
  a+= 5 (41959)
  d=a (41961)
  a=*d (41962)
  a+=c (41963)
  c=a (41964)
  *d=c (41965)
  (                    2968:         last_repeat = repeat) (41966)
  (         H[t0+14]〈last_repeat〉 = H[t0+20]〈repeat〉) (41966)
  a=r 0 (41966)
  a+= 20 (41968)
  d=a (41970)
  c=*d (41971)
  a=r 0 (41972)
  a+= 14 (41974)
  d=a (41976)
  *d=c (41977)
  (        :endif_1696:) (41978)
  (                    2969:       if i > alphabet_size:) (41978)
  (         t1 = H[t0+5]〈i〉 > H[t0+2]〈alphabet_size〉) (41978)
  a=r 0 (41978)
  a+= 2 (41980)
  d=a (41982)
  c=*d (41983)
  a=r 0 (41984)
  a+= 5 (41986)
  d=a (41988)
  a=*d (41989)
  a>c (41990)
  a=0 (41991)
  jf 1 (41992)
  a++ (41994)
  r=a 1 (41995)
  (         ifN t1 goto else_1698) (41997)
  a== 0 (41997)
  jf 3 (41999)
  lj 42008 (42001)
  (                    2970:         error〈〉  # ParseErrorComplexPrefixCodeLengths) (42004)
  (         error) (42004)
  error (42004)
  (         goto endif_1699) (42005)
  lj 42008 (42005)
  (        :else_1698:) (42008)
  (        :endif_1699:) (42008)
  (                    2971:       last_symbol = 17) (42008)
  (         H[t0+13]〈last_symbol〉 = 17) (42008)
  a=r 0 (42008)
  a+= 13 (42010)
  d=a (42012)
  *d= 17 (42013)
  (         goto endif_1690) (42015)
  lj 42019 (42015)
  (        :else_1689:) (42018)
  (                    2973:       error〈〉   # unreachable OR ParseErrorComplexPrefixCodeLengths) (42018)
  (         error) (42018)
  error (42018)
  (        :endif_1690:) (42019)
  (        :endif_1655:) (42019)
  (        :endif_1643:) (42019)
  (         goto while_1633) (42019)
  lj 40860 (42019)
  (        :whileend_1635:) (42022)
  (                    2974:   tmp_ = 0) (42022)
  (         H[t0+21]〈tmp_〉 = 0) (42022)
  a=r 0 (42022)
  a+= 21 (42024)
  d=a (42026)
  *d=0 (42027)
  (                    2975:   i = 0) (42028)
  (         H[t0+5]〈i〉 = 0) (42028)
  a=r 0 (42028)
  a+= 5 (42030)
  d=a (42032)
  *d=0 (42033)
  (                    2976:   while i < alphabet_size:) (42034)
  (        :while_1700:) (42034)
  (         t1 = H[t0+5]〈i〉 < H[t0+2]〈alphabet_size〉) (42034)
  a=r 0 (42034)
  a+= 2 (42036)
  d=a (42038)
  c=*d (42039)
  a=r 0 (42040)
  a+= 5 (42042)
  d=a (42044)
  a=*d (42045)
  a<c (42046)
  a=0 (42047)
  jf 1 (42048)
  a++ (42050)
  r=a 1 (42051)
  (         ifN t1 goto whileend_1702) (42053)
  a== 0 (42053)
  jf 3 (42055)
  lj 42122 (42057)
  (                    2977:     if actual_code_lengths[i] > 0:) (42060)
  (         t2 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (42060)
  a=0 (42060)
  a-- (42061)
  a>>= 1 (42062)
  c=a (42064)
  a=r 0 (42065)
  a+= 12 (42067)
  d=a (42069)
  a=*d (42070)
  a&=c (42071)
  r=a 2 (42072)
  (         t2 = t2 + H[t0+5]〈i〉) (42074)
  a=r 0 (42074)
  a+= 5 (42076)
  d=a (42078)
  c=*d (42079)
  a=r 2 (42080)
  a+=c (42082)
  r=a 2 (42083)
  (         t2 = M[t2]) (42085)
  b=a (42085)
  a=*b (42086)
  r=a 2 (42087)
  (         t1 = t2 > 0) (42089)
  c=0 (42089)
  a>c (42090)
  a=0 (42091)
  jf 1 (42092)
  a++ (42094)
  r=a 1 (42095)
  (         ifN t1 goto else_1705) (42097)
  a== 0 (42097)
  jf 3 (42099)
  lj 42113 (42101)
  (                    2978:       tmp_ += 1) (42104)
  (         H[t0+21]〈tmp_〉 = H[t0+21]〈tmp_〉 + 1) (42104)
  a=r 0 (42104)
  a+= 21 (42106)
  d=a (42108)
  *d++ (42109)
  (         goto endif_1706) (42110)
  lj 42113 (42110)
  (        :else_1705:) (42113)
  (        :endif_1706:) (42113)
  (                    2979:     i += 1) (42113)
  (         H[t0+5]〈i〉 = H[t0+5]〈i〉 + 1) (42113)
  a=r 0 (42113)
  a+= 5 (42115)
  d=a (42117)
  *d++ (42118)
  (         goto while_1700) (42119)
  lj 42034 (42119)
  (        :whileend_1702:) (42122)
  (                    2980:   if tmp_ < 2:) (42122)
  (         t1 = H[t0+21]〈tmp_〉 < 2) (42122)
  c= 2 (42122)
  a=r 0 (42124)
  a+= 21 (42126)
  d=a (42128)
  a=*d (42129)
  a<c (42130)
  a=0 (42131)
  jf 1 (42132)
  a++ (42134)
  r=a 1 (42135)
  (         ifN t1 goto else_1708) (42137)
  a== 0 (42137)
  jf 3 (42139)
  lj 42148 (42141)
  (                    2981:     error〈〉  # LessThanTwoNonZeroCodeLengths) (42144)
  (         error) (42144)
  error (42144)
  (         goto endif_1709) (42145)
  lj 42148 (42145)
  (        :else_1708:) (42148)
  (        :endif_1709:) (42148)
  (                    2982:   ret = codes_from_lengths〈actual_code_lengths〉) (42148)
  (         H[t0+22]〈〉 = t0) (42148)
  a=r 0 (42148)
  a+= 22 (42150)
  d=a (42152)
  a=r 0 (42153)
  *d=a (42155)
  (saved bsp, return id:) (42156)
  (         H[t0+23]〈〉 = 169) (42156)
  d++ (42156)
  *d= 169 (42157)
  (push arguments:) (42159)
  (         H[t0+24]〈〉 = H[t0+12]〈actual_code_lengths〉) (42159)
  a+= 12 (42159)
  d=a (42161)
  c=*d (42162)
  a=r 0 (42163)
  a+= 24 (42165)
  d=a (42167)
  *d=c (42168)
  (         t0 = t0 + 23) (42169)
  c= 23 (42169)
  a=r 0 (42171)
  a+=c (42173)
  r=a 0 (42174)
  (         goto codes_from_lengths) (42176)
  lj 8635 (42176)
  (        :return_id_169:) (42179)
  (         H[t0+22]〈ret〉 = t1) (42179)
  a=r 0 (42179)
  a+= 22 (42181)
  d=a (42183)
  a=r 1 (42184)
  *d=a (42186)
  (                    2983:   free_pM〈actual_code_lengths〉) (42187)
  (         t1 = H[t0+12]〈actual_code_lengths〉 & 2147483647) (42187)
  a=0 (42187)
  a-- (42188)
  a>>= 1 (42189)
  c=a (42191)
  a=r 0 (42192)
  a+= 12 (42194)
  d=a (42196)
  a=*d (42197)
  a&=c (42198)
  r=a 1 (42199)
  (         H[t0+23]〈〉 = t0) (42201)
  a=r 0 (42201)
  a+= 23 (42203)
  d=a (42205)
  a=r 0 (42206)
  *d=a (42208)
  (saved bsp, return id:) (42209)
  (         H[t0+24]〈〉 = 170) (42209)
  d++ (42209)
  *d= 170 (42210)
  (push arguments:) (42212)
  (         H[t0+25]〈〉 = t1) (42212)
  d++ (42212)
  a=r 1 (42213)
  *d=a (42215)
  (         t0 = t0 + 24) (42216)
  c= 24 (42216)
  a=r 0 (42218)
  a+=c (42220)
  r=a 0 (42221)
  (         goto addr_free_pM) (42223)
  lj 2406 (42223)
  (        :return_id_170:) (42226)
  (         t2 = t1) (42226)
  a=r 1 (42226)
  r=a 2 (42228)
  (                    2984:   free_pH〈array_pH〈prefix_code_code_lengths[0]〉〉) (42230)
  (         t1 = H[t0+11]〈prefix_code_code_lengths〉 >> 31) (42230)
  c= 31 (42230)
  a=r 0 (42232)
  a+= 11 (42234)
  d=a (42236)
  a=*d (42237)
  a>>=c (42238)
  r=a 1 (42239)
  (         if t1 goto isM_1710) (42241)
  a== 0 (42241)
  jt 3 (42243)
  lj 42260 (42245)
  (         t1 = H[t0+11]〈prefix_code_code_lengths〉 + 0) (42248)
  c=0 (42248)
  a=*d (42249)
  a+=c (42250)
  r=a 1 (42251)
  (         t1 = H[t1]〈〉) (42253)
  d=a (42253)
  a=*d (42254)
  r=a 1 (42255)
  (         goto MorHdone_1711) (42257)
  lj 42278 (42257)
  (        :isM_1710:) (42260)
  (         t1 = H[t0+11]〈prefix_code_code_lengths〉 & 2147483647) (42260)
  a=0 (42260)
  a-- (42261)
  a>>= 1 (42262)
  c=a (42264)
  a=r 0 (42265)
  a+= 11 (42267)
  d=a (42269)
  a=*d (42270)
  a&=c (42271)
  r=a 1 (42272)
  (         t1 = t1 + 0) (42274)
  (         t1 = M[t1]) (42274)
  b=a (42274)
  a=*b (42275)
  r=a 1 (42276)
  (        :MorHdone_1711:) (42278)
  (         H[t0+23]〈〉 = t0) (42278)
  a=r 0 (42278)
  a+= 23 (42280)
  d=a (42282)
  a=r 0 (42283)
  *d=a (42285)
  (saved bsp, return id:) (42286)
  (         H[t0+24]〈〉 = 171) (42286)
  d++ (42286)
  *d= 171 (42287)
  (push arguments:) (42289)
  (         H[t0+25]〈〉 = t1) (42289)
  d++ (42289)
  a=r 1 (42290)
  *d=a (42292)
  (         t0 = t0 + 24) (42293)
  c= 24 (42293)
  a=r 0 (42295)
  a+=c (42297)
  r=a 0 (42298)
  (         goto addr_free_pH) (42300)
  lj 2913 (42300)
  (        :return_id_171:) (42303)
  (         t2 = t1) (42303)
  a=r 1 (42303)
  r=a 2 (42305)
  (                    2985:   free_pH〈prefix_code_code_lengths〉) (42307)
  (         H[t0+23]〈〉 = t0) (42307)
  a=r 0 (42307)
  a+= 23 (42309)
  d=a (42311)
  a=r 0 (42312)
  *d=a (42314)
  (saved bsp, return id:) (42315)
  (         H[t0+24]〈〉 = 172) (42315)
  d++ (42315)
  *d= 172 (42316)
  (push arguments:) (42318)
  (         H[t0+25]〈〉 = H[t0+11]〈prefix_code_code_lengths〉) (42318)
  a+= 11 (42318)
  d=a (42320)
  c=*d (42321)
  a=r 0 (42322)
  a+= 25 (42324)
  d=a (42326)
  *d=c (42327)
  (         t0 = t0 + 24) (42328)
  c= 24 (42328)
  a=r 0 (42330)
  a+=c (42332)
  r=a 0 (42333)
  (         goto addr_free_pH) (42335)
  lj 2913 (42335)
  (        :return_id_172:) (42338)
  (                    2986:   return ret) (42338)
  (         t1 = H[t0+22]〈ret〉) (42338)
  a=r 0 (42338)
  a+= 22 (42340)
  d=a (42342)
  a=*d (42343)
  r=a 1 (42344)
  (         t2 = H[t0]〈〉) (42346)
  d=r 0 (42346)
  a=*d (42348)
  r=a 2 (42349)
  (         t0 = t0 - 1) (42351)
  a=r 0 (42351)
  a-- (42353)
  r=a 0 (42354)
  (         t0 = H[t0]〈〉) (42356)
  d=a (42356)
  a=*d (42357)
  r=a 0 (42358)
  (         goto find_label_ret_id) (42360)
  lj 62666 (42360)
  (insert return as it might not be done by the function:) (42363)
  (         t2 = H[t0]〈〉) (42363)
  d=a (42363)
  a=*d (42364)
  r=a 2 (42365)
  (         t0 = t0 - 1) (42367)
  a=r 0 (42367)
  a-- (42369)
  r=a 0 (42370)
  (         t0 = H[t0]〈〉) (42372)
  d=a (42372)
  a=*d (42373)
  r=a 0 (42374)
  (         goto find_label_ret_id) (42376)
  lj 62666 (42376)
  (         MarkTempVarEnd) (42379)
  (        :parse_complex_prefix_code_end~:) (42379)
  (                    2988: def parse_prefix_code〈alphabet_size〉:) (42379)
  (         goto parse_prefix_code_end~) (42379)
  lj 42626 (42379)
  (        :parse_prefix_code:) (42382)
  (         MarkTempVarStart) (42382)
  (Arg alphabet_size at t0 + 1) (42382)
  (                    2989:   prefix_code_kind = parse_prefix_code_kind〈〉) (42382)
  (         H[t0+2]〈〉 = t0) (42382)
  a=r 0 (42382)
  a+= 2 (42384)
  d=a (42386)
  a=r 0 (42387)
  *d=a (42389)
  (saved bsp, return id:) (42390)
  (         H[t0+3]〈〉 = 173) (42390)
  d++ (42390)
  *d= 173 (42391)
  (push arguments:) (42393)
  (         t0 = t0 + 3) (42393)
  c= 3 (42393)
  a+=c (42395)
  r=a 0 (42396)
  (         goto parse_prefix_code_kind) (42398)
  lj 37611 (42398)
  (        :return_id_173:) (42401)
  (         H[t0+2]〈prefix_code_kind〉 = t1) (42401)
  a=r 0 (42401)
  a+= 2 (42403)
  d=a (42405)
  a=r 1 (42406)
  *d=a (42408)
  (                    2990:   if prefix_code_kind == NONE:) (42409)
  (         t1 = H[t0+2]〈prefix_code_kind〉 == 4294967295) (42409)
  c=0 (42409)
  c-- (42410)
  a=*d (42411)
  a==c (42412)
  a=0 (42413)
  jf 1 (42414)
  a++ (42416)
  r=a 1 (42417)
  (         ifN t1 goto else_1713) (42419)
  a== 0 (42419)
  jf 3 (42421)
  lj 42430 (42423)
  (                    2991:     error〈〉) (42426)
  (         error) (42426)
  error (42426)
  (         goto endif_1714) (42427)
  lj 42430 (42427)
  (        :else_1713:) (42430)
  (        :endif_1714:) (42430)
  (                    2992:   if prefix_code_kind == PrefixCodeKind_Complex:) (42430)
  (         t1 = H[t0+2]〈prefix_code_kind〉 == H[t252+25]〈PrefixCodeKind_Complex〉) (42430)
  a=r 252 (42430)
  a+= 25 (42432)
  d=a (42434)
  c=*d (42435)
  a=r 0 (42436)
  a+= 2 (42438)
  d=a (42440)
  a=*d (42441)
  a==c (42442)
  a=0 (42443)
  jf 1 (42444)
  a++ (42446)
  r=a 1 (42447)
  (         ifN t1 goto else_1716) (42449)
  a== 0 (42449)
  jf 3 (42451)
  lj 42516 (42453)
  (                    2993:     return parse_complex_prefix_code〈PrefixCodeKind_Complex_data, alphabet_size〉) (42456)
  (         H[t0+3]〈〉 = t0) (42456)
  d++ (42456)
  a=r 0 (42457)
  *d=a (42459)
  (saved bsp, return id:) (42460)
  (         H[t0+4]〈〉 = 174) (42460)
  d++ (42460)
  *d= 174 (42461)
  (push arguments:) (42463)
  (         H[t0+5]〈〉 = H[t252+26]〈PrefixCodeKind_Complex_data〉) (42463)
  a=r 252 (42463)
  a+= 26 (42465)
  d=a (42467)
  c=*d (42468)
  a=r 0 (42469)
  a+= 5 (42471)
  d=a (42473)
  *d=c (42474)
  (         H[t0+6]〈〉 = H[t0+1]〈alphabet_size〉) (42475)
  a=r 0 (42475)
  a++ (42477)
  d=a (42478)
  c=*d (42479)
  a=r 0 (42480)
  a+= 6 (42482)
  d=a (42484)
  *d=c (42485)
  (         t0 = t0 + 4) (42486)
  c= 4 (42486)
  a=r 0 (42488)
  a+=c (42490)
  r=a 0 (42491)
  (         goto parse_complex_prefix_code) (42493)
  lj 39562 (42493)
  (        :return_id_174:) (42496)
  (         t1 = t1) (42496)
  (         t2 = H[t0]〈〉) (42496)
  d=r 0 (42496)
  a=*d (42498)
  r=a 2 (42499)
  (         t0 = t0 - 1) (42501)
  a=r 0 (42501)
  a-- (42503)
  r=a 0 (42504)
  (         t0 = H[t0]〈〉) (42506)
  d=a (42506)
  a=*d (42507)
  r=a 0 (42508)
  (         goto find_label_ret_id) (42510)
  lj 62666 (42510)
  (         goto endif_1717) (42513)
  lj 42609 (42513)
  (        :else_1716:) (42516)
  (                    2994:   elif prefix_code_kind == PrefixCodeKind_Simple:) (42516)
  (         t1 = H[t0+2]〈prefix_code_kind〉 == H[t252+24]〈PrefixCodeKind_Simple〉) (42516)
  a=r 252 (42516)
  a+= 24 (42518)
  d=a (42520)
  c=*d (42521)
  a=r 0 (42522)
  a+= 2 (42524)
  d=a (42526)
  a=*d (42527)
  a==c (42528)
  a=0 (42529)
  jf 1 (42530)
  a++ (42532)
  r=a 1 (42533)
  (         ifN t1 goto else_1719) (42535)
  a== 0 (42535)
  jf 3 (42537)
  lj 42588 (42539)
  (                    2995:     return parse_simple_prefix_code〈alphabet_size〉) (42542)
  (         H[t0+3]〈〉 = t0) (42542)
  d++ (42542)
  a=r 0 (42543)
  *d=a (42545)
  (saved bsp, return id:) (42546)
  (         H[t0+4]〈〉 = 175) (42546)
  d++ (42546)
  *d= 175 (42547)
  (push arguments:) (42549)
  (         H[t0+5]〈〉 = H[t0+1]〈alphabet_size〉) (42549)
  a++ (42549)
  d=a (42550)
  c=*d (42551)
  a=r 0 (42552)
  a+= 5 (42554)
  d=a (42556)
  *d=c (42557)
  (         t0 = t0 + 4) (42558)
  c= 4 (42558)
  a=r 0 (42560)
  a+=c (42562)
  r=a 0 (42563)
  (         goto parse_simple_prefix_code) (42565)
  lj 37747 (42565)
  (        :return_id_175:) (42568)
  (         t1 = t1) (42568)
  (         t2 = H[t0]〈〉) (42568)
  d=r 0 (42568)
  a=*d (42570)
  r=a 2 (42571)
  (         t0 = t0 - 1) (42573)
  a=r 0 (42573)
  a-- (42575)
  r=a 0 (42576)
  (         t0 = H[t0]〈〉) (42578)
  d=a (42578)
  a=*d (42579)
  r=a 0 (42580)
  (         goto find_label_ret_id) (42582)
  lj 62666 (42582)
  (         goto endif_1720) (42585)
  lj 42609 (42585)
  (        :else_1719:) (42588)
  (                    2997:     return NONE # unreachable) (42588)
  (         t1 = 4294967295) (42588)
  a=0 (42588)
  a-- (42589)
  r=a 1 (42590)
  (         t2 = H[t0]〈〉) (42592)
  d=r 0 (42592)
  a=*d (42594)
  r=a 2 (42595)
  (         t0 = t0 - 1) (42597)
  a=r 0 (42597)
  a-- (42599)
  r=a 0 (42600)
  (         t0 = H[t0]〈〉) (42602)
  d=a (42602)
  a=*d (42603)
  r=a 0 (42604)
  (         goto find_label_ret_id) (42606)
  lj 62666 (42606)
  (        :endif_1720:) (42609)
  (        :endif_1717:) (42609)
  (insert return as it might not be done by the function:) (42609)
  (         t2 = H[t0]〈〉) (42609)
  d=r 0 (42609)
  a=*d (42611)
  r=a 2 (42612)
  (         t0 = t0 - 1) (42614)
  a=r 0 (42614)
  a-- (42616)
  r=a 0 (42617)
  (         t0 = H[t0]〈〉) (42619)
  d=a (42619)
  a=*d (42620)
  r=a 0 (42621)
  (         goto find_label_ret_id) (42623)
  lj 62666 (42623)
  (         MarkTempVarEnd) (42626)
  (        :parse_prefix_code_end~:) (42626)
  (                    2999: def parse_prefix_code_block_types_literals〈〉:) (42626)
  (         goto parse_prefix_code_block_types_literals_end~) (42626)
  lj 42751 (42626)
  (        :parse_prefix_code_block_types_literals:) (42629)
  (         MarkTempVarStart) (42629)
  (                    3000:   global PrefixCodeBlockTypesLiterals_data) (42629)
  (Global PrefixCodeBlockTypesLiterals_data via H[t252+52]) (42629)
  (                    3001:   alphabet_size = meta_block_header_n_bltypes_l + 2) (42629)
  (         t1 = H[t252+131]〈meta_block_header_n_bltypes_l〉 + 2) (42629)
  c= 2 (42629)
  a=r 252 (42631)
  a+= 131 (42633)
  d=a (42635)
  a=*d (42636)
  a+=c (42637)
  r=a 1 (42638)
  (         H[t0+1]〈alphabet_size〉 = t1) (42640)
  a=r 0 (42640)
  a++ (42642)
  d=a (42643)
  a=r 1 (42644)
  *d=a (42646)
  (                    3002:   tmp_ = parse_prefix_code〈alphabet_size〉) (42647)
  (         H[t0+2]〈〉 = t0) (42647)
  d++ (42647)
  a=r 0 (42648)
  *d=a (42650)
  (saved bsp, return id:) (42651)
  (         H[t0+3]〈〉 = 176) (42651)
  d++ (42651)
  *d= 176 (42652)
  (push arguments:) (42654)
  (         H[t0+4]〈〉 = H[t0+1]〈alphabet_size〉) (42654)
  a++ (42654)
  d=a (42655)
  c=*d (42656)
  a=r 0 (42657)
  a+= 4 (42659)
  d=a (42661)
  *d=c (42662)
  (         t0 = t0 + 3) (42663)
  c= 3 (42663)
  a=r 0 (42665)
  a+=c (42667)
  r=a 0 (42668)
  (         goto parse_prefix_code) (42670)
  lj 42382 (42670)
  (        :return_id_176:) (42673)
  (         H[t0+2]〈tmp_〉 = t1) (42673)
  a=r 0 (42673)
  a+= 2 (42675)
  d=a (42677)
  a=r 1 (42678)
  *d=a (42680)
  (                    3003:   if tmp_ == NONE:) (42681)
  (         t1 = H[t0+2]〈tmp_〉 == 4294967295) (42681)
  c=0 (42681)
  c-- (42682)
  a=*d (42683)
  a==c (42684)
  a=0 (42685)
  jf 1 (42686)
  a++ (42688)
  r=a 1 (42689)
  (         ifN t1 goto else_1722) (42691)
  a== 0 (42691)
  jf 3 (42693)
  lj 42702 (42695)
  (                    3004:     error〈〉) (42698)
  (         error) (42698)
  error (42698)
  (         goto endif_1723) (42699)
  lj 42702 (42699)
  (        :else_1722:) (42702)
  (        :endif_1723:) (42702)
  (                    3005:   PrefixCodeBlockTypesLiterals_data = tmp_) (42702)
  (         H[t252+52]〈PrefixCodeBlockTypesLiterals_data〉 = H[t0+2]〈tmp_〉) (42702)
  a=r 0 (42702)
  a+= 2 (42704)
  d=a (42706)
  c=*d (42707)
  a=r 252 (42708)
  a+= 52 (42710)
  d=a (42712)
  *d=c (42713)
  (                    3006:   return PrefixCodeBlockTypesLiterals) (42714)
  (         t1 = H[t252+51]〈PrefixCodeBlockTypesLiterals〉) (42714)
  d-- (42714)
  a=*d (42715)
  r=a 1 (42716)
  (         t2 = H[t0]〈〉) (42718)
  d=r 0 (42718)
  a=*d (42720)
  r=a 2 (42721)
  (         t0 = t0 - 1) (42723)
  a=r 0 (42723)
  a-- (42725)
  r=a 0 (42726)
  (         t0 = H[t0]〈〉) (42728)
  d=a (42728)
  a=*d (42729)
  r=a 0 (42730)
  (         goto find_label_ret_id) (42732)
  lj 62666 (42732)
  (insert return as it might not be done by the function:) (42735)
  (         t2 = H[t0]〈〉) (42735)
  d=a (42735)
  a=*d (42736)
  r=a 2 (42737)
  (         t0 = t0 - 1) (42739)
  a=r 0 (42739)
  a-- (42741)
  r=a 0 (42742)
  (         t0 = H[t0]〈〉) (42744)
  d=a (42744)
  a=*d (42745)
  r=a 0 (42746)
  (         goto find_label_ret_id) (42748)
  lj 62666 (42748)
  (         MarkTempVarEnd) (42751)
  (        :parse_prefix_code_block_types_literals_end~:) (42751)
  (                    3008: def parse_prefix_code_block_counts_literals〈〉:) (42751)
  (         goto parse_prefix_code_block_counts_literals_end~) (42751)
  lj 42851 (42751)
  (        :parse_prefix_code_block_counts_literals:) (42754)
  (         MarkTempVarStart) (42754)
  (                    3009:   global PrefixCodeBlockCountsLiterals_data) (42754)
  (Global PrefixCodeBlockCountsLiterals_data via H[t252+54]) (42754)
  (                    3010:   tmp_ = parse_prefix_code〈26〉) (42754)
  (         H[t0+1]〈〉 = t0) (42754)
  a=r 0 (42754)
  a++ (42756)
  d=a (42757)
  a=r 0 (42758)
  *d=a (42760)
  (saved bsp, return id:) (42761)
  (         H[t0+2]〈〉 = 177) (42761)
  d++ (42761)
  *d= 177 (42762)
  (push arguments:) (42764)
  (         H[t0+3]〈〉 = 26) (42764)
  d++ (42764)
  *d= 26 (42765)
  (         t0 = t0 + 2) (42767)
  c= 2 (42767)
  a+=c (42769)
  r=a 0 (42770)
  (         goto parse_prefix_code) (42772)
  lj 42382 (42772)
  (        :return_id_177:) (42775)
  (         H[t0+1]〈tmp_〉 = t1) (42775)
  a=r 0 (42775)
  a++ (42777)
  d=a (42778)
  a=r 1 (42779)
  *d=a (42781)
  (                    3011:   if tmp_ == NONE:) (42782)
  (         t1 = H[t0+1]〈tmp_〉 == 4294967295) (42782)
  c=0 (42782)
  c-- (42783)
  a=*d (42784)
  a==c (42785)
  a=0 (42786)
  jf 1 (42787)
  a++ (42789)
  r=a 1 (42790)
  (         ifN t1 goto else_1725) (42792)
  a== 0 (42792)
  jf 3 (42794)
  lj 42803 (42796)
  (                    3012:     error〈〉) (42799)
  (         error) (42799)
  error (42799)
  (         goto endif_1726) (42800)
  lj 42803 (42800)
  (        :else_1725:) (42803)
  (        :endif_1726:) (42803)
  (                    3013:   PrefixCodeBlockCountsLiterals_data = tmp_) (42803)
  (         H[t252+54]〈PrefixCodeBlockCountsLiterals_data〉 = H[t0+1]〈tmp_〉) (42803)
  a=r 0 (42803)
  a++ (42805)
  d=a (42806)
  c=*d (42807)
  a=r 252 (42808)
  a+= 54 (42810)
  d=a (42812)
  *d=c (42813)
  (                    3014:   return PrefixCodeBlockCountsLiterals) (42814)
  (         t1 = H[t252+53]〈PrefixCodeBlockCountsLiterals〉) (42814)
  d-- (42814)
  a=*d (42815)
  r=a 1 (42816)
  (         t2 = H[t0]〈〉) (42818)
  d=r 0 (42818)
  a=*d (42820)
  r=a 2 (42821)
  (         t0 = t0 - 1) (42823)
  a=r 0 (42823)
  a-- (42825)
  r=a 0 (42826)
  (         t0 = H[t0]〈〉) (42828)
  d=a (42828)
  a=*d (42829)
  r=a 0 (42830)
  (         goto find_label_ret_id) (42832)
  lj 62666 (42832)
  (insert return as it might not be done by the function:) (42835)
  (         t2 = H[t0]〈〉) (42835)
  d=a (42835)
  a=*d (42836)
  r=a 2 (42837)
  (         t0 = t0 - 1) (42839)
  a=r 0 (42839)
  a-- (42841)
  r=a 0 (42842)
  (         t0 = H[t0]〈〉) (42844)
  d=a (42844)
  a=*d (42845)
  r=a 0 (42846)
  (         goto find_label_ret_id) (42848)
  lj 62666 (42848)
  (         MarkTempVarEnd) (42851)
  (        :parse_prefix_code_block_counts_literals_end~:) (42851)
  (                    3016: def parse_prefix_code_block_types_insert_and_copy_lengths〈〉:) (42851)
  (         goto parse_prefix_code_block_types_insert_and_copy_lengths_end~) (42851)
  lj 42976 (42851)
  (        :parse_prefix_code_block_types_insert_and_copy_lengths:) (42854)
  (         MarkTempVarStart) (42854)
  (                    3017:   global PrefixCodeBlockTypesInsertAndCopyLengths_data) (42854)
  (Global PrefixCodeBlockTypesInsertAndCopyLengths_data via H[t252+60]) (42854)
  (                    3018:   alphabet_size = meta_block_header_n_bltypes_i + 2) (42854)
  (         t1 = H[t252+132]〈meta_block_header_n_bltypes_i〉 + 2) (42854)
  c= 2 (42854)
  a=r 252 (42856)
  a+= 132 (42858)
  d=a (42860)
  a=*d (42861)
  a+=c (42862)
  r=a 1 (42863)
  (         H[t0+1]〈alphabet_size〉 = t1) (42865)
  a=r 0 (42865)
  a++ (42867)
  d=a (42868)
  a=r 1 (42869)
  *d=a (42871)
  (                    3019:   tmp_ = parse_prefix_code〈alphabet_size〉) (42872)
  (         H[t0+2]〈〉 = t0) (42872)
  d++ (42872)
  a=r 0 (42873)
  *d=a (42875)
  (saved bsp, return id:) (42876)
  (         H[t0+3]〈〉 = 178) (42876)
  d++ (42876)
  *d= 178 (42877)
  (push arguments:) (42879)
  (         H[t0+4]〈〉 = H[t0+1]〈alphabet_size〉) (42879)
  a++ (42879)
  d=a (42880)
  c=*d (42881)
  a=r 0 (42882)
  a+= 4 (42884)
  d=a (42886)
  *d=c (42887)
  (         t0 = t0 + 3) (42888)
  c= 3 (42888)
  a=r 0 (42890)
  a+=c (42892)
  r=a 0 (42893)
  (         goto parse_prefix_code) (42895)
  lj 42382 (42895)
  (        :return_id_178:) (42898)
  (         H[t0+2]〈tmp_〉 = t1) (42898)
  a=r 0 (42898)
  a+= 2 (42900)
  d=a (42902)
  a=r 1 (42903)
  *d=a (42905)
  (                    3020:   if tmp_ == NONE:) (42906)
  (         t1 = H[t0+2]〈tmp_〉 == 4294967295) (42906)
  c=0 (42906)
  c-- (42907)
  a=*d (42908)
  a==c (42909)
  a=0 (42910)
  jf 1 (42911)
  a++ (42913)
  r=a 1 (42914)
  (         ifN t1 goto else_1728) (42916)
  a== 0 (42916)
  jf 3 (42918)
  lj 42927 (42920)
  (                    3021:     error〈〉) (42923)
  (         error) (42923)
  error (42923)
  (         goto endif_1729) (42924)
  lj 42927 (42924)
  (        :else_1728:) (42927)
  (        :endif_1729:) (42927)
  (                    3022:   PrefixCodeBlockTypesInsertAndCopyLengths_data = tmp_) (42927)
  (         H[t252+60]〈PrefixCodeBlockTypesInsertAndCopyLengths_data〉 = H[t0+2]〈tmp_〉) (42927)
  a=r 0 (42927)
  a+= 2 (42929)
  d=a (42931)
  c=*d (42932)
  a=r 252 (42933)
  a+= 60 (42935)
  d=a (42937)
  *d=c (42938)
  (                    3023:   return PrefixCodeBlockTypesInsertAndCopyLengths) (42939)
  (         t1 = H[t252+59]〈PrefixCodeBlockTypesInsertAndCopyLengths〉) (42939)
  d-- (42939)
  a=*d (42940)
  r=a 1 (42941)
  (         t2 = H[t0]〈〉) (42943)
  d=r 0 (42943)
  a=*d (42945)
  r=a 2 (42946)
  (         t0 = t0 - 1) (42948)
  a=r 0 (42948)
  a-- (42950)
  r=a 0 (42951)
  (         t0 = H[t0]〈〉) (42953)
  d=a (42953)
  a=*d (42954)
  r=a 0 (42955)
  (         goto find_label_ret_id) (42957)
  lj 62666 (42957)
  (insert return as it might not be done by the function:) (42960)
  (         t2 = H[t0]〈〉) (42960)
  d=a (42960)
  a=*d (42961)
  r=a 2 (42962)
  (         t0 = t0 - 1) (42964)
  a=r 0 (42964)
  a-- (42966)
  r=a 0 (42967)
  (         t0 = H[t0]〈〉) (42969)
  d=a (42969)
  a=*d (42970)
  r=a 0 (42971)
  (         goto find_label_ret_id) (42973)
  lj 62666 (42973)
  (         MarkTempVarEnd) (42976)
  (        :parse_prefix_code_block_types_insert_and_copy_lengths_end~:) (42976)
  (                    3025: def parse_prefix_code_block_counts_insert_and_copy_lengths〈〉:) (42976)
  (         goto parse_prefix_code_block_counts_insert_and_copy_lengths_end~) (42976)
  lj 43076 (42976)
  (        :parse_prefix_code_block_counts_insert_and_copy_lengths:) (42979)
  (         MarkTempVarStart) (42979)
  (                    3026:   global PrefixCodeBlockCountsInsertAndCopyLengths_data) (42979)
  (Global PrefixCodeBlockCountsInsertAndCopyLengths_data via H[t252+62]) (42979)
  (                    3027:   tmp_ = parse_prefix_code〈26〉) (42979)
  (         H[t0+1]〈〉 = t0) (42979)
  a=r 0 (42979)
  a++ (42981)
  d=a (42982)
  a=r 0 (42983)
  *d=a (42985)
  (saved bsp, return id:) (42986)
  (         H[t0+2]〈〉 = 179) (42986)
  d++ (42986)
  *d= 179 (42987)
  (push arguments:) (42989)
  (         H[t0+3]〈〉 = 26) (42989)
  d++ (42989)
  *d= 26 (42990)
  (         t0 = t0 + 2) (42992)
  c= 2 (42992)
  a+=c (42994)
  r=a 0 (42995)
  (         goto parse_prefix_code) (42997)
  lj 42382 (42997)
  (        :return_id_179:) (43000)
  (         H[t0+1]〈tmp_〉 = t1) (43000)
  a=r 0 (43000)
  a++ (43002)
  d=a (43003)
  a=r 1 (43004)
  *d=a (43006)
  (                    3028:   if tmp_ == NONE:) (43007)
  (         t1 = H[t0+1]〈tmp_〉 == 4294967295) (43007)
  c=0 (43007)
  c-- (43008)
  a=*d (43009)
  a==c (43010)
  a=0 (43011)
  jf 1 (43012)
  a++ (43014)
  r=a 1 (43015)
  (         ifN t1 goto else_1731) (43017)
  a== 0 (43017)
  jf 3 (43019)
  lj 43028 (43021)
  (                    3029:     error〈〉) (43024)
  (         error) (43024)
  error (43024)
  (         goto endif_1732) (43025)
  lj 43028 (43025)
  (        :else_1731:) (43028)
  (        :endif_1732:) (43028)
  (                    3030:   PrefixCodeBlockCountsInsertAndCopyLengths_data = tmp_) (43028)
  (         H[t252+62]〈PrefixCodeBlockCountsInsertAndCopyLengths_data〉 = H[t0+1]〈tmp_〉) (43028)
  a=r 0 (43028)
  a++ (43030)
  d=a (43031)
  c=*d (43032)
  a=r 252 (43033)
  a+= 62 (43035)
  d=a (43037)
  *d=c (43038)
  (                    3031:   return PrefixCodeBlockCountsInsertAndCopyLengths) (43039)
  (         t1 = H[t252+61]〈PrefixCodeBlockCountsInsertAndCopyLengths〉) (43039)
  d-- (43039)
  a=*d (43040)
  r=a 1 (43041)
  (         t2 = H[t0]〈〉) (43043)
  d=r 0 (43043)
  a=*d (43045)
  r=a 2 (43046)
  (         t0 = t0 - 1) (43048)
  a=r 0 (43048)
  a-- (43050)
  r=a 0 (43051)
  (         t0 = H[t0]〈〉) (43053)
  d=a (43053)
  a=*d (43054)
  r=a 0 (43055)
  (         goto find_label_ret_id) (43057)
  lj 62666 (43057)
  (insert return as it might not be done by the function:) (43060)
  (         t2 = H[t0]〈〉) (43060)
  d=a (43060)
  a=*d (43061)
  r=a 2 (43062)
  (         t0 = t0 - 1) (43064)
  a=r 0 (43064)
  a-- (43066)
  r=a 0 (43067)
  (         t0 = H[t0]〈〉) (43069)
  d=a (43069)
  a=*d (43070)
  r=a 0 (43071)
  (         goto find_label_ret_id) (43073)
  lj 62666 (43073)
  (         MarkTempVarEnd) (43076)
  (        :parse_prefix_code_block_counts_insert_and_copy_lengths_end~:) (43076)
  (                    3033: def parse_prefix_code_block_types_distances〈〉:) (43076)
  (         goto parse_prefix_code_block_types_distances_end~) (43076)
  lj 43201 (43076)
  (        :parse_prefix_code_block_types_distances:) (43079)
  (         MarkTempVarStart) (43079)
  (                    3034:   global PrefixCodeBlockTypesDistances_data) (43079)
  (Global PrefixCodeBlockTypesDistances_data via H[t252+68]) (43079)
  (                    3035:   alphabet_size = meta_block_header_n_bltypes_d + 2) (43079)
  (         t1 = H[t252+133]〈meta_block_header_n_bltypes_d〉 + 2) (43079)
  c= 2 (43079)
  a=r 252 (43081)
  a+= 133 (43083)
  d=a (43085)
  a=*d (43086)
  a+=c (43087)
  r=a 1 (43088)
  (         H[t0+1]〈alphabet_size〉 = t1) (43090)
  a=r 0 (43090)
  a++ (43092)
  d=a (43093)
  a=r 1 (43094)
  *d=a (43096)
  (                    3036:   tmp_ = parse_prefix_code〈alphabet_size〉) (43097)
  (         H[t0+2]〈〉 = t0) (43097)
  d++ (43097)
  a=r 0 (43098)
  *d=a (43100)
  (saved bsp, return id:) (43101)
  (         H[t0+3]〈〉 = 180) (43101)
  d++ (43101)
  *d= 180 (43102)
  (push arguments:) (43104)
  (         H[t0+4]〈〉 = H[t0+1]〈alphabet_size〉) (43104)
  a++ (43104)
  d=a (43105)
  c=*d (43106)
  a=r 0 (43107)
  a+= 4 (43109)
  d=a (43111)
  *d=c (43112)
  (         t0 = t0 + 3) (43113)
  c= 3 (43113)
  a=r 0 (43115)
  a+=c (43117)
  r=a 0 (43118)
  (         goto parse_prefix_code) (43120)
  lj 42382 (43120)
  (        :return_id_180:) (43123)
  (         H[t0+2]〈tmp_〉 = t1) (43123)
  a=r 0 (43123)
  a+= 2 (43125)
  d=a (43127)
  a=r 1 (43128)
  *d=a (43130)
  (                    3037:   if tmp_ == NONE:) (43131)
  (         t1 = H[t0+2]〈tmp_〉 == 4294967295) (43131)
  c=0 (43131)
  c-- (43132)
  a=*d (43133)
  a==c (43134)
  a=0 (43135)
  jf 1 (43136)
  a++ (43138)
  r=a 1 (43139)
  (         ifN t1 goto else_1734) (43141)
  a== 0 (43141)
  jf 3 (43143)
  lj 43152 (43145)
  (                    3038:     error〈〉) (43148)
  (         error) (43148)
  error (43148)
  (         goto endif_1735) (43149)
  lj 43152 (43149)
  (        :else_1734:) (43152)
  (        :endif_1735:) (43152)
  (                    3039:   PrefixCodeBlockTypesDistances_data = tmp_) (43152)
  (         H[t252+68]〈PrefixCodeBlockTypesDistances_data〉 = H[t0+2]〈tmp_〉) (43152)
  a=r 0 (43152)
  a+= 2 (43154)
  d=a (43156)
  c=*d (43157)
  a=r 252 (43158)
  a+= 68 (43160)
  d=a (43162)
  *d=c (43163)
  (                    3040:   return PrefixCodeBlockTypesDistances) (43164)
  (         t1 = H[t252+67]〈PrefixCodeBlockTypesDistances〉) (43164)
  d-- (43164)
  a=*d (43165)
  r=a 1 (43166)
  (         t2 = H[t0]〈〉) (43168)
  d=r 0 (43168)
  a=*d (43170)
  r=a 2 (43171)
  (         t0 = t0 - 1) (43173)
  a=r 0 (43173)
  a-- (43175)
  r=a 0 (43176)
  (         t0 = H[t0]〈〉) (43178)
  d=a (43178)
  a=*d (43179)
  r=a 0 (43180)
  (         goto find_label_ret_id) (43182)
  lj 62666 (43182)
  (insert return as it might not be done by the function:) (43185)
  (         t2 = H[t0]〈〉) (43185)
  d=a (43185)
  a=*d (43186)
  r=a 2 (43187)
  (         t0 = t0 - 1) (43189)
  a=r 0 (43189)
  a-- (43191)
  r=a 0 (43192)
  (         t0 = H[t0]〈〉) (43194)
  d=a (43194)
  a=*d (43195)
  r=a 0 (43196)
  (         goto find_label_ret_id) (43198)
  lj 62666 (43198)
  (         MarkTempVarEnd) (43201)
  (        :parse_prefix_code_block_types_distances_end~:) (43201)
  (                    3042: def parse_prefix_code_block_counts_distances〈〉:) (43201)
  (         goto parse_prefix_code_block_counts_distances_end~) (43201)
  lj 43301 (43201)
  (        :parse_prefix_code_block_counts_distances:) (43204)
  (         MarkTempVarStart) (43204)
  (                    3043:   global PrefixCodeBlockCountsDistances_data) (43204)
  (Global PrefixCodeBlockCountsDistances_data via H[t252+70]) (43204)
  (                    3044:   tmp_ = parse_prefix_code〈26〉) (43204)
  (         H[t0+1]〈〉 = t0) (43204)
  a=r 0 (43204)
  a++ (43206)
  d=a (43207)
  a=r 0 (43208)
  *d=a (43210)
  (saved bsp, return id:) (43211)
  (         H[t0+2]〈〉 = 181) (43211)
  d++ (43211)
  *d= 181 (43212)
  (push arguments:) (43214)
  (         H[t0+3]〈〉 = 26) (43214)
  d++ (43214)
  *d= 26 (43215)
  (         t0 = t0 + 2) (43217)
  c= 2 (43217)
  a+=c (43219)
  r=a 0 (43220)
  (         goto parse_prefix_code) (43222)
  lj 42382 (43222)
  (        :return_id_181:) (43225)
  (         H[t0+1]〈tmp_〉 = t1) (43225)
  a=r 0 (43225)
  a++ (43227)
  d=a (43228)
  a=r 1 (43229)
  *d=a (43231)
  (                    3045:   if tmp_ == NONE:) (43232)
  (         t1 = H[t0+1]〈tmp_〉 == 4294967295) (43232)
  c=0 (43232)
  c-- (43233)
  a=*d (43234)
  a==c (43235)
  a=0 (43236)
  jf 1 (43237)
  a++ (43239)
  r=a 1 (43240)
  (         ifN t1 goto else_1737) (43242)
  a== 0 (43242)
  jf 3 (43244)
  lj 43253 (43246)
  (                    3046:     error〈〉) (43249)
  (         error) (43249)
  error (43249)
  (         goto endif_1738) (43250)
  lj 43253 (43250)
  (        :else_1737:) (43253)
  (        :endif_1738:) (43253)
  (                    3047:   PrefixCodeBlockCountsDistances_data = tmp_) (43253)
  (         H[t252+70]〈PrefixCodeBlockCountsDistances_data〉 = H[t0+1]〈tmp_〉) (43253)
  a=r 0 (43253)
  a++ (43255)
  d=a (43256)
  c=*d (43257)
  a=r 252 (43258)
  a+= 70 (43260)
  d=a (43262)
  *d=c (43263)
  (                    3048:   return PrefixCodeBlockCountsDistances) (43264)
  (         t1 = H[t252+69]〈PrefixCodeBlockCountsDistances〉) (43264)
  d-- (43264)
  a=*d (43265)
  r=a 1 (43266)
  (         t2 = H[t0]〈〉) (43268)
  d=r 0 (43268)
  a=*d (43270)
  r=a 2 (43271)
  (         t0 = t0 - 1) (43273)
  a=r 0 (43273)
  a-- (43275)
  r=a 0 (43276)
  (         t0 = H[t0]〈〉) (43278)
  d=a (43278)
  a=*d (43279)
  r=a 0 (43280)
  (         goto find_label_ret_id) (43282)
  lj 62666 (43282)
  (insert return as it might not be done by the function:) (43285)
  (         t2 = H[t0]〈〉) (43285)
  d=a (43285)
  a=*d (43286)
  r=a 2 (43287)
  (         t0 = t0 - 1) (43289)
  a=r 0 (43289)
  a-- (43291)
  r=a 0 (43292)
  (         t0 = H[t0]〈〉) (43294)
  d=a (43294)
  a=*d (43295)
  r=a 0 (43296)
  (         goto find_label_ret_id) (43298)
  lj 62666 (43298)
  (         MarkTempVarEnd) (43301)
  (        :parse_prefix_code_block_counts_distances_end~:) (43301)
  (                    3050: def parse_block_count〈prefix_code〉:  # HuffmanCodes) (43301)
  (         goto parse_block_count_end~) (43301)
  lj 44087 (43301)
  (        :parse_block_count:) (43304)
  (         MarkTempVarStart) (43304)
  (Arg prefix_code at t0 + 1) (43304)
  (                    3051:   symbol = lookup_symbol〈prefix_code〉) (43304)
  (         H[t0+2]〈〉 = t0) (43304)
  a=r 0 (43304)
  a+= 2 (43306)
  d=a (43308)
  a=r 0 (43309)
  *d=a (43311)
  (saved bsp, return id:) (43312)
  (         H[t0+3]〈〉 = 182) (43312)
  d++ (43312)
  *d= 182 (43313)
  (push arguments:) (43315)
  (         H[t0+4]〈〉 = H[t0+1]〈prefix_code〉) (43315)
  a++ (43315)
  d=a (43316)
  c=*d (43317)
  a=r 0 (43318)
  a+= 4 (43320)
  d=a (43322)
  *d=c (43323)
  (         t0 = t0 + 3) (43324)
  c= 3 (43324)
  a=r 0 (43326)
  a+=c (43328)
  r=a 0 (43329)
  (         goto lookup_symbol) (43331)
  lj 6923 (43331)
  (        :return_id_182:) (43334)
  (         H[t0+2]〈symbol〉 = t1) (43334)
  a=r 0 (43334)
  a+= 2 (43336)
  d=a (43338)
  a=r 1 (43339)
  *d=a (43341)
  (                    3052:   if symbol >= 0 and symbol <= 3:) (43342)
  (         t2 = H[t0+2]〈symbol〉 >= 0) (43342)
  c=0 (43342)
  a=*d (43343)
  a==c (43344)
  jt 4 (43345)
  a>c (43347)
  a=0 (43348)
  jf 2 (43349)
  a= 1 (43351)
  r=a 2 (43353)
  (         t3 = H[t0+2]〈symbol〉 <= 3) (43355)
  c= 3 (43355)
  a=*d (43357)
  a==c (43358)
  jt 4 (43359)
  a<c (43361)
  a=0 (43362)
  jf 2 (43363)
  a= 1 (43365)
  r=a 3 (43367)
  (         t1 = t2 and t3) (43369)
  c=a (43369)
  a=r 2 (43370)
  a== 0 (43372)
  jt 1 (43374)
  a=c (43376)
  r=a 1 (43377)
  (         ifN t1 goto else_1741) (43379)
  a== 0 (43379)
  jf 3 (43381)
  lj 43406 (43383)
  (                    3053:     base_length = 1 + 〈symbol << 2〉) (43386)
  (         t2 = H[t0+2]〈symbol〉 << 2) (43386)
  c= 2 (43386)
  a=*d (43388)
  a<<=c (43389)
  r=a 2 (43390)
  (         t1 = 1 + t2) (43392)
  c=a (43392)
  a= 1 (43393)
  a+=c (43395)
  r=a 1 (43396)
  (         H[t0+3]〈base_length〉 = t1) (43398)
  d++ (43398)
  *d=a (43399)
  (                    3054:     extra_bits = 2) (43400)
  (         H[t0+4]〈extra_bits〉 = 2) (43400)
  d++ (43400)
  *d= 2 (43401)
  (         goto endif_1742) (43403)
  lj 43995 (43403)
  (        :else_1741:) (43406)
  (                    3055:   elif symbol >= 4 and symbol <= 7:) (43406)
  (         t2 = H[t0+2]〈symbol〉 >= 4) (43406)
  c= 4 (43406)
  a=r 0 (43408)
  a+= 2 (43410)
  d=a (43412)
  a=*d (43413)
  a==c (43414)
  jt 4 (43415)
  a>c (43417)
  a=0 (43418)
  jf 2 (43419)
  a= 1 (43421)
  r=a 2 (43423)
  (         t3 = H[t0+2]〈symbol〉 <= 7) (43425)
  c= 7 (43425)
  a=*d (43427)
  a==c (43428)
  jt 4 (43429)
  a<c (43431)
  a=0 (43432)
  jf 2 (43433)
  a= 1 (43435)
  r=a 3 (43437)
  (         t1 = t2 and t3) (43439)
  c=a (43439)
  a=r 2 (43440)
  a== 0 (43442)
  jt 1 (43444)
  a=c (43446)
  r=a 1 (43447)
  (         ifN t1 goto else_1745) (43449)
  a== 0 (43449)
  jf 3 (43451)
  lj 43481 (43453)
  (                    3056:     base_length = 17 + 〈〈symbol - 4〉 << 3〉) (43456)
  (         t3 = H[t0+2]〈symbol〉 - 4) (43456)
  c= 4 (43456)
  a=*d (43458)
  a-=c (43459)
  r=a 3 (43460)
  (         t2 = t3 << 3) (43462)
  c= 3 (43462)
  a<<=c (43464)
  r=a 2 (43465)
  (         t1 = 17 + t2) (43467)
  c=a (43467)
  a= 17 (43468)
  a+=c (43470)
  r=a 1 (43471)
  (         H[t0+3]〈base_length〉 = t1) (43473)
  d++ (43473)
  *d=a (43474)
  (                    3057:     extra_bits = 3) (43475)
  (         H[t0+4]〈extra_bits〉 = 3) (43475)
  d++ (43475)
  *d= 3 (43476)
  (         goto endif_1746) (43478)
  lj 43995 (43478)
  (        :else_1745:) (43481)
  (                    3058:   elif symbol >= 8 and symbol <= 11:) (43481)
  (         t2 = H[t0+2]〈symbol〉 >= 8) (43481)
  c= 8 (43481)
  a=r 0 (43483)
  a+= 2 (43485)
  d=a (43487)
  a=*d (43488)
  a==c (43489)
  jt 4 (43490)
  a>c (43492)
  a=0 (43493)
  jf 2 (43494)
  a= 1 (43496)
  r=a 2 (43498)
  (         t3 = H[t0+2]〈symbol〉 <= 11) (43500)
  c= 11 (43500)
  a=*d (43502)
  a==c (43503)
  jt 4 (43504)
  a<c (43506)
  a=0 (43507)
  jf 2 (43508)
  a= 1 (43510)
  r=a 3 (43512)
  (         t1 = t2 and t3) (43514)
  c=a (43514)
  a=r 2 (43515)
  a== 0 (43517)
  jt 1 (43519)
  a=c (43521)
  r=a 1 (43522)
  (         ifN t1 goto else_1749) (43524)
  a== 0 (43524)
  jf 3 (43526)
  lj 43556 (43528)
  (                    3059:     base_length = 49 + 〈〈symbol - 8〉 << 4〉) (43531)
  (         t3 = H[t0+2]〈symbol〉 - 8) (43531)
  c= 8 (43531)
  a=*d (43533)
  a-=c (43534)
  r=a 3 (43535)
  (         t2 = t3 << 4) (43537)
  c= 4 (43537)
  a<<=c (43539)
  r=a 2 (43540)
  (         t1 = 49 + t2) (43542)
  c=a (43542)
  a= 49 (43543)
  a+=c (43545)
  r=a 1 (43546)
  (         H[t0+3]〈base_length〉 = t1) (43548)
  d++ (43548)
  *d=a (43549)
  (                    3060:     extra_bits = 4) (43550)
  (         H[t0+4]〈extra_bits〉 = 4) (43550)
  d++ (43550)
  *d= 4 (43551)
  (         goto endif_1750) (43553)
  lj 43995 (43553)
  (        :else_1749:) (43556)
  (                    3061:   elif symbol >= 12 and symbol <= 15:) (43556)
  (         t2 = H[t0+2]〈symbol〉 >= 12) (43556)
  c= 12 (43556)
  a=r 0 (43558)
  a+= 2 (43560)
  d=a (43562)
  a=*d (43563)
  a==c (43564)
  jt 4 (43565)
  a>c (43567)
  a=0 (43568)
  jf 2 (43569)
  a= 1 (43571)
  r=a 2 (43573)
  (         t3 = H[t0+2]〈symbol〉 <= 15) (43575)
  c= 15 (43575)
  a=*d (43577)
  a==c (43578)
  jt 4 (43579)
  a<c (43581)
  a=0 (43582)
  jf 2 (43583)
  a= 1 (43585)
  r=a 3 (43587)
  (         t1 = t2 and t3) (43589)
  c=a (43589)
  a=r 2 (43590)
  a== 0 (43592)
  jt 1 (43594)
  a=c (43596)
  r=a 1 (43597)
  (         ifN t1 goto else_1753) (43599)
  a== 0 (43599)
  jf 3 (43601)
  lj 43631 (43603)
  (                    3062:     base_length = 113 + 〈〈symbol - 12〉 << 5〉) (43606)
  (         t3 = H[t0+2]〈symbol〉 - 12) (43606)
  c= 12 (43606)
  a=*d (43608)
  a-=c (43609)
  r=a 3 (43610)
  (         t2 = t3 << 5) (43612)
  c= 5 (43612)
  a<<=c (43614)
  r=a 2 (43615)
  (         t1 = 113 + t2) (43617)
  c=a (43617)
  a= 113 (43618)
  a+=c (43620)
  r=a 1 (43621)
  (         H[t0+3]〈base_length〉 = t1) (43623)
  d++ (43623)
  *d=a (43624)
  (                    3063:     extra_bits = 5) (43625)
  (         H[t0+4]〈extra_bits〉 = 5) (43625)
  d++ (43625)
  *d= 5 (43626)
  (         goto endif_1754) (43628)
  lj 43995 (43628)
  (        :else_1753:) (43631)
  (                    3064:   elif symbol >= 16 and symbol <= 17:) (43631)
  (         t2 = H[t0+2]〈symbol〉 >= 16) (43631)
  c= 16 (43631)
  a=r 0 (43633)
  a+= 2 (43635)
  d=a (43637)
  a=*d (43638)
  a==c (43639)
  jt 4 (43640)
  a>c (43642)
  a=0 (43643)
  jf 2 (43644)
  a= 1 (43646)
  r=a 2 (43648)
  (         t3 = H[t0+2]〈symbol〉 <= 17) (43650)
  c= 17 (43650)
  a=*d (43652)
  a==c (43653)
  jt 4 (43654)
  a<c (43656)
  a=0 (43657)
  jf 2 (43658)
  a= 1 (43660)
  r=a 3 (43662)
  (         t1 = t2 and t3) (43664)
  c=a (43664)
  a=r 2 (43665)
  a== 0 (43667)
  jt 1 (43669)
  a=c (43671)
  r=a 1 (43672)
  (         ifN t1 goto else_1757) (43674)
  a== 0 (43674)
  jf 3 (43676)
  lj 43706 (43678)
  (                    3065:     base_length = 241 + 〈〈symbol - 16〉 << 6〉) (43681)
  (         t3 = H[t0+2]〈symbol〉 - 16) (43681)
  c= 16 (43681)
  a=*d (43683)
  a-=c (43684)
  r=a 3 (43685)
  (         t2 = t3 << 6) (43687)
  c= 6 (43687)
  a<<=c (43689)
  r=a 2 (43690)
  (         t1 = 241 + t2) (43692)
  c=a (43692)
  a= 241 (43693)
  a+=c (43695)
  r=a 1 (43696)
  (         H[t0+3]〈base_length〉 = t1) (43698)
  d++ (43698)
  *d=a (43699)
  (                    3066:     extra_bits = 6) (43700)
  (         H[t0+4]〈extra_bits〉 = 6) (43700)
  d++ (43700)
  *d= 6 (43701)
  (         goto endif_1758) (43703)
  lj 43995 (43703)
  (        :else_1757:) (43706)
  (                    3067:   elif symbol == 18:) (43706)
  (         t1 = H[t0+2]〈symbol〉 == 18) (43706)
  c= 18 (43706)
  a=r 0 (43708)
  a+= 2 (43710)
  d=a (43712)
  a=*d (43713)
  a==c (43714)
  a=0 (43715)
  jf 1 (43716)
  a++ (43718)
  r=a 1 (43719)
  (         ifN t1 goto else_1760) (43721)
  a== 0 (43721)
  jf 3 (43723)
  lj 43742 (43725)
  (                    3068:     base_length = 369) (43728)
  (         H[t0+3]〈base_length〉 = 369) (43728)
  d++ (43728)
  a= 1 (43729)
  a<<= 8 (43731)
  a+= 113 (43733)
  *d=a (43735)
  (                    3069:     extra_bits = 7) (43736)
  (         H[t0+4]〈extra_bits〉 = 7) (43736)
  d++ (43736)
  *d= 7 (43737)
  (         goto endif_1761) (43739)
  lj 43995 (43739)
  (        :else_1760:) (43742)
  (                    3070:   elif symbol == 19:) (43742)
  (         t1 = H[t0+2]〈symbol〉 == 19) (43742)
  c= 19 (43742)
  a=r 0 (43744)
  a+= 2 (43746)
  d=a (43748)
  a=*d (43749)
  a==c (43750)
  a=0 (43751)
  jf 1 (43752)
  a++ (43754)
  r=a 1 (43755)
  (         ifN t1 goto else_1763) (43757)
  a== 0 (43757)
  jf 3 (43759)
  lj 43778 (43761)
  (                    3071:     base_length = 497) (43764)
  (         H[t0+3]〈base_length〉 = 497) (43764)
  d++ (43764)
  a= 1 (43765)
  a<<= 8 (43767)
  a+= 241 (43769)
  *d=a (43771)
  (                    3072:     extra_bits = 8) (43772)
  (         H[t0+4]〈extra_bits〉 = 8) (43772)
  d++ (43772)
  *d= 8 (43773)
  (         goto endif_1764) (43775)
  lj 43995 (43775)
  (        :else_1763:) (43778)
  (                    3073:   elif symbol == 20:) (43778)
  (         t1 = H[t0+2]〈symbol〉 == 20) (43778)
  c= 20 (43778)
  a=r 0 (43780)
  a+= 2 (43782)
  d=a (43784)
  a=*d (43785)
  a==c (43786)
  a=0 (43787)
  jf 1 (43788)
  a++ (43790)
  r=a 1 (43791)
  (         ifN t1 goto else_1766) (43793)
  a== 0 (43793)
  jf 3 (43795)
  lj 43814 (43797)
  (                    3074:     base_length = 753) (43800)
  (         H[t0+3]〈base_length〉 = 753) (43800)
  d++ (43800)
  a= 2 (43801)
  a<<= 8 (43803)
  a+= 241 (43805)
  *d=a (43807)
  (                    3075:     extra_bits = 9) (43808)
  (         H[t0+4]〈extra_bits〉 = 9) (43808)
  d++ (43808)
  *d= 9 (43809)
  (         goto endif_1767) (43811)
  lj 43995 (43811)
  (        :else_1766:) (43814)
  (                    3076:   elif symbol == 21:) (43814)
  (         t1 = H[t0+2]〈symbol〉 == 21) (43814)
  c= 21 (43814)
  a=r 0 (43816)
  a+= 2 (43818)
  d=a (43820)
  a=*d (43821)
  a==c (43822)
  a=0 (43823)
  jf 1 (43824)
  a++ (43826)
  r=a 1 (43827)
  (         ifN t1 goto else_1769) (43829)
  a== 0 (43829)
  jf 3 (43831)
  lj 43850 (43833)
  (                    3077:     base_length = 1265) (43836)
  (         H[t0+3]〈base_length〉 = 1265) (43836)
  d++ (43836)
  a= 4 (43837)
  a<<= 8 (43839)
  a+= 241 (43841)
  *d=a (43843)
  (                    3078:     extra_bits = 10) (43844)
  (         H[t0+4]〈extra_bits〉 = 10) (43844)
  d++ (43844)
  *d= 10 (43845)
  (         goto endif_1770) (43847)
  lj 43995 (43847)
  (        :else_1769:) (43850)
  (                    3079:   elif symbol == 22:) (43850)
  (         t1 = H[t0+2]〈symbol〉 == 22) (43850)
  c= 22 (43850)
  a=r 0 (43852)
  a+= 2 (43854)
  d=a (43856)
  a=*d (43857)
  a==c (43858)
  a=0 (43859)
  jf 1 (43860)
  a++ (43862)
  r=a 1 (43863)
  (         ifN t1 goto else_1772) (43865)
  a== 0 (43865)
  jf 3 (43867)
  lj 43886 (43869)
  (                    3080:     base_length = 2289) (43872)
  (         H[t0+3]〈base_length〉 = 2289) (43872)
  d++ (43872)
  a= 8 (43873)
  a<<= 8 (43875)
  a+= 241 (43877)
  *d=a (43879)
  (                    3081:     extra_bits = 11) (43880)
  (         H[t0+4]〈extra_bits〉 = 11) (43880)
  d++ (43880)
  *d= 11 (43881)
  (         goto endif_1773) (43883)
  lj 43995 (43883)
  (        :else_1772:) (43886)
  (                    3082:   elif symbol == 23:) (43886)
  (         t1 = H[t0+2]〈symbol〉 == 23) (43886)
  c= 23 (43886)
  a=r 0 (43888)
  a+= 2 (43890)
  d=a (43892)
  a=*d (43893)
  a==c (43894)
  a=0 (43895)
  jf 1 (43896)
  a++ (43898)
  r=a 1 (43899)
  (         ifN t1 goto else_1775) (43901)
  a== 0 (43901)
  jf 3 (43903)
  lj 43922 (43905)
  (                    3083:     base_length = 4337) (43908)
  (         H[t0+3]〈base_length〉 = 4337) (43908)
  d++ (43908)
  a= 16 (43909)
  a<<= 8 (43911)
  a+= 241 (43913)
  *d=a (43915)
  (                    3084:     extra_bits = 12) (43916)
  (         H[t0+4]〈extra_bits〉 = 12) (43916)
  d++ (43916)
  *d= 12 (43917)
  (         goto endif_1776) (43919)
  lj 43995 (43919)
  (        :else_1775:) (43922)
  (                    3085:   elif symbol == 24:) (43922)
  (         t1 = H[t0+2]〈symbol〉 == 24) (43922)
  c= 24 (43922)
  a=r 0 (43924)
  a+= 2 (43926)
  d=a (43928)
  a=*d (43929)
  a==c (43930)
  a=0 (43931)
  jf 1 (43932)
  a++ (43934)
  r=a 1 (43935)
  (         ifN t1 goto else_1778) (43937)
  a== 0 (43937)
  jf 3 (43939)
  lj 43958 (43941)
  (                    3086:     base_length = 8433) (43944)
  (         H[t0+3]〈base_length〉 = 8433) (43944)
  d++ (43944)
  a= 32 (43945)
  a<<= 8 (43947)
  a+= 241 (43949)
  *d=a (43951)
  (                    3087:     extra_bits = 13) (43952)
  (         H[t0+4]〈extra_bits〉 = 13) (43952)
  d++ (43952)
  *d= 13 (43953)
  (         goto endif_1779) (43955)
  lj 43995 (43955)
  (        :else_1778:) (43958)
  (                    3088:   elif symbol == 25:) (43958)
  (         t1 = H[t0+2]〈symbol〉 == 25) (43958)
  c= 25 (43958)
  a=r 0 (43960)
  a+= 2 (43962)
  d=a (43964)
  a=*d (43965)
  a==c (43966)
  a=0 (43967)
  jf 1 (43968)
  a++ (43970)
  r=a 1 (43971)
  (         ifN t1 goto else_1781) (43973)
  a== 0 (43973)
  jf 3 (43975)
  lj 43994 (43977)
  (                    3089:     base_length = 16625) (43980)
  (         H[t0+3]〈base_length〉 = 16625) (43980)
  d++ (43980)
  a= 64 (43981)
  a<<= 8 (43983)
  a+= 241 (43985)
  *d=a (43987)
  (                    3090:     extra_bits = 24) (43988)
  (         H[t0+4]〈extra_bits〉 = 24) (43988)
  d++ (43988)
  *d= 24 (43989)
  (         goto endif_1782) (43991)
  lj 43995 (43991)
  (        :else_1781:) (43994)
  (                    3092:     error〈〉 # err EOF OR InvalidBlockCountCode) (43994)
  (         error) (43994)
  error (43994)
  (        :endif_1782:) (43995)
  (        :endif_1779:) (43995)
  (        :endif_1776:) (43995)
  (        :endif_1773:) (43995)
  (        :endif_1770:) (43995)
  (        :endif_1767:) (43995)
  (        :endif_1764:) (43995)
  (        :endif_1761:) (43995)
  (        :endif_1758:) (43995)
  (        :endif_1754:) (43995)
  (        :endif_1750:) (43995)
  (        :endif_1746:) (43995)
  (        :endif_1742:) (43995)
  (                    3093:   if read_u32_from_n_bits〈extra_bits〉:) (43995)
  (         H[t0+5]〈〉 = t0) (43995)
  a=r 0 (43995)
  a+= 5 (43997)
  d=a (43999)
  a=r 0 (44000)
  *d=a (44002)
  (saved bsp, return id:) (44003)
  (         H[t0+6]〈〉 = 183) (44003)
  d++ (44003)
  *d= 183 (44004)
  (push arguments:) (44006)
  (         H[t0+7]〈〉 = H[t0+4]〈extra_bits〉) (44006)
  a+= 4 (44006)
  d=a (44008)
  c=*d (44009)
  a=r 0 (44010)
  a+= 7 (44012)
  d=a (44014)
  *d=c (44015)
  (         t0 = t0 + 6) (44016)
  c= 6 (44016)
  a=r 0 (44018)
  a+=c (44020)
  r=a 0 (44021)
  (         goto read_u32_from_n_bits) (44023)
  lj 4857 (44023)
  (        :return_id_183:) (44026)
  (         ifN t1 goto else_1783) (44026)
  a=r 1 (44026)
  a== 0 (44028)
  jf 3 (44030)
  lj 44039 (44032)
  (                    3094:     error〈〉 # err EOF) (44035)
  (         error) (44035)
  error (44035)
  (         goto endif_1784) (44036)
  lj 44039 (44036)
  (        :else_1783:) (44039)
  (        :endif_1784:) (44039)
  (                    3095:   return base_length + read_u32_from_n_bits_result) (44039)
  (         t1 = H[t0+3]〈base_length〉 + H[t252+7]〈read_u32_from_n_bits_result〉) (44039)
  a=r 252 (44039)
  a+= 7 (44041)
  d=a (44043)
  c=*d (44044)
  a=r 0 (44045)
  a+= 3 (44047)
  d=a (44049)
  a=*d (44050)
  a+=c (44051)
  r=a 1 (44052)
  (         t1 = t1) (44054)
  (         t2 = H[t0]〈〉) (44054)
  d=r 0 (44054)
  a=*d (44056)
  r=a 2 (44057)
  (         t0 = t0 - 1) (44059)
  a=r 0 (44059)
  a-- (44061)
  r=a 0 (44062)
  (         t0 = H[t0]〈〉) (44064)
  d=a (44064)
  a=*d (44065)
  r=a 0 (44066)
  (         goto find_label_ret_id) (44068)
  lj 62666 (44068)
  (insert return as it might not be done by the function:) (44071)
  (         t2 = H[t0]〈〉) (44071)
  d=a (44071)
  a=*d (44072)
  r=a 2 (44073)
  (         t0 = t0 - 1) (44075)
  a=r 0 (44075)
  a-- (44077)
  r=a 0 (44078)
  (         t0 = H[t0]〈〉) (44080)
  d=a (44080)
  a=*d (44081)
  r=a 0 (44082)
  (         goto find_label_ret_id) (44084)
  lj 62666 (44084)
  (         MarkTempVarEnd) (44087)
  (        :parse_block_count_end~:) (44087)
  (                    3097: def parse_first_block_count_literals〈〉:) (44087)
  (         goto parse_first_block_count_literals_end~) (44087)
  lj 44188 (44087)
  (        :parse_first_block_count_literals:) (44090)
  (         MarkTempVarStart) (44090)
  (                    3098:   global FirstBlockCountLiterals_data) (44090)
  (Global FirstBlockCountLiterals_data via H[t252+56]) (44090)
  (                    3099:   prefix_code = meta_block_prefix_tree_block_counts_literals) (44090)
  (         H[t0+1]〈prefix_code〉 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉) (44090)
  a=r 252 (44090)
  a+= 141 (44092)
  d=a (44094)
  c=*d (44095)
  a=r 0 (44096)
  a++ (44098)
  d=a (44099)
  *d=c (44100)
  (                    3100:   FirstBlockCountLiterals_data = parse_block_count〈prefix_code〉) (44101)
  (         H[t0+2]〈〉 = t0) (44101)
  d++ (44101)
  a=r 0 (44102)
  *d=a (44104)
  (saved bsp, return id:) (44105)
  (         H[t0+3]〈〉 = 184) (44105)
  d++ (44105)
  *d= 184 (44106)
  (push arguments:) (44108)
  (         H[t0+4]〈〉 = H[t0+1]〈prefix_code〉) (44108)
  d++ (44108)
  *d=c (44109)
  (         t0 = t0 + 3) (44110)
  c= 3 (44110)
  a+=c (44112)
  r=a 0 (44113)
  (         goto parse_block_count) (44115)
  lj 43304 (44115)
  (        :return_id_184:) (44118)
  (         H[t252+56]〈FirstBlockCountLiterals_data〉 = t1) (44118)
  a=r 252 (44118)
  a+= 56 (44120)
  d=a (44122)
  a=r 1 (44123)
  *d=a (44125)
  (                    3101:   if FirstBlockCountLiterals_data == NONE:) (44126)
  (         t1 = H[t252+56]〈FirstBlockCountLiterals_data〉 == 4294967295) (44126)
  c=0 (44126)
  c-- (44127)
  a=*d (44128)
  a==c (44129)
  a=0 (44130)
  jf 1 (44131)
  a++ (44133)
  r=a 1 (44134)
  (         ifN t1 goto else_1786) (44136)
  a== 0 (44136)
  jf 3 (44138)
  lj 44147 (44140)
  (                    3102:     error〈〉) (44143)
  (         error) (44143)
  error (44143)
  (         goto endif_1787) (44144)
  lj 44147 (44144)
  (        :else_1786:) (44147)
  (        :endif_1787:) (44147)
  (                    3103:   return FirstBlockCountLiterals) (44147)
  (         t1 = H[t252+55]〈FirstBlockCountLiterals〉) (44147)
  a=r 252 (44147)
  a+= 55 (44149)
  d=a (44151)
  a=*d (44152)
  r=a 1 (44153)
  (         t2 = H[t0]〈〉) (44155)
  d=r 0 (44155)
  a=*d (44157)
  r=a 2 (44158)
  (         t0 = t0 - 1) (44160)
  a=r 0 (44160)
  a-- (44162)
  r=a 0 (44163)
  (         t0 = H[t0]〈〉) (44165)
  d=a (44165)
  a=*d (44166)
  r=a 0 (44167)
  (         goto find_label_ret_id) (44169)
  lj 62666 (44169)
  (insert return as it might not be done by the function:) (44172)
  (         t2 = H[t0]〈〉) (44172)
  d=a (44172)
  a=*d (44173)
  r=a 2 (44174)
  (         t0 = t0 - 1) (44176)
  a=r 0 (44176)
  a-- (44178)
  r=a 0 (44179)
  (         t0 = H[t0]〈〉) (44181)
  d=a (44181)
  a=*d (44182)
  r=a 0 (44183)
  (         goto find_label_ret_id) (44185)
  lj 62666 (44185)
  (         MarkTempVarEnd) (44188)
  (        :parse_first_block_count_literals_end~:) (44188)
  (                    3105: def parse_first_block_count_insert_and_copy_lengths〈〉:) (44188)
  (         goto parse_first_block_count_insert_and_copy_lengths_end~) (44188)
  lj 44289 (44188)
  (        :parse_first_block_count_insert_and_copy_lengths:) (44191)
  (         MarkTempVarStart) (44191)
  (                    3106:   global FirstBlockCountInsertAndCopyLengths_data) (44191)
  (Global FirstBlockCountInsertAndCopyLengths_data via H[t252+64]) (44191)
  (                    3107:   prefix_code = meta_block_prefix_tree_block_counts_insert_and_copy_lengths) (44191)
  (         H[t0+1]〈prefix_code〉 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (44191)
  a=r 252 (44191)
  a+= 154 (44193)
  d=a (44195)
  c=*d (44196)
  a=r 0 (44197)
  a++ (44199)
  d=a (44200)
  *d=c (44201)
  (                    3108:   FirstBlockCountInsertAndCopyLengths_data = parse_block_count〈prefix_code〉) (44202)
  (         H[t0+2]〈〉 = t0) (44202)
  d++ (44202)
  a=r 0 (44203)
  *d=a (44205)
  (saved bsp, return id:) (44206)
  (         H[t0+3]〈〉 = 185) (44206)
  d++ (44206)
  *d= 185 (44207)
  (push arguments:) (44209)
  (         H[t0+4]〈〉 = H[t0+1]〈prefix_code〉) (44209)
  d++ (44209)
  *d=c (44210)
  (         t0 = t0 + 3) (44211)
  c= 3 (44211)
  a+=c (44213)
  r=a 0 (44214)
  (         goto parse_block_count) (44216)
  lj 43304 (44216)
  (        :return_id_185:) (44219)
  (         H[t252+64]〈FirstBlockCountInsertAndCopyLengths_data〉 = t1) (44219)
  a=r 252 (44219)
  a+= 64 (44221)
  d=a (44223)
  a=r 1 (44224)
  *d=a (44226)
  (                    3109:   if FirstBlockCountInsertAndCopyLengths_data == NONE:) (44227)
  (         t1 = H[t252+64]〈FirstBlockCountInsertAndCopyLengths_data〉 == 4294967295) (44227)
  c=0 (44227)
  c-- (44228)
  a=*d (44229)
  a==c (44230)
  a=0 (44231)
  jf 1 (44232)
  a++ (44234)
  r=a 1 (44235)
  (         ifN t1 goto else_1789) (44237)
  a== 0 (44237)
  jf 3 (44239)
  lj 44248 (44241)
  (                    3110:     error〈〉) (44244)
  (         error) (44244)
  error (44244)
  (         goto endif_1790) (44245)
  lj 44248 (44245)
  (        :else_1789:) (44248)
  (        :endif_1790:) (44248)
  (                    3111:   return FirstBlockCountInsertAndCopyLengths) (44248)
  (         t1 = H[t252+63]〈FirstBlockCountInsertAndCopyLengths〉) (44248)
  a=r 252 (44248)
  a+= 63 (44250)
  d=a (44252)
  a=*d (44253)
  r=a 1 (44254)
  (         t2 = H[t0]〈〉) (44256)
  d=r 0 (44256)
  a=*d (44258)
  r=a 2 (44259)
  (         t0 = t0 - 1) (44261)
  a=r 0 (44261)
  a-- (44263)
  r=a 0 (44264)
  (         t0 = H[t0]〈〉) (44266)
  d=a (44266)
  a=*d (44267)
  r=a 0 (44268)
  (         goto find_label_ret_id) (44270)
  lj 62666 (44270)
  (insert return as it might not be done by the function:) (44273)
  (         t2 = H[t0]〈〉) (44273)
  d=a (44273)
  a=*d (44274)
  r=a 2 (44275)
  (         t0 = t0 - 1) (44277)
  a=r 0 (44277)
  a-- (44279)
  r=a 0 (44280)
  (         t0 = H[t0]〈〉) (44282)
  d=a (44282)
  a=*d (44283)
  r=a 0 (44284)
  (         goto find_label_ret_id) (44286)
  lj 62666 (44286)
  (         MarkTempVarEnd) (44289)
  (        :parse_first_block_count_insert_and_copy_lengths_end~:) (44289)
  (                    3113: def parse_first_block_count_distances〈〉:) (44289)
  (         goto parse_first_block_count_distances_end~) (44289)
  lj 44390 (44289)
  (        :parse_first_block_count_distances:) (44292)
  (         MarkTempVarStart) (44292)
  (                    3114:   global FirstBlockCountDistances_data) (44292)
  (Global FirstBlockCountDistances_data via H[t252+72]) (44292)
  (                    3115:   prefix_code = meta_block_prefix_tree_block_counts_distances) (44292)
  (         H[t0+1]〈prefix_code〉 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉) (44292)
  a=r 252 (44292)
  a+= 156 (44294)
  d=a (44296)
  c=*d (44297)
  a=r 0 (44298)
  a++ (44300)
  d=a (44301)
  *d=c (44302)
  (                    3116:   FirstBlockCountDistances_data = parse_block_count〈prefix_code〉) (44303)
  (         H[t0+2]〈〉 = t0) (44303)
  d++ (44303)
  a=r 0 (44304)
  *d=a (44306)
  (saved bsp, return id:) (44307)
  (         H[t0+3]〈〉 = 186) (44307)
  d++ (44307)
  *d= 186 (44308)
  (push arguments:) (44310)
  (         H[t0+4]〈〉 = H[t0+1]〈prefix_code〉) (44310)
  d++ (44310)
  *d=c (44311)
  (         t0 = t0 + 3) (44312)
  c= 3 (44312)
  a+=c (44314)
  r=a 0 (44315)
  (         goto parse_block_count) (44317)
  lj 43304 (44317)
  (        :return_id_186:) (44320)
  (         H[t252+72]〈FirstBlockCountDistances_data〉 = t1) (44320)
  a=r 252 (44320)
  a+= 72 (44322)
  d=a (44324)
  a=r 1 (44325)
  *d=a (44327)
  (                    3117:   if FirstBlockCountDistances_data == NONE:) (44328)
  (         t1 = H[t252+72]〈FirstBlockCountDistances_data〉 == 4294967295) (44328)
  c=0 (44328)
  c-- (44329)
  a=*d (44330)
  a==c (44331)
  a=0 (44332)
  jf 1 (44333)
  a++ (44335)
  r=a 1 (44336)
  (         ifN t1 goto else_1792) (44338)
  a== 0 (44338)
  jf 3 (44340)
  lj 44349 (44342)
  (                    3118:     error〈〉) (44345)
  (         error) (44345)
  error (44345)
  (         goto endif_1793) (44346)
  lj 44349 (44346)
  (        :else_1792:) (44349)
  (        :endif_1793:) (44349)
  (                    3119:   return FirstBlockCountDistances) (44349)
  (         t1 = H[t252+71]〈FirstBlockCountDistances〉) (44349)
  a=r 252 (44349)
  a+= 71 (44351)
  d=a (44353)
  a=*d (44354)
  r=a 1 (44355)
  (         t2 = H[t0]〈〉) (44357)
  d=r 0 (44357)
  a=*d (44359)
  r=a 2 (44360)
  (         t0 = t0 - 1) (44362)
  a=r 0 (44362)
  a-- (44364)
  r=a 0 (44365)
  (         t0 = H[t0]〈〉) (44367)
  d=a (44367)
  a=*d (44368)
  r=a 0 (44369)
  (         goto find_label_ret_id) (44371)
  lj 62666 (44371)
  (insert return as it might not be done by the function:) (44374)
  (         t2 = H[t0]〈〉) (44374)
  d=a (44374)
  a=*d (44375)
  r=a 2 (44376)
  (         t0 = t0 - 1) (44378)
  a=r 0 (44378)
  a-- (44380)
  r=a 0 (44381)
  (         t0 = H[t0]〈〉) (44383)
  d=a (44383)
  a=*d (44384)
  r=a 0 (44385)
  (         goto find_label_ret_id) (44387)
  lj 62666 (44387)
  (         MarkTempVarEnd) (44390)
  (        :parse_first_block_count_distances_end~:) (44390)
  (                    3121: def parse_prefix_codes_literals〈〉:) (44390)
  (         goto parse_prefix_codes_literals_end~) (44390)
  lj 44605 (44390)
  (        :parse_prefix_codes_literals:) (44393)
  (         MarkTempVarStart) (44393)
  (                    3122:   global PrefixCodesLiterals_data) (44393)
  (Global PrefixCodesLiterals_data via H[t252+88]) (44393)
  (                    3123:   n_trees_l = meta_block_header_n_trees_l) (44393)
  (         H[t0+1]〈n_trees_l〉 = H[t252+136]〈meta_block_header_n_trees_l〉) (44393)
  a=r 252 (44393)
  a+= 136 (44395)
  d=a (44397)
  c=*d (44398)
  a=r 0 (44399)
  a++ (44401)
  d=a (44402)
  *d=c (44403)
  (                    3124:   prefix_codes = alloc_pH〈n_trees_l〉) (44404)
  (         H[t0+2]〈〉 = t0) (44404)
  d++ (44404)
  a=r 0 (44405)
  *d=a (44407)
  (saved bsp, return id:) (44408)
  (         H[t0+3]〈〉 = 187) (44408)
  d++ (44408)
  *d= 187 (44409)
  (push arguments:) (44411)
  (         H[t0+4]〈〉 = H[t0+1]〈n_trees_l〉) (44411)
  d++ (44411)
  *d=c (44412)
  (         t0 = t0 + 3) (44413)
  c= 3 (44413)
  a+=c (44415)
  r=a 0 (44416)
  (         goto addr_alloc_pH) (44418)
  lj 1446 (44418)
  (        :return_id_187:) (44421)
  (         H[t0+2]〈prefix_codes〉 = t1) (44421)
  a=r 0 (44421)
  a+= 2 (44423)
  d=a (44425)
  a=r 1 (44426)
  *d=a (44428)
  (                    3125:   alphabet_size = 256) (44429)
  (         H[t0+3]〈alphabet_size〉 = 256) (44429)
  d++ (44429)
  a= 1 (44430)
  a<<= 8 (44432)
  *d=a (44434)
  (                    3126:   j = 0) (44435)
  (         H[t0+4]〈j〉 = 0) (44435)
  d++ (44435)
  *d=0 (44436)
  (                    3127:   while j < n_trees_l:) (44437)
  (        :while_1794:) (44437)
  (         t1 = H[t0+4]〈j〉 < H[t0+1]〈n_trees_l〉) (44437)
  a=r 0 (44437)
  a++ (44439)
  d=a (44440)
  c=*d (44441)
  a=r 0 (44442)
  a+= 4 (44444)
  d=a (44446)
  a=*d (44447)
  a<c (44448)
  a=0 (44449)
  jf 1 (44450)
  a++ (44452)
  r=a 1 (44453)
  (         ifN t1 goto whileend_1796) (44455)
  a== 0 (44455)
  jf 3 (44457)
  lj 44556 (44459)
  (                    3128:     prefix_codes[j] = parse_prefix_code〈alphabet_size〉) (44462)
  (         H[t0+5]〈〉 = t0) (44462)
  d++ (44462)
  a=r 0 (44463)
  *d=a (44465)
  (saved bsp, return id:) (44466)
  (         H[t0+6]〈〉 = 188) (44466)
  d++ (44466)
  *d= 188 (44467)
  (push arguments:) (44469)
  (         H[t0+7]〈〉 = H[t0+3]〈alphabet_size〉) (44469)
  a+= 3 (44469)
  d=a (44471)
  c=*d (44472)
  a=r 0 (44473)
  a+= 7 (44475)
  d=a (44477)
  *d=c (44478)
  (         t0 = t0 + 6) (44479)
  c= 6 (44479)
  a=r 0 (44481)
  a+=c (44483)
  r=a 0 (44484)
  (         goto parse_prefix_code) (44486)
  lj 42382 (44486)
  (        :return_id_188:) (44489)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44489)
  a=r 0 (44489)
  a+= 4 (44491)
  d=a (44493)
  c=*d (44494)
  a=r 0 (44495)
  a+= 2 (44497)
  d=a (44499)
  a=*d (44500)
  a+=c (44501)
  r=a 2 (44502)
  (         H[t2]〈〉 = t1) (44504)
  d=a (44504)
  a=r 1 (44505)
  *d=a (44507)
  (                    3129:     if prefix_codes[j] == NONE:) (44508)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44508)
  a=r 0 (44508)
  a+= 4 (44510)
  d=a (44512)
  c=*d (44513)
  a=r 0 (44514)
  a+= 2 (44516)
  d=a (44518)
  a=*d (44519)
  a+=c (44520)
  r=a 2 (44521)
  (         t2 = H[t2]〈〉) (44523)
  d=a (44523)
  a=*d (44524)
  r=a 2 (44525)
  (         t1 = t2 == 4294967295) (44527)
  c=0 (44527)
  c-- (44528)
  a==c (44529)
  a=0 (44530)
  jf 1 (44531)
  a++ (44533)
  r=a 1 (44534)
  (         ifN t1 goto else_1799) (44536)
  a== 0 (44536)
  jf 3 (44538)
  lj 44547 (44540)
  (                    3130:       error〈〉) (44543)
  (         error) (44543)
  error (44543)
  (         goto endif_1800) (44544)
  lj 44547 (44544)
  (        :else_1799:) (44547)
  (        :endif_1800:) (44547)
  (                    3131:     j += 1) (44547)
  (         H[t0+4]〈j〉 = H[t0+4]〈j〉 + 1) (44547)
  a=r 0 (44547)
  a+= 4 (44549)
  d=a (44551)
  *d++ (44552)
  (         goto while_1794) (44553)
  lj 44437 (44553)
  (        :whileend_1796:) (44556)
  (                    3132:   PrefixCodesLiterals_data = prefix_codes) (44556)
  (         H[t252+88]〈PrefixCodesLiterals_data〉 = H[t0+2]〈prefix_codes〉) (44556)
  a=r 0 (44556)
  a+= 2 (44558)
  d=a (44560)
  c=*d (44561)
  a=r 252 (44562)
  a+= 88 (44564)
  d=a (44566)
  *d=c (44567)
  (                    3133:   return PrefixCodesLiterals) (44568)
  (         t1 = H[t252+87]〈PrefixCodesLiterals〉) (44568)
  d-- (44568)
  a=*d (44569)
  r=a 1 (44570)
  (         t2 = H[t0]〈〉) (44572)
  d=r 0 (44572)
  a=*d (44574)
  r=a 2 (44575)
  (         t0 = t0 - 1) (44577)
  a=r 0 (44577)
  a-- (44579)
  r=a 0 (44580)
  (         t0 = H[t0]〈〉) (44582)
  d=a (44582)
  a=*d (44583)
  r=a 0 (44584)
  (         goto find_label_ret_id) (44586)
  lj 62666 (44586)
  (insert return as it might not be done by the function:) (44589)
  (         t2 = H[t0]〈〉) (44589)
  d=a (44589)
  a=*d (44590)
  r=a 2 (44591)
  (         t0 = t0 - 1) (44593)
  a=r 0 (44593)
  a-- (44595)
  r=a 0 (44596)
  (         t0 = H[t0]〈〉) (44598)
  d=a (44598)
  a=*d (44599)
  r=a 0 (44600)
  (         goto find_label_ret_id) (44602)
  lj 62666 (44602)
  (         MarkTempVarEnd) (44605)
  (        :parse_prefix_codes_literals_end~:) (44605)
  (                    3135: def parse_prefix_codes_insert_and_copy_lengths〈〉:) (44605)
  (         goto parse_prefix_codes_insert_and_copy_lengths_end~) (44605)
  lj 44822 (44605)
  (        :parse_prefix_codes_insert_and_copy_lengths:) (44608)
  (         MarkTempVarStart) (44608)
  (                    3136:   global PrefixCodesInsertAndCopyLengths_data) (44608)
  (Global PrefixCodesInsertAndCopyLengths_data via H[t252+90]) (44608)
  (                    3137:   n_bltypes_i = meta_block_header_n_bltypes_i) (44608)
  (         H[t0+1]〈n_bltypes_i〉 = H[t252+132]〈meta_block_header_n_bltypes_i〉) (44608)
  a=r 252 (44608)
  a+= 132 (44610)
  d=a (44612)
  c=*d (44613)
  a=r 0 (44614)
  a++ (44616)
  d=a (44617)
  *d=c (44618)
  (                    3138:   prefix_codes = alloc_pH〈n_bltypes_i〉) (44619)
  (         H[t0+2]〈〉 = t0) (44619)
  d++ (44619)
  a=r 0 (44620)
  *d=a (44622)
  (saved bsp, return id:) (44623)
  (         H[t0+3]〈〉 = 189) (44623)
  d++ (44623)
  *d= 189 (44624)
  (push arguments:) (44626)
  (         H[t0+4]〈〉 = H[t0+1]〈n_bltypes_i〉) (44626)
  d++ (44626)
  *d=c (44627)
  (         t0 = t0 + 3) (44628)
  c= 3 (44628)
  a+=c (44630)
  r=a 0 (44631)
  (         goto addr_alloc_pH) (44633)
  lj 1446 (44633)
  (        :return_id_189:) (44636)
  (         H[t0+2]〈prefix_codes〉 = t1) (44636)
  a=r 0 (44636)
  a+= 2 (44638)
  d=a (44640)
  a=r 1 (44641)
  *d=a (44643)
  (                    3139:   alphabet_size = 704) (44644)
  (         H[t0+3]〈alphabet_size〉 = 704) (44644)
  d++ (44644)
  a= 2 (44645)
  a<<= 8 (44647)
  a+= 192 (44649)
  *d=a (44651)
  (                    3140:   j = 0) (44652)
  (         H[t0+4]〈j〉 = 0) (44652)
  d++ (44652)
  *d=0 (44653)
  (                    3141:   while j < n_bltypes_i:) (44654)
  (        :while_1801:) (44654)
  (         t1 = H[t0+4]〈j〉 < H[t0+1]〈n_bltypes_i〉) (44654)
  a=r 0 (44654)
  a++ (44656)
  d=a (44657)
  c=*d (44658)
  a=r 0 (44659)
  a+= 4 (44661)
  d=a (44663)
  a=*d (44664)
  a<c (44665)
  a=0 (44666)
  jf 1 (44667)
  a++ (44669)
  r=a 1 (44670)
  (         ifN t1 goto whileend_1803) (44672)
  a== 0 (44672)
  jf 3 (44674)
  lj 44773 (44676)
  (                    3142:     prefix_codes[j] = parse_prefix_code〈alphabet_size〉) (44679)
  (         H[t0+5]〈〉 = t0) (44679)
  d++ (44679)
  a=r 0 (44680)
  *d=a (44682)
  (saved bsp, return id:) (44683)
  (         H[t0+6]〈〉 = 190) (44683)
  d++ (44683)
  *d= 190 (44684)
  (push arguments:) (44686)
  (         H[t0+7]〈〉 = H[t0+3]〈alphabet_size〉) (44686)
  a+= 3 (44686)
  d=a (44688)
  c=*d (44689)
  a=r 0 (44690)
  a+= 7 (44692)
  d=a (44694)
  *d=c (44695)
  (         t0 = t0 + 6) (44696)
  c= 6 (44696)
  a=r 0 (44698)
  a+=c (44700)
  r=a 0 (44701)
  (         goto parse_prefix_code) (44703)
  lj 42382 (44703)
  (        :return_id_190:) (44706)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44706)
  a=r 0 (44706)
  a+= 4 (44708)
  d=a (44710)
  c=*d (44711)
  a=r 0 (44712)
  a+= 2 (44714)
  d=a (44716)
  a=*d (44717)
  a+=c (44718)
  r=a 2 (44719)
  (         H[t2]〈〉 = t1) (44721)
  d=a (44721)
  a=r 1 (44722)
  *d=a (44724)
  (                    3143:     if prefix_codes[j] == NONE:) (44725)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44725)
  a=r 0 (44725)
  a+= 4 (44727)
  d=a (44729)
  c=*d (44730)
  a=r 0 (44731)
  a+= 2 (44733)
  d=a (44735)
  a=*d (44736)
  a+=c (44737)
  r=a 2 (44738)
  (         t2 = H[t2]〈〉) (44740)
  d=a (44740)
  a=*d (44741)
  r=a 2 (44742)
  (         t1 = t2 == 4294967295) (44744)
  c=0 (44744)
  c-- (44745)
  a==c (44746)
  a=0 (44747)
  jf 1 (44748)
  a++ (44750)
  r=a 1 (44751)
  (         ifN t1 goto else_1806) (44753)
  a== 0 (44753)
  jf 3 (44755)
  lj 44764 (44757)
  (                    3144:       error〈〉) (44760)
  (         error) (44760)
  error (44760)
  (         goto endif_1807) (44761)
  lj 44764 (44761)
  (        :else_1806:) (44764)
  (        :endif_1807:) (44764)
  (                    3145:     j += 1) (44764)
  (         H[t0+4]〈j〉 = H[t0+4]〈j〉 + 1) (44764)
  a=r 0 (44764)
  a+= 4 (44766)
  d=a (44768)
  *d++ (44769)
  (         goto while_1801) (44770)
  lj 44654 (44770)
  (        :whileend_1803:) (44773)
  (                    3146:   PrefixCodesInsertAndCopyLengths_data = prefix_codes) (44773)
  (         H[t252+90]〈PrefixCodesInsertAndCopyLengths_data〉 = H[t0+2]〈prefix_codes〉) (44773)
  a=r 0 (44773)
  a+= 2 (44775)
  d=a (44777)
  c=*d (44778)
  a=r 252 (44779)
  a+= 90 (44781)
  d=a (44783)
  *d=c (44784)
  (                    3147:   return PrefixCodesInsertAndCopyLengths) (44785)
  (         t1 = H[t252+89]〈PrefixCodesInsertAndCopyLengths〉) (44785)
  d-- (44785)
  a=*d (44786)
  r=a 1 (44787)
  (         t2 = H[t0]〈〉) (44789)
  d=r 0 (44789)
  a=*d (44791)
  r=a 2 (44792)
  (         t0 = t0 - 1) (44794)
  a=r 0 (44794)
  a-- (44796)
  r=a 0 (44797)
  (         t0 = H[t0]〈〉) (44799)
  d=a (44799)
  a=*d (44800)
  r=a 0 (44801)
  (         goto find_label_ret_id) (44803)
  lj 62666 (44803)
  (insert return as it might not be done by the function:) (44806)
  (         t2 = H[t0]〈〉) (44806)
  d=a (44806)
  a=*d (44807)
  r=a 2 (44808)
  (         t0 = t0 - 1) (44810)
  a=r 0 (44810)
  a-- (44812)
  r=a 0 (44813)
  (         t0 = H[t0]〈〉) (44815)
  d=a (44815)
  a=*d (44816)
  r=a 0 (44817)
  (         goto find_label_ret_id) (44819)
  lj 62666 (44819)
  (         MarkTempVarEnd) (44822)
  (        :parse_prefix_codes_insert_and_copy_lengths_end~:) (44822)
  (                    3149: def parse_prefix_codes_distances〈〉:) (44822)
  (         goto parse_prefix_codes_distances_end~) (44822)
  lj 45063 (44822)
  (        :parse_prefix_codes_distances:) (44825)
  (         MarkTempVarStart) (44825)
  (                    3150:   global PrefixCodesDistances_data) (44825)
  (Global PrefixCodesDistances_data via H[t252+92]) (44825)
  (                    3151:   n_trees_d = meta_block_header_n_trees_d) (44825)
  (         H[t0+1]〈n_trees_d〉 = H[t252+137]〈meta_block_header_n_trees_d〉) (44825)
  a=r 252 (44825)
  a+= 137 (44827)
  d=a (44829)
  c=*d (44830)
  a=r 0 (44831)
  a++ (44833)
  d=a (44834)
  *d=c (44835)
  (                    3152:   prefix_codes = alloc_pH〈n_trees_d〉) (44836)
  (         H[t0+2]〈〉 = t0) (44836)
  d++ (44836)
  a=r 0 (44837)
  *d=a (44839)
  (saved bsp, return id:) (44840)
  (         H[t0+3]〈〉 = 191) (44840)
  d++ (44840)
  *d= 191 (44841)
  (push arguments:) (44843)
  (         H[t0+4]〈〉 = H[t0+1]〈n_trees_d〉) (44843)
  d++ (44843)
  *d=c (44844)
  (         t0 = t0 + 3) (44845)
  c= 3 (44845)
  a+=c (44847)
  r=a 0 (44848)
  (         goto addr_alloc_pH) (44850)
  lj 1446 (44850)
  (        :return_id_191:) (44853)
  (         H[t0+2]〈prefix_codes〉 = t1) (44853)
  a=r 0 (44853)
  a+= 2 (44855)
  d=a (44857)
  a=r 1 (44858)
  *d=a (44860)
  (                    3153:   alphabet_size = 16 + meta_block_header_n_direct + 〈48 << meta_block_header_n_postfix〉) (44861)
  (         t2 = 16 + H[t252+135]〈meta_block_header_n_direct〉) (44861)
  a=r 252 (44861)
  a+= 135 (44863)
  d=a (44865)
  c=*d (44866)
  a= 16 (44867)
  a+=c (44869)
  r=a 2 (44870)
  (         t3 = 48 << H[t252+134]〈meta_block_header_n_postfix〉) (44872)
  d-- (44872)
  c=*d (44873)
  a= 48 (44874)
  a<<=c (44876)
  r=a 3 (44877)
  (         t1 = t2 + t3) (44879)
  c=a (44879)
  a=r 2 (44880)
  a+=c (44882)
  r=a 1 (44883)
  (         H[t0+3]〈alphabet_size〉 = t1) (44885)
  a=r 0 (44885)
  a+= 3 (44887)
  d=a (44889)
  a=r 1 (44890)
  *d=a (44892)
  (                    3154:   j = 0) (44893)
  (         H[t0+4]〈j〉 = 0) (44893)
  d++ (44893)
  *d=0 (44894)
  (                    3155:   while j < n_trees_d:) (44895)
  (        :while_1808:) (44895)
  (         t1 = H[t0+4]〈j〉 < H[t0+1]〈n_trees_d〉) (44895)
  a=r 0 (44895)
  a++ (44897)
  d=a (44898)
  c=*d (44899)
  a=r 0 (44900)
  a+= 4 (44902)
  d=a (44904)
  a=*d (44905)
  a<c (44906)
  a=0 (44907)
  jf 1 (44908)
  a++ (44910)
  r=a 1 (44911)
  (         ifN t1 goto whileend_1810) (44913)
  a== 0 (44913)
  jf 3 (44915)
  lj 45014 (44917)
  (                    3156:     prefix_codes[j] = parse_prefix_code〈alphabet_size〉) (44920)
  (         H[t0+5]〈〉 = t0) (44920)
  d++ (44920)
  a=r 0 (44921)
  *d=a (44923)
  (saved bsp, return id:) (44924)
  (         H[t0+6]〈〉 = 192) (44924)
  d++ (44924)
  *d= 192 (44925)
  (push arguments:) (44927)
  (         H[t0+7]〈〉 = H[t0+3]〈alphabet_size〉) (44927)
  a+= 3 (44927)
  d=a (44929)
  c=*d (44930)
  a=r 0 (44931)
  a+= 7 (44933)
  d=a (44935)
  *d=c (44936)
  (         t0 = t0 + 6) (44937)
  c= 6 (44937)
  a=r 0 (44939)
  a+=c (44941)
  r=a 0 (44942)
  (         goto parse_prefix_code) (44944)
  lj 42382 (44944)
  (        :return_id_192:) (44947)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44947)
  a=r 0 (44947)
  a+= 4 (44949)
  d=a (44951)
  c=*d (44952)
  a=r 0 (44953)
  a+= 2 (44955)
  d=a (44957)
  a=*d (44958)
  a+=c (44959)
  r=a 2 (44960)
  (         H[t2]〈〉 = t1) (44962)
  d=a (44962)
  a=r 1 (44963)
  *d=a (44965)
  (                    3157:     if prefix_codes[j] == NONE:) (44966)
  (         t2 = H[t0+2]〈prefix_codes〉 + H[t0+4]〈j〉) (44966)
  a=r 0 (44966)
  a+= 4 (44968)
  d=a (44970)
  c=*d (44971)
  a=r 0 (44972)
  a+= 2 (44974)
  d=a (44976)
  a=*d (44977)
  a+=c (44978)
  r=a 2 (44979)
  (         t2 = H[t2]〈〉) (44981)
  d=a (44981)
  a=*d (44982)
  r=a 2 (44983)
  (         t1 = t2 == 4294967295) (44985)
  c=0 (44985)
  c-- (44986)
  a==c (44987)
  a=0 (44988)
  jf 1 (44989)
  a++ (44991)
  r=a 1 (44992)
  (         ifN t1 goto else_1813) (44994)
  a== 0 (44994)
  jf 3 (44996)
  lj 45005 (44998)
  (                    3158:       error〈〉) (45001)
  (         error) (45001)
  error (45001)
  (         goto endif_1814) (45002)
  lj 45005 (45002)
  (        :else_1813:) (45005)
  (        :endif_1814:) (45005)
  (                    3159:     j += 1) (45005)
  (         H[t0+4]〈j〉 = H[t0+4]〈j〉 + 1) (45005)
  a=r 0 (45005)
  a+= 4 (45007)
  d=a (45009)
  *d++ (45010)
  (         goto while_1808) (45011)
  lj 44895 (45011)
  (        :whileend_1810:) (45014)
  (                    3160:   PrefixCodesDistances_data = prefix_codes) (45014)
  (         H[t252+92]〈PrefixCodesDistances_data〉 = H[t0+2]〈prefix_codes〉) (45014)
  a=r 0 (45014)
  a+= 2 (45016)
  d=a (45018)
  c=*d (45019)
  a=r 252 (45020)
  a+= 92 (45022)
  d=a (45024)
  *d=c (45025)
  (                    3161:   return PrefixCodesDistances) (45026)
  (         t1 = H[t252+91]〈PrefixCodesDistances〉) (45026)
  d-- (45026)
  a=*d (45027)
  r=a 1 (45028)
  (         t2 = H[t0]〈〉) (45030)
  d=r 0 (45030)
  a=*d (45032)
  r=a 2 (45033)
  (         t0 = t0 - 1) (45035)
  a=r 0 (45035)
  a-- (45037)
  r=a 0 (45038)
  (         t0 = H[t0]〈〉) (45040)
  d=a (45040)
  a=*d (45041)
  r=a 0 (45042)
  (         goto find_label_ret_id) (45044)
  lj 62666 (45044)
  (insert return as it might not be done by the function:) (45047)
  (         t2 = H[t0]〈〉) (45047)
  d=a (45047)
  a=*d (45048)
  r=a 2 (45049)
  (         t0 = t0 - 1) (45051)
  a=r 0 (45051)
  a-- (45053)
  r=a 0 (45054)
  (         t0 = H[t0]〈〉) (45056)
  d=a (45056)
  a=*d (45057)
  r=a 0 (45058)
  (         goto find_label_ret_id) (45060)
  lj 62666 (45060)
  (         MarkTempVarEnd) (45063)
  (        :parse_prefix_codes_distances_end~:) (45063)
  (                    3163: def parse_context_map〈n_trees, len_〉:) (45063)
  (         goto parse_context_map_end~) (45063)
  lj 45803 (45063)
  (        :parse_context_map:) (45066)
  (         MarkTempVarStart) (45066)
  (Arg n_trees at t0 + 1) (45066)
  (Arg len_ at t0 + 2) (45066)
  (                    3164:   if read_bit〈〉:) (45066)
  (         H[t0+3]〈〉 = t0) (45066)
  a=r 0 (45066)
  a+= 3 (45068)
  d=a (45070)
  a=r 0 (45071)
  *d=a (45073)
  (saved bsp, return id:) (45074)
  (         H[t0+4]〈〉 = 193) (45074)
  d++ (45074)
  *d= 193 (45075)
  (push arguments:) (45077)
  (         t0 = t0 + 4) (45077)
  c= 4 (45077)
  a+=c (45079)
  r=a 0 (45080)
  (         goto read_bit) (45082)
  lj 4578 (45082)
  (        :return_id_193:) (45085)
  (         ifN t1 goto else_1815) (45085)
  a=r 1 (45085)
  a== 0 (45087)
  jf 3 (45089)
  lj 45098 (45091)
  (                    3165:     error〈〉 # err eof) (45094)
  (         error) (45094)
  error (45094)
  (         goto endif_1816) (45095)
  lj 45098 (45095)
  (        :else_1815:) (45098)
  (        :endif_1816:) (45098)
  (                    3166:   rlemax = read_bit_result) (45098)
  (         H[t0+3]〈rlemax〉 = H[t252+6]〈read_bit_result〉) (45098)
  a=r 252 (45098)
  a+= 6 (45100)
  d=a (45102)
  c=*d (45103)
  a=r 0 (45104)
  a+= 3 (45106)
  d=a (45108)
  *d=c (45109)
  (                    3167:   if rlemax:) (45110)
  (         ifN H[t0+3]〈rlemax〉 goto else_1817) (45110)
  a=*d (45110)
  a== 0 (45111)
  jf 3 (45113)
  lj 45171 (45115)
  (                    3168:     if read_u32_from_n_bits〈4〉:) (45118)
  (         H[t0+4]〈〉 = t0) (45118)
  d++ (45118)
  a=r 0 (45119)
  *d=a (45121)
  (saved bsp, return id:) (45122)
  (         H[t0+5]〈〉 = 194) (45122)
  d++ (45122)
  *d= 194 (45123)
  (push arguments:) (45125)
  (         H[t0+6]〈〉 = 4) (45125)
  d++ (45125)
  *d= 4 (45126)
  (         t0 = t0 + 5) (45128)
  c= 5 (45128)
  a+=c (45130)
  r=a 0 (45131)
  (         goto read_u32_from_n_bits) (45133)
  lj 4857 (45133)
  (        :return_id_194:) (45136)
  (         ifN t1 goto else_1819) (45136)
  a=r 1 (45136)
  a== 0 (45138)
  jf 3 (45140)
  lj 45149 (45142)
  (                    3169:       error〈〉 # err eof) (45145)
  (         error) (45145)
  error (45145)
  (         goto endif_1820) (45146)
  lj 45149 (45146)
  (        :else_1819:) (45149)
  (        :endif_1820:) (45149)
  (                    3170:     rlemax = read_u32_from_n_bits_result + 1) (45149)
  (         t1 = H[t252+7]〈read_u32_from_n_bits_result〉 + 1) (45149)
  c= 1 (45149)
  a=r 252 (45151)
  a+= 7 (45153)
  d=a (45155)
  a=*d (45156)
  a+=c (45157)
  r=a 1 (45158)
  (         H[t0+3]〈rlemax〉 = t1) (45160)
  a=r 0 (45160)
  a+= 3 (45162)
  d=a (45164)
  a=r 1 (45165)
  *d=a (45167)
  (         goto endif_1818) (45168)
  lj 45171 (45168)
  (        :else_1817:) (45171)
  (        :endif_1818:) (45171)
  (                    3171:   alphabet_size = rlemax + n_trees) (45171)
  (         t1 = H[t0+3]〈rlemax〉 + H[t0+1]〈n_trees〉) (45171)
  a=r 0 (45171)
  a++ (45173)
  d=a (45174)
  c=*d (45175)
  a=r 0 (45176)
  a+= 3 (45178)
  d=a (45180)
  a=*d (45181)
  a+=c (45182)
  r=a 1 (45183)
  (         H[t0+4]〈alphabet_size〉 = t1) (45185)
  d++ (45185)
  *d=a (45186)
  (                    3172:   prefix_tree = parse_prefix_code〈alphabet_size〉) (45187)
  (         H[t0+5]〈〉 = t0) (45187)
  d++ (45187)
  a=r 0 (45188)
  *d=a (45190)
  (saved bsp, return id:) (45191)
  (         H[t0+6]〈〉 = 195) (45191)
  d++ (45191)
  *d= 195 (45192)
  (push arguments:) (45194)
  (         H[t0+7]〈〉 = H[t0+4]〈alphabet_size〉) (45194)
  a+= 4 (45194)
  d=a (45196)
  c=*d (45197)
  a=r 0 (45198)
  a+= 7 (45200)
  d=a (45202)
  *d=c (45203)
  (         t0 = t0 + 6) (45204)
  c= 6 (45204)
  a=r 0 (45206)
  a+=c (45208)
  r=a 0 (45209)
  (         goto parse_prefix_code) (45211)
  lj 42382 (45211)
  (        :return_id_195:) (45214)
  (         H[t0+5]〈prefix_tree〉 = t1) (45214)
  a=r 0 (45214)
  a+= 5 (45216)
  d=a (45218)
  a=r 1 (45219)
  *d=a (45221)
  (                    3173:   if prefix_tree == NONE:) (45222)
  (         t1 = H[t0+5]〈prefix_tree〉 == 4294967295) (45222)
  c=0 (45222)
  c-- (45223)
  a=*d (45224)
  a==c (45225)
  a=0 (45226)
  jf 1 (45227)
  a++ (45229)
  r=a 1 (45230)
  (         ifN t1 goto else_1822) (45232)
  a== 0 (45232)
  jf 3 (45234)
  lj 45243 (45236)
  (                    3174:     error〈〉  # err) (45239)
  (         error) (45239)
  error (45239)
  (         goto endif_1823) (45240)
  lj 45243 (45240)
  (        :else_1822:) (45243)
  (        :endif_1823:) (45243)
  (                    3175:   c_map = alloc_pM〈len_〉) (45243)
  (         H[t0+6]〈〉 = t0) (45243)
  a=r 0 (45243)
  a+= 6 (45245)
  d=a (45247)
  a=r 0 (45248)
  *d=a (45250)
  (saved bsp, return id:) (45251)
  (         H[t0+7]〈〉 = 196) (45251)
  d++ (45251)
  *d= 196 (45252)
  (push arguments:) (45254)
  (         H[t0+8]〈〉 = H[t0+2]〈len_〉) (45254)
  a+= 2 (45254)
  d=a (45256)
  c=*d (45257)
  a=r 0 (45258)
  a+= 8 (45260)
  d=a (45262)
  *d=c (45263)
  (         t0 = t0 + 7) (45264)
  c= 7 (45264)
  a=r 0 (45266)
  a+=c (45268)
  r=a 0 (45269)
  (         goto addr_alloc_pM) (45271)
  lj 323 (45271)
  (        :return_id_196:) (45274)
  (         t1 = t1 | 2147483648) (45274)
  a= 1 (45274)
  a<<= 31 (45276)
  c=a (45278)
  a=r 1 (45279)
  a|=c (45281)
  r=a 1 (45282)
  (         H[t0+6]〈c_map〉 = t1) (45284)
  a=r 0 (45284)
  a+= 6 (45286)
  d=a (45288)
  a=r 1 (45289)
  *d=a (45291)
  (                    3176:   c_pushed = 0) (45292)
  (         H[t0+7]〈c_pushed〉 = 0) (45292)
  d++ (45292)
  *d=0 (45293)
  (                    3177:   while c_pushed < len_:) (45294)
  (        :while_1824:) (45294)
  (         t1 = H[t0+7]〈c_pushed〉 < H[t0+2]〈len_〉) (45294)
  a=r 0 (45294)
  a+= 2 (45296)
  d=a (45298)
  c=*d (45299)
  a=r 0 (45300)
  a+= 7 (45302)
  d=a (45304)
  a=*d (45305)
  a<c (45306)
  a=0 (45307)
  jf 1 (45308)
  a++ (45310)
  r=a 1 (45311)
  (         ifN t1 goto whileend_1826) (45313)
  a== 0 (45313)
  jf 3 (45315)
  lj 45680 (45317)
  (                    3178:     run_length_code = lookup_symbol〈prefix_tree〉) (45320)
  (         H[t0+8]〈〉 = t0) (45320)
  d++ (45320)
  a=r 0 (45321)
  *d=a (45323)
  (saved bsp, return id:) (45324)
  (         H[t0+9]〈〉 = 197) (45324)
  d++ (45324)
  *d= 197 (45325)
  (push arguments:) (45327)
  (         H[t0+10]〈〉 = H[t0+5]〈prefix_tree〉) (45327)
  a+= 5 (45327)
  d=a (45329)
  c=*d (45330)
  a=r 0 (45331)
  a+= 10 (45333)
  d=a (45335)
  *d=c (45336)
  (         t0 = t0 + 9) (45337)
  c= 9 (45337)
  a=r 0 (45339)
  a+=c (45341)
  r=a 0 (45342)
  (         goto lookup_symbol) (45344)
  lj 6923 (45344)
  (        :return_id_197:) (45347)
  (         H[t0+8]〈run_length_code〉 = t1) (45347)
  a=r 0 (45347)
  a+= 8 (45349)
  d=a (45351)
  a=r 1 (45352)
  *d=a (45354)
  (                    3179:     if run_length_code == NONE:) (45355)
  (         t1 = H[t0+8]〈run_length_code〉 == 4294967295) (45355)
  c=0 (45355)
  c-- (45356)
  a=*d (45357)
  a==c (45358)
  a=0 (45359)
  jf 1 (45360)
  a++ (45362)
  r=a 1 (45363)
  (         ifN t1 goto else_1829) (45365)
  a== 0 (45365)
  jf 3 (45367)
  lj 45376 (45369)
  (                    3180:       error〈〉  # err eof OR ParseErrorContextMap) (45372)
  (         error) (45372)
  error (45372)
  (         goto endif_1830) (45373)
  lj 45376 (45373)
  (        :else_1829:) (45376)
  (        :endif_1830:) (45376)
  (                    3181:     if run_length_code > 0 and run_length_code <= rlemax:) (45376)
  (         t2 = H[t0+8]〈run_length_code〉 > 0) (45376)
  c=0 (45376)
  a=r 0 (45377)
  a+= 8 (45379)
  d=a (45381)
  a=*d (45382)
  a>c (45383)
  a=0 (45384)
  jf 1 (45385)
  a++ (45387)
  r=a 2 (45388)
  (         t3 = H[t0+8]〈run_length_code〉 <= H[t0+3]〈rlemax〉) (45390)
  a=r 0 (45390)
  a+= 3 (45392)
  d=a (45394)
  c=*d (45395)
  a=r 0 (45396)
  a+= 8 (45398)
  d=a (45400)
  a=*d (45401)
  a==c (45402)
  jt 4 (45403)
  a<c (45405)
  a=0 (45406)
  jf 2 (45407)
  a= 1 (45409)
  r=a 3 (45411)
  (         t1 = t2 and t3) (45413)
  c=a (45413)
  a=r 2 (45414)
  a== 0 (45416)
  jt 1 (45418)
  a=c (45420)
  r=a 1 (45421)
  (         ifN t1 goto else_1833) (45423)
  a== 0 (45423)
  jf 3 (45425)
  lj 45588 (45427)
  (                    3182:       if read_u32_from_n_bits〈run_length_code〉:) (45430)
  (         H[t0+9]〈〉 = t0) (45430)
  d++ (45430)
  a=r 0 (45431)
  *d=a (45433)
  (saved bsp, return id:) (45434)
  (         H[t0+10]〈〉 = 198) (45434)
  d++ (45434)
  *d= 198 (45435)
  (push arguments:) (45437)
  (         H[t0+11]〈〉 = H[t0+8]〈run_length_code〉) (45437)
  a+= 8 (45437)
  d=a (45439)
  c=*d (45440)
  a=r 0 (45441)
  a+= 11 (45443)
  d=a (45445)
  *d=c (45446)
  (         t0 = t0 + 10) (45447)
  c= 10 (45447)
  a=r 0 (45449)
  a+=c (45451)
  r=a 0 (45452)
  (         goto read_u32_from_n_bits) (45454)
  lj 4857 (45454)
  (        :return_id_198:) (45457)
  (         ifN t1 goto else_1835) (45457)
  a=r 1 (45457)
  a== 0 (45459)
  jf 3 (45461)
  lj 45470 (45463)
  (                    3183:         error〈〉 # err eof) (45466)
  (         error) (45466)
  error (45466)
  (         goto endif_1836) (45467)
  lj 45470 (45467)
  (        :else_1835:) (45470)
  (        :endif_1836:) (45470)
  (                    3184:       repeat = 〈1 << run_length_code〉 + read_u32_from_n_bits_result) (45470)
  (         t2 = 1 << H[t0+8]〈run_length_code〉) (45470)
  a=r 0 (45470)
  a+= 8 (45472)
  d=a (45474)
  c=*d (45475)
  a= 1 (45476)
  a<<=c (45478)
  r=a 2 (45479)
  (         t1 = t2 + H[t252+7]〈read_u32_from_n_bits_result〉) (45481)
  a=r 252 (45481)
  a+= 7 (45483)
  d=a (45485)
  c=*d (45486)
  a=r 2 (45487)
  a+=c (45489)
  r=a 1 (45490)
  (         H[t0+9]〈repeat〉 = t1) (45492)
  a=r 0 (45492)
  a+= 9 (45494)
  d=a (45496)
  a=r 1 (45497)
  *d=a (45499)
  (                    3185:       j = 0) (45500)
  (         H[t0+10]〈j〉 = 0) (45500)
  d++ (45500)
  *d=0 (45501)
  (                    3186:       while j < repeat:) (45502)
  (        :while_1837:) (45502)
  (         t1 = H[t0+10]〈j〉 < H[t0+9]〈repeat〉) (45502)
  a=r 0 (45502)
  a+= 9 (45504)
  d=a (45506)
  c=*d (45507)
  d++ (45508)
  a=*d (45509)
  a<c (45510)
  a=0 (45511)
  jf 1 (45512)
  a++ (45514)
  r=a 1 (45515)
  (         ifN t1 goto whileend_1839) (45517)
  a== 0 (45517)
  jf 3 (45519)
  lj 45585 (45521)
  (                    3187:         c_map[c_pushed] = 0) (45524)
  (         t1 = H[t0+6]〈c_map〉 & 2147483647) (45524)
  a=0 (45524)
  a-- (45525)
  a>>= 1 (45526)
  c=a (45528)
  a=r 0 (45529)
  a+= 6 (45531)
  d=a (45533)
  a=*d (45534)
  a&=c (45535)
  r=a 1 (45536)
  (         t1 = t1 + H[t0+7]〈c_pushed〉) (45538)
  d++ (45538)
  c=*d (45539)
  a+=c (45540)
  r=a 1 (45541)
  (         M[t1] = 0) (45543)
  c=a (45543)
  *c=0 (45544)
  (                    3188:         c_pushed += 1) (45545)
  (         H[t0+7]〈c_pushed〉 = H[t0+7]〈c_pushed〉 + 1) (45545)
  *d++ (45545)
  (                    3189:         if c_pushed > len_:) (45546)
  (         t1 = H[t0+7]〈c_pushed〉 > H[t0+2]〈len_〉) (45546)
  a=r 0 (45546)
  a+= 2 (45548)
  d=a (45550)
  c=*d (45551)
  a=r 0 (45552)
  a+= 7 (45554)
  d=a (45556)
  a=*d (45557)
  a>c (45558)
  a=0 (45559)
  jf 1 (45560)
  a++ (45562)
  r=a 1 (45563)
  (         ifN t1 goto else_1842) (45565)
  a== 0 (45565)
  jf 3 (45567)
  lj 45576 (45569)
  (                    3190:           error〈〉  # RunLengthExceededSizeOfContextMap) (45572)
  (         error) (45572)
  error (45572)
  (         goto endif_1843) (45573)
  lj 45576 (45573)
  (        :else_1842:) (45576)
  (        :endif_1843:) (45576)
  (                    3191:         j += 1) (45576)
  (         H[t0+10]〈j〉 = H[t0+10]〈j〉 + 1) (45576)
  a=r 0 (45576)
  a+= 10 (45578)
  d=a (45580)
  *d++ (45581)
  (         goto while_1837) (45582)
  lj 45502 (45582)
  (        :whileend_1839:) (45585)
  (         goto endif_1834) (45585)
  lj 45677 (45585)
  (        :else_1833:) (45588)
  (                    3193:       if run_length_code == 0:) (45588)
  (         t1 = H[t0+8]〈run_length_code〉 == 0) (45588)
  c=0 (45588)
  a=r 0 (45589)
  a+= 8 (45591)
  d=a (45593)
  a=*d (45594)
  a==c (45595)
  a=0 (45596)
  jf 1 (45597)
  a++ (45599)
  r=a 1 (45600)
  (         ifN t1 goto else_1845) (45602)
  a== 0 (45602)
  jf 3 (45604)
  lj 45633 (45606)
  (                    3194:         c_map[c_pushed] = 0) (45609)
  (         t1 = H[t0+6]〈c_map〉 & 2147483647) (45609)
  a=0 (45609)
  a-- (45610)
  a>>= 1 (45611)
  c=a (45613)
  a=r 0 (45614)
  a+= 6 (45616)
  d=a (45618)
  a=*d (45619)
  a&=c (45620)
  r=a 1 (45621)
  (         t1 = t1 + H[t0+7]〈c_pushed〉) (45623)
  d++ (45623)
  c=*d (45624)
  a+=c (45625)
  r=a 1 (45626)
  (         M[t1] = 0) (45628)
  c=a (45628)
  *c=0 (45629)
  (         goto endif_1846) (45630)
  lj 45671 (45630)
  (        :else_1845:) (45633)
  (                    3196:         c_map[c_pushed] = run_length_code - rlemax) (45633)
  (         t1 = H[t0+8]〈run_length_code〉 - H[t0+3]〈rlemax〉) (45633)
  a=r 0 (45633)
  a+= 3 (45635)
  d=a (45637)
  c=*d (45638)
  a=r 0 (45639)
  a+= 8 (45641)
  d=a (45643)
  a=*d (45644)
  a-=c (45645)
  r=a 1 (45646)
  (         t2 = H[t0+6]〈c_map〉 & 2147483647) (45648)
  a=0 (45648)
  a-- (45649)
  a>>= 1 (45650)
  c=a (45652)
  a=r 0 (45653)
  a+= 6 (45655)
  d=a (45657)
  a=*d (45658)
  a&=c (45659)
  r=a 2 (45660)
  (         t2 = t2 + H[t0+7]〈c_pushed〉) (45662)
  d++ (45662)
  c=*d (45663)
  a+=c (45664)
  r=a 2 (45665)
  (         M[t2] = t1) (45667)
  c=a (45667)
  a=r 1 (45668)
  *c=a (45670)
  (        :endif_1846:) (45671)
  (                    3197:       c_pushed += 1) (45671)
  (         H[t0+7]〈c_pushed〉 = H[t0+7]〈c_pushed〉 + 1) (45671)
  a=r 0 (45671)
  a+= 7 (45673)
  d=a (45675)
  *d++ (45676)
  (        :endif_1834:) (45677)
  (         goto while_1824) (45677)
  lj 45294 (45677)
  (        :whileend_1826:) (45680)
  (                    3198:   if read_bit〈〉:) (45680)
  (         H[t0+11]〈〉 = t0) (45680)
  a=r 0 (45680)
  a+= 11 (45682)
  d=a (45684)
  a=r 0 (45685)
  *d=a (45687)
  (saved bsp, return id:) (45688)
  (         H[t0+12]〈〉 = 199) (45688)
  d++ (45688)
  *d= 199 (45689)
  (push arguments:) (45691)
  (         t0 = t0 + 12) (45691)
  c= 12 (45691)
  a+=c (45693)
  r=a 0 (45694)
  (         goto read_bit) (45696)
  lj 4578 (45696)
  (        :return_id_199:) (45699)
  (         ifN t1 goto else_1847) (45699)
  a=r 1 (45699)
  a== 0 (45701)
  jf 3 (45703)
  lj 45712 (45705)
  (                    3199:     error〈〉  # err eof) (45708)
  (         error) (45708)
  error (45708)
  (         goto endif_1848) (45709)
  lj 45712 (45709)
  (        :else_1847:) (45712)
  (        :endif_1848:) (45712)
  (                    3200:   imtf_bit = read_bit_result) (45712)
  (         H[t0+11]〈imtf_bit〉 = H[t252+6]〈read_bit_result〉) (45712)
  a=r 252 (45712)
  a+= 6 (45714)
  d=a (45716)
  c=*d (45717)
  a=r 0 (45718)
  a+= 11 (45720)
  d=a (45722)
  *d=c (45723)
  (                    3201:   if imtf_bit:) (45724)
  (         ifN H[t0+11]〈imtf_bit〉 goto else_1849) (45724)
  a=*d (45724)
  a== 0 (45725)
  jf 3 (45727)
  lj 45762 (45729)
  (                    3202:     inverse_move_to_front_transform〈c_map〉 # mut c_map) (45732)
  (         H[t0+12]〈〉 = t0) (45732)
  d++ (45732)
  a=r 0 (45733)
  *d=a (45735)
  (saved bsp, return id:) (45736)
  (         H[t0+13]〈〉 = 200) (45736)
  d++ (45736)
  *d= 200 (45737)
  (push arguments:) (45739)
  (         H[t0+14]〈〉 = H[t0+6]〈c_map〉) (45739)
  a+= 6 (45739)
  d=a (45741)
  c=*d (45742)
  a=r 0 (45743)
  a+= 14 (45745)
  d=a (45747)
  *d=c (45748)
  (         t0 = t0 + 13) (45749)
  c= 13 (45749)
  a=r 0 (45751)
  a+=c (45753)
  r=a 0 (45754)
  (         goto inverse_move_to_front_transform) (45756)
  lj 46088 (45756)
  (        :return_id_200:) (45759)
  (         goto endif_1850) (45759)
  lj 45762 (45759)
  (        :else_1849:) (45762)
  (        :endif_1850:) (45762)
  (                    3203:   return c_map) (45762)
  (         t1 = H[t0+6]〈c_map〉) (45762)
  a=r 0 (45762)
  a+= 6 (45764)
  d=a (45766)
  a=*d (45767)
  r=a 1 (45768)
  (         t2 = H[t0]〈〉) (45770)
  d=r 0 (45770)
  a=*d (45772)
  r=a 2 (45773)
  (         t0 = t0 - 1) (45775)
  a=r 0 (45775)
  a-- (45777)
  r=a 0 (45778)
  (         t0 = H[t0]〈〉) (45780)
  d=a (45780)
  a=*d (45781)
  r=a 0 (45782)
  (         goto find_label_ret_id) (45784)
  lj 62666 (45784)
  (insert return as it might not be done by the function:) (45787)
  (         t2 = H[t0]〈〉) (45787)
  d=a (45787)
  a=*d (45788)
  r=a 2 (45789)
  (         t0 = t0 - 1) (45791)
  a=r 0 (45791)
  a-- (45793)
  r=a 0 (45794)
  (         t0 = H[t0]〈〉) (45796)
  d=a (45796)
  a=*d (45797)
  r=a 0 (45798)
  (         goto find_label_ret_id) (45800)
  lj 62666 (45800)
  (         MarkTempVarEnd) (45803)
  (        :parse_context_map_end~:) (45803)
  (                    3205: def parse_context_map_literals〈〉:) (45803)
  (         goto parse_context_map_literals_end~) (45803)
  lj 45944 (45803)
  (        :parse_context_map_literals:) (45806)
  (         MarkTempVarStart) (45806)
  (                    3206:   global ContextMapLiterals_data) (45806)
  (Global ContextMapLiterals_data via H[t252+86]) (45806)
  (                    3207:   n_trees = meta_block_header_n_trees_l) (45806)
  (         H[t0+1]〈n_trees〉 = H[t252+136]〈meta_block_header_n_trees_l〉) (45806)
  a=r 252 (45806)
  a+= 136 (45808)
  d=a (45810)
  c=*d (45811)
  a=r 0 (45812)
  a++ (45814)
  d=a (45815)
  *d=c (45816)
  (                    3208:   len_ = meta_block_header_n_bltypes_l * 64) (45817)
  (         t1 = H[t252+131]〈meta_block_header_n_bltypes_l〉 * 64) (45817)
  c= 64 (45817)
  a=r 252 (45819)
  a+= 131 (45821)
  d=a (45823)
  a=*d (45824)
  a*=c (45825)
  r=a 1 (45826)
  (         H[t0+2]〈len_〉 = t1) (45828)
  a=r 0 (45828)
  a+= 2 (45830)
  d=a (45832)
  a=r 1 (45833)
  *d=a (45835)
  (                    3209:   ContextMapLiterals_data = parse_context_map〈n_trees, len_〉) (45836)
  (         H[t0+3]〈〉 = t0) (45836)
  d++ (45836)
  a=r 0 (45837)
  *d=a (45839)
  (saved bsp, return id:) (45840)
  (         H[t0+4]〈〉 = 201) (45840)
  d++ (45840)
  *d= 201 (45841)
  (push arguments:) (45843)
  (         H[t0+5]〈〉 = H[t0+1]〈n_trees〉) (45843)
  a++ (45843)
  d=a (45844)
  c=*d (45845)
  a=r 0 (45846)
  a+= 5 (45848)
  d=a (45850)
  *d=c (45851)
  (         H[t0+6]〈〉 = H[t0+2]〈len_〉) (45852)
  a=r 0 (45852)
  a+= 2 (45854)
  d=a (45856)
  c=*d (45857)
  a=r 0 (45858)
  a+= 6 (45860)
  d=a (45862)
  *d=c (45863)
  (         t0 = t0 + 4) (45864)
  c= 4 (45864)
  a=r 0 (45866)
  a+=c (45868)
  r=a 0 (45869)
  (         goto parse_context_map) (45871)
  lj 45066 (45871)
  (        :return_id_201:) (45874)
  (         H[t252+86]〈ContextMapLiterals_data〉 = t1) (45874)
  a=r 252 (45874)
  a+= 86 (45876)
  d=a (45878)
  a=r 1 (45879)
  *d=a (45881)
  (                    3210:   if ContextMapLiterals_data == NONE:) (45882)
  (         t1 = H[t252+86]〈ContextMapLiterals_data〉 == 4294967295) (45882)
  c=0 (45882)
  c-- (45883)
  a=*d (45884)
  a==c (45885)
  a=0 (45886)
  jf 1 (45887)
  a++ (45889)
  r=a 1 (45890)
  (         ifN t1 goto else_1852) (45892)
  a== 0 (45892)
  jf 3 (45894)
  lj 45903 (45896)
  (                    3211:     error〈〉 # err) (45899)
  (         error) (45899)
  error (45899)
  (         goto endif_1853) (45900)
  lj 45903 (45900)
  (        :else_1852:) (45903)
  (        :endif_1853:) (45903)
  (                    3212:   return ContextMapLiterals) (45903)
  (         t1 = H[t252+85]〈ContextMapLiterals〉) (45903)
  a=r 252 (45903)
  a+= 85 (45905)
  d=a (45907)
  a=*d (45908)
  r=a 1 (45909)
  (         t2 = H[t0]〈〉) (45911)
  d=r 0 (45911)
  a=*d (45913)
  r=a 2 (45914)
  (         t0 = t0 - 1) (45916)
  a=r 0 (45916)
  a-- (45918)
  r=a 0 (45919)
  (         t0 = H[t0]〈〉) (45921)
  d=a (45921)
  a=*d (45922)
  r=a 0 (45923)
  (         goto find_label_ret_id) (45925)
  lj 62666 (45925)
  (insert return as it might not be done by the function:) (45928)
  (         t2 = H[t0]〈〉) (45928)
  d=a (45928)
  a=*d (45929)
  r=a 2 (45930)
  (         t0 = t0 - 1) (45932)
  a=r 0 (45932)
  a-- (45934)
  r=a 0 (45935)
  (         t0 = H[t0]〈〉) (45937)
  d=a (45937)
  a=*d (45938)
  r=a 0 (45939)
  (         goto find_label_ret_id) (45941)
  lj 62666 (45941)
  (         MarkTempVarEnd) (45944)
  (        :parse_context_map_literals_end~:) (45944)
  (                    3214: def parse_context_map_distances〈〉:) (45944)
  (         goto parse_context_map_distances_end~) (45944)
  lj 46085 (45944)
  (        :parse_context_map_distances:) (45947)
  (         MarkTempVarStart) (45947)
  (                    3215:   global ContextMapDistances_data) (45947)
  (Global ContextMapDistances_data via H[t252+84]) (45947)
  (                    3216:   n_trees = meta_block_header_n_trees_d) (45947)
  (         H[t0+1]〈n_trees〉 = H[t252+137]〈meta_block_header_n_trees_d〉) (45947)
  a=r 252 (45947)
  a+= 137 (45949)
  d=a (45951)
  c=*d (45952)
  a=r 0 (45953)
  a++ (45955)
  d=a (45956)
  *d=c (45957)
  (                    3217:   len_ = meta_block_header_n_bltypes_d * 4) (45958)
  (         t1 = H[t252+133]〈meta_block_header_n_bltypes_d〉 * 4) (45958)
  c= 4 (45958)
  a=r 252 (45960)
  a+= 133 (45962)
  d=a (45964)
  a=*d (45965)
  a*=c (45966)
  r=a 1 (45967)
  (         H[t0+2]〈len_〉 = t1) (45969)
  a=r 0 (45969)
  a+= 2 (45971)
  d=a (45973)
  a=r 1 (45974)
  *d=a (45976)
  (                    3218:   ContextMapDistances_data = parse_context_map〈n_trees, len_〉) (45977)
  (         H[t0+3]〈〉 = t0) (45977)
  d++ (45977)
  a=r 0 (45978)
  *d=a (45980)
  (saved bsp, return id:) (45981)
  (         H[t0+4]〈〉 = 202) (45981)
  d++ (45981)
  *d= 202 (45982)
  (push arguments:) (45984)
  (         H[t0+5]〈〉 = H[t0+1]〈n_trees〉) (45984)
  a++ (45984)
  d=a (45985)
  c=*d (45986)
  a=r 0 (45987)
  a+= 5 (45989)
  d=a (45991)
  *d=c (45992)
  (         H[t0+6]〈〉 = H[t0+2]〈len_〉) (45993)
  a=r 0 (45993)
  a+= 2 (45995)
  d=a (45997)
  c=*d (45998)
  a=r 0 (45999)
  a+= 6 (46001)
  d=a (46003)
  *d=c (46004)
  (         t0 = t0 + 4) (46005)
  c= 4 (46005)
  a=r 0 (46007)
  a+=c (46009)
  r=a 0 (46010)
  (         goto parse_context_map) (46012)
  lj 45066 (46012)
  (        :return_id_202:) (46015)
  (         H[t252+84]〈ContextMapDistances_data〉 = t1) (46015)
  a=r 252 (46015)
  a+= 84 (46017)
  d=a (46019)
  a=r 1 (46020)
  *d=a (46022)
  (                    3219:   if ContextMapDistances_data == NONE:) (46023)
  (         t1 = H[t252+84]〈ContextMapDistances_data〉 == 4294967295) (46023)
  c=0 (46023)
  c-- (46024)
  a=*d (46025)
  a==c (46026)
  a=0 (46027)
  jf 1 (46028)
  a++ (46030)
  r=a 1 (46031)
  (         ifN t1 goto else_1855) (46033)
  a== 0 (46033)
  jf 3 (46035)
  lj 46044 (46037)
  (                    3220:     error〈〉 # err) (46040)
  (         error) (46040)
  error (46040)
  (         goto endif_1856) (46041)
  lj 46044 (46041)
  (        :else_1855:) (46044)
  (        :endif_1856:) (46044)
  (                    3221:   return ContextMapDistances) (46044)
  (         t1 = H[t252+83]〈ContextMapDistances〉) (46044)
  a=r 252 (46044)
  a+= 83 (46046)
  d=a (46048)
  a=*d (46049)
  r=a 1 (46050)
  (         t2 = H[t0]〈〉) (46052)
  d=r 0 (46052)
  a=*d (46054)
  r=a 2 (46055)
  (         t0 = t0 - 1) (46057)
  a=r 0 (46057)
  a-- (46059)
  r=a 0 (46060)
  (         t0 = H[t0]〈〉) (46062)
  d=a (46062)
  a=*d (46063)
  r=a 0 (46064)
  (         goto find_label_ret_id) (46066)
  lj 62666 (46066)
  (insert return as it might not be done by the function:) (46069)
  (         t2 = H[t0]〈〉) (46069)
  d=a (46069)
  a=*d (46070)
  r=a 2 (46071)
  (         t0 = t0 - 1) (46073)
  a=r 0 (46073)
  a-- (46075)
  r=a 0 (46076)
  (         t0 = H[t0]〈〉) (46078)
  d=a (46078)
  a=*d (46079)
  r=a 0 (46080)
  (         goto find_label_ret_id) (46082)
  lj 62666 (46082)
  (         MarkTempVarEnd) (46085)
  (        :parse_context_map_distances_end~:) (46085)
  (                    3223: def inverse_move_to_front_transform〈v〉: # modifies v) (46085)
  (         goto inverse_move_to_front_transform_end~) (46085)
  lj 46509 (46085)
  (        :inverse_move_to_front_transform:) (46088)
  (         MarkTempVarStart) (46088)
  (Arg v at t0 + 1) (46088)
  (                    3224:   v = array_pM〈v〉) (46088)
  (         H[t0+1]〈v〉 = H[t0+1]〈v〉) (46088)
  a=r 0 (46088)
  a++ (46090)
  d=a (46091)
  c=*d (46092)
  (                    3225:   mtf = alloc_pM〈256〉) (46093)
  (         H[t0+2]〈〉 = t0) (46093)
  d++ (46093)
  a=r 0 (46094)
  *d=a (46096)
  (saved bsp, return id:) (46097)
  (         H[t0+3]〈〉 = 203) (46097)
  d++ (46097)
  *d= 203 (46098)
  (push arguments:) (46100)
  (         H[t0+4]〈〉 = 256) (46100)
  d++ (46100)
  a= 1 (46101)
  a<<= 8 (46103)
  *d=a (46105)
  (         t0 = t0 + 3) (46106)
  c= 3 (46106)
  a=r 0 (46108)
  a+=c (46110)
  r=a 0 (46111)
  (         goto addr_alloc_pM) (46113)
  lj 323 (46113)
  (        :return_id_203:) (46116)
  (         t1 = t1 | 2147483648) (46116)
  a= 1 (46116)
  a<<= 31 (46118)
  c=a (46120)
  a=r 1 (46121)
  a|=c (46123)
  r=a 1 (46124)
  (         H[t0+2]〈mtf〉 = t1) (46126)
  a=r 0 (46126)
  a+= 2 (46128)
  d=a (46130)
  a=r 1 (46131)
  *d=a (46133)
  (                    3226:   i = 0) (46134)
  (         H[t0+3]〈i〉 = 0) (46134)
  d++ (46134)
  *d=0 (46135)
  (                    3227:   while i < 256:) (46136)
  (        :while_1857:) (46136)
  (         t1 = H[t0+3]〈i〉 < 256) (46136)
  a= 1 (46136)
  a<<= 8 (46138)
  c=a (46140)
  a=r 0 (46141)
  a+= 3 (46143)
  d=a (46145)
  a=*d (46146)
  a<c (46147)
  a=0 (46148)
  jf 1 (46149)
  a++ (46151)
  r=a 1 (46152)
  (         ifN t1 goto whileend_1859) (46154)
  a== 0 (46154)
  jf 3 (46156)
  lj 46182 (46158)
  (                    3228:     mtf[i] = i) (46161)
  (         t1 = H[t0+2]〈mtf〉 & 2147483647) (46161)
  a=0 (46161)
  a-- (46162)
  a>>= 1 (46163)
  c=a (46165)
  d-- (46166)
  a=*d (46167)
  a&=c (46168)
  r=a 1 (46169)
  (         t1 = t1 + H[t0+3]〈i〉) (46171)
  d++ (46171)
  c=*d (46172)
  a+=c (46173)
  r=a 1 (46174)
  (         M[t1] = H[t0+3]〈i〉) (46176)
  c=a (46176)
  *c=*d (46177)
  (                    3229:     i += 1) (46178)
  (         H[t0+3]〈i〉 = H[t0+3]〈i〉 + 1) (46178)
  *d++ (46178)
  (         goto while_1857) (46179)
  lj 46136 (46179)
  (        :whileend_1859:) (46182)
  (                    3230:   i = 0) (46182)
  (         H[t0+3]〈i〉 = 0) (46182)
  a=r 0 (46182)
  a+= 3 (46184)
  d=a (46186)
  *d=0 (46187)
  (                    3231:   while i < len_pM〈v〉:) (46188)
  (        :while_1861:) (46188)
  (         t2 = H[t0+1]〈v〉) (46188)
  a=r 0 (46188)
  a++ (46190)
  d=a (46191)
  a=*d (46192)
  r=a 2 (46193)
  (         t2 = t2 & 2147483647) (46195)
  a=0 (46195)
  a-- (46196)
  a>>= 1 (46197)
  c=a (46199)
  a=r 2 (46200)
  a&=c (46202)
  r=a 2 (46203)
  (         t2 = t2 - 5) (46205)
  c= 5 (46205)
  a-=c (46207)
  r=a 2 (46208)
  (         t3 = M[t2] << 8) (46210)
  c= 8 (46210)
  b=a (46212)
  a=*b (46213)
  a<<=c (46214)
  r=a 3 (46215)
  (         t2 = t2 + 1) (46217)
  a=r 2 (46217)
  a++ (46219)
  r=a 2 (46220)
  (         t3 = t3 + M[t2]) (46222)
  b=a (46222)
  c=*b (46223)
  a=r 3 (46224)
  a+=c (46226)
  r=a 3 (46227)
  (         t3 = t3 << 8) (46229)
  c= 8 (46229)
  a<<=c (46231)
  r=a 3 (46232)
  (         t2 = t2 + 1) (46234)
  a=r 2 (46234)
  a++ (46236)
  r=a 2 (46237)
  (         t3 = t3 + M[t2]) (46239)
  b=a (46239)
  c=*b (46240)
  a=r 3 (46241)
  a+=c (46243)
  r=a 3 (46244)
  (         t3 = t3 << 8) (46246)
  c= 8 (46246)
  a<<=c (46248)
  r=a 3 (46249)
  (         t2 = t2 + 1) (46251)
  a=r 2 (46251)
  a++ (46253)
  r=a 2 (46254)
  (         t3 = t3 + M[t2]) (46256)
  b=a (46256)
  c=*b (46257)
  a=r 3 (46258)
  a+=c (46260)
  r=a 3 (46261)
  (         t1 = H[t0+3]〈i〉 < t3) (46263)
  c=a (46263)
  a=r 0 (46264)
  a+= 3 (46266)
  d=a (46268)
  a=*d (46269)
  a<c (46270)
  a=0 (46271)
  jf 1 (46272)
  a++ (46274)
  r=a 1 (46275)
  (         ifN t1 goto whileend_1863) (46277)
  a== 0 (46277)
  jf 3 (46279)
  lj 46492 (46281)
  (                    3232:     index = v[i]) (46284)
  (         t1 = H[t0+1]〈v〉 & 2147483647) (46284)
  a=0 (46284)
  a-- (46285)
  a>>= 1 (46286)
  c=a (46288)
  a=r 0 (46289)
  a++ (46291)
  d=a (46292)
  a=*d (46293)
  a&=c (46294)
  r=a 1 (46295)
  (         t1 = t1 + H[t0+3]〈i〉) (46297)
  a=r 0 (46297)
  a+= 3 (46299)
  d=a (46301)
  c=*d (46302)
  a=r 1 (46303)
  a+=c (46305)
  r=a 1 (46306)
  (         t1 = M[t1]) (46308)
  b=a (46308)
  a=*b (46309)
  r=a 1 (46310)
  (         H[t0+4]〈index〉 = t1) (46312)
  d++ (46312)
  *d=a (46313)
  (                    3233:     value = mtf[index]) (46314)
  (         t1 = H[t0+2]〈mtf〉 & 2147483647) (46314)
  a=0 (46314)
  a-- (46315)
  a>>= 1 (46316)
  c=a (46318)
  a=r 0 (46319)
  a+= 2 (46321)
  d=a (46323)
  a=*d (46324)
  a&=c (46325)
  r=a 1 (46326)
  (         t1 = t1 + H[t0+4]〈index〉) (46328)
  a=r 0 (46328)
  a+= 4 (46330)
  d=a (46332)
  c=*d (46333)
  a=r 1 (46334)
  a+=c (46336)
  r=a 1 (46337)
  (         t1 = M[t1]) (46339)
  b=a (46339)
  a=*b (46340)
  r=a 1 (46341)
  (         H[t0+5]〈value〉 = t1) (46343)
  d++ (46343)
  *d=a (46344)
  (                    3234:     v[i] = value) (46345)
  (         t1 = H[t0+1]〈v〉 & 2147483647) (46345)
  a=0 (46345)
  a-- (46346)
  a>>= 1 (46347)
  c=a (46349)
  a=r 0 (46350)
  a++ (46352)
  d=a (46353)
  a=*d (46354)
  a&=c (46355)
  r=a 1 (46356)
  (         t1 = t1 + H[t0+3]〈i〉) (46358)
  a=r 0 (46358)
  a+= 3 (46360)
  d=a (46362)
  c=*d (46363)
  a=r 1 (46364)
  a+=c (46366)
  r=a 1 (46367)
  (         M[t1] = H[t0+5]〈value〉) (46369)
  c=a (46369)
  a=r 0 (46370)
  a+= 5 (46372)
  d=a (46374)
  *c=*d (46375)
  (                    3235:     j = index) (46376)
  (         H[t0+6]〈j〉 = H[t0+4]〈index〉) (46376)
  d-- (46376)
  c=*d (46377)
  a=r 0 (46378)
  a+= 6 (46380)
  d=a (46382)
  *d=c (46383)
  (                    3236:     while j > 0:) (46384)
  (        :while_1865:) (46384)
  (         t1 = H[t0+6]〈j〉 > 0) (46384)
  c=0 (46384)
  a=r 0 (46385)
  a+= 6 (46387)
  d=a (46389)
  a=*d (46390)
  a>c (46391)
  a=0 (46392)
  jf 1 (46393)
  a++ (46395)
  r=a 1 (46396)
  (         ifN t1 goto whileend_1867) (46398)
  a== 0 (46398)
  jf 3 (46400)
  lj 46462 (46402)
  (                    3237:       mtf[j] = mtf[j - 1]) (46405)
  (         t1 = H[t0+6]〈j〉 - 1) (46405)
  c= 1 (46405)
  a=*d (46407)
  a-=c (46408)
  r=a 1 (46409)
  (         t2 = H[t0+2]〈mtf〉 & 2147483647) (46411)
  a=0 (46411)
  a-- (46412)
  a>>= 1 (46413)
  c=a (46415)
  a=r 0 (46416)
  a+= 2 (46418)
  d=a (46420)
  a=*d (46421)
  a&=c (46422)
  r=a 2 (46423)
  (         t2 = t2 + t1) (46425)
  c=r 1 (46425)
  a+=c (46427)
  r=a 2 (46428)
  (         t2 = M[t2]) (46430)
  b=a (46430)
  a=*b (46431)
  r=a 2 (46432)
  (         t3 = H[t0+2]〈mtf〉 & 2147483647) (46434)
  a=0 (46434)
  a-- (46435)
  a>>= 1 (46436)
  c=a (46438)
  a=*d (46439)
  a&=c (46440)
  r=a 3 (46441)
  (         t3 = t3 + H[t0+6]〈j〉) (46443)
  a=r 0 (46443)
  a+= 6 (46445)
  d=a (46447)
  c=*d (46448)
  a=r 3 (46449)
  a+=c (46451)
  r=a 3 (46452)
  (         M[t3] = t2) (46454)
  c=a (46454)
  a=r 2 (46455)
  *c=a (46457)
  (                    3238:       j -= 1) (46458)
  (         H[t0+6]〈j〉 = H[t0+6]〈j〉 - 1) (46458)
  *d-- (46458)
  (         goto while_1865) (46459)
  lj 46384 (46459)
  (        :whileend_1867:) (46462)
  (                    3239:     mtf[0] = value) (46462)
  (         t2 = H[t0+2]〈mtf〉 & 2147483647) (46462)
  a=0 (46462)
  a-- (46463)
  a>>= 1 (46464)
  c=a (46466)
  a=r 0 (46467)
  a+= 2 (46469)
  d=a (46471)
  a=*d (46472)
  a&=c (46473)
  r=a 2 (46474)
  (         t2 = t2 + 0) (46476)
  (         M[t2] = H[t0+5]〈value〉) (46476)
  c=a (46476)
  a=r 0 (46477)
  a+= 5 (46479)
  d=a (46481)
  *c=*d (46482)
  (                    3240:     i += 1) (46483)
  (         H[t0+3]〈i〉 = H[t0+3]〈i〉 + 1) (46483)
  a=r 0 (46483)
  a+= 3 (46485)
  d=a (46487)
  *d++ (46488)
  (         goto while_1861) (46489)
  lj 46188 (46489)
  (        :whileend_1863:) (46492)
  (insert return as it might not be done by the function:) (46492)
  (         t2 = H[t0]〈〉) (46492)
  d=r 0 (46492)
  a=*d (46494)
  r=a 2 (46495)
  (         t0 = t0 - 1) (46497)
  a=r 0 (46497)
  a-- (46499)
  r=a 0 (46500)
  (         t0 = H[t0]〈〉) (46502)
  d=a (46502)
  a=*d (46503)
  r=a 0 (46504)
  (         goto find_label_ret_id) (46506)
  lj 62666 (46506)
  (         MarkTempVarEnd) (46509)
  (        :inverse_move_to_front_transform_end~:) (46509)
  (                    3242: def decode_insert_and_copy_length〈〉:) (46509)
  (         goto decode_insert_and_copy_length_end~) (46509)
  lj 46845 (46509)
  (        :decode_insert_and_copy_length:) (46512)
  (         MarkTempVarStart) (46512)
  (                    3243:   global InsertLengthAndCopyLength_data_co_len, InsertLengthAndCopyLength_data_in_len) (46512)
  (Global InsertLengthAndCopyLength_data_co_len via H[t252+97]) (46512)
  (Global InsertLengthAndCopyLength_data_in_len via H[t252+98]) (46512)
  (                    3244:   insert_length = INSERT_LENGTHS_AND_COPY_LENGTHS[0 + meta_block_insert_and_copy_length*4]) (46512)
  (         t2 = H[t252+160]〈meta_block_insert_and_copy_length〉 * 4) (46512)
  c= 4 (46512)
  a=r 252 (46514)
  a+= 160 (46516)
  d=a (46518)
  a=*d (46519)
  a*=c (46520)
  r=a 2 (46521)
  (         t1 = 0 + t2) (46523)
  c=a (46523)
  a=0 (46524)
  a+=c (46525)
  r=a 1 (46526)
  (         t2 = H[t252+23]〈INSERT_LENGTHS_AND_COPY_LENGTHS〉 + t1) (46528)
  c=a (46528)
  a=r 252 (46529)
  a+= 23 (46531)
  d=a (46533)
  a=*d (46534)
  a+=c (46535)
  r=a 2 (46536)
  (         t2 = H[t2]〈〉) (46538)
  d=a (46538)
  a=*d (46539)
  r=a 2 (46540)
  (         H[t0+1]〈insert_length〉 = t2) (46542)
  a=r 0 (46542)
  a++ (46544)
  d=a (46545)
  a=r 2 (46546)
  *d=a (46548)
  (                    3245:   extra_bits_insert = INSERT_LENGTHS_AND_COPY_LENGTHS[1 + meta_block_insert_and_copy_length*4]) (46549)
  (         t3 = H[t252+160]〈meta_block_insert_and_copy_length〉 * 4) (46549)
  c= 4 (46549)
  a=r 252 (46551)
  a+= 160 (46553)
  d=a (46555)
  a=*d (46556)
  a*=c (46557)
  r=a 3 (46558)
  (         t2 = 1 + t3) (46560)
  c=a (46560)
  a= 1 (46561)
  a+=c (46563)
  r=a 2 (46564)
  (         t3 = H[t252+23]〈INSERT_LENGTHS_AND_COPY_LENGTHS〉 + t2) (46566)
  c=a (46566)
  a=r 252 (46567)
  a+= 23 (46569)
  d=a (46571)
  a=*d (46572)
  a+=c (46573)
  r=a 3 (46574)
  (         t3 = H[t3]〈〉) (46576)
  d=a (46576)
  a=*d (46577)
  r=a 3 (46578)
  (         H[t0+2]〈extra_bits_insert〉 = t3) (46580)
  a=r 0 (46580)
  a+= 2 (46582)
  d=a (46584)
  a=r 3 (46585)
  *d=a (46587)
  (                    3246:   copy_length = INSERT_LENGTHS_AND_COPY_LENGTHS[2 + meta_block_insert_and_copy_length*4]) (46588)
  (         t4 = H[t252+160]〈meta_block_insert_and_copy_length〉 * 4) (46588)
  c= 4 (46588)
  a=r 252 (46590)
  a+= 160 (46592)
  d=a (46594)
  a=*d (46595)
  a*=c (46596)
  r=a 4 (46597)
  (         t3 = 2 + t4) (46599)
  c=a (46599)
  a= 2 (46600)
  a+=c (46602)
  r=a 3 (46603)
  (         t4 = H[t252+23]〈INSERT_LENGTHS_AND_COPY_LENGTHS〉 + t3) (46605)
  c=a (46605)
  a=r 252 (46606)
  a+= 23 (46608)
  d=a (46610)
  a=*d (46611)
  a+=c (46612)
  r=a 4 (46613)
  (         t4 = H[t4]〈〉) (46615)
  d=a (46615)
  a=*d (46616)
  r=a 4 (46617)
  (         H[t0+3]〈copy_length〉 = t4) (46619)
  a=r 0 (46619)
  a+= 3 (46621)
  d=a (46623)
  a=r 4 (46624)
  *d=a (46626)
  (                    3247:   extra_bits_copy = INSERT_LENGTHS_AND_COPY_LENGTHS[3 + meta_block_insert_and_copy_length*4]) (46627)
  (         t5 = H[t252+160]〈meta_block_insert_and_copy_length〉 * 4) (46627)
  c= 4 (46627)
  a=r 252 (46629)
  a+= 160 (46631)
  d=a (46633)
  a=*d (46634)
  a*=c (46635)
  r=a 5 (46636)
  (         t4 = 3 + t5) (46638)
  c=a (46638)
  a= 3 (46639)
  a+=c (46641)
  r=a 4 (46642)
  (         t5 = H[t252+23]〈INSERT_LENGTHS_AND_COPY_LENGTHS〉 + t4) (46644)
  c=a (46644)
  a=r 252 (46645)
  a+= 23 (46647)
  d=a (46649)
  a=*d (46650)
  a+=c (46651)
  r=a 5 (46652)
  (         t5 = H[t5]〈〉) (46654)
  d=a (46654)
  a=*d (46655)
  r=a 5 (46656)
  (         H[t0+4]〈extra_bits_copy〉 = t5) (46658)
  a=r 0 (46658)
  a+= 4 (46660)
  d=a (46662)
  a=r 5 (46663)
  *d=a (46665)
  (                    3248:   if read_u32_from_n_bits〈extra_bits_insert〉:) (46666)
  (         H[t0+9]〈〉 = t0) (46666)
  a=r 0 (46666)
  a+= 9 (46668)
  d=a (46670)
  a=r 0 (46671)
  *d=a (46673)
  (saved bsp, return id:) (46674)
  (         H[t0+10]〈〉 = 204) (46674)
  d++ (46674)
  *d= 204 (46675)
  (push arguments:) (46677)
  (         H[t0+11]〈〉 = H[t0+2]〈extra_bits_insert〉) (46677)
  a+= 2 (46677)
  d=a (46679)
  c=*d (46680)
  a=r 0 (46681)
  a+= 11 (46683)
  d=a (46685)
  *d=c (46686)
  (         t0 = t0 + 10) (46687)
  c= 10 (46687)
  a=r 0 (46689)
  a+=c (46691)
  r=a 0 (46692)
  (         goto read_u32_from_n_bits) (46694)
  lj 4857 (46694)
  (        :return_id_204:) (46697)
  (         t5 = t1) (46697)
  a=r 1 (46697)
  r=a 5 (46699)
  (         ifN t5 goto else_1869) (46701)
  a== 0 (46701)
  jf 3 (46703)
  lj 46712 (46705)
  (                    3249:     error〈〉 # err eof) (46708)
  (         error) (46708)
  error (46708)
  (         goto endif_1870) (46709)
  lj 46712 (46709)
  (        :else_1869:) (46712)
  (        :endif_1870:) (46712)
  (                    3250:   insert_length += read_u32_from_n_bits_result) (46712)
  (         H[t0+1]〈insert_length〉 = H[t0+1]〈insert_length〉 + H[t252+7]〈read_u32_from_n_bits_result〉) (46712)
  a=r 252 (46712)
  a+= 7 (46714)
  d=a (46716)
  c=*d (46717)
  a=r 0 (46718)
  a++ (46720)
  d=a (46721)
  a=*d (46722)
  a+=c (46723)
  c=a (46724)
  *d=c (46725)
  (                    3251:   if read_u32_from_n_bits〈extra_bits_copy〉:) (46726)
  (         H[t0+9]〈〉 = t0) (46726)
  a=r 0 (46726)
  a+= 9 (46728)
  d=a (46730)
  a=r 0 (46731)
  *d=a (46733)
  (saved bsp, return id:) (46734)
  (         H[t0+10]〈〉 = 205) (46734)
  d++ (46734)
  *d= 205 (46735)
  (push arguments:) (46737)
  (         H[t0+11]〈〉 = H[t0+4]〈extra_bits_copy〉) (46737)
  a+= 4 (46737)
  d=a (46739)
  c=*d (46740)
  a=r 0 (46741)
  a+= 11 (46743)
  d=a (46745)
  *d=c (46746)
  (         t0 = t0 + 10) (46747)
  c= 10 (46747)
  a=r 0 (46749)
  a+=c (46751)
  r=a 0 (46752)
  (         goto read_u32_from_n_bits) (46754)
  lj 4857 (46754)
  (        :return_id_205:) (46757)
  (         t5 = t1) (46757)
  a=r 1 (46757)
  r=a 5 (46759)
  (         ifN t5 goto else_1871) (46761)
  a== 0 (46761)
  jf 3 (46763)
  lj 46772 (46765)
  (                    3252:     error〈〉 # err eof) (46768)
  (         error) (46768)
  error (46768)
  (         goto endif_1872) (46769)
  lj 46772 (46769)
  (        :else_1871:) (46772)
  (        :endif_1872:) (46772)
  (                    3253:   copy_length += read_u32_from_n_bits_result) (46772)
  (         H[t0+3]〈copy_length〉 = H[t0+3]〈copy_length〉 + H[t252+7]〈read_u32_from_n_bits_result〉) (46772)
  a=r 252 (46772)
  a+= 7 (46774)
  d=a (46776)
  c=*d (46777)
  a=r 0 (46778)
  a+= 3 (46780)
  d=a (46782)
  a=*d (46783)
  a+=c (46784)
  c=a (46785)
  *d=c (46786)
  (                    3254:   InsertLengthAndCopyLength_data_co_len = copy_length) (46787)
  (         H[t252+97]〈InsertLengthAndCopyLength_data_co_len〉 = H[t0+3]〈copy_length〉) (46787)
  a=r 252 (46787)
  a+= 97 (46789)
  d=a (46791)
  *d=c (46792)
  (                    3255:   InsertLengthAndCopyLength_data_in_len = insert_length) (46793)
  (         H[t252+98]〈InsertLengthAndCopyLength_data_in_len〉 = H[t0+1]〈insert_length〉) (46793)
  a=r 0 (46793)
  a++ (46795)
  d=a (46796)
  c=*d (46797)
  a=r 252 (46798)
  a+= 98 (46800)
  d=a (46802)
  *d=c (46803)
  (                    3256:   return InsertLengthAndCopyLength) (46804)
  (         t1 = H[t252+96]〈InsertLengthAndCopyLength〉) (46804)
  a=r 252 (46804)
  a+= 96 (46806)
  d=a (46808)
  a=*d (46809)
  r=a 1 (46810)
  (         t2 = H[t0]〈〉) (46812)
  d=r 0 (46812)
  a=*d (46814)
  r=a 2 (46815)
  (         t0 = t0 - 1) (46817)
  a=r 0 (46817)
  a-- (46819)
  r=a 0 (46820)
  (         t0 = H[t0]〈〉) (46822)
  d=a (46822)
  a=*d (46823)
  r=a 0 (46824)
  (         goto find_label_ret_id) (46826)
  lj 62666 (46826)
  (insert return as it might not be done by the function:) (46829)
  (         t2 = H[t0]〈〉) (46829)
  d=a (46829)
  a=*d (46830)
  r=a 2 (46831)
  (         t0 = t0 - 1) (46833)
  a=r 0 (46833)
  a-- (46835)
  r=a 0 (46836)
  (         t0 = H[t0]〈〉) (46838)
  d=a (46838)
  a=*d (46839)
  r=a 0 (46840)
  (         goto find_label_ret_id) (46842)
  lj 62666 (46842)
  (         MarkTempVarEnd) (46845)
  (        :decode_insert_and_copy_length_end~:) (46845)
  (                    3259: parse_block_switch_command_block_type = NONE) (46845)
  (         H[t0+166]〈parse_block_switch_command_block_type〉 = 4294967295) (46845)
  a=r 0 (46845)
  a+= 166 (46847)
  d=a (46849)
  *d=0 (46850)
  *d-- (46851)
  (                    3260: parse_block_switch_command_block_count = NONE) (46852)
  (         H[t0+167]〈parse_block_switch_command_block_count〉 = 4294967295) (46852)
  d++ (46852)
  *d=0 (46853)
  *d-- (46854)
  (                    3261: def parse_block_switch_command〈prefix_tree_types, btype, btype_prev, n_bltypes, prefix_tree_counts〉: # 1:HuffmanCodes,2-4:nr,5:HuffmanCodes) (46855)
  (         goto parse_block_switch_command_end~) (46855)
  lj 47215 (46855)
  (        :parse_block_switch_command:) (46858)
  (         MarkTempVarStart) (46858)
  (Arg prefix_tree_types at t0 + 1) (46858)
  (Arg btype at t0 + 2) (46858)
  (Arg btype_prev at t0 + 3) (46858)
  (Arg n_bltypes at t0 + 4) (46858)
  (Arg prefix_tree_counts at t0 + 5) (46858)
  (                    3262:   global parse_block_switch_command_block_type, parse_block_switch_command_block_count) (46858)
  (Global parse_block_switch_command_block_type via H[t252+166]) (46858)
  (Global parse_block_switch_command_block_count via H[t252+167]) (46858)
  (                    3263:   block_type_code = lookup_symbol〈prefix_tree_types〉) (46858)
  (         H[t0+6]〈〉 = t0) (46858)
  a=r 0 (46858)
  a+= 6 (46860)
  d=a (46862)
  a=r 0 (46863)
  *d=a (46865)
  (saved bsp, return id:) (46866)
  (         H[t0+7]〈〉 = 206) (46866)
  d++ (46866)
  *d= 206 (46867)
  (push arguments:) (46869)
  (         H[t0+8]〈〉 = H[t0+1]〈prefix_tree_types〉) (46869)
  a++ (46869)
  d=a (46870)
  c=*d (46871)
  a=r 0 (46872)
  a+= 8 (46874)
  d=a (46876)
  *d=c (46877)
  (         t0 = t0 + 7) (46878)
  c= 7 (46878)
  a=r 0 (46880)
  a+=c (46882)
  r=a 0 (46883)
  (         goto lookup_symbol) (46885)
  lj 6923 (46885)
  (        :return_id_206:) (46888)
  (         H[t0+6]〈block_type_code〉 = t1) (46888)
  a=r 0 (46888)
  a+= 6 (46890)
  d=a (46892)
  a=r 1 (46893)
  *d=a (46895)
  (                    3264:   if block_type_code == NONE:) (46896)
  (         t1 = H[t0+6]〈block_type_code〉 == 4294967295) (46896)
  c=0 (46896)
  c-- (46897)
  a=*d (46898)
  a==c (46899)
  a=0 (46900)
  jf 1 (46901)
  a++ (46903)
  r=a 1 (46904)
  (         ifN t1 goto else_1874) (46906)
  a== 0 (46906)
  jf 3 (46908)
  lj 46917 (46910)
  (                    3265:     error〈〉 # decompr err) (46913)
  (         error) (46913)
  error (46913)
  (         goto endif_1875) (46914)
  lj 46917 (46914)
  (        :else_1874:) (46917)
  (        :endif_1875:) (46917)
  (                    3266:   if block_type_code == 0:) (46917)
  (         t1 = H[t0+6]〈block_type_code〉 == 0) (46917)
  c=0 (46917)
  a=r 0 (46918)
  a+= 6 (46920)
  d=a (46922)
  a=*d (46923)
  a==c (46924)
  a=0 (46925)
  jf 1 (46926)
  a++ (46928)
  r=a 1 (46929)
  (         ifN t1 goto else_1877) (46931)
  a== 0 (46931)
  jf 3 (46933)
  lj 46953 (46935)
  (                    3267:     block_type = btype_prev) (46938)
  (         H[t0+7]〈block_type〉 = H[t0+3]〈btype_prev〉) (46938)
  a=r 0 (46938)
  a+= 3 (46940)
  d=a (46942)
  c=*d (46943)
  a=r 0 (46944)
  a+= 7 (46946)
  d=a (46948)
  *d=c (46949)
  (         goto endif_1878) (46950)
  lj 47095 (46950)
  (        :else_1877:) (46953)
  (                    3268:   elif block_type_code == 1:) (46953)
  (         t1 = H[t0+6]〈block_type_code〉 == 1) (46953)
  c= 1 (46953)
  a=r 0 (46955)
  a+= 6 (46957)
  d=a (46959)
  a=*d (46960)
  a==c (46961)
  a=0 (46962)
  jf 1 (46963)
  a++ (46965)
  r=a 1 (46966)
  (         ifN t1 goto else_1880) (46968)
  a== 0 (46968)
  jf 3 (46970)
  lj 47008 (46972)
  (                    3269:     block_type = 〈btype + 1〉 % n_bltypes) (46975)
  (         t2 = H[t0+2]〈btype〉 + 1) (46975)
  c= 1 (46975)
  a=r 0 (46977)
  a+= 2 (46979)
  d=a (46981)
  a=*d (46982)
  a+=c (46983)
  r=a 2 (46984)
  (         t1 = t2 % H[t0+4]〈n_bltypes〉) (46986)
  a=r 0 (46986)
  a+= 4 (46988)
  d=a (46990)
  c=*d (46991)
  a=r 2 (46992)
  a%=c (46994)
  r=a 1 (46995)
  (         H[t0+7]〈block_type〉 = t1) (46997)
  a=r 0 (46997)
  a+= 7 (46999)
  d=a (47001)
  a=r 1 (47002)
  *d=a (47004)
  (         goto endif_1881) (47005)
  lj 47095 (47005)
  (        :else_1880:) (47008)
  (                    3270:   elif block_type_code >= 2 and block_type_code <= 258:) (47008)
  (         t2 = H[t0+6]〈block_type_code〉 >= 2) (47008)
  c= 2 (47008)
  a=r 0 (47010)
  a+= 6 (47012)
  d=a (47014)
  a=*d (47015)
  a==c (47016)
  jt 4 (47017)
  a>c (47019)
  a=0 (47020)
  jf 2 (47021)
  a= 1 (47023)
  r=a 2 (47025)
  (         t3 = H[t0+6]〈block_type_code〉 <= 258) (47027)
  a= 1 (47027)
  a<<= 8 (47029)
  a+= 2 (47031)
  c=a (47033)
  a=*d (47034)
  a==c (47035)
  jt 4 (47036)
  a<c (47038)
  a=0 (47039)
  jf 2 (47040)
  a= 1 (47042)
  r=a 3 (47044)
  (         t1 = t2 and t3) (47046)
  c=a (47046)
  a=r 2 (47047)
  a== 0 (47049)
  jt 1 (47051)
  a=c (47053)
  r=a 1 (47054)
  (         ifN t1 goto else_1884) (47056)
  a== 0 (47056)
  jf 3 (47058)
  lj 47074 (47060)
  (                    3271:     block_type = block_type_code - 2) (47063)
  (         t1 = H[t0+6]〈block_type_code〉 - 2) (47063)
  c= 2 (47063)
  a=*d (47065)
  a-=c (47066)
  r=a 1 (47067)
  (         H[t0+7]〈block_type〉 = t1) (47069)
  d++ (47069)
  *d=a (47070)
  (         goto endif_1885) (47071)
  lj 47095 (47071)
  (        :else_1884:) (47074)
  (                    3273:     return NONE # unreachable) (47074)
  (         t1 = 4294967295) (47074)
  a=0 (47074)
  a-- (47075)
  r=a 1 (47076)
  (         t2 = H[t0]〈〉) (47078)
  d=r 0 (47078)
  a=*d (47080)
  r=a 2 (47081)
  (         t0 = t0 - 1) (47083)
  a=r 0 (47083)
  a-- (47085)
  r=a 0 (47086)
  (         t0 = H[t0]〈〉) (47088)
  d=a (47088)
  a=*d (47089)
  r=a 0 (47090)
  (         goto find_label_ret_id) (47092)
  lj 62666 (47092)
  (        :endif_1885:) (47095)
  (        :endif_1881:) (47095)
  (        :endif_1878:) (47095)
  (                    3274:   block_count = parse_block_count〈prefix_tree_counts〉) (47095)
  (         H[t0+8]〈〉 = t0) (47095)
  a=r 0 (47095)
  a+= 8 (47097)
  d=a (47099)
  a=r 0 (47100)
  *d=a (47102)
  (saved bsp, return id:) (47103)
  (         H[t0+9]〈〉 = 207) (47103)
  d++ (47103)
  *d= 207 (47104)
  (push arguments:) (47106)
  (         H[t0+10]〈〉 = H[t0+5]〈prefix_tree_counts〉) (47106)
  a+= 5 (47106)
  d=a (47108)
  c=*d (47109)
  a=r 0 (47110)
  a+= 10 (47112)
  d=a (47114)
  *d=c (47115)
  (         t0 = t0 + 9) (47116)
  c= 9 (47116)
  a=r 0 (47118)
  a+=c (47120)
  r=a 0 (47121)
  (         goto parse_block_count) (47123)
  lj 43304 (47123)
  (        :return_id_207:) (47126)
  (         H[t0+8]〈block_count〉 = t1) (47126)
  a=r 0 (47126)
  a+= 8 (47128)
  d=a (47130)
  a=r 1 (47131)
  *d=a (47133)
  (                    3275:   if block_count == NONE:) (47134)
  (         t1 = H[t0+8]〈block_count〉 == 4294967295) (47134)
  c=0 (47134)
  c-- (47135)
  a=*d (47136)
  a==c (47137)
  a=0 (47138)
  jf 1 (47139)
  a++ (47141)
  r=a 1 (47142)
  (         ifN t1 goto else_1887) (47144)
  a== 0 (47144)
  jf 3 (47146)
  lj 47155 (47148)
  (                    3276:     error〈〉 # err) (47151)
  (         error) (47151)
  error (47151)
  (         goto endif_1888) (47152)
  lj 47155 (47152)
  (        :else_1887:) (47155)
  (        :endif_1888:) (47155)
  (                    3277:   parse_block_switch_command_block_type = block_type) (47155)
  (         H[t252+166]〈parse_block_switch_command_block_type〉 = H[t0+7]〈block_type〉) (47155)
  a=r 0 (47155)
  a+= 7 (47157)
  d=a (47159)
  c=*d (47160)
  a=r 252 (47161)
  a+= 166 (47163)
  d=a (47165)
  *d=c (47166)
  (                    3278:   parse_block_switch_command_block_count = block_count) (47167)
  (         H[t252+167]〈parse_block_switch_command_block_count〉 = H[t0+8]〈block_count〉) (47167)
  a=r 0 (47167)
  a+= 8 (47169)
  d=a (47171)
  c=*d (47172)
  a=r 252 (47173)
  a+= 167 (47175)
  d=a (47177)
  *d=c (47178)
  (                    3279:   return 0) (47179)
  (         t1 = 0) (47179)
  a=0 (47179)
  r=a 1 (47180)
  (         t2 = H[t0]〈〉) (47182)
  d=r 0 (47182)
  a=*d (47184)
  r=a 2 (47185)
  (         t0 = t0 - 1) (47187)
  a=r 0 (47187)
  a-- (47189)
  r=a 0 (47190)
  (         t0 = H[t0]〈〉) (47192)
  d=a (47192)
  a=*d (47193)
  r=a 0 (47194)
  (         goto find_label_ret_id) (47196)
  lj 62666 (47196)
  (insert return as it might not be done by the function:) (47199)
  (         t2 = H[t0]〈〉) (47199)
  d=a (47199)
  a=*d (47200)
  r=a 2 (47201)
  (         t0 = t0 - 1) (47203)
  a=r 0 (47203)
  a-- (47205)
  r=a 0 (47206)
  (         t0 = H[t0]〈〉) (47208)
  d=a (47208)
  a=*d (47209)
  r=a 0 (47210)
  (         goto find_label_ret_id) (47212)
  lj 62666 (47212)
  (         MarkTempVarEnd) (47215)
  (        :parse_block_switch_command_end~:) (47215)
  (                    3281: parse_block_switch_command_literals_block_type = NONE) (47215)
  (         H[t0+168]〈parse_block_switch_command_literals_block_type〉 = 4294967295) (47215)
  a=r 0 (47215)
  a+= 168 (47217)
  d=a (47219)
  *d=0 (47220)
  *d-- (47221)
  (                    3282: parse_block_switch_command_literals_block_count = NONE) (47222)
  (         H[t0+169]〈parse_block_switch_command_literals_block_count〉 = 4294967295) (47222)
  d++ (47222)
  *d=0 (47223)
  *d-- (47224)
  (                    3283: def parse_block_switch_command_literals〈〉:) (47225)
  (         goto parse_block_switch_command_literals_end~) (47225)
  lj 47430 (47225)
  (        :parse_block_switch_command_literals:) (47228)
  (         MarkTempVarStart) (47228)
  (                    3284:   global parse_block_switch_command_literals_block_type, parse_block_switch_command_literals_block_count) (47228)
  (Global parse_block_switch_command_literals_block_type via H[t252+168]) (47228)
  (Global parse_block_switch_command_literals_block_count via H[t252+169]) (47228)
  (                    3285:   prefix_tree_types = meta_block_prefix_tree_block_types_literals) (47228)
  (         H[t0+1]〈prefix_tree_types〉 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉) (47228)
  a=r 252 (47228)
  a+= 140 (47230)
  d=a (47232)
  c=*d (47233)
  a=r 0 (47234)
  a++ (47236)
  d=a (47237)
  *d=c (47238)
  (                    3286:   btype = meta_block_btype_l) (47239)
  (         H[t0+2]〈btype〉 = H[t252+144]〈meta_block_btype_l〉) (47239)
  a=r 252 (47239)
  a+= 144 (47241)
  d=a (47243)
  c=*d (47244)
  a=r 0 (47245)
  a+= 2 (47247)
  d=a (47249)
  *d=c (47250)
  (                    3287:   btype_prev = meta_block_btype_l_prev) (47251)
  (         H[t0+3]〈btype_prev〉 = H[t252+145]〈meta_block_btype_l_prev〉) (47251)
  a=r 252 (47251)
  a+= 145 (47253)
  d=a (47255)
  c=*d (47256)
  a=r 0 (47257)
  a+= 3 (47259)
  d=a (47261)
  *d=c (47262)
  (                    3288:   n_bltypes = meta_block_header_n_bltypes_l) (47263)
  (         H[t0+4]〈n_bltypes〉 = H[t252+131]〈meta_block_header_n_bltypes_l〉) (47263)
  a=r 252 (47263)
  a+= 131 (47265)
  d=a (47267)
  c=*d (47268)
  a=r 0 (47269)
  a+= 4 (47271)
  d=a (47273)
  *d=c (47274)
  (                    3289:   prefix_tree_counts = meta_block_prefix_tree_block_counts_literals) (47275)
  (         H[t0+5]〈prefix_tree_counts〉 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉) (47275)
  a=r 252 (47275)
  a+= 141 (47277)
  d=a (47279)
  c=*d (47280)
  a=r 0 (47281)
  a+= 5 (47283)
  d=a (47285)
  *d=c (47286)
  (                    3290:   if parse_block_switch_command〈prefix_tree_types, btype, btype_prev, n_bltypes, prefix_tree_counts〉:) (47287)
  (         H[t0+6]〈〉 = t0) (47287)
  d++ (47287)
  a=r 0 (47288)
  *d=a (47290)
  (saved bsp, return id:) (47291)
  (         H[t0+7]〈〉 = 208) (47291)
  d++ (47291)
  *d= 208 (47292)
  (push arguments:) (47294)
  (         H[t0+8]〈〉 = H[t0+1]〈prefix_tree_types〉) (47294)
  a++ (47294)
  d=a (47295)
  c=*d (47296)
  a=r 0 (47297)
  a+= 8 (47299)
  d=a (47301)
  *d=c (47302)
  (         H[t0+9]〈〉 = H[t0+2]〈btype〉) (47303)
  a=r 0 (47303)
  a+= 2 (47305)
  d=a (47307)
  c=*d (47308)
  a=r 0 (47309)
  a+= 9 (47311)
  d=a (47313)
  *d=c (47314)
  (         H[t0+10]〈〉 = H[t0+3]〈btype_prev〉) (47315)
  a=r 0 (47315)
  a+= 3 (47317)
  d=a (47319)
  c=*d (47320)
  a=r 0 (47321)
  a+= 10 (47323)
  d=a (47325)
  *d=c (47326)
  (         H[t0+11]〈〉 = H[t0+4]〈n_bltypes〉) (47327)
  a=r 0 (47327)
  a+= 4 (47329)
  d=a (47331)
  c=*d (47332)
  a=r 0 (47333)
  a+= 11 (47335)
  d=a (47337)
  *d=c (47338)
  (         H[t0+12]〈〉 = H[t0+5]〈prefix_tree_counts〉) (47339)
  a=r 0 (47339)
  a+= 5 (47341)
  d=a (47343)
  c=*d (47344)
  a=r 0 (47345)
  a+= 12 (47347)
  d=a (47349)
  *d=c (47350)
  (         t0 = t0 + 7) (47351)
  c= 7 (47351)
  a=r 0 (47353)
  a+=c (47355)
  r=a 0 (47356)
  (         goto parse_block_switch_command) (47358)
  lj 46858 (47358)
  (        :return_id_208:) (47361)
  (         ifN t1 goto else_1889) (47361)
  a=r 1 (47361)
  a== 0 (47363)
  jf 3 (47365)
  lj 47374 (47367)
  (                    3291:     error〈〉 # err) (47370)
  (         error) (47370)
  error (47370)
  (         goto endif_1890) (47371)
  lj 47374 (47371)
  (        :else_1889:) (47374)
  (        :endif_1890:) (47374)
  (                    3292:   parse_block_switch_command_literals_block_type = parse_block_switch_command_block_type) (47374)
  (         H[t252+168]〈parse_block_switch_command_literals_block_type〉 = H[t252+166]〈parse_block_switch_command_block_type〉) (47374)
  a=r 252 (47374)
  a+= 166 (47376)
  d=a (47378)
  c=*d (47379)
  a=r 252 (47380)
  a+= 168 (47382)
  d=a (47384)
  *d=c (47385)
  (                    3293:   parse_block_switch_command_literals_block_count = parse_block_switch_command_block_count) (47386)
  (         H[t252+169]〈parse_block_switch_command_literals_block_count〉 = H[t252+167]〈parse_block_switch_command_block_count〉) (47386)
  d-- (47386)
  c=*d (47387)
  a=r 252 (47388)
  a+= 169 (47390)
  d=a (47392)
  *d=c (47393)
  (                    3294:   return 0) (47394)
  (         t1 = 0) (47394)
  a=0 (47394)
  r=a 1 (47395)
  (         t2 = H[t0]〈〉) (47397)
  d=r 0 (47397)
  a=*d (47399)
  r=a 2 (47400)
  (         t0 = t0 - 1) (47402)
  a=r 0 (47402)
  a-- (47404)
  r=a 0 (47405)
  (         t0 = H[t0]〈〉) (47407)
  d=a (47407)
  a=*d (47408)
  r=a 0 (47409)
  (         goto find_label_ret_id) (47411)
  lj 62666 (47411)
  (insert return as it might not be done by the function:) (47414)
  (         t2 = H[t0]〈〉) (47414)
  d=a (47414)
  a=*d (47415)
  r=a 2 (47416)
  (         t0 = t0 - 1) (47418)
  a=r 0 (47418)
  a-- (47420)
  r=a 0 (47421)
  (         t0 = H[t0]〈〉) (47423)
  d=a (47423)
  a=*d (47424)
  r=a 0 (47425)
  (         goto find_label_ret_id) (47427)
  lj 62666 (47427)
  (         MarkTempVarEnd) (47430)
  (        :parse_block_switch_command_literals_end~:) (47430)
  (                    3296: parse_block_switch_command_insert_and_copy_lengths_block_type = NONE) (47430)
  (         H[t0+170]〈parse_block_switch_command_insert_and_copy_lengths_block_type〉 = 4294967295) (47430)
  a=r 0 (47430)
  a+= 170 (47432)
  d=a (47434)
  *d=0 (47435)
  *d-- (47436)
  (                    3297: parse_block_switch_command_insert_and_copy_lengths_block_count = NONE) (47437)
  (         H[t0+171]〈parse_block_switch_command_insert_and_copy_lengths_block_count〉 = 4294967295) (47437)
  d++ (47437)
  *d=0 (47438)
  *d-- (47439)
  (                    3298: def parse_block_switch_command_insert_and_copy_lengths〈〉:) (47440)
  (         goto parse_block_switch_command_insert_and_copy_lengths_end~) (47440)
  lj 47649 (47440)
  (        :parse_block_switch_command_insert_and_copy_lengths:) (47443)
  (         MarkTempVarStart) (47443)
  (                    3299:   global parse_block_switch_command_insert_and_copy_lengths_block_type, parse_block_switch_command_insert_and_copy_lengths_block_count) (47443)
  (Global parse_block_switch_command_insert_and_copy_lengths_block_type via H[t252+170]) (47443)
  (Global parse_block_switch_command_insert_and_copy_lengths_block_count via H[t252+171]) (47443)
  (                    3300:   prefix_tree_types = meta_block_prefix_tree_block_types_insert_and_copy_lengths) (47443)
  (         H[t0+1]〈prefix_tree_types〉 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉) (47443)
  a=r 252 (47443)
  a+= 153 (47445)
  d=a (47447)
  c=*d (47448)
  a=r 0 (47449)
  a++ (47451)
  d=a (47452)
  *d=c (47453)
  (                    3301:   btype = meta_block_btype_i) (47454)
  (         H[t0+2]〈btype〉 = H[t252+149]〈meta_block_btype_i〉) (47454)
  a=r 252 (47454)
  a+= 149 (47456)
  d=a (47458)
  c=*d (47459)
  a=r 0 (47460)
  a+= 2 (47462)
  d=a (47464)
  *d=c (47465)
  (                    3302:   btype_prev = meta_block_btype_i_prev) (47466)
  (         H[t0+3]〈btype_prev〉 = H[t252+150]〈meta_block_btype_i_prev〉) (47466)
  a=r 252 (47466)
  a+= 150 (47468)
  d=a (47470)
  c=*d (47471)
  a=r 0 (47472)
  a+= 3 (47474)
  d=a (47476)
  *d=c (47477)
  (                    3303:   n_bltypes = meta_block_header_n_bltypes_i) (47478)
  (         H[t0+4]〈n_bltypes〉 = H[t252+132]〈meta_block_header_n_bltypes_i〉) (47478)
  a=r 252 (47478)
  a+= 132 (47480)
  d=a (47482)
  c=*d (47483)
  a=r 0 (47484)
  a+= 4 (47486)
  d=a (47488)
  *d=c (47489)
  (                    3304:   prefix_tree_counts = meta_block_prefix_tree_block_counts_insert_and_copy_lengths) (47490)
  (         H[t0+5]〈prefix_tree_counts〉 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (47490)
  a=r 252 (47490)
  a+= 154 (47492)
  d=a (47494)
  c=*d (47495)
  a=r 0 (47496)
  a+= 5 (47498)
  d=a (47500)
  *d=c (47501)
  (                    3305:   if parse_block_switch_command〈prefix_tree_types, btype, btype_prev, n_bltypes, prefix_tree_counts〉:) (47502)
  (         H[t0+6]〈〉 = t0) (47502)
  d++ (47502)
  a=r 0 (47503)
  *d=a (47505)
  (saved bsp, return id:) (47506)
  (         H[t0+7]〈〉 = 209) (47506)
  d++ (47506)
  *d= 209 (47507)
  (push arguments:) (47509)
  (         H[t0+8]〈〉 = H[t0+1]〈prefix_tree_types〉) (47509)
  a++ (47509)
  d=a (47510)
  c=*d (47511)
  a=r 0 (47512)
  a+= 8 (47514)
  d=a (47516)
  *d=c (47517)
  (         H[t0+9]〈〉 = H[t0+2]〈btype〉) (47518)
  a=r 0 (47518)
  a+= 2 (47520)
  d=a (47522)
  c=*d (47523)
  a=r 0 (47524)
  a+= 9 (47526)
  d=a (47528)
  *d=c (47529)
  (         H[t0+10]〈〉 = H[t0+3]〈btype_prev〉) (47530)
  a=r 0 (47530)
  a+= 3 (47532)
  d=a (47534)
  c=*d (47535)
  a=r 0 (47536)
  a+= 10 (47538)
  d=a (47540)
  *d=c (47541)
  (         H[t0+11]〈〉 = H[t0+4]〈n_bltypes〉) (47542)
  a=r 0 (47542)
  a+= 4 (47544)
  d=a (47546)
  c=*d (47547)
  a=r 0 (47548)
  a+= 11 (47550)
  d=a (47552)
  *d=c (47553)
  (         H[t0+12]〈〉 = H[t0+5]〈prefix_tree_counts〉) (47554)
  a=r 0 (47554)
  a+= 5 (47556)
  d=a (47558)
  c=*d (47559)
  a=r 0 (47560)
  a+= 12 (47562)
  d=a (47564)
  *d=c (47565)
  (         t0 = t0 + 7) (47566)
  c= 7 (47566)
  a=r 0 (47568)
  a+=c (47570)
  r=a 0 (47571)
  (         goto parse_block_switch_command) (47573)
  lj 46858 (47573)
  (        :return_id_209:) (47576)
  (         ifN t1 goto else_1891) (47576)
  a=r 1 (47576)
  a== 0 (47578)
  jf 3 (47580)
  lj 47589 (47582)
  (                    3306:     error〈〉 # err) (47585)
  (         error) (47585)
  error (47585)
  (         goto endif_1892) (47586)
  lj 47589 (47586)
  (        :else_1891:) (47589)
  (        :endif_1892:) (47589)
  (                    3307:   parse_block_switch_command_insert_and_copy_lengths_block_type = parse_block_switch_command_block_type) (47589)
  (         H[t252+170]〈parse_block_switch_command_insert_and_copy_lengths_block_type〉 = H[t252+166]〈parse_block_switch_command_block_type〉) (47589)
  a=r 252 (47589)
  a+= 166 (47591)
  d=a (47593)
  c=*d (47594)
  a=r 252 (47595)
  a+= 170 (47597)
  d=a (47599)
  *d=c (47600)
  (                    3308:   parse_block_switch_command_insert_and_copy_lengths_block_count = parse_block_switch_command_block_count) (47601)
  (         H[t252+171]〈parse_block_switch_command_insert_and_copy_lengths_block_count〉 = H[t252+167]〈parse_block_switch_command_block_count〉) (47601)
  a=r 252 (47601)
  a+= 167 (47603)
  d=a (47605)
  c=*d (47606)
  a=r 252 (47607)
  a+= 171 (47609)
  d=a (47611)
  *d=c (47612)
  (                    3309:   return 0) (47613)
  (         t1 = 0) (47613)
  a=0 (47613)
  r=a 1 (47614)
  (         t2 = H[t0]〈〉) (47616)
  d=r 0 (47616)
  a=*d (47618)
  r=a 2 (47619)
  (         t0 = t0 - 1) (47621)
  a=r 0 (47621)
  a-- (47623)
  r=a 0 (47624)
  (         t0 = H[t0]〈〉) (47626)
  d=a (47626)
  a=*d (47627)
  r=a 0 (47628)
  (         goto find_label_ret_id) (47630)
  lj 62666 (47630)
  (insert return as it might not be done by the function:) (47633)
  (         t2 = H[t0]〈〉) (47633)
  d=a (47633)
  a=*d (47634)
  r=a 2 (47635)
  (         t0 = t0 - 1) (47637)
  a=r 0 (47637)
  a-- (47639)
  r=a 0 (47640)
  (         t0 = H[t0]〈〉) (47642)
  d=a (47642)
  a=*d (47643)
  r=a 0 (47644)
  (         goto find_label_ret_id) (47646)
  lj 62666 (47646)
  (         MarkTempVarEnd) (47649)
  (        :parse_block_switch_command_insert_and_copy_lengths_end~:) (47649)
  (                    3311: def parse_insert_and_copy_length〈〉:) (47649)
  (         goto parse_insert_and_copy_length_end~) (47649)
  lj 47954 (47649)
  (        :parse_insert_and_copy_length:) (47652)
  (         MarkTempVarStart) (47652)
  (                    3312:   global meta_block_btype_i_prev, meta_block_blen_i, meta_block_btype_i, InsertAndCopyLength_data) (47652)
  (Global meta_block_btype_i_prev via H[t252+150]) (47652)
  (Global meta_block_blen_i via H[t252+147]) (47652)
  (Global meta_block_btype_i via H[t252+149]) (47652)
  (Global InsertAndCopyLength_data via H[t252+95]) (47652)
  (                    3313:   if meta_block_blen_i == NONE:) (47652)
  (         t1 = H[t252+147]〈meta_block_blen_i〉 == 4294967295) (47652)
  c=0 (47652)
  c-- (47653)
  a=r 252 (47654)
  a+= 147 (47656)
  d=a (47658)
  a=*d (47659)
  a==c (47660)
  a=0 (47661)
  jf 1 (47662)
  a++ (47664)
  r=a 1 (47665)
  (         ifN t1 goto else_1894) (47667)
  a== 0 (47667)
  jf 3 (47669)
  lj 47677 (47671)
  (                    3314:     pass) (47674)
  (         goto endif_1895) (47674)
  lj 47777 (47674)
  (        :else_1894:) (47677)
  (                    3315:   elif meta_block_blen_i == 0:) (47677)
  (         t1 = H[t252+147]〈meta_block_blen_i〉 == 0) (47677)
  c=0 (47677)
  a=r 252 (47678)
  a+= 147 (47680)
  d=a (47682)
  a=*d (47683)
  a==c (47684)
  a=0 (47685)
  jf 1 (47686)
  a++ (47688)
  r=a 1 (47689)
  (         ifN t1 goto else_1897) (47691)
  a== 0 (47691)
  jf 3 (47693)
  lj 47771 (47695)
  (                    3317:     if parse_block_switch_command_insert_and_copy_lengths〈〉:) (47698)
  (         H[t0+1]〈〉 = t0) (47698)
  a=r 0 (47698)
  a++ (47700)
  d=a (47701)
  a=r 0 (47702)
  *d=a (47704)
  (saved bsp, return id:) (47705)
  (         H[t0+2]〈〉 = 210) (47705)
  d++ (47705)
  *d= 210 (47706)
  (push arguments:) (47708)
  (         t0 = t0 + 2) (47708)
  c= 2 (47708)
  a+=c (47710)
  r=a 0 (47711)
  (         goto parse_block_switch_command_insert_and_copy_lengths) (47713)
  lj 47443 (47713)
  (        :return_id_210:) (47716)
  (         ifN t1 goto else_1899) (47716)
  a=r 1 (47716)
  a== 0 (47718)
  jf 3 (47720)
  lj 47729 (47722)
  (                    3318:       error〈〉 # err) (47725)
  (         error) (47725)
  error (47725)
  (         goto endif_1900) (47726)
  lj 47729 (47726)
  (        :else_1899:) (47729)
  (        :endif_1900:) (47729)
  (                    3319:     meta_block_btype_i_prev = meta_block_btype_i # @TODO: define both!!!) (47729)
  (         H[t252+150]〈meta_block_btype_i_prev〉 = H[t252+149]〈meta_block_btype_i〉) (47729)
  a=r 252 (47729)
  a+= 149 (47731)
  d=a (47733)
  c=*d (47734)
  d++ (47735)
  *d=c (47736)
  (                    3320:     meta_block_btype_i = parse_block_switch_command_insert_and_copy_lengths_block_type) (47737)
  (         H[t252+149]〈meta_block_btype_i〉 = H[t252+170]〈parse_block_switch_command_insert_and_copy_lengths_block_type〉) (47737)
  a=r 252 (47737)
  a+= 170 (47739)
  d=a (47741)
  c=*d (47742)
  a=r 252 (47743)
  a+= 149 (47745)
  d=a (47747)
  *d=c (47748)
  (                    3321:     meta_block_blen_i = parse_block_switch_command_insert_and_copy_lengths_block_count - 1) (47749)
  (         t1 = H[t252+171]〈parse_block_switch_command_insert_and_copy_lengths_block_count〉 - 1) (47749)
  c= 1 (47749)
  a=r 252 (47751)
  a+= 171 (47753)
  d=a (47755)
  a=*d (47756)
  a-=c (47757)
  r=a 1 (47758)
  (         H[t252+147]〈meta_block_blen_i〉 = t1) (47760)
  a=r 252 (47760)
  a+= 147 (47762)
  d=a (47764)
  a=r 1 (47765)
  *d=a (47767)
  (         goto endif_1898) (47768)
  lj 47777 (47768)
  (        :else_1897:) (47771)
  (                    3323:     meta_block_blen_i -= 1) (47771)
  (         H[t252+147]〈meta_block_blen_i〉 = H[t252+147]〈meta_block_blen_i〉 - 1) (47771)
  a=r 252 (47771)
  a+= 147 (47773)
  d=a (47775)
  *d-- (47776)
  (        :endif_1898:) (47777)
  (        :endif_1895:) (47777)
  (                    3324:   btype = meta_block_btype_i) (47777)
  (         H[t0+1]〈btype〉 = H[t252+149]〈meta_block_btype_i〉) (47777)
  a=r 252 (47777)
  a+= 149 (47779)
  d=a (47781)
  c=*d (47782)
  a=r 0 (47783)
  a++ (47785)
  d=a (47786)
  *d=c (47787)
  (                    3325:   InsertAndCopyLength_data = lookup_symbol〈meta_block_prefix_trees_insert_and_copy_lengths[btype]〉) (47788)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 >> 31) (47788)
  c= 31 (47788)
  a=r 252 (47790)
  a+= 157 (47792)
  d=a (47794)
  a=*d (47795)
  a>>=c (47796)
  r=a 1 (47797)
  (         if t1 goto isM_1901) (47799)
  a== 0 (47799)
  jt 3 (47801)
  lj 47827 (47803)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 + H[t0+1]〈btype〉) (47806)
  a=r 0 (47806)
  a++ (47808)
  d=a (47809)
  c=*d (47810)
  a=r 252 (47811)
  a+= 157 (47813)
  d=a (47815)
  a=*d (47816)
  a+=c (47817)
  r=a 1 (47818)
  (         t1 = H[t1]〈〉) (47820)
  d=a (47820)
  a=*d (47821)
  r=a 1 (47822)
  (         goto MorHdone_1902) (47824)
  lj 47855 (47824)
  (        :isM_1901:) (47827)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 & 2147483647) (47827)
  a=0 (47827)
  a-- (47828)
  a>>= 1 (47829)
  c=a (47831)
  a=r 252 (47832)
  a+= 157 (47834)
  d=a (47836)
  a=*d (47837)
  a&=c (47838)
  r=a 1 (47839)
  (         t1 = t1 + H[t0+1]〈btype〉) (47841)
  a=r 0 (47841)
  a++ (47843)
  d=a (47844)
  c=*d (47845)
  a=r 1 (47846)
  a+=c (47848)
  r=a 1 (47849)
  (         t1 = M[t1]) (47851)
  b=a (47851)
  a=*b (47852)
  r=a 1 (47853)
  (        :MorHdone_1902:) (47855)
  (         H[t0+2]〈〉 = t0) (47855)
  a=r 0 (47855)
  a+= 2 (47857)
  d=a (47859)
  a=r 0 (47860)
  *d=a (47862)
  (saved bsp, return id:) (47863)
  (         H[t0+3]〈〉 = 211) (47863)
  d++ (47863)
  *d= 211 (47864)
  (push arguments:) (47866)
  (         H[t0+4]〈〉 = t1) (47866)
  d++ (47866)
  a=r 1 (47867)
  *d=a (47869)
  (         t0 = t0 + 3) (47870)
  c= 3 (47870)
  a=r 0 (47872)
  a+=c (47874)
  r=a 0 (47875)
  (         goto lookup_symbol) (47877)
  lj 6923 (47877)
  (        :return_id_211:) (47880)
  (         t2 = t1) (47880)
  a=r 1 (47880)
  r=a 2 (47882)
  (         H[t252+95]〈InsertAndCopyLength_data〉 = t2) (47884)
  a=r 252 (47884)
  a+= 95 (47886)
  d=a (47888)
  a=r 2 (47889)
  *d=a (47891)
  (                    3326:   if InsertAndCopyLength_data == NONE:) (47892)
  (         t1 = H[t252+95]〈InsertAndCopyLength_data〉 == 4294967295) (47892)
  c=0 (47892)
  c-- (47893)
  a=*d (47894)
  a==c (47895)
  a=0 (47896)
  jf 1 (47897)
  a++ (47899)
  r=a 1 (47900)
  (         ifN t1 goto else_1904) (47902)
  a== 0 (47902)
  jf 3 (47904)
  lj 47913 (47906)
  (                    3327:     error〈〉 # err eof OR ParseErrorInsertAndCopyLength) (47909)
  (         error) (47909)
  error (47909)
  (         goto endif_1905) (47910)
  lj 47913 (47910)
  (        :else_1904:) (47913)
  (        :endif_1905:) (47913)
  (                    3328:   return InsertAndCopyLength) (47913)
  (         t1 = H[t252+94]〈InsertAndCopyLength〉) (47913)
  a=r 252 (47913)
  a+= 94 (47915)
  d=a (47917)
  a=*d (47918)
  r=a 1 (47919)
  (         t2 = H[t0]〈〉) (47921)
  d=r 0 (47921)
  a=*d (47923)
  r=a 2 (47924)
  (         t0 = t0 - 1) (47926)
  a=r 0 (47926)
  a-- (47928)
  r=a 0 (47929)
  (         t0 = H[t0]〈〉) (47931)
  d=a (47931)
  a=*d (47932)
  r=a 0 (47933)
  (         goto find_label_ret_id) (47935)
  lj 62666 (47935)
  (insert return as it might not be done by the function:) (47938)
  (         t2 = H[t0]〈〉) (47938)
  d=a (47938)
  a=*d (47939)
  r=a 2 (47940)
  (         t0 = t0 - 1) (47942)
  a=r 0 (47942)
  a-- (47944)
  r=a 0 (47945)
  (         t0 = H[t0]〈〉) (47947)
  d=a (47947)
  a=*d (47948)
  r=a 0 (47949)
  (         goto find_label_ret_id) (47951)
  lj 62666 (47951)
  (         MarkTempVarEnd) (47954)
  (        :parse_insert_and_copy_length_end~:) (47954)
  (                    3330: parse_block_switch_command_distances_block_type = NONE) (47954)
  (         H[t0+172]〈parse_block_switch_command_distances_block_type〉 = 4294967295) (47954)
  a=r 0 (47954)
  a+= 172 (47956)
  d=a (47958)
  *d=0 (47959)
  *d-- (47960)
  (                    3331: parse_block_switch_command_distances_block_count = NONE) (47961)
  (         H[t0+173]〈parse_block_switch_command_distances_block_count〉 = 4294967295) (47961)
  d++ (47961)
  *d=0 (47962)
  *d-- (47963)
  (                    3332: def parse_block_switch_command_distances〈〉:) (47964)
  (         goto parse_block_switch_command_distances_end~) (47964)
  lj 48173 (47964)
  (        :parse_block_switch_command_distances:) (47967)
  (         MarkTempVarStart) (47967)
  (                    3333:   global parse_block_switch_command_distances_block_type, parse_block_switch_command_distances_block_count) (47967)
  (Global parse_block_switch_command_distances_block_type via H[t252+172]) (47967)
  (Global parse_block_switch_command_distances_block_count via H[t252+173]) (47967)
  (                    3334:   prefix_tree_types = meta_block_prefix_tree_block_types_distances) (47967)
  (         H[t0+1]〈prefix_tree_types〉 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉) (47967)
  a=r 252 (47967)
  a+= 155 (47969)
  d=a (47971)
  c=*d (47972)
  a=r 0 (47973)
  a++ (47975)
  d=a (47976)
  *d=c (47977)
  (                    3335:   btype = meta_block_btype_d) (47978)
  (         H[t0+2]〈btype〉 = H[t252+151]〈meta_block_btype_d〉) (47978)
  a=r 252 (47978)
  a+= 151 (47980)
  d=a (47982)
  c=*d (47983)
  a=r 0 (47984)
  a+= 2 (47986)
  d=a (47988)
  *d=c (47989)
  (                    3336:   btype_prev = meta_block_btype_d_prev) (47990)
  (         H[t0+3]〈btype_prev〉 = H[t252+152]〈meta_block_btype_d_prev〉) (47990)
  a=r 252 (47990)
  a+= 152 (47992)
  d=a (47994)
  c=*d (47995)
  a=r 0 (47996)
  a+= 3 (47998)
  d=a (48000)
  *d=c (48001)
  (                    3337:   n_bltypes = meta_block_header_n_bltypes_d) (48002)
  (         H[t0+4]〈n_bltypes〉 = H[t252+133]〈meta_block_header_n_bltypes_d〉) (48002)
  a=r 252 (48002)
  a+= 133 (48004)
  d=a (48006)
  c=*d (48007)
  a=r 0 (48008)
  a+= 4 (48010)
  d=a (48012)
  *d=c (48013)
  (                    3338:   prefix_tree_counts = meta_block_prefix_tree_block_counts_distances) (48014)
  (         H[t0+5]〈prefix_tree_counts〉 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉) (48014)
  a=r 252 (48014)
  a+= 156 (48016)
  d=a (48018)
  c=*d (48019)
  a=r 0 (48020)
  a+= 5 (48022)
  d=a (48024)
  *d=c (48025)
  (                    3339:   if parse_block_switch_command〈prefix_tree_types, btype, btype_prev, n_bltypes, prefix_tree_counts〉:) (48026)
  (         H[t0+6]〈〉 = t0) (48026)
  d++ (48026)
  a=r 0 (48027)
  *d=a (48029)
  (saved bsp, return id:) (48030)
  (         H[t0+7]〈〉 = 212) (48030)
  d++ (48030)
  *d= 212 (48031)
  (push arguments:) (48033)
  (         H[t0+8]〈〉 = H[t0+1]〈prefix_tree_types〉) (48033)
  a++ (48033)
  d=a (48034)
  c=*d (48035)
  a=r 0 (48036)
  a+= 8 (48038)
  d=a (48040)
  *d=c (48041)
  (         H[t0+9]〈〉 = H[t0+2]〈btype〉) (48042)
  a=r 0 (48042)
  a+= 2 (48044)
  d=a (48046)
  c=*d (48047)
  a=r 0 (48048)
  a+= 9 (48050)
  d=a (48052)
  *d=c (48053)
  (         H[t0+10]〈〉 = H[t0+3]〈btype_prev〉) (48054)
  a=r 0 (48054)
  a+= 3 (48056)
  d=a (48058)
  c=*d (48059)
  a=r 0 (48060)
  a+= 10 (48062)
  d=a (48064)
  *d=c (48065)
  (         H[t0+11]〈〉 = H[t0+4]〈n_bltypes〉) (48066)
  a=r 0 (48066)
  a+= 4 (48068)
  d=a (48070)
  c=*d (48071)
  a=r 0 (48072)
  a+= 11 (48074)
  d=a (48076)
  *d=c (48077)
  (         H[t0+12]〈〉 = H[t0+5]〈prefix_tree_counts〉) (48078)
  a=r 0 (48078)
  a+= 5 (48080)
  d=a (48082)
  c=*d (48083)
  a=r 0 (48084)
  a+= 12 (48086)
  d=a (48088)
  *d=c (48089)
  (         t0 = t0 + 7) (48090)
  c= 7 (48090)
  a=r 0 (48092)
  a+=c (48094)
  r=a 0 (48095)
  (         goto parse_block_switch_command) (48097)
  lj 46858 (48097)
  (        :return_id_212:) (48100)
  (         ifN t1 goto else_1906) (48100)
  a=r 1 (48100)
  a== 0 (48102)
  jf 3 (48104)
  lj 48113 (48106)
  (                    3340:     error〈〉 # err) (48109)
  (         error) (48109)
  error (48109)
  (         goto endif_1907) (48110)
  lj 48113 (48110)
  (        :else_1906:) (48113)
  (        :endif_1907:) (48113)
  (                    3341:   parse_block_switch_command_distances_block_type = parse_block_switch_command_block_type) (48113)
  (         H[t252+172]〈parse_block_switch_command_distances_block_type〉 = H[t252+166]〈parse_block_switch_command_block_type〉) (48113)
  a=r 252 (48113)
  a+= 166 (48115)
  d=a (48117)
  c=*d (48118)
  a=r 252 (48119)
  a+= 172 (48121)
  d=a (48123)
  *d=c (48124)
  (                    3342:   parse_block_switch_command_distances_block_count = parse_block_switch_command_block_count) (48125)
  (         H[t252+173]〈parse_block_switch_command_distances_block_count〉 = H[t252+167]〈parse_block_switch_command_block_count〉) (48125)
  a=r 252 (48125)
  a+= 167 (48127)
  d=a (48129)
  c=*d (48130)
  a=r 252 (48131)
  a+= 173 (48133)
  d=a (48135)
  *d=c (48136)
  (                    3343:   return 0) (48137)
  (         t1 = 0) (48137)
  a=0 (48137)
  r=a 1 (48138)
  (         t2 = H[t0]〈〉) (48140)
  d=r 0 (48140)
  a=*d (48142)
  r=a 2 (48143)
  (         t0 = t0 - 1) (48145)
  a=r 0 (48145)
  a-- (48147)
  r=a 0 (48148)
  (         t0 = H[t0]〈〉) (48150)
  d=a (48150)
  a=*d (48151)
  r=a 0 (48152)
  (         goto find_label_ret_id) (48154)
  lj 62666 (48154)
  (insert return as it might not be done by the function:) (48157)
  (         t2 = H[t0]〈〉) (48157)
  d=a (48157)
  a=*d (48158)
  r=a 2 (48159)
  (         t0 = t0 - 1) (48161)
  a=r 0 (48161)
  a-- (48163)
  r=a 0 (48164)
  (         t0 = H[t0]〈〉) (48166)
  d=a (48166)
  a=*d (48167)
  r=a 0 (48168)
  (         goto find_label_ret_id) (48170)
  lj 62666 (48170)
  (         MarkTempVarEnd) (48173)
  (        :parse_block_switch_command_distances_end~:) (48173)
  (                    3345: def parse_insert_literals〈〉:) (48173)
  (         goto parse_insert_literals_end~) (48173)
  lj 49159 (48173)
  (        :parse_insert_literals:) (48176)
  (         MarkTempVarStart) (48176)
  (                    3346:   global literal_buf_pointer, meta_block_btype_l_prev, meta_block_btype_l, meta_block_blen_l, InsertLiterals_data) (48176)
  (Global literal_buf_pointer via H[t252+123]) (48176)
  (Global meta_block_btype_l_prev via H[t252+145]) (48176)
  (Global meta_block_btype_l via H[t252+144]) (48176)
  (Global meta_block_blen_l via H[t252+146]) (48176)
  (Global InsertLiterals_data via H[t252+100]) (48176)
  (                    3347:   insert_length = meta_block_insert_length) (48176)
  (         H[t0+1]〈insert_length〉 = H[t252+162]〈meta_block_insert_length〉) (48176)
  a=r 252 (48176)
  a+= 162 (48178)
  d=a (48180)
  c=*d (48181)
  a=r 0 (48182)
  a++ (48184)
  d=a (48185)
  *d=c (48186)
  (                    3348:   literals = alloc_pM〈insert_length〉) (48187)
  (         H[t0+2]〈〉 = t0) (48187)
  d++ (48187)
  a=r 0 (48188)
  *d=a (48190)
  (saved bsp, return id:) (48191)
  (         H[t0+3]〈〉 = 213) (48191)
  d++ (48191)
  *d= 213 (48192)
  (push arguments:) (48194)
  (         H[t0+4]〈〉 = H[t0+1]〈insert_length〉) (48194)
  d++ (48194)
  *d=c (48195)
  (         t0 = t0 + 3) (48196)
  c= 3 (48196)
  a+=c (48198)
  r=a 0 (48199)
  (         goto addr_alloc_pM) (48201)
  lj 323 (48201)
  (        :return_id_213:) (48204)
  (         t1 = t1 | 2147483648) (48204)
  a= 1 (48204)
  a<<= 31 (48206)
  c=a (48208)
  a=r 1 (48209)
  a|=c (48211)
  r=a 1 (48212)
  (         H[t0+2]〈literals〉 = t1) (48214)
  a=r 0 (48214)
  a+= 2 (48216)
  d=a (48218)
  a=r 1 (48219)
  *d=a (48221)
  (                    3349:   j = 0) (48222)
  (         H[t0+3]〈j〉 = 0) (48222)
  d++ (48222)
  *d=0 (48223)
  (                    3350:   while j < insert_length:) (48224)
  (        :while_1908:) (48224)
  (         t1 = H[t0+3]〈j〉 < H[t0+1]〈insert_length〉) (48224)
  a=r 0 (48224)
  a++ (48226)
  d=a (48227)
  c=*d (48228)
  a=r 0 (48229)
  a+= 3 (48231)
  d=a (48233)
  a=*d (48234)
  a<c (48235)
  a=0 (48236)
  jf 1 (48237)
  a++ (48239)
  r=a 1 (48240)
  (         ifN t1 goto whileend_1910) (48242)
  a== 0 (48242)
  jf 3 (48244)
  lj 49110 (48246)
  (                    3351:     if meta_block_blen_l == NONE:) (48249)
  (         t1 = H[t252+146]〈meta_block_blen_l〉 == 4294967295) (48249)
  c=0 (48249)
  c-- (48250)
  a=r 252 (48251)
  a+= 146 (48253)
  d=a (48255)
  a=*d (48256)
  a==c (48257)
  a=0 (48258)
  jf 1 (48259)
  a++ (48261)
  r=a 1 (48262)
  (         ifN t1 goto else_1913) (48264)
  a== 0 (48264)
  jf 3 (48266)
  lj 48274 (48268)
  (                    3352:       pass) (48271)
  (         goto endif_1914) (48271)
  lj 48375 (48271)
  (        :else_1913:) (48274)
  (                    3353:     elif meta_block_blen_l == 0:) (48274)
  (         t1 = H[t252+146]〈meta_block_blen_l〉 == 0) (48274)
  c=0 (48274)
  a=r 252 (48275)
  a+= 146 (48277)
  d=a (48279)
  a=*d (48280)
  a==c (48281)
  a=0 (48282)
  jf 1 (48283)
  a++ (48285)
  r=a 1 (48286)
  (         ifN t1 goto else_1916) (48288)
  a== 0 (48288)
  jf 3 (48290)
  lj 48369 (48292)
  (                    3354:       if parse_block_switch_command_literals〈〉:) (48295)
  (         H[t0+4]〈〉 = t0) (48295)
  a=r 0 (48295)
  a+= 4 (48297)
  d=a (48299)
  a=r 0 (48300)
  *d=a (48302)
  (saved bsp, return id:) (48303)
  (         H[t0+5]〈〉 = 214) (48303)
  d++ (48303)
  *d= 214 (48304)
  (push arguments:) (48306)
  (         t0 = t0 + 5) (48306)
  c= 5 (48306)
  a+=c (48308)
  r=a 0 (48309)
  (         goto parse_block_switch_command_literals) (48311)
  lj 47228 (48311)
  (        :return_id_214:) (48314)
  (         ifN t1 goto else_1918) (48314)
  a=r 1 (48314)
  a== 0 (48316)
  jf 3 (48318)
  lj 48327 (48320)
  (                    3355:         error〈〉) (48323)
  (         error) (48323)
  error (48323)
  (         goto endif_1919) (48324)
  lj 48327 (48324)
  (        :else_1918:) (48327)
  (        :endif_1919:) (48327)
  (                    3356:       meta_block_btype_l_prev = meta_block_btype_l) (48327)
  (         H[t252+145]〈meta_block_btype_l_prev〉 = H[t252+144]〈meta_block_btype_l〉) (48327)
  a=r 252 (48327)
  a+= 144 (48329)
  d=a (48331)
  c=*d (48332)
  d++ (48333)
  *d=c (48334)
  (                    3357:       meta_block_btype_l = parse_block_switch_command_literals_block_type) (48335)
  (         H[t252+144]〈meta_block_btype_l〉 = H[t252+168]〈parse_block_switch_command_literals_block_type〉) (48335)
  a=r 252 (48335)
  a+= 168 (48337)
  d=a (48339)
  c=*d (48340)
  a=r 252 (48341)
  a+= 144 (48343)
  d=a (48345)
  *d=c (48346)
  (                    3358:       meta_block_blen_l = parse_block_switch_command_literals_block_count - 1) (48347)
  (         t1 = H[t252+169]〈parse_block_switch_command_literals_block_count〉 - 1) (48347)
  c= 1 (48347)
  a=r 252 (48349)
  a+= 169 (48351)
  d=a (48353)
  a=*d (48354)
  a-=c (48355)
  r=a 1 (48356)
  (         H[t252+146]〈meta_block_blen_l〉 = t1) (48358)
  a=r 252 (48358)
  a+= 146 (48360)
  d=a (48362)
  a=r 1 (48363)
  *d=a (48365)
  (         goto endif_1917) (48366)
  lj 48375 (48366)
  (        :else_1916:) (48369)
  (                    3360:       meta_block_blen_l -= 1) (48369)
  (         H[t252+146]〈meta_block_blen_l〉 = H[t252+146]〈meta_block_blen_l〉 - 1) (48369)
  a=r 252 (48369)
  a+= 146 (48371)
  d=a (48373)
  *d-- (48374)
  (        :endif_1917:) (48375)
  (        :endif_1914:) (48375)
  (                    3361:     btype = meta_block_btype_l) (48375)
  (         H[t0+4]〈btype〉 = H[t252+144]〈meta_block_btype_l〉) (48375)
  a=r 252 (48375)
  a+= 144 (48377)
  d=a (48379)
  c=*d (48380)
  a=r 0 (48381)
  a+= 4 (48383)
  d=a (48385)
  *d=c (48386)
  (                    3362:     context_mode = meta_block_context_modes_literals[btype]) (48387)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 >> 31) (48387)
  c= 31 (48387)
  a=r 252 (48389)
  a+= 159 (48391)
  d=a (48393)
  a=*d (48394)
  a>>=c (48395)
  r=a 1 (48396)
  (         if t1 goto isM_1920) (48398)
  a== 0 (48398)
  jt 3 (48400)
  lj 48427 (48402)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 + H[t0+4]〈btype〉) (48405)
  a=r 0 (48405)
  a+= 4 (48407)
  d=a (48409)
  c=*d (48410)
  a=r 252 (48411)
  a+= 159 (48413)
  d=a (48415)
  a=*d (48416)
  a+=c (48417)
  r=a 1 (48418)
  (         t1 = H[t1]〈〉) (48420)
  d=a (48420)
  a=*d (48421)
  r=a 1 (48422)
  (         goto MorHdone_1921) (48424)
  lj 48456 (48424)
  (        :isM_1920:) (48427)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 & 2147483647) (48427)
  a=0 (48427)
  a-- (48428)
  a>>= 1 (48429)
  c=a (48431)
  a=r 252 (48432)
  a+= 159 (48434)
  d=a (48436)
  a=*d (48437)
  a&=c (48438)
  r=a 1 (48439)
  (         t1 = t1 + H[t0+4]〈btype〉) (48441)
  a=r 0 (48441)
  a+= 4 (48443)
  d=a (48445)
  c=*d (48446)
  a=r 1 (48447)
  a+=c (48449)
  r=a 1 (48450)
  (         t1 = M[t1]) (48452)
  b=a (48452)
  a=*b (48453)
  r=a 1 (48454)
  (        :MorHdone_1921:) (48456)
  (         H[t0+5]〈context_mode〉 = t1) (48456)
  a=r 0 (48456)
  a+= 5 (48458)
  d=a (48460)
  a=r 1 (48461)
  *d=a (48463)
  (                    3363:     p1 = literal_buf[literal_buf_pointer]) (48464)
  (         t1 = H[t252+122]〈literal_buf〉 & 2147483647) (48464)
  a=0 (48464)
  a-- (48465)
  a>>= 1 (48466)
  c=a (48468)
  a=r 252 (48469)
  a+= 122 (48471)
  d=a (48473)
  a=*d (48474)
  a&=c (48475)
  r=a 1 (48476)
  (         t1 = t1 + H[t252+123]〈literal_buf_pointer〉) (48478)
  d++ (48478)
  c=*d (48479)
  a+=c (48480)
  r=a 1 (48481)
  (         t1 = M[t1]) (48483)
  b=a (48483)
  a=*b (48484)
  r=a 1 (48485)
  (         H[t0+6]〈p1〉 = t1) (48487)
  a=r 0 (48487)
  a+= 6 (48489)
  d=a (48491)
  a=r 1 (48492)
  *d=a (48494)
  (                    3364:     p2 = literal_buf[〈literal_buf_pointer+1〉 % 2]) (48495)
  (         t2 = H[t252+123]〈literal_buf_pointer〉 + 1) (48495)
  c= 1 (48495)
  a=r 252 (48497)
  a+= 123 (48499)
  d=a (48501)
  a=*d (48502)
  a+=c (48503)
  r=a 2 (48504)
  (         t1 = t2 % 2) (48506)
  c= 2 (48506)
  a%=c (48508)
  r=a 1 (48509)
  (         t2 = H[t252+122]〈literal_buf〉 & 2147483647) (48511)
  a=0 (48511)
  a-- (48512)
  a>>= 1 (48513)
  c=a (48515)
  d-- (48516)
  a=*d (48517)
  a&=c (48518)
  r=a 2 (48519)
  (         t2 = t2 + t1) (48521)
  c=r 1 (48521)
  a+=c (48523)
  r=a 2 (48524)
  (         t2 = M[t2]) (48526)
  b=a (48526)
  a=*b (48527)
  r=a 2 (48528)
  (         H[t0+7]〈p2〉 = t2) (48530)
  a=r 0 (48530)
  a+= 7 (48532)
  d=a (48534)
  a=r 2 (48535)
  *d=a (48537)
  (                    3365:     if context_mode == 0:) (48538)
  (         t2 = H[t0+5]〈context_mode〉 == 0) (48538)
  c=0 (48538)
  a=r 0 (48539)
  a+= 5 (48541)
  d=a (48543)
  a=*d (48544)
  a==c (48545)
  a=0 (48546)
  jf 1 (48547)
  a++ (48549)
  r=a 2 (48550)
  (         ifN t2 goto else_1923) (48552)
  a== 0 (48552)
  jf 3 (48554)
  lj 48577 (48556)
  (                    3366:       cid = p1 & 63) (48559)
  (         t2 = H[t0+6]〈p1〉 & 63) (48559)
  c= 63 (48559)
  d++ (48561)
  a=*d (48562)
  a&=c (48563)
  r=a 2 (48564)
  (         H[t0+8]〈cid〉 = t2) (48566)
  a=r 0 (48566)
  a+= 8 (48568)
  d=a (48570)
  a=r 2 (48571)
  *d=a (48573)
  (         goto endif_1924) (48574)
  lj 48825 (48574)
  (        :else_1923:) (48577)
  (                    3367:     elif context_mode == 1:) (48577)
  (         t2 = H[t0+5]〈context_mode〉 == 1) (48577)
  c= 1 (48577)
  a=r 0 (48579)
  a+= 5 (48581)
  d=a (48583)
  a=*d (48584)
  a==c (48585)
  a=0 (48586)
  jf 1 (48587)
  a++ (48589)
  r=a 2 (48590)
  (         ifN t2 goto else_1926) (48592)
  a== 0 (48592)
  jf 3 (48594)
  lj 48617 (48596)
  (                    3368:       cid = p1 >> 2) (48599)
  (         t2 = H[t0+6]〈p1〉 >> 2) (48599)
  c= 2 (48599)
  d++ (48601)
  a=*d (48602)
  a>>=c (48603)
  r=a 2 (48604)
  (         H[t0+8]〈cid〉 = t2) (48606)
  a=r 0 (48606)
  a+= 8 (48608)
  d=a (48610)
  a=r 2 (48611)
  *d=a (48613)
  (         goto endif_1927) (48614)
  lj 48825 (48614)
  (        :else_1926:) (48617)
  (                    3369:     elif context_mode == 2:) (48617)
  (         t2 = H[t0+5]〈context_mode〉 == 2) (48617)
  c= 2 (48617)
  a=r 0 (48619)
  a+= 5 (48621)
  d=a (48623)
  a=*d (48624)
  a==c (48625)
  a=0 (48626)
  jf 1 (48627)
  a++ (48629)
  r=a 2 (48630)
  (         ifN t2 goto else_1929) (48632)
  a== 0 (48632)
  jf 3 (48634)
  lj 48708 (48636)
  (                    3370:       cid = LUT_0[p1] | LUT_1[p2]) (48639)
  (         t3 = H[t252+12]〈LUT_0〉 & 2147483647) (48639)
  a=0 (48639)
  a-- (48640)
  a>>= 1 (48641)
  c=a (48643)
  a=r 252 (48644)
  a+= 12 (48646)
  d=a (48648)
  a=*d (48649)
  a&=c (48650)
  r=a 3 (48651)
  (         t3 = t3 + H[t0+6]〈p1〉) (48653)
  a=r 0 (48653)
  a+= 6 (48655)
  d=a (48657)
  c=*d (48658)
  a=r 3 (48659)
  a+=c (48661)
  r=a 3 (48662)
  (         t3 = M[t3]) (48664)
  b=a (48664)
  a=*b (48665)
  r=a 3 (48666)
  (         t4 = H[t252+13]〈LUT_1〉 & 2147483647) (48668)
  a=0 (48668)
  a-- (48669)
  a>>= 1 (48670)
  c=a (48672)
  a=r 252 (48673)
  a+= 13 (48675)
  d=a (48677)
  a=*d (48678)
  a&=c (48679)
  r=a 4 (48680)
  (         t4 = t4 + H[t0+7]〈p2〉) (48682)
  a=r 0 (48682)
  a+= 7 (48684)
  d=a (48686)
  c=*d (48687)
  a=r 4 (48688)
  a+=c (48690)
  r=a 4 (48691)
  (         t4 = M[t4]) (48693)
  b=a (48693)
  a=*b (48694)
  r=a 4 (48695)
  (         t2 = t3 | t4) (48697)
  c=a (48697)
  a=r 3 (48698)
  a|=c (48700)
  r=a 2 (48701)
  (         H[t0+8]〈cid〉 = t2) (48703)
  d++ (48703)
  *d=a (48704)
  (         goto endif_1930) (48705)
  lj 48825 (48705)
  (        :else_1929:) (48708)
  (                    3371:     elif context_mode == 3:) (48708)
  (         t2 = H[t0+5]〈context_mode〉 == 3) (48708)
  c= 3 (48708)
  a=r 0 (48710)
  a+= 5 (48712)
  d=a (48714)
  a=*d (48715)
  a==c (48716)
  a=0 (48717)
  jf 1 (48718)
  a++ (48720)
  r=a 2 (48721)
  (         ifN t2 goto else_1932) (48723)
  a== 0 (48723)
  jf 3 (48725)
  lj 48804 (48727)
  (                    3372:       cid = 〈LUT_2[p1] << 3〉 | LUT_2[p2]) (48730)
  (         t4 = H[t252+14]〈LUT_2〉 & 2147483647) (48730)
  a=0 (48730)
  a-- (48731)
  a>>= 1 (48732)
  c=a (48734)
  a=r 252 (48735)
  a+= 14 (48737)
  d=a (48739)
  a=*d (48740)
  a&=c (48741)
  r=a 4 (48742)
  (         t4 = t4 + H[t0+6]〈p1〉) (48744)
  a=r 0 (48744)
  a+= 6 (48746)
  d=a (48748)
  c=*d (48749)
  a=r 4 (48750)
  a+=c (48752)
  r=a 4 (48753)
  (         t4 = M[t4]) (48755)
  b=a (48755)
  a=*b (48756)
  r=a 4 (48757)
  (         t3 = t4 << 3) (48759)
  c= 3 (48759)
  a<<=c (48761)
  r=a 3 (48762)
  (         t4 = H[t252+14]〈LUT_2〉 & 2147483647) (48764)
  a=0 (48764)
  a-- (48765)
  a>>= 1 (48766)
  c=a (48768)
  a=r 252 (48769)
  a+= 14 (48771)
  d=a (48773)
  a=*d (48774)
  a&=c (48775)
  r=a 4 (48776)
  (         t4 = t4 + H[t0+7]〈p2〉) (48778)
  a=r 0 (48778)
  a+= 7 (48780)
  d=a (48782)
  c=*d (48783)
  a=r 4 (48784)
  a+=c (48786)
  r=a 4 (48787)
  (         t4 = M[t4]) (48789)
  b=a (48789)
  a=*b (48790)
  r=a 4 (48791)
  (         t2 = t3 | t4) (48793)
  c=a (48793)
  a=r 3 (48794)
  a|=c (48796)
  r=a 2 (48797)
  (         H[t0+8]〈cid〉 = t2) (48799)
  d++ (48799)
  *d=a (48800)
  (         goto endif_1933) (48801)
  lj 48825 (48801)
  (        :else_1932:) (48804)
  (                    3374:       return NONE # unreachable) (48804)
  (         t1 = 4294967295) (48804)
  a=0 (48804)
  a-- (48805)
  r=a 1 (48806)
  (         t2 = H[t0]〈〉) (48808)
  d=r 0 (48808)
  a=*d (48810)
  r=a 2 (48811)
  (         t0 = t0 - 1) (48813)
  a=r 0 (48813)
  a-- (48815)
  r=a 0 (48816)
  (         t0 = H[t0]〈〉) (48818)
  d=a (48818)
  a=*d (48819)
  r=a 0 (48820)
  (         goto find_label_ret_id) (48822)
  lj 62666 (48822)
  (        :endif_1933:) (48825)
  (        :endif_1930:) (48825)
  (        :endif_1927:) (48825)
  (        :endif_1924:) (48825)
  (                    3375:     index = meta_block_header_c_map_l[btype * 64 + cid]) (48825)
  (         t3 = H[t0+4]〈btype〉 * 64) (48825)
  c= 64 (48825)
  a=r 0 (48827)
  a+= 4 (48829)
  d=a (48831)
  a=*d (48832)
  a*=c (48833)
  r=a 3 (48834)
  (         t2 = t3 + H[t0+8]〈cid〉) (48836)
  a=r 0 (48836)
  a+= 8 (48838)
  d=a (48840)
  c=*d (48841)
  a=r 3 (48842)
  a+=c (48844)
  r=a 2 (48845)
  (         t3 = H[t252+138]〈meta_block_header_c_map_l〉 >> 31) (48847)
  c= 31 (48847)
  a=r 252 (48849)
  a+= 138 (48851)
  d=a (48853)
  a=*d (48854)
  a>>=c (48855)
  r=a 3 (48856)
  (         if t3 goto isM_1934) (48858)
  a== 0 (48858)
  jt 3 (48860)
  lj 48878 (48862)
  (         t3 = H[t252+138]〈meta_block_header_c_map_l〉 + t2) (48865)
  c=r 2 (48865)
  a=*d (48867)
  a+=c (48868)
  r=a 3 (48869)
  (         t3 = H[t3]〈〉) (48871)
  d=a (48871)
  a=*d (48872)
  r=a 3 (48873)
  (         goto MorHdone_1935) (48875)
  lj 48901 (48875)
  (        :isM_1934:) (48878)
  (         t3 = H[t252+138]〈meta_block_header_c_map_l〉 & 2147483647) (48878)
  a=0 (48878)
  a-- (48879)
  a>>= 1 (48880)
  c=a (48882)
  a=r 252 (48883)
  a+= 138 (48885)
  d=a (48887)
  a=*d (48888)
  a&=c (48889)
  r=a 3 (48890)
  (         t3 = t3 + t2) (48892)
  c=r 2 (48892)
  a+=c (48894)
  r=a 3 (48895)
  (         t3 = M[t3]) (48897)
  b=a (48897)
  a=*b (48898)
  r=a 3 (48899)
  (        :MorHdone_1935:) (48901)
  (         H[t0+9]〈index〉 = t3) (48901)
  a=r 0 (48901)
  a+= 9 (48903)
  d=a (48905)
  a=r 3 (48906)
  *d=a (48908)
  (                    3376:     tmp_ = lookup_symbol〈meta_block_prefix_trees_literals[index]〉) (48909)
  (         t3 = H[t252+142]〈meta_block_prefix_trees_literals〉 >> 31) (48909)
  c= 31 (48909)
  a=r 252 (48911)
  a+= 142 (48913)
  d=a (48915)
  a=*d (48916)
  a>>=c (48917)
  r=a 3 (48918)
  (         if t3 goto isM_1936) (48920)
  a== 0 (48920)
  jt 3 (48922)
  lj 48949 (48924)
  (         t3 = H[t252+142]〈meta_block_prefix_trees_literals〉 + H[t0+9]〈index〉) (48927)
  a=r 0 (48927)
  a+= 9 (48929)
  d=a (48931)
  c=*d (48932)
  a=r 252 (48933)
  a+= 142 (48935)
  d=a (48937)
  a=*d (48938)
  a+=c (48939)
  r=a 3 (48940)
  (         t3 = H[t3]〈〉) (48942)
  d=a (48942)
  a=*d (48943)
  r=a 3 (48944)
  (         goto MorHdone_1937) (48946)
  lj 48978 (48946)
  (        :isM_1936:) (48949)
  (         t3 = H[t252+142]〈meta_block_prefix_trees_literals〉 & 2147483647) (48949)
  a=0 (48949)
  a-- (48950)
  a>>= 1 (48951)
  c=a (48953)
  a=r 252 (48954)
  a+= 142 (48956)
  d=a (48958)
  a=*d (48959)
  a&=c (48960)
  r=a 3 (48961)
  (         t3 = t3 + H[t0+9]〈index〉) (48963)
  a=r 0 (48963)
  a+= 9 (48965)
  d=a (48967)
  c=*d (48968)
  a=r 3 (48969)
  a+=c (48971)
  r=a 3 (48972)
  (         t3 = M[t3]) (48974)
  b=a (48974)
  a=*b (48975)
  r=a 3 (48976)
  (        :MorHdone_1937:) (48978)
  (         H[t0+12]〈〉 = t0) (48978)
  a=r 0 (48978)
  a+= 12 (48980)
  d=a (48982)
  a=r 0 (48983)
  *d=a (48985)
  (saved bsp, return id:) (48986)
  (         H[t0+13]〈〉 = 215) (48986)
  d++ (48986)
  *d= 215 (48987)
  (push arguments:) (48989)
  (         H[t0+14]〈〉 = t3) (48989)
  d++ (48989)
  a=r 3 (48990)
  *d=a (48992)
  (         t0 = t0 + 13) (48993)
  c= 13 (48993)
  a=r 0 (48995)
  a+=c (48997)
  r=a 0 (48998)
  (         goto lookup_symbol) (49000)
  lj 6923 (49000)
  (        :return_id_215:) (49003)
  (         t4 = t1) (49003)
  a=r 1 (49003)
  r=a 4 (49005)
  (         H[t0+10]〈tmp_〉 = t4) (49007)
  a=r 0 (49007)
  a+= 10 (49009)
  d=a (49011)
  a=r 4 (49012)
  *d=a (49014)
  (                    3377:     if tmp_ == NONE:) (49015)
  (         t3 = H[t0+10]〈tmp_〉 == 4294967295) (49015)
  c=0 (49015)
  c-- (49016)
  a=*d (49017)
  a==c (49018)
  a=0 (49019)
  jf 1 (49020)
  a++ (49022)
  r=a 3 (49023)
  (         ifN t3 goto else_1939) (49025)
  a== 0 (49025)
  jf 3 (49027)
  lj 49036 (49029)
  (                    3378:       error〈〉 # err eof OR ParseErrorInsertLiterals) (49032)
  (         error) (49032)
  error (49032)
  (         goto endif_1940) (49033)
  lj 49036 (49033)
  (        :else_1939:) (49036)
  (        :endif_1940:) (49036)
  (                    3379:     literals[j] = tmp_) (49036)
  (         t3 = H[t0+2]〈literals〉 & 2147483647) (49036)
  a=0 (49036)
  a-- (49037)
  a>>= 1 (49038)
  c=a (49040)
  a=r 0 (49041)
  a+= 2 (49043)
  d=a (49045)
  a=*d (49046)
  a&=c (49047)
  r=a 3 (49048)
  (         t3 = t3 + H[t0+3]〈j〉) (49050)
  d++ (49050)
  c=*d (49051)
  a+=c (49052)
  r=a 3 (49053)
  (         M[t3] = H[t0+10]〈tmp_〉) (49055)
  c=a (49055)
  a=r 0 (49056)
  a+= 10 (49058)
  d=a (49060)
  *c=*d (49061)
  (                    3380:     literal_buf_pointer = 〈literal_buf_pointer+1〉 % 2) (49062)
  (         t4 = H[t252+123]〈literal_buf_pointer〉 + 1) (49062)
  c= 1 (49062)
  a=r 252 (49064)
  a+= 123 (49066)
  d=a (49068)
  a=*d (49069)
  a+=c (49070)
  r=a 4 (49071)
  (         t3 = t4 % 2) (49073)
  c= 2 (49073)
  a%=c (49075)
  r=a 3 (49076)
  (         H[t252+123]〈literal_buf_pointer〉 = t3) (49078)
  *d=a (49078)
  (                    3381:     literal_buf[literal_buf_pointer] = tmp_) (49079)
  (         t3 = H[t252+122]〈literal_buf〉 & 2147483647) (49079)
  a=0 (49079)
  a-- (49080)
  a>>= 1 (49081)
  c=a (49083)
  d-- (49084)
  a=*d (49085)
  a&=c (49086)
  r=a 3 (49087)
  (         t3 = t3 + H[t252+123]〈literal_buf_pointer〉) (49089)
  d++ (49089)
  c=*d (49090)
  a+=c (49091)
  r=a 3 (49092)
  (         M[t3] = H[t0+10]〈tmp_〉) (49094)
  c=a (49094)
  a=r 0 (49095)
  a+= 10 (49097)
  d=a (49099)
  *c=*d (49100)
  (                    3382:     j += 1) (49101)
  (         H[t0+3]〈j〉 = H[t0+3]〈j〉 + 1) (49101)
  a=r 0 (49101)
  a+= 3 (49103)
  d=a (49105)
  *d++ (49106)
  (         goto while_1908) (49107)
  lj 48224 (49107)
  (        :whileend_1910:) (49110)
  (                    3383:   InsertLiterals_data = literals) (49110)
  (         H[t252+100]〈InsertLiterals_data〉 = H[t0+2]〈literals〉) (49110)
  a=r 0 (49110)
  a+= 2 (49112)
  d=a (49114)
  c=*d (49115)
  a=r 252 (49116)
  a+= 100 (49118)
  d=a (49120)
  *d=c (49121)
  (                    3384:   return InsertLiterals) (49122)
  (         t1 = H[t252+99]〈InsertLiterals〉) (49122)
  d-- (49122)
  a=*d (49123)
  r=a 1 (49124)
  (         t2 = H[t0]〈〉) (49126)
  d=r 0 (49126)
  a=*d (49128)
  r=a 2 (49129)
  (         t0 = t0 - 1) (49131)
  a=r 0 (49131)
  a-- (49133)
  r=a 0 (49134)
  (         t0 = H[t0]〈〉) (49136)
  d=a (49136)
  a=*d (49137)
  r=a 0 (49138)
  (         goto find_label_ret_id) (49140)
  lj 62666 (49140)
  (insert return as it might not be done by the function:) (49143)
  (         t2 = H[t0]〈〉) (49143)
  d=a (49143)
  a=*d (49144)
  r=a 2 (49145)
  (         t0 = t0 - 1) (49147)
  a=r 0 (49147)
  a-- (49149)
  r=a 0 (49150)
  (         t0 = H[t0]〈〉) (49152)
  d=a (49152)
  a=*d (49153)
  r=a 0 (49154)
  (         goto find_label_ret_id) (49156)
  lj 62666 (49156)
  (         MarkTempVarEnd) (49159)
  (        :parse_insert_literals_end~:) (49159)
  (                    3386: def parse_distance_code〈〉:) (49159)
  (         goto parse_distance_code_end~) (49159)
  lj 49764 (49159)
  (        :parse_distance_code:) (49162)
  (         MarkTempVarStart) (49162)
  (                    3387:   global meta_block_btype_d_prev, meta_block_btype_d, meta_block_blen_d, DistanceCode_data) (49162)
  (Global meta_block_btype_d_prev via H[t252+152]) (49162)
  (Global meta_block_btype_d via H[t252+151]) (49162)
  (Global meta_block_blen_d via H[t252+148]) (49162)
  (Global DistanceCode_data via H[t252+102]) (49162)
  (                    3388:   if meta_block_distance == 0:) (49162)
  (         t1 = H[t252+163]〈meta_block_distance〉 == 0) (49162)
  c=0 (49162)
  a=r 252 (49163)
  a+= 163 (49165)
  d=a (49167)
  a=*d (49168)
  a==c (49169)
  a=0 (49170)
  jf 1 (49171)
  a++ (49173)
  r=a 1 (49174)
  (         ifN t1 goto else_1942) (49176)
  a== 0 (49176)
  jf 3 (49178)
  lj 49213 (49180)
  (                    3389:     DistanceCode_data = 0) (49183)
  (         H[t252+102]〈DistanceCode_data〉 = 0) (49183)
  a=r 252 (49183)
  a+= 102 (49185)
  d=a (49187)
  *d=0 (49188)
  (                    3390:     return DistanceCode) (49189)
  (         t1 = H[t252+101]〈DistanceCode〉) (49189)
  d-- (49189)
  a=*d (49190)
  r=a 1 (49191)
  (         t2 = H[t0]〈〉) (49193)
  d=r 0 (49193)
  a=*d (49195)
  r=a 2 (49196)
  (         t0 = t0 - 1) (49198)
  a=r 0 (49198)
  a-- (49200)
  r=a 0 (49201)
  (         t0 = H[t0]〈〉) (49203)
  d=a (49203)
  a=*d (49204)
  r=a 0 (49205)
  (         goto find_label_ret_id) (49207)
  lj 62666 (49207)
  (         goto endif_1943) (49210)
  lj 49259 (49210)
  (        :else_1942:) (49213)
  (                    3391:   elif meta_block_distance == NONE:) (49213)
  (         t1 = H[t252+163]〈meta_block_distance〉 == 4294967295) (49213)
  c=0 (49213)
  c-- (49214)
  a=r 252 (49215)
  a+= 163 (49217)
  d=a (49219)
  a=*d (49220)
  a==c (49221)
  a=0 (49222)
  jf 1 (49223)
  a++ (49225)
  r=a 1 (49226)
  (         ifN t1 goto else_1945) (49228)
  a== 0 (49228)
  jf 3 (49230)
  lj 49238 (49232)
  (                    3392:     pass) (49235)
  (         goto endif_1946) (49235)
  lj 49259 (49235)
  (        :else_1945:) (49238)
  (                    3394:     return NONE # unreachable) (49238)
  (         t1 = 4294967295) (49238)
  a=0 (49238)
  a-- (49239)
  r=a 1 (49240)
  (         t2 = H[t0]〈〉) (49242)
  d=r 0 (49242)
  a=*d (49244)
  r=a 2 (49245)
  (         t0 = t0 - 1) (49247)
  a=r 0 (49247)
  a-- (49249)
  r=a 0 (49250)
  (         t0 = H[t0]〈〉) (49252)
  d=a (49252)
  a=*d (49253)
  r=a 0 (49254)
  (         goto find_label_ret_id) (49256)
  lj 62666 (49256)
  (        :endif_1946:) (49259)
  (        :endif_1943:) (49259)
  (                    3395:   if meta_block_blen_d == NONE:) (49259)
  (         t1 = H[t252+148]〈meta_block_blen_d〉 == 4294967295) (49259)
  c=0 (49259)
  c-- (49260)
  a=r 252 (49261)
  a+= 148 (49263)
  d=a (49265)
  a=*d (49266)
  a==c (49267)
  a=0 (49268)
  jf 1 (49269)
  a++ (49271)
  r=a 1 (49272)
  (         ifN t1 goto else_1948) (49274)
  a== 0 (49274)
  jf 3 (49276)
  lj 49284 (49278)
  (                    3396:     pass) (49281)
  (         goto endif_1949) (49281)
  lj 49384 (49281)
  (        :else_1948:) (49284)
  (                    3397:   elif meta_block_blen_d == 0:) (49284)
  (         t1 = H[t252+148]〈meta_block_blen_d〉 == 0) (49284)
  c=0 (49284)
  a=r 252 (49285)
  a+= 148 (49287)
  d=a (49289)
  a=*d (49290)
  a==c (49291)
  a=0 (49292)
  jf 1 (49293)
  a++ (49295)
  r=a 1 (49296)
  (         ifN t1 goto else_1951) (49298)
  a== 0 (49298)
  jf 3 (49300)
  lj 49378 (49302)
  (                    3398:     if parse_block_switch_command_distances〈〉:) (49305)
  (         H[t0+1]〈〉 = t0) (49305)
  a=r 0 (49305)
  a++ (49307)
  d=a (49308)
  a=r 0 (49309)
  *d=a (49311)
  (saved bsp, return id:) (49312)
  (         H[t0+2]〈〉 = 216) (49312)
  d++ (49312)
  *d= 216 (49313)
  (push arguments:) (49315)
  (         t0 = t0 + 2) (49315)
  c= 2 (49315)
  a+=c (49317)
  r=a 0 (49318)
  (         goto parse_block_switch_command_distances) (49320)
  lj 47967 (49320)
  (        :return_id_216:) (49323)
  (         ifN t1 goto else_1953) (49323)
  a=r 1 (49323)
  a== 0 (49325)
  jf 3 (49327)
  lj 49336 (49329)
  (                    3399:       error〈〉 # err) (49332)
  (         error) (49332)
  error (49332)
  (         goto endif_1954) (49333)
  lj 49336 (49333)
  (        :else_1953:) (49336)
  (        :endif_1954:) (49336)
  (                    3400:     meta_block_btype_d_prev = meta_block_btype_d) (49336)
  (         H[t252+152]〈meta_block_btype_d_prev〉 = H[t252+151]〈meta_block_btype_d〉) (49336)
  a=r 252 (49336)
  a+= 151 (49338)
  d=a (49340)
  c=*d (49341)
  d++ (49342)
  *d=c (49343)
  (                    3401:     meta_block_btype_d = parse_block_switch_command_distances_block_type) (49344)
  (         H[t252+151]〈meta_block_btype_d〉 = H[t252+172]〈parse_block_switch_command_distances_block_type〉) (49344)
  a=r 252 (49344)
  a+= 172 (49346)
  d=a (49348)
  c=*d (49349)
  a=r 252 (49350)
  a+= 151 (49352)
  d=a (49354)
  *d=c (49355)
  (                    3402:     meta_block_blen_d = parse_block_switch_command_distances_block_count - 1) (49356)
  (         t1 = H[t252+173]〈parse_block_switch_command_distances_block_count〉 - 1) (49356)
  c= 1 (49356)
  a=r 252 (49358)
  a+= 173 (49360)
  d=a (49362)
  a=*d (49363)
  a-=c (49364)
  r=a 1 (49365)
  (         H[t252+148]〈meta_block_blen_d〉 = t1) (49367)
  a=r 252 (49367)
  a+= 148 (49369)
  d=a (49371)
  a=r 1 (49372)
  *d=a (49374)
  (         goto endif_1952) (49375)
  lj 49384 (49375)
  (        :else_1951:) (49378)
  (                    3404:     meta_block_blen_d -= 1) (49378)
  (         H[t252+148]〈meta_block_blen_d〉 = H[t252+148]〈meta_block_blen_d〉 - 1) (49378)
  a=r 252 (49378)
  a+= 148 (49380)
  d=a (49382)
  *d-- (49383)
  (        :endif_1952:) (49384)
  (        :endif_1949:) (49384)
  (                    3405:   if meta_block_copy_length == 0 or meta_block_copy_length == 1:) (49384)
  (         t2 = H[t252+161]〈meta_block_copy_length〉 == 0) (49384)
  c=0 (49384)
  a=r 252 (49385)
  a+= 161 (49387)
  d=a (49389)
  a=*d (49390)
  a==c (49391)
  a=0 (49392)
  jf 1 (49393)
  a++ (49395)
  r=a 2 (49396)
  (         t3 = H[t252+161]〈meta_block_copy_length〉 == 1) (49398)
  c= 1 (49398)
  a=*d (49400)
  a==c (49401)
  a=0 (49402)
  jf 1 (49403)
  a++ (49405)
  r=a 3 (49406)
  (         t1 = t2 or t3) (49408)
  c=a (49408)
  a=r 2 (49409)
  a== 0 (49411)
  jf 1 (49413)
  a=c (49415)
  r=a 1 (49416)
  (         ifN t1 goto else_1957) (49418)
  a== 0 (49418)
  jf 3 (49420)
  lj 49429 (49422)
  (                    3406:     error〈〉 # unreachable) (49425)
  (         error) (49425)
  error (49425)
  (         goto endif_1958) (49426)
  lj 49513 (49426)
  (        :else_1957:) (49429)
  (                    3407:   elif meta_block_copy_length == 2 or meta_block_copy_length == 3 or meta_block_copy_length == 4:) (49429)
  (         t3 = H[t252+161]〈meta_block_copy_length〉 == 2) (49429)
  c= 2 (49429)
  a=r 252 (49431)
  a+= 161 (49433)
  d=a (49435)
  a=*d (49436)
  a==c (49437)
  a=0 (49438)
  jf 1 (49439)
  a++ (49441)
  r=a 3 (49442)
  (         t4 = H[t252+161]〈meta_block_copy_length〉 == 3) (49444)
  c= 3 (49444)
  a=*d (49446)
  a==c (49447)
  a=0 (49448)
  jf 1 (49449)
  a++ (49451)
  r=a 4 (49452)
  (         t2 = t3 or t4) (49454)
  c=a (49454)
  a=r 3 (49455)
  a== 0 (49457)
  jf 1 (49459)
  a=c (49461)
  r=a 2 (49462)
  (         t3 = H[t252+161]〈meta_block_copy_length〉 == 4) (49464)
  c= 4 (49464)
  a=*d (49466)
  a==c (49467)
  a=0 (49468)
  jf 1 (49469)
  a++ (49471)
  r=a 3 (49472)
  (         t1 = t2 or t3) (49474)
  c=a (49474)
  a=r 2 (49475)
  a== 0 (49477)
  jf 1 (49479)
  a=c (49481)
  r=a 1 (49482)
  (         ifN t1 goto else_1962) (49484)
  a== 0 (49484)
  jf 3 (49486)
  lj 49507 (49488)
  (                    3408:     cid = meta_block_copy_length - 2) (49491)
  (         t1 = H[t252+161]〈meta_block_copy_length〉 - 2) (49491)
  c= 2 (49491)
  a=*d (49493)
  a-=c (49494)
  r=a 1 (49495)
  (         H[t0+1]〈cid〉 = t1) (49497)
  a=r 0 (49497)
  a++ (49499)
  d=a (49500)
  a=r 1 (49501)
  *d=a (49503)
  (         goto endif_1963) (49504)
  lj 49513 (49504)
  (        :else_1962:) (49507)
  (                    3410:     cid = 3) (49507)
  (         H[t0+1]〈cid〉 = 3) (49507)
  a=r 0 (49507)
  a++ (49509)
  d=a (49510)
  *d= 3 (49511)
  (        :endif_1963:) (49513)
  (        :endif_1958:) (49513)
  (                    3411:   index = meta_block_header_c_map_d[meta_block_btype_d * 4 + cid]) (49513)
  (         t2 = H[t252+151]〈meta_block_btype_d〉 * 4) (49513)
  c= 4 (49513)
  a=r 252 (49515)
  a+= 151 (49517)
  d=a (49519)
  a=*d (49520)
  a*=c (49521)
  r=a 2 (49522)
  (         t1 = t2 + H[t0+1]〈cid〉) (49524)
  a=r 0 (49524)
  a++ (49526)
  d=a (49527)
  c=*d (49528)
  a=r 2 (49529)
  a+=c (49531)
  r=a 1 (49532)
  (         t2 = H[t252+139]〈meta_block_header_c_map_d〉 >> 31) (49534)
  c= 31 (49534)
  a=r 252 (49536)
  a+= 139 (49538)
  d=a (49540)
  a=*d (49541)
  a>>=c (49542)
  r=a 2 (49543)
  (         if t2 goto isM_1964) (49545)
  a== 0 (49545)
  jt 3 (49547)
  lj 49565 (49549)
  (         t2 = H[t252+139]〈meta_block_header_c_map_d〉 + t1) (49552)
  c=r 1 (49552)
  a=*d (49554)
  a+=c (49555)
  r=a 2 (49556)
  (         t2 = H[t2]〈〉) (49558)
  d=a (49558)
  a=*d (49559)
  r=a 2 (49560)
  (         goto MorHdone_1965) (49562)
  lj 49588 (49562)
  (        :isM_1964:) (49565)
  (         t2 = H[t252+139]〈meta_block_header_c_map_d〉 & 2147483647) (49565)
  a=0 (49565)
  a-- (49566)
  a>>= 1 (49567)
  c=a (49569)
  a=r 252 (49570)
  a+= 139 (49572)
  d=a (49574)
  a=*d (49575)
  a&=c (49576)
  r=a 2 (49577)
  (         t2 = t2 + t1) (49579)
  c=r 1 (49579)
  a+=c (49581)
  r=a 2 (49582)
  (         t2 = M[t2]) (49584)
  b=a (49584)
  a=*b (49585)
  r=a 2 (49586)
  (        :MorHdone_1965:) (49588)
  (         H[t0+2]〈index〉 = t2) (49588)
  a=r 0 (49588)
  a+= 2 (49590)
  d=a (49592)
  a=r 2 (49593)
  *d=a (49595)
  (                    3412:   DistanceCode_data = lookup_symbol〈meta_block_prefix_trees_distances[index]〉) (49596)
  (         t2 = H[t252+158]〈meta_block_prefix_trees_distances〉 >> 31) (49596)
  c= 31 (49596)
  a=r 252 (49598)
  a+= 158 (49600)
  d=a (49602)
  a=*d (49603)
  a>>=c (49604)
  r=a 2 (49605)
  (         if t2 goto isM_1966) (49607)
  a== 0 (49607)
  jt 3 (49609)
  lj 49636 (49611)
  (         t2 = H[t252+158]〈meta_block_prefix_trees_distances〉 + H[t0+2]〈index〉) (49614)
  a=r 0 (49614)
  a+= 2 (49616)
  d=a (49618)
  c=*d (49619)
  a=r 252 (49620)
  a+= 158 (49622)
  d=a (49624)
  a=*d (49625)
  a+=c (49626)
  r=a 2 (49627)
  (         t2 = H[t2]〈〉) (49629)
  d=a (49629)
  a=*d (49630)
  r=a 2 (49631)
  (         goto MorHdone_1967) (49633)
  lj 49665 (49633)
  (        :isM_1966:) (49636)
  (         t2 = H[t252+158]〈meta_block_prefix_trees_distances〉 & 2147483647) (49636)
  a=0 (49636)
  a-- (49637)
  a>>= 1 (49638)
  c=a (49640)
  a=r 252 (49641)
  a+= 158 (49643)
  d=a (49645)
  a=*d (49646)
  a&=c (49647)
  r=a 2 (49648)
  (         t2 = t2 + H[t0+2]〈index〉) (49650)
  a=r 0 (49650)
  a+= 2 (49652)
  d=a (49654)
  c=*d (49655)
  a=r 2 (49656)
  a+=c (49658)
  r=a 2 (49659)
  (         t2 = M[t2]) (49661)
  b=a (49661)
  a=*b (49662)
  r=a 2 (49663)
  (        :MorHdone_1967:) (49665)
  (         H[t0+4]〈〉 = t0) (49665)
  a=r 0 (49665)
  a+= 4 (49667)
  d=a (49669)
  a=r 0 (49670)
  *d=a (49672)
  (saved bsp, return id:) (49673)
  (         H[t0+5]〈〉 = 217) (49673)
  d++ (49673)
  *d= 217 (49674)
  (push arguments:) (49676)
  (         H[t0+6]〈〉 = t2) (49676)
  d++ (49676)
  a=r 2 (49677)
  *d=a (49679)
  (         t0 = t0 + 5) (49680)
  c= 5 (49680)
  a=r 0 (49682)
  a+=c (49684)
  r=a 0 (49685)
  (         goto lookup_symbol) (49687)
  lj 6923 (49687)
  (        :return_id_217:) (49690)
  (         t3 = t1) (49690)
  a=r 1 (49690)
  r=a 3 (49692)
  (         H[t252+102]〈DistanceCode_data〉 = t3) (49694)
  a=r 252 (49694)
  a+= 102 (49696)
  d=a (49698)
  a=r 3 (49699)
  *d=a (49701)
  (                    3413:   if DistanceCode_data == NONE:) (49702)
  (         t2 = H[t252+102]〈DistanceCode_data〉 == 4294967295) (49702)
  c=0 (49702)
  c-- (49703)
  a=*d (49704)
  a==c (49705)
  a=0 (49706)
  jf 1 (49707)
  a++ (49709)
  r=a 2 (49710)
  (         ifN t2 goto else_1969) (49712)
  a== 0 (49712)
  jf 3 (49714)
  lj 49723 (49716)
  (                    3414:     error〈〉 # err decompr ParseErrorDistanceCode OR eof) (49719)
  (         error) (49719)
  error (49719)
  (         goto endif_1970) (49720)
  lj 49723 (49720)
  (        :else_1969:) (49723)
  (        :endif_1970:) (49723)
  (                    3415:   return DistanceCode) (49723)
  (         t1 = H[t252+101]〈DistanceCode〉) (49723)
  a=r 252 (49723)
  a+= 101 (49725)
  d=a (49727)
  a=*d (49728)
  r=a 1 (49729)
  (         t2 = H[t0]〈〉) (49731)
  d=r 0 (49731)
  a=*d (49733)
  r=a 2 (49734)
  (         t0 = t0 - 1) (49736)
  a=r 0 (49736)
  a-- (49738)
  r=a 0 (49739)
  (         t0 = H[t0]〈〉) (49741)
  d=a (49741)
  a=*d (49742)
  r=a 0 (49743)
  (         goto find_label_ret_id) (49745)
  lj 62666 (49745)
  (insert return as it might not be done by the function:) (49748)
  (         t2 = H[t0]〈〉) (49748)
  d=a (49748)
  a=*d (49749)
  r=a 2 (49750)
  (         t0 = t0 - 1) (49752)
  a=r 0 (49752)
  a-- (49754)
  r=a 0 (49755)
  (         t0 = H[t0]〈〉) (49757)
  d=a (49757)
  a=*d (49758)
  r=a 0 (49759)
  (         goto find_label_ret_id) (49761)
  lj 62666 (49761)
  (         MarkTempVarEnd) (49764)
  (        :parse_distance_code_end~:) (49764)
  (                    3417: def decode_distance〈〉:) (49764)
  (         goto decode_distance_end~) (49764)
  lj 50821 (49764)
  (        :decode_distance:) (49767)
  (         MarkTempVarStart) (49767)
  (                    3418:   global Distance_data, distance_buf_pointer) (49767)
  (Global Distance_data via H[t252+104]) (49767)
  (Global distance_buf_pointer via H[t252+121]) (49767)
  (                    3419:   if meta_block_distance_code == NONE:) (49767)
  (         t1 = H[t252+164]〈meta_block_distance_code〉 == 4294967295) (49767)
  c=0 (49767)
  c-- (49768)
  a=r 252 (49769)
  a+= 164 (49771)
  d=a (49773)
  a=*d (49774)
  a==c (49775)
  a=0 (49776)
  jf 1 (49777)
  a++ (49779)
  r=a 1 (49780)
  (         ifN t1 goto else_1972) (49782)
  a== 0 (49782)
  jf 3 (49784)
  lj 49793 (49786)
  (                    3420:     error〈〉 # unreachable) (49789)
  (         error) (49789)
  error (49789)
  (         goto endif_1973) (49790)
  lj 50654 (49790)
  (        :else_1972:) (49793)
  (                    3421:   elif meta_block_distance_code >= 0 and meta_block_distance_code <= 3:) (49793)
  (         t2 = H[t252+164]〈meta_block_distance_code〉 >= 0) (49793)
  c=0 (49793)
  a=r 252 (49794)
  a+= 164 (49796)
  d=a (49798)
  a=*d (49799)
  a==c (49800)
  jt 4 (49801)
  a>c (49803)
  a=0 (49804)
  jf 2 (49805)
  a= 1 (49807)
  r=a 2 (49809)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 <= 3) (49811)
  c= 3 (49811)
  a=*d (49813)
  a==c (49814)
  jt 4 (49815)
  a<c (49817)
  a=0 (49818)
  jf 2 (49819)
  a= 1 (49821)
  r=a 3 (49823)
  (         t1 = t2 and t3) (49825)
  c=a (49825)
  a=r 2 (49826)
  a== 0 (49828)
  jt 1 (49830)
  a=c (49832)
  r=a 1 (49833)
  (         ifN t1 goto else_1976) (49835)
  a== 0 (49835)
  jf 3 (49837)
  lj 49893 (49839)
  (                    3422:     distance = distance_buf[〈4 + distance_buf_pointer - meta_block_distance_code〉 % 4]) (49842)
  (         t3 = 4 + H[t252+121]〈distance_buf_pointer〉) (49842)
  a=r 252 (49842)
  a+= 121 (49844)
  d=a (49846)
  c=*d (49847)
  a= 4 (49848)
  a+=c (49850)
  r=a 3 (49851)
  (         t2 = t3 - H[t252+164]〈meta_block_distance_code〉) (49853)
  a=r 252 (49853)
  a+= 164 (49855)
  d=a (49857)
  c=*d (49858)
  a=r 3 (49859)
  a-=c (49861)
  r=a 2 (49862)
  (         t1 = t2 % 4) (49864)
  c= 4 (49864)
  a%=c (49866)
  r=a 1 (49867)
  (         t2 = H[t252+120]〈distance_buf〉 + t1) (49869)
  c=a (49869)
  a=r 252 (49870)
  a+= 120 (49872)
  d=a (49874)
  a=*d (49875)
  a+=c (49876)
  r=a 2 (49877)
  (         t2 = H[t2]〈〉) (49879)
  d=a (49879)
  a=*d (49880)
  r=a 2 (49881)
  (         H[t0+1]〈distance〉 = t2) (49883)
  a=r 0 (49883)
  a++ (49885)
  d=a (49886)
  a=r 2 (49887)
  *d=a (49889)
  (         goto endif_1977) (49890)
  lj 50654 (49890)
  (        :else_1976:) (49893)
  (                    3425:   elif meta_block_distance_code >= 4 and meta_block_distance_code <= 9:) (49893)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 >= 4) (49893)
  c= 4 (49893)
  a=r 252 (49895)
  a+= 164 (49897)
  d=a (49899)
  a=*d (49900)
  a==c (49901)
  jt 4 (49902)
  a>c (49904)
  a=0 (49905)
  jf 2 (49906)
  a= 1 (49908)
  r=a 3 (49910)
  (         t4 = H[t252+164]〈meta_block_distance_code〉 <= 9) (49912)
  c= 9 (49912)
  a=*d (49914)
  a==c (49915)
  jt 4 (49916)
  a<c (49918)
  a=0 (49919)
  jf 2 (49920)
  a= 1 (49922)
  r=a 4 (49924)
  (         t2 = t3 and t4) (49926)
  c=a (49926)
  a=r 3 (49927)
  a== 0 (49929)
  jt 1 (49931)
  a=c (49933)
  r=a 2 (49934)
  (         ifN t2 goto else_1980) (49936)
  a== 0 (49936)
  jf 3 (49938)
  lj 50082 (49940)
  (                    3426:     distance = distance_buf[distance_buf_pointer]) (49943)
  (         t2 = H[t252+120]〈distance_buf〉 + H[t252+121]〈distance_buf_pointer〉) (49943)
  a=r 252 (49943)
  a+= 121 (49945)
  d=a (49947)
  c=*d (49948)
  d-- (49949)
  a=*d (49950)
  a+=c (49951)
  r=a 2 (49952)
  (         t2 = H[t2]〈〉) (49954)
  d=a (49954)
  a=*d (49955)
  r=a 2 (49956)
  (         H[t0+1]〈distance〉 = t2) (49958)
  a=r 0 (49958)
  a++ (49960)
  d=a (49961)
  a=r 2 (49962)
  *d=a (49964)
  (                    3427:     sign = meta_block_distance_code % 2) (49965)
  (         t2 = H[t252+164]〈meta_block_distance_code〉 % 2) (49965)
  c= 2 (49965)
  a=r 252 (49967)
  a+= 164 (49969)
  d=a (49971)
  a=*d (49972)
  a%=c (49973)
  r=a 2 (49974)
  (         H[t0+2]〈sign〉 = t2) (49976)
  a=r 0 (49976)
  a+= 2 (49978)
  d=a (49980)
  a=r 2 (49981)
  *d=a (49983)
  (                    3428:     d = 〈meta_block_distance_code - 2〉 >> 1) (49984)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 - 2) (49984)
  c= 2 (49984)
  a=r 252 (49986)
  a+= 164 (49988)
  d=a (49990)
  a=*d (49991)
  a-=c (49992)
  r=a 3 (49993)
  (         t2 = t3 >> 1) (49995)
  c= 1 (49995)
  a>>=c (49997)
  r=a 2 (49998)
  (         H[t0+3]〈d〉 = t2) (50000)
  a=r 0 (50000)
  a+= 3 (50002)
  d=a (50004)
  a=r 2 (50005)
  *d=a (50007)
  (                    3429:     if sign:  # case +) (50008)
  (         ifN H[t0+2]〈sign〉 goto else_1982) (50008)
  d-- (50008)
  a=*d (50009)
  a== 0 (50010)
  jf 3 (50012)
  lj 50031 (50014)
  (                    3430:       distance = distance + d) (50017)
  (         t2 = H[t0+1]〈distance〉 + H[t0+3]〈d〉) (50017)
  d++ (50017)
  c=*d (50018)
  a=r 0 (50019)
  a++ (50021)
  d=a (50022)
  a=*d (50023)
  a+=c (50024)
  r=a 2 (50025)
  (         H[t0+1]〈distance〉 = t2) (50027)
  *d=a (50027)
  (         goto endif_1983) (50028)
  lj 50079 (50028)
  (        :else_1982:) (50031)
  (                    3432:       if distance <= d:) (50031)
  (         t2 = H[t0+1]〈distance〉 <= H[t0+3]〈d〉) (50031)
  a=r 0 (50031)
  a+= 3 (50033)
  d=a (50035)
  c=*d (50036)
  a=r 0 (50037)
  a++ (50039)
  d=a (50040)
  a=*d (50041)
  a==c (50042)
  jt 4 (50043)
  a<c (50045)
  a=0 (50046)
  jf 2 (50047)
  a= 1 (50049)
  r=a 2 (50051)
  (         ifN t2 goto else_1985) (50053)
  a== 0 (50053)
  jf 3 (50055)
  lj 50064 (50057)
  (                    3433:         error〈〉 # InvalidNonPositiveDistance) (50060)
  (         error) (50060)
  error (50060)
  (         goto endif_1986) (50061)
  lj 50064 (50061)
  (        :else_1985:) (50064)
  (        :endif_1986:) (50064)
  (                    3434:       distance = distance - d) (50064)
  (         t2 = H[t0+1]〈distance〉 - H[t0+3]〈d〉) (50064)
  a=r 0 (50064)
  a+= 3 (50066)
  d=a (50068)
  c=*d (50069)
  a=r 0 (50070)
  a++ (50072)
  d=a (50073)
  a=*d (50074)
  a-=c (50075)
  r=a 2 (50076)
  (         H[t0+1]〈distance〉 = t2) (50078)
  *d=a (50078)
  (        :endif_1983:) (50079)
  (         goto endif_1981) (50079)
  lj 50654 (50079)
  (        :else_1980:) (50082)
  (                    3435:   elif meta_block_distance_code >= 10 and meta_block_distance_code <= 15:) (50082)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 >= 10) (50082)
  c= 10 (50082)
  a=r 252 (50084)
  a+= 164 (50086)
  d=a (50088)
  a=*d (50089)
  a==c (50090)
  jt 4 (50091)
  a>c (50093)
  a=0 (50094)
  jf 2 (50095)
  a= 1 (50097)
  r=a 3 (50099)
  (         t4 = H[t252+164]〈meta_block_distance_code〉 <= 15) (50101)
  c= 15 (50101)
  a=*d (50103)
  a==c (50104)
  jt 4 (50105)
  a<c (50107)
  a=0 (50108)
  jf 2 (50109)
  a= 1 (50111)
  r=a 4 (50113)
  (         t2 = t3 and t4) (50115)
  c=a (50115)
  a=r 3 (50116)
  a== 0 (50118)
  jt 1 (50120)
  a=c (50122)
  r=a 2 (50123)
  (         ifN t2 goto else_1989) (50125)
  a== 0 (50125)
  jf 3 (50127)
  lj 50282 (50129)
  (                    3436:     distance = distance_buf[〈3 + distance_buf_pointer〉 % 4]) (50132)
  (         t3 = 3 + H[t252+121]〈distance_buf_pointer〉) (50132)
  a=r 252 (50132)
  a+= 121 (50134)
  d=a (50136)
  c=*d (50137)
  a= 3 (50138)
  a+=c (50140)
  r=a 3 (50141)
  (         t2 = t3 % 4) (50143)
  c= 4 (50143)
  a%=c (50145)
  r=a 2 (50146)
  (         t3 = H[t252+120]〈distance_buf〉 + t2) (50148)
  c=a (50148)
  d-- (50149)
  a=*d (50150)
  a+=c (50151)
  r=a 3 (50152)
  (         t3 = H[t3]〈〉) (50154)
  d=a (50154)
  a=*d (50155)
  r=a 3 (50156)
  (         H[t0+1]〈distance〉 = t3) (50158)
  a=r 0 (50158)
  a++ (50160)
  d=a (50161)
  a=r 3 (50162)
  *d=a (50164)
  (                    3437:     sign = meta_block_distance_code % 2) (50165)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 % 2) (50165)
  c= 2 (50165)
  a=r 252 (50167)
  a+= 164 (50169)
  d=a (50171)
  a=*d (50172)
  a%=c (50173)
  r=a 3 (50174)
  (         H[t0+2]〈sign〉 = t3) (50176)
  a=r 0 (50176)
  a+= 2 (50178)
  d=a (50180)
  a=r 3 (50181)
  *d=a (50183)
  (                    3438:     d = 〈meta_block_distance_code - 8〉 >> 1) (50184)
  (         t4 = H[t252+164]〈meta_block_distance_code〉 - 8) (50184)
  c= 8 (50184)
  a=r 252 (50186)
  a+= 164 (50188)
  d=a (50190)
  a=*d (50191)
  a-=c (50192)
  r=a 4 (50193)
  (         t3 = t4 >> 1) (50195)
  c= 1 (50195)
  a>>=c (50197)
  r=a 3 (50198)
  (         H[t0+3]〈d〉 = t3) (50200)
  a=r 0 (50200)
  a+= 3 (50202)
  d=a (50204)
  a=r 3 (50205)
  *d=a (50207)
  (                    3439:     if sign:  # case +) (50208)
  (         ifN H[t0+2]〈sign〉 goto else_1991) (50208)
  d-- (50208)
  a=*d (50209)
  a== 0 (50210)
  jf 3 (50212)
  lj 50231 (50214)
  (                    3440:       distance = distance + d) (50217)
  (         t3 = H[t0+1]〈distance〉 + H[t0+3]〈d〉) (50217)
  d++ (50217)
  c=*d (50218)
  a=r 0 (50219)
  a++ (50221)
  d=a (50222)
  a=*d (50223)
  a+=c (50224)
  r=a 3 (50225)
  (         H[t0+1]〈distance〉 = t3) (50227)
  *d=a (50227)
  (         goto endif_1992) (50228)
  lj 50279 (50228)
  (        :else_1991:) (50231)
  (                    3442:       if distance <= d:) (50231)
  (         t3 = H[t0+1]〈distance〉 <= H[t0+3]〈d〉) (50231)
  a=r 0 (50231)
  a+= 3 (50233)
  d=a (50235)
  c=*d (50236)
  a=r 0 (50237)
  a++ (50239)
  d=a (50240)
  a=*d (50241)
  a==c (50242)
  jt 4 (50243)
  a<c (50245)
  a=0 (50246)
  jf 2 (50247)
  a= 1 (50249)
  r=a 3 (50251)
  (         ifN t3 goto else_1994) (50253)
  a== 0 (50253)
  jf 3 (50255)
  lj 50264 (50257)
  (                    3443:         error〈〉 # InvalidNonPositiveDistance) (50260)
  (         error) (50260)
  error (50260)
  (         goto endif_1995) (50261)
  lj 50264 (50261)
  (        :else_1994:) (50264)
  (        :endif_1995:) (50264)
  (                    3444:       distance = distance - d) (50264)
  (         t3 = H[t0+1]〈distance〉 - H[t0+3]〈d〉) (50264)
  a=r 0 (50264)
  a+= 3 (50266)
  d=a (50268)
  c=*d (50269)
  a=r 0 (50270)
  a++ (50272)
  d=a (50273)
  a=*d (50274)
  a-=c (50275)
  r=a 3 (50276)
  (         H[t0+1]〈distance〉 = t3) (50278)
  *d=a (50278)
  (        :endif_1992:) (50279)
  (         goto endif_1990) (50279)
  lj 50654 (50279)
  (        :else_1989:) (50282)
  (                    3445:   elif meta_block_distance_code <= 〈15 + meta_block_header_n_direct〉:) (50282)
  (         t4 = 15 + H[t252+135]〈meta_block_header_n_direct〉) (50282)
  a=r 252 (50282)
  a+= 135 (50284)
  d=a (50286)
  c=*d (50287)
  a= 15 (50288)
  a+=c (50290)
  r=a 4 (50291)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 <= t4) (50293)
  c=a (50293)
  a=r 252 (50294)
  a+= 164 (50296)
  d=a (50298)
  a=*d (50299)
  a==c (50300)
  jt 4 (50301)
  a<c (50303)
  a=0 (50304)
  jf 2 (50305)
  a= 1 (50307)
  r=a 3 (50309)
  (         ifN t3 goto else_1997) (50311)
  a== 0 (50311)
  jf 3 (50313)
  lj 50334 (50315)
  (                    3446:     distance = meta_block_distance_code - 15) (50318)
  (         t3 = H[t252+164]〈meta_block_distance_code〉 - 15) (50318)
  c= 15 (50318)
  a=*d (50320)
  a-=c (50321)
  r=a 3 (50322)
  (         H[t0+1]〈distance〉 = t3) (50324)
  a=r 0 (50324)
  a++ (50326)
  d=a (50327)
  a=r 3 (50328)
  *d=a (50330)
  (         goto endif_1998) (50331)
  lj 50654 (50331)
  (        :else_1997:) (50334)
  (                    3448:     n_direct = meta_block_header_n_direct) (50334)
  (         H[t0+4]〈n_direct〉 = H[t252+135]〈meta_block_header_n_direct〉) (50334)
  a=r 252 (50334)
  a+= 135 (50336)
  d=a (50338)
  c=*d (50339)
  a=r 0 (50340)
  a+= 4 (50342)
  d=a (50344)
  *d=c (50345)
  (                    3449:     n_postfix = meta_block_header_n_postfix) (50346)
  (         H[t0+5]〈n_postfix〉 = H[t252+134]〈meta_block_header_n_postfix〉) (50346)
  a=r 252 (50346)
  a+= 134 (50348)
  d=a (50350)
  c=*d (50351)
  a=r 0 (50352)
  a+= 5 (50354)
  d=a (50356)
  *d=c (50357)
  (                    3450:     ndistbits = 1 + 〈〈meta_block_distance_code - n_direct - 16〉 >> 〈n_postfix + 1〉〉) (50358)
  (         t6 = H[t252+164]〈meta_block_distance_code〉 - H[t0+4]〈n_direct〉) (50358)
  d-- (50358)
  c=*d (50359)
  a=r 252 (50360)
  a+= 164 (50362)
  d=a (50364)
  a=*d (50365)
  a-=c (50366)
  r=a 6 (50367)
  (         t5 = t6 - 16) (50369)
  c= 16 (50369)
  a-=c (50371)
  r=a 5 (50372)
  (         t6 = H[t0+5]〈n_postfix〉 + 1) (50374)
  c= 1 (50374)
  a=r 0 (50376)
  a+= 5 (50378)
  d=a (50380)
  a=*d (50381)
  a+=c (50382)
  r=a 6 (50383)
  (         t4 = t5 >> t6) (50385)
  c=a (50385)
  a=r 5 (50386)
  a>>=c (50388)
  r=a 4 (50389)
  (         t3 = 1 + t4) (50391)
  c=a (50391)
  a= 1 (50392)
  a+=c (50394)
  r=a 3 (50395)
  (         H[t0+6]〈ndistbits〉 = t3) (50397)
  d++ (50397)
  *d=a (50398)
  (                    3451:     if read_u32_from_n_bits〈ndistbits〉:) (50399)
  (         H[t0+9]〈〉 = t0) (50399)
  a=r 0 (50399)
  a+= 9 (50401)
  d=a (50403)
  a=r 0 (50404)
  *d=a (50406)
  (saved bsp, return id:) (50407)
  (         H[t0+10]〈〉 = 218) (50407)
  d++ (50407)
  *d= 218 (50408)
  (push arguments:) (50410)
  (         H[t0+11]〈〉 = H[t0+6]〈ndistbits〉) (50410)
  a+= 6 (50410)
  d=a (50412)
  c=*d (50413)
  a=r 0 (50414)
  a+= 11 (50416)
  d=a (50418)
  *d=c (50419)
  (         t0 = t0 + 10) (50420)
  c= 10 (50420)
  a=r 0 (50422)
  a+=c (50424)
  r=a 0 (50425)
  (         goto read_u32_from_n_bits) (50427)
  lj 4857 (50427)
  (        :return_id_218:) (50430)
  (         t3 = t1) (50430)
  a=r 1 (50430)
  r=a 3 (50432)
  (         ifN t3 goto else_1999) (50434)
  a== 0 (50434)
  jf 3 (50436)
  lj 50445 (50438)
  (                    3452:       error〈〉 # eof err) (50441)
  (         error) (50441)
  error (50441)
  (         goto endif_2000) (50442)
  lj 50445 (50442)
  (        :else_1999:) (50445)
  (        :endif_2000:) (50445)
  (                    3453:     dextra = read_u32_from_n_bits_result) (50445)
  (         H[t0+7]〈dextra〉 = H[t252+7]〈read_u32_from_n_bits_result〉) (50445)
  a=r 252 (50445)
  a+= 7 (50447)
  d=a (50449)
  c=*d (50450)
  a=r 0 (50451)
  a+= 7 (50453)
  d=a (50455)
  *d=c (50456)
  (                    3454:     hcode = 〈meta_block_distance_code - n_direct - 16〉 >> n_postfix) (50457)
  (         t5 = H[t252+164]〈meta_block_distance_code〉 - H[t0+4]〈n_direct〉) (50457)
  a=r 0 (50457)
  a+= 4 (50459)
  d=a (50461)
  c=*d (50462)
  a=r 252 (50463)
  a+= 164 (50465)
  d=a (50467)
  a=*d (50468)
  a-=c (50469)
  r=a 5 (50470)
  (         t4 = t5 - 16) (50472)
  c= 16 (50472)
  a-=c (50474)
  r=a 4 (50475)
  (         t3 = t4 >> H[t0+5]〈n_postfix〉) (50477)
  a=r 0 (50477)
  a+= 5 (50479)
  d=a (50481)
  c=*d (50482)
  a=r 4 (50483)
  a>>=c (50485)
  r=a 3 (50486)
  (         H[t0+8]〈hcode〉 = t3) (50488)
  a=r 0 (50488)
  a+= 8 (50490)
  d=a (50492)
  a=r 3 (50493)
  *d=a (50495)
  (                    3455:     postfix_mask = 〈1 << n_postfix〉 - 1) (50496)
  (         t4 = 1 << H[t0+5]〈n_postfix〉) (50496)
  a=r 0 (50496)
  a+= 5 (50498)
  d=a (50500)
  c=*d (50501)
  a= 1 (50502)
  a<<=c (50504)
  r=a 4 (50505)
  (         t3 = t4 - 1) (50507)
  c= 1 (50507)
  a-=c (50509)
  r=a 3 (50510)
  (         H[t0+9]〈postfix_mask〉 = t3) (50512)
  a=r 0 (50512)
  a+= 9 (50514)
  d=a (50516)
  a=r 3 (50517)
  *d=a (50519)
  (                    3456:     lcode = 〈meta_block_distance_code - n_direct - 16〉 & postfix_mask) (50520)
  (         t5 = H[t252+164]〈meta_block_distance_code〉 - H[t0+4]〈n_direct〉) (50520)
  a=r 0 (50520)
  a+= 4 (50522)
  d=a (50524)
  c=*d (50525)
  a=r 252 (50526)
  a+= 164 (50528)
  d=a (50530)
  a=*d (50531)
  a-=c (50532)
  r=a 5 (50533)
  (         t4 = t5 - 16) (50535)
  c= 16 (50535)
  a-=c (50537)
  r=a 4 (50538)
  (         t3 = t4 & H[t0+9]〈postfix_mask〉) (50540)
  a=r 0 (50540)
  a+= 9 (50542)
  d=a (50544)
  c=*d (50545)
  a=r 4 (50546)
  a&=c (50548)
  r=a 3 (50549)
  (         H[t0+10]〈lcode〉 = t3) (50551)
  d++ (50551)
  *d=a (50552)
  (                    3457:     offset = 〈〈2 + 〈hcode & 1〉〉 << ndistbits〉 - 4) (50553)
  (         t6 = H[t0+8]〈hcode〉 & 1) (50553)
  c= 1 (50553)
  a=r 0 (50555)
  a+= 8 (50557)
  d=a (50559)
  a=*d (50560)
  a&=c (50561)
  r=a 6 (50562)
  (         t5 = 2 + t6) (50564)
  c=a (50564)
  a= 2 (50565)
  a+=c (50567)
  r=a 5 (50568)
  (         t4 = t5 << H[t0+6]〈ndistbits〉) (50570)
  a=r 0 (50570)
  a+= 6 (50572)
  d=a (50574)
  c=*d (50575)
  a=r 5 (50576)
  a<<=c (50578)
  r=a 4 (50579)
  (         t3 = t4 - 4) (50581)
  c= 4 (50581)
  a-=c (50583)
  r=a 3 (50584)
  (         H[t0+11]〈offset〉 = t3) (50586)
  a=r 0 (50586)
  a+= 11 (50588)
  d=a (50590)
  a=r 3 (50591)
  *d=a (50593)
  (                    3458:     distance = 〈〈offset + dextra〉 << n_postfix〉 + lcode + n_direct + 1) (50594)
  (         t7 = H[t0+11]〈offset〉 + H[t0+7]〈dextra〉) (50594)
  a=r 0 (50594)
  a+= 7 (50596)
  d=a (50598)
  c=*d (50599)
  a=r 0 (50600)
  a+= 11 (50602)
  d=a (50604)
  a=*d (50605)
  a+=c (50606)
  r=a 7 (50607)
  (         t6 = t7 << H[t0+5]〈n_postfix〉) (50609)
  a=r 0 (50609)
  a+= 5 (50611)
  d=a (50613)
  c=*d (50614)
  a=r 7 (50615)
  a<<=c (50617)
  r=a 6 (50618)
  (         t5 = t6 + H[t0+10]〈lcode〉) (50620)
  a=r 0 (50620)
  a+= 10 (50622)
  d=a (50624)
  c=*d (50625)
  a=r 6 (50626)
  a+=c (50628)
  r=a 5 (50629)
  (         t4 = t5 + H[t0+4]〈n_direct〉) (50631)
  a=r 0 (50631)
  a+= 4 (50633)
  d=a (50635)
  c=*d (50636)
  a=r 5 (50637)
  a+=c (50639)
  r=a 4 (50640)
  (         t3 = t4 + 1) (50642)
  c= 1 (50642)
  a+=c (50644)
  r=a 3 (50645)
  (         H[t0+1]〈distance〉 = t3) (50647)
  a=r 0 (50647)
  a++ (50649)
  d=a (50650)
  a=r 3 (50651)
  *d=a (50653)
  (        :endif_1998:) (50654)
  (        :endif_1990:) (50654)
  (        :endif_1981:) (50654)
  (        :endif_1977:) (50654)
  (        :endif_1973:) (50654)
  (                    3459:   if meta_block_distance_code > 0 and distance <= header_window_size and distance <= count_output:) (50654)
  (         t5 = H[t252+164]〈meta_block_distance_code〉 > 0) (50654)
  c=0 (50654)
  a=r 252 (50655)
  a+= 164 (50657)
  d=a (50659)
  a=*d (50660)
  a>c (50661)
  a=0 (50662)
  jf 1 (50663)
  a++ (50665)
  r=a 5 (50666)
  (         t6 = H[t0+1]〈distance〉 <= H[t252+116]〈header_window_size〉) (50668)
  a=r 252 (50668)
  a+= 116 (50670)
  d=a (50672)
  c=*d (50673)
  a=r 0 (50674)
  a++ (50676)
  d=a (50677)
  a=*d (50678)
  a==c (50679)
  jt 4 (50680)
  a<c (50682)
  a=0 (50683)
  jf 2 (50684)
  a= 1 (50686)
  r=a 6 (50688)
  (         t4 = t5 and t6) (50690)
  c=a (50690)
  a=r 5 (50691)
  a== 0 (50693)
  jt 1 (50695)
  a=c (50697)
  r=a 4 (50698)
  (         t5 = H[t0+1]〈distance〉 <= H[t252+119]〈count_output〉) (50700)
  a=r 252 (50700)
  a+= 119 (50702)
  d=a (50704)
  c=*d (50705)
  a=r 0 (50706)
  a++ (50708)
  d=a (50709)
  a=*d (50710)
  a==c (50711)
  jt 4 (50712)
  a<c (50714)
  a=0 (50715)
  jf 2 (50716)
  a= 1 (50718)
  r=a 5 (50720)
  (         t3 = t4 and t5) (50722)
  c=a (50722)
  a=r 4 (50723)
  a== 0 (50725)
  jt 1 (50727)
  a=c (50729)
  r=a 3 (50730)
  (         ifN t3 goto else_2004) (50732)
  a== 0 (50732)
  jf 3 (50734)
  lj 50773 (50736)
  (                    3460:     distance_buf_pointer = 〈distance_buf_pointer + 1〉 % 4) (50739)
  (         t4 = H[t252+121]〈distance_buf_pointer〉 + 1) (50739)
  c= 1 (50739)
  a=r 252 (50741)
  a+= 121 (50743)
  d=a (50745)
  a=*d (50746)
  a+=c (50747)
  r=a 4 (50748)
  (         t3 = t4 % 4) (50750)
  c= 4 (50750)
  a%=c (50752)
  r=a 3 (50753)
  (         H[t252+121]〈distance_buf_pointer〉 = t3) (50755)
  *d=a (50755)
  (                    3461:     distance_buf[distance_buf_pointer] = distance) (50756)
  (         t3 = H[t252+120]〈distance_buf〉 + H[t252+121]〈distance_buf_pointer〉) (50756)
  c=*d (50756)
  d-- (50757)
  a=*d (50758)
  a+=c (50759)
  r=a 3 (50760)
  (         H[t3]〈〉 = H[t0+1]〈distance〉) (50762)
  a=r 0 (50762)
  a++ (50764)
  d=a (50765)
  c=*d (50766)
  d=r 3 (50767)
  *d=c (50769)
  (         goto endif_2005) (50770)
  lj 50773 (50770)
  (        :else_2004:) (50773)
  (        :endif_2005:) (50773)
  (                    3462:   Distance_data = distance) (50773)
  (         H[t252+104]〈Distance_data〉 = H[t0+1]〈distance〉) (50773)
  a=r 0 (50773)
  a++ (50775)
  d=a (50776)
  c=*d (50777)
  a=r 252 (50778)
  a+= 104 (50780)
  d=a (50782)
  *d=c (50783)
  (                    3463:   return Distance) (50784)
  (         t1 = H[t252+103]〈Distance〉) (50784)
  d-- (50784)
  a=*d (50785)
  r=a 1 (50786)
  (         t2 = H[t0]〈〉) (50788)
  d=r 0 (50788)
  a=*d (50790)
  r=a 2 (50791)
  (         t0 = t0 - 1) (50793)
  a=r 0 (50793)
  a-- (50795)
  r=a 0 (50796)
  (         t0 = H[t0]〈〉) (50798)
  d=a (50798)
  a=*d (50799)
  r=a 0 (50800)
  (         goto find_label_ret_id) (50802)
  lj 62666 (50802)
  (insert return as it might not be done by the function:) (50805)
  (         t2 = H[t0]〈〉) (50805)
  d=a (50805)
  a=*d (50806)
  r=a 2 (50807)
  (         t0 = t0 - 1) (50809)
  a=r 0 (50809)
  a-- (50811)
  r=a 0 (50812)
  (         t0 = H[t0]〈〉) (50814)
  d=a (50814)
  a=*d (50815)
  r=a 0 (50816)
  (         goto find_label_ret_id) (50818)
  lj 62666 (50818)
  (         MarkTempVarEnd) (50821)
  (        :decode_distance_end~:) (50821)
  (                    3465: def copy_literals〈〉:) (50821)
  (         goto copy_literals_end~) (50821)
  lj 52170 (50821)
  (        :copy_literals:) (50824)
  (         MarkTempVarStart) (50824)
  (                    3466:   global CopyLiterals_data) (50824)
  (Global CopyLiterals_data via H[t252+106]) (50824)
  (                    3467:   window_size = header_window_size) (50824)
  (         H[t0+1]〈window_size〉 = H[t252+116]〈header_window_size〉) (50824)
  a=r 252 (50824)
  a+= 116 (50826)
  d=a (50828)
  c=*d (50829)
  a=r 0 (50830)
  a++ (50832)
  d=a (50833)
  *d=c (50834)
  (                    3468:   copy_length = meta_block_copy_length) (50835)
  (         H[t0+2]〈copy_length〉 = H[t252+161]〈meta_block_copy_length〉) (50835)
  a=r 252 (50835)
  a+= 161 (50837)
  d=a (50839)
  c=*d (50840)
  a=r 0 (50841)
  a+= 2 (50843)
  d=a (50845)
  *d=c (50846)
  (                    3469:   distance = meta_block_distance) (50847)
  (         H[t0+3]〈distance〉 = H[t252+163]〈meta_block_distance〉) (50847)
  a=r 252 (50847)
  a+= 163 (50849)
  d=a (50851)
  c=*d (50852)
  a=r 0 (50853)
  a+= 3 (50855)
  d=a (50857)
  *d=c (50858)
  (                    3470:   max_allowed_distance = count_output) (50859)
  (         H[t0+4]〈max_allowed_distance〉 = H[t252+119]〈count_output〉) (50859)
  a=r 252 (50859)
  a+= 119 (50861)
  d=a (50863)
  c=*d (50864)
  a=r 0 (50865)
  a+= 4 (50867)
  d=a (50869)
  *d=c (50870)
  (                    3471:   if window_size < max_allowed_distance:) (50871)
  (         t1 = H[t0+1]〈window_size〉 < H[t0+4]〈max_allowed_distance〉) (50871)
  a=r 0 (50871)
  a++ (50873)
  d=a (50874)
  a=*d (50875)
  a<c (50876)
  a=0 (50877)
  jf 1 (50878)
  a++ (50880)
  r=a 1 (50881)
  (         ifN t1 goto else_2007) (50883)
  a== 0 (50883)
  jf 3 (50885)
  lj 50900 (50887)
  (                    3472:     max_allowed_distance = window_size) (50890)
  (         H[t0+4]〈max_allowed_distance〉 = H[t0+1]〈window_size〉) (50890)
  c=*d (50890)
  a=r 0 (50891)
  a+= 4 (50893)
  d=a (50895)
  *d=c (50896)
  (         goto endif_2008) (50897)
  lj 50900 (50897)
  (        :else_2007:) (50900)
  (        :endif_2008:) (50900)
  (                    3473:   if distance <= max_allowed_distance:) (50900)
  (         t1 = H[t0+3]〈distance〉 <= H[t0+4]〈max_allowed_distance〉) (50900)
  a=r 0 (50900)
  a+= 4 (50902)
  d=a (50904)
  c=*d (50905)
  d-- (50906)
  a=*d (50907)
  a==c (50908)
  jt 4 (50909)
  a<c (50911)
  a=0 (50912)
  jf 2 (50913)
  a= 1 (50915)
  r=a 1 (50917)
  (         ifN t1 goto else_2010) (50919)
  a== 0 (50919)
  jf 3 (50921)
  lj 51488 (50923)
  (                    3474:     window = alloc_pM〈copy_length〉) (50926)
  (         H[t0+5]〈〉 = t0) (50926)
  a=r 0 (50926)
  a+= 5 (50928)
  d=a (50930)
  a=r 0 (50931)
  *d=a (50933)
  (saved bsp, return id:) (50934)
  (         H[t0+6]〈〉 = 219) (50934)
  d++ (50934)
  *d= 219 (50935)
  (push arguments:) (50937)
  (         H[t0+7]〈〉 = H[t0+2]〈copy_length〉) (50937)
  a+= 2 (50937)
  d=a (50939)
  c=*d (50940)
  a=r 0 (50941)
  a+= 7 (50943)
  d=a (50945)
  *d=c (50946)
  (         t0 = t0 + 6) (50947)
  c= 6 (50947)
  a=r 0 (50949)
  a+=c (50951)
  r=a 0 (50952)
  (         goto addr_alloc_pM) (50954)
  lj 323 (50954)
  (        :return_id_219:) (50957)
  (         t1 = t1 | 2147483648) (50957)
  a= 1 (50957)
  a<<= 31 (50959)
  c=a (50961)
  a=r 1 (50962)
  a|=c (50964)
  r=a 1 (50965)
  (         H[t0+5]〈window〉 = t1) (50967)
  a=r 0 (50967)
  a+= 5 (50969)
  d=a (50971)
  a=r 1 (50972)
  *d=a (50974)
  (                    3475:     l = distance) (50975)
  (         H[t0+6]〈l〉 = H[t0+3]〈distance〉) (50975)
  a=r 0 (50975)
  a+= 3 (50977)
  d=a (50979)
  c=*d (50980)
  a=r 0 (50981)
  a+= 6 (50983)
  d=a (50985)
  *d=c (50986)
  (                    3476:     if copy_length < l:) (50987)
  (         t1 = H[t0+2]〈copy_length〉 < H[t0+6]〈l〉) (50987)
  a=r 0 (50987)
  a+= 2 (50989)
  d=a (50991)
  a=*d (50992)
  a<c (50993)
  a=0 (50994)
  jf 1 (50995)
  a++ (50997)
  r=a 1 (50998)
  (         ifN t1 goto else_2013) (51000)
  a== 0 (51000)
  jf 3 (51002)
  lj 51017 (51004)
  (                    3477:       l = copy_length) (51007)
  (         H[t0+6]〈l〉 = H[t0+2]〈copy_length〉) (51007)
  c=*d (51007)
  a=r 0 (51008)
  a+= 6 (51010)
  d=a (51012)
  *d=c (51013)
  (         goto endif_2014) (51014)
  lj 51017 (51014)
  (        :else_2013:) (51017)
  (        :endif_2014:) (51017)
  (                    3479:     n = distance - 1) (51017)
  (         t1 = H[t0+3]〈distance〉 - 1) (51017)
  c= 1 (51017)
  a=r 0 (51019)
  a+= 3 (51021)
  d=a (51023)
  a=*d (51024)
  a-=c (51025)
  r=a 1 (51026)
  (         H[t0+7]〈n〉 = t1) (51028)
  a=r 0 (51028)
  a+= 7 (51030)
  d=a (51032)
  a=r 1 (51033)
  *d=a (51035)
  (                    3480:     i = 0) (51036)
  (         H[t0+8]〈i〉 = 0) (51036)
  d++ (51036)
  *d=0 (51037)
  (                    3481:     while i < copy_length:) (51038)
  (        :while_2015:) (51038)
  (         t1 = H[t0+8]〈i〉 < H[t0+2]〈copy_length〉) (51038)
  a=r 0 (51038)
  a+= 2 (51040)
  d=a (51042)
  c=*d (51043)
  a=r 0 (51044)
  a+= 8 (51046)
  d=a (51048)
  a=*d (51049)
  a<c (51050)
  a=0 (51051)
  jf 1 (51052)
  a++ (51054)
  r=a 1 (51055)
  (         ifN t1 goto whileend_2017) (51057)
  a== 0 (51057)
  jf 3 (51059)
  lj 51354 (51061)
  (                    3482:       t = 〈output_window_pointer + len_pM〈output_window〉 - n + i〉 % len_pM〈output_window〉) (51064)
  (         t5 = H[t252+117]〈output_window〉) (51064)
  a=r 252 (51064)
  a+= 117 (51066)
  d=a (51068)
  a=*d (51069)
  r=a 5 (51070)
  (         t5 = t5 & 2147483647) (51072)
  a=0 (51072)
  a-- (51073)
  a>>= 1 (51074)
  c=a (51076)
  a=r 5 (51077)
  a&=c (51079)
  r=a 5 (51080)
  (         t5 = t5 - 5) (51082)
  c= 5 (51082)
  a-=c (51084)
  r=a 5 (51085)
  (         t6 = M[t5] << 8) (51087)
  c= 8 (51087)
  b=a (51089)
  a=*b (51090)
  a<<=c (51091)
  r=a 6 (51092)
  (         t5 = t5 + 1) (51094)
  a=r 5 (51094)
  a++ (51096)
  r=a 5 (51097)
  (         t6 = t6 + M[t5]) (51099)
  b=a (51099)
  c=*b (51100)
  a=r 6 (51101)
  a+=c (51103)
  r=a 6 (51104)
  (         t6 = t6 << 8) (51106)
  c= 8 (51106)
  a<<=c (51108)
  r=a 6 (51109)
  (         t5 = t5 + 1) (51111)
  a=r 5 (51111)
  a++ (51113)
  r=a 5 (51114)
  (         t6 = t6 + M[t5]) (51116)
  b=a (51116)
  c=*b (51117)
  a=r 6 (51118)
  a+=c (51120)
  r=a 6 (51121)
  (         t6 = t6 << 8) (51123)
  c= 8 (51123)
  a<<=c (51125)
  r=a 6 (51126)
  (         t5 = t5 + 1) (51128)
  a=r 5 (51128)
  a++ (51130)
  r=a 5 (51131)
  (         t6 = t6 + M[t5]) (51133)
  b=a (51133)
  c=*b (51134)
  a=r 6 (51135)
  a+=c (51137)
  r=a 6 (51138)
  (         t4 = H[t252+118]〈output_window_pointer〉 + t6) (51140)
  c=a (51140)
  d++ (51141)
  a=*d (51142)
  a+=c (51143)
  r=a 4 (51144)
  (         t3 = t4 - H[t0+7]〈n〉) (51146)
  a=r 0 (51146)
  a+= 7 (51148)
  d=a (51150)
  c=*d (51151)
  a=r 4 (51152)
  a-=c (51154)
  r=a 3 (51155)
  (         t2 = t3 + H[t0+8]〈i〉) (51157)
  d++ (51157)
  c=*d (51158)
  a+=c (51159)
  r=a 2 (51160)
  (         t3 = H[t252+117]〈output_window〉) (51162)
  a=r 252 (51162)
  a+= 117 (51164)
  d=a (51166)
  a=*d (51167)
  r=a 3 (51168)
  (         t3 = t3 & 2147483647) (51170)
  a=0 (51170)
  a-- (51171)
  a>>= 1 (51172)
  c=a (51174)
  a=r 3 (51175)
  a&=c (51177)
  r=a 3 (51178)
  (         t3 = t3 - 5) (51180)
  c= 5 (51180)
  a-=c (51182)
  r=a 3 (51183)
  (         t4 = M[t3] << 8) (51185)
  c= 8 (51185)
  b=a (51187)
  a=*b (51188)
  a<<=c (51189)
  r=a 4 (51190)
  (         t3 = t3 + 1) (51192)
  a=r 3 (51192)
  a++ (51194)
  r=a 3 (51195)
  (         t4 = t4 + M[t3]) (51197)
  b=a (51197)
  c=*b (51198)
  a=r 4 (51199)
  a+=c (51201)
  r=a 4 (51202)
  (         t4 = t4 << 8) (51204)
  c= 8 (51204)
  a<<=c (51206)
  r=a 4 (51207)
  (         t3 = t3 + 1) (51209)
  a=r 3 (51209)
  a++ (51211)
  r=a 3 (51212)
  (         t4 = t4 + M[t3]) (51214)
  b=a (51214)
  c=*b (51215)
  a=r 4 (51216)
  a+=c (51218)
  r=a 4 (51219)
  (         t4 = t4 << 8) (51221)
  c= 8 (51221)
  a<<=c (51223)
  r=a 4 (51224)
  (         t3 = t3 + 1) (51226)
  a=r 3 (51226)
  a++ (51228)
  r=a 3 (51229)
  (         t4 = t4 + M[t3]) (51231)
  b=a (51231)
  c=*b (51232)
  a=r 4 (51233)
  a+=c (51235)
  r=a 4 (51236)
  (         t1 = t2 % t4) (51238)
  c=a (51238)
  a=r 2 (51239)
  a%=c (51241)
  r=a 1 (51242)
  (         H[t0+9]〈t〉 = t1) (51244)
  a=r 0 (51244)
  a+= 9 (51246)
  d=a (51248)
  a=r 1 (51249)
  *d=a (51251)
  (                    3483:       window[i] = output_window[t]) (51252)
  (         t1 = H[t252+117]〈output_window〉 >> 31) (51252)
  c= 31 (51252)
  a=r 252 (51254)
  a+= 117 (51256)
  d=a (51258)
  a=*d (51259)
  a>>=c (51260)
  r=a 1 (51261)
  (         if t1 goto isM_2019) (51263)
  a== 0 (51263)
  jt 3 (51265)
  lj 51292 (51267)
  (         t1 = H[t252+117]〈output_window〉 + H[t0+9]〈t〉) (51270)
  a=r 0 (51270)
  a+= 9 (51272)
  d=a (51274)
  c=*d (51275)
  a=r 252 (51276)
  a+= 117 (51278)
  d=a (51280)
  a=*d (51281)
  a+=c (51282)
  r=a 1 (51283)
  (         t1 = H[t1]〈〉) (51285)
  d=a (51285)
  a=*d (51286)
  r=a 1 (51287)
  (         goto MorHdone_2020) (51289)
  lj 51321 (51289)
  (        :isM_2019:) (51292)
  (         t1 = H[t252+117]〈output_window〉 & 2147483647) (51292)
  a=0 (51292)
  a-- (51293)
  a>>= 1 (51294)
  c=a (51296)
  a=r 252 (51297)
  a+= 117 (51299)
  d=a (51301)
  a=*d (51302)
  a&=c (51303)
  r=a 1 (51304)
  (         t1 = t1 + H[t0+9]〈t〉) (51306)
  a=r 0 (51306)
  a+= 9 (51308)
  d=a (51310)
  c=*d (51311)
  a=r 1 (51312)
  a+=c (51314)
  r=a 1 (51315)
  (         t1 = M[t1]) (51317)
  b=a (51317)
  a=*b (51318)
  r=a 1 (51319)
  (        :MorHdone_2020:) (51321)
  (         t2 = H[t0+5]〈window〉 & 2147483647) (51321)
  a=0 (51321)
  a-- (51322)
  a>>= 1 (51323)
  c=a (51325)
  a=r 0 (51326)
  a+= 5 (51328)
  d=a (51330)
  a=*d (51331)
  a&=c (51332)
  r=a 2 (51333)
  (         t2 = t2 + H[t0+8]〈i〉) (51335)
  a=r 0 (51335)
  a+= 8 (51337)
  d=a (51339)
  c=*d (51340)
  a=r 2 (51341)
  a+=c (51343)
  r=a 2 (51344)
  (         M[t2] = t1) (51346)
  c=a (51346)
  a=r 1 (51347)
  *c=a (51349)
  (                    3484:       i += 1) (51350)
  (         H[t0+8]〈i〉 = H[t0+8]〈i〉 + 1) (51350)
  *d++ (51350)
  (         goto while_2015) (51351)
  lj 51038 (51351)
  (        :whileend_2017:) (51354)
  (                    3485:     i = 0) (51354)
  (         H[t0+8]〈i〉 = 0) (51354)
  a=r 0 (51354)
  a+= 8 (51356)
  d=a (51358)
  *d=0 (51359)
  (                    3486:     while i < copy_length:) (51360)
  (        :while_2021:) (51360)
  (         t1 = H[t0+8]〈i〉 < H[t0+2]〈copy_length〉) (51360)
  a=r 0 (51360)
  a+= 2 (51362)
  d=a (51364)
  c=*d (51365)
  a=r 0 (51366)
  a+= 8 (51368)
  d=a (51370)
  a=*d (51371)
  a<c (51372)
  a=0 (51373)
  jf 1 (51374)
  a++ (51376)
  r=a 1 (51377)
  (         ifN t1 goto whileend_2023) (51379)
  a== 0 (51379)
  jf 3 (51381)
  lj 51452 (51383)
  (                    3487:       window[i] = window[i % l]) (51386)
  (         t1 = H[t0+8]〈i〉 % H[t0+6]〈l〉) (51386)
  a=r 0 (51386)
  a+= 6 (51388)
  d=a (51390)
  c=*d (51391)
  a=r 0 (51392)
  a+= 8 (51394)
  d=a (51396)
  a=*d (51397)
  a%=c (51398)
  r=a 1 (51399)
  (         t2 = H[t0+5]〈window〉 & 2147483647) (51401)
  a=0 (51401)
  a-- (51402)
  a>>= 1 (51403)
  c=a (51405)
  a=r 0 (51406)
  a+= 5 (51408)
  d=a (51410)
  a=*d (51411)
  a&=c (51412)
  r=a 2 (51413)
  (         t2 = t2 + t1) (51415)
  c=r 1 (51415)
  a+=c (51417)
  r=a 2 (51418)
  (         t2 = M[t2]) (51420)
  b=a (51420)
  a=*b (51421)
  r=a 2 (51422)
  (         t3 = H[t0+5]〈window〉 & 2147483647) (51424)
  a=0 (51424)
  a-- (51425)
  a>>= 1 (51426)
  c=a (51428)
  a=*d (51429)
  a&=c (51430)
  r=a 3 (51431)
  (         t3 = t3 + H[t0+8]〈i〉) (51433)
  a=r 0 (51433)
  a+= 8 (51435)
  d=a (51437)
  c=*d (51438)
  a=r 3 (51439)
  a+=c (51441)
  r=a 3 (51442)
  (         M[t3] = t2) (51444)
  c=a (51444)
  a=r 2 (51445)
  *c=a (51447)
  (                    3488:       i += 1) (51448)
  (         H[t0+8]〈i〉 = H[t0+8]〈i〉 + 1) (51448)
  *d++ (51448)
  (         goto while_2021) (51449)
  lj 51360 (51449)
  (        :whileend_2023:) (51452)
  (                    3489:     CopyLiterals_data = window) (51452)
  (         H[t252+106]〈CopyLiterals_data〉 = H[t0+5]〈window〉) (51452)
  a=r 0 (51452)
  a+= 5 (51454)
  d=a (51456)
  c=*d (51457)
  a=r 252 (51458)
  a+= 106 (51460)
  d=a (51462)
  *d=c (51463)
  (                    3490:     return CopyLiterals) (51464)
  (         t1 = H[t252+105]〈CopyLiterals〉) (51464)
  d-- (51464)
  a=*d (51465)
  r=a 1 (51466)
  (         t2 = H[t0]〈〉) (51468)
  d=r 0 (51468)
  a=*d (51470)
  r=a 2 (51471)
  (         t0 = t0 - 1) (51473)
  a=r 0 (51473)
  a-- (51475)
  r=a 0 (51476)
  (         t0 = H[t0]〈〉) (51478)
  d=a (51478)
  a=*d (51479)
  r=a 0 (51480)
  (         goto find_label_ret_id) (51482)
  lj 62666 (51482)
  (         goto endif_2011) (51485)
  lj 52153 (51485)
  (        :else_2010:) (51488)
  (                    3492:     if copy_length < 4 or copy_length > 24:) (51488)
  (         t3 = H[t0+2]〈copy_length〉 < 4) (51488)
  c= 4 (51488)
  a=r 0 (51490)
  a+= 2 (51492)
  d=a (51494)
  a=*d (51495)
  a<c (51496)
  a=0 (51497)
  jf 1 (51498)
  a++ (51500)
  r=a 3 (51501)
  (         t4 = H[t0+2]〈copy_length〉 > 24) (51503)
  c= 24 (51503)
  a=*d (51505)
  a>c (51506)
  a=0 (51507)
  jf 1 (51508)
  a++ (51510)
  r=a 4 (51511)
  (         t2 = t3 or t4) (51513)
  c=a (51513)
  a=r 3 (51514)
  a== 0 (51516)
  jf 1 (51518)
  a=c (51520)
  r=a 2 (51521)
  (         ifN t2 goto else_2027) (51523)
  a== 0 (51523)
  jf 3 (51525)
  lj 51534 (51527)
  (                    3493:       error〈〉  # InvalidLengthInStaticDictionary) (51530)
  (         error) (51530)
  error (51530)
  (         goto endif_2028) (51531)
  lj 51534 (51531)
  (        :else_2027:) (51534)
  (        :endif_2028:) (51534)
  (                    3494:     word_id = distance - max_allowed_distance - 1) (51534)
  (         t3 = H[t0+3]〈distance〉 - H[t0+4]〈max_allowed_distance〉) (51534)
  a=r 0 (51534)
  a+= 4 (51536)
  d=a (51538)
  c=*d (51539)
  d-- (51540)
  a=*d (51541)
  a-=c (51542)
  r=a 3 (51543)
  (         t2 = t3 - 1) (51545)
  c= 1 (51545)
  a-=c (51547)
  r=a 2 (51548)
  (         H[t0+10]〈word_id〉 = t2) (51550)
  a=r 0 (51550)
  a+= 10 (51552)
  d=a (51554)
  a=r 2 (51555)
  *d=a (51557)
  (                    3495:     if copy_length < 4:) (51558)
  (         t2 = H[t0+2]〈copy_length〉 < 4) (51558)
  c= 4 (51558)
  a=r 0 (51560)
  a+= 2 (51562)
  d=a (51564)
  a=*d (51565)
  a<c (51566)
  a=0 (51567)
  jf 1 (51568)
  a++ (51570)
  r=a 2 (51571)
  (         ifN t2 goto else_2030) (51573)
  a== 0 (51573)
  jf 3 (51575)
  lj 51589 (51577)
  (                    3496:       n_words_length = 0) (51580)
  (         H[t0+11]〈n_words_length〉 = 0) (51580)
  a=r 0 (51580)
  a+= 11 (51582)
  d=a (51584)
  *d=0 (51585)
  (         goto endif_2031) (51586)
  lj 51632 (51586)
  (        :else_2030:) (51589)
  (                    3498:       n_words_length = 1 << BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[copy_length]) (51589)
  (         t3 = H[t252+10]〈BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH〉 & 2147483647) (51589)
  a=0 (51589)
  a-- (51590)
  a>>= 1 (51591)
  c=a (51593)
  a=r 252 (51594)
  a+= 10 (51596)
  d=a (51598)
  a=*d (51599)
  a&=c (51600)
  r=a 3 (51601)
  (         t3 = t3 + H[t0+2]〈copy_length〉) (51603)
  a=r 0 (51603)
  a+= 2 (51605)
  d=a (51607)
  c=*d (51608)
  a=r 3 (51609)
  a+=c (51611)
  r=a 3 (51612)
  (         t3 = M[t3]) (51614)
  b=a (51614)
  a=*b (51615)
  r=a 3 (51616)
  (         t2 = 1 << t3) (51618)
  c=a (51618)
  a= 1 (51619)
  a<<=c (51621)
  r=a 2 (51622)
  (         H[t0+11]〈n_words_length〉 = t2) (51624)
  a=r 0 (51624)
  a+= 11 (51626)
  d=a (51628)
  a=r 2 (51629)
  *d=a (51631)
  (        :endif_2031:) (51632)
  (                    3499:     index = word_id % n_words_length) (51632)
  (         t2 = H[t0+10]〈word_id〉 % H[t0+11]〈n_words_length〉) (51632)
  a=r 0 (51632)
  a+= 11 (51634)
  d=a (51636)
  c=*d (51637)
  d-- (51638)
  a=*d (51639)
  a%=c (51640)
  r=a 2 (51641)
  (         H[t0+12]〈index〉 = t2) (51643)
  a=r 0 (51643)
  a+= 12 (51645)
  d=a (51647)
  a=r 2 (51648)
  *d=a (51650)
  (                    3500:     offset_from = BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[copy_length] + index * copy_length) (51651)
  (         t3 = H[t252+9]〈BROTLI_DICTIONARY_OFFSETS_BY_LENGTH〉 + H[t0+2]〈copy_length〉) (51651)
  a=r 0 (51651)
  a+= 2 (51653)
  d=a (51655)
  c=*d (51656)
  a=r 252 (51657)
  a+= 9 (51659)
  d=a (51661)
  a=*d (51662)
  a+=c (51663)
  r=a 3 (51664)
  (         t3 = H[t3]〈〉) (51666)
  d=a (51666)
  a=*d (51667)
  r=a 3 (51668)
  (         t4 = H[t0+12]〈index〉 * H[t0+2]〈copy_length〉) (51670)
  a=r 0 (51670)
  a+= 2 (51672)
  d=a (51674)
  c=*d (51675)
  a=r 0 (51676)
  a+= 12 (51678)
  d=a (51680)
  a=*d (51681)
  a*=c (51682)
  r=a 4 (51683)
  (         t2 = t3 + t4) (51685)
  c=a (51685)
  a=r 3 (51686)
  a+=c (51688)
  r=a 2 (51689)
  (         H[t0+13]〈offset_from〉 = t2) (51691)
  d++ (51691)
  *d=a (51692)
  (                    3501:     offset_to = BROTLI_DICTIONARY_OFFSETS_BY_LENGTH[copy_length] + 〈index + 1〉 * copy_length) (51693)
  (         t3 = H[t252+9]〈BROTLI_DICTIONARY_OFFSETS_BY_LENGTH〉 + H[t0+2]〈copy_length〉) (51693)
  a=r 0 (51693)
  a+= 2 (51695)
  d=a (51697)
  c=*d (51698)
  a=r 252 (51699)
  a+= 9 (51701)
  d=a (51703)
  a=*d (51704)
  a+=c (51705)
  r=a 3 (51706)
  (         t3 = H[t3]〈〉) (51708)
  d=a (51708)
  a=*d (51709)
  r=a 3 (51710)
  (         t5 = H[t0+12]〈index〉 + 1) (51712)
  c= 1 (51712)
  a=r 0 (51714)
  a+= 12 (51716)
  d=a (51718)
  a=*d (51719)
  a+=c (51720)
  r=a 5 (51721)
  (         t4 = t5 * H[t0+2]〈copy_length〉) (51723)
  a=r 0 (51723)
  a+= 2 (51725)
  d=a (51727)
  c=*d (51728)
  a=r 5 (51729)
  a*=c (51731)
  r=a 4 (51732)
  (         t2 = t3 + t4) (51734)
  c=a (51734)
  a=r 3 (51735)
  a+=c (51737)
  r=a 2 (51738)
  (         H[t0+14]〈offset_to〉 = t2) (51740)
  a=r 0 (51740)
  a+= 14 (51742)
  d=a (51744)
  a=r 2 (51745)
  *d=a (51747)
  (                    3502:     base_word = alloc_pM〈offset_to-offset_from〉) (51748)
  (         t2 = H[t0+14]〈offset_to〉 - H[t0+13]〈offset_from〉) (51748)
  d-- (51748)
  c=*d (51749)
  d++ (51750)
  a=*d (51751)
  a-=c (51752)
  r=a 2 (51753)
  (         H[t0+16]〈〉 = t0) (51755)
  a=r 0 (51755)
  a+= 16 (51757)
  d=a (51759)
  a=r 0 (51760)
  *d=a (51762)
  (saved bsp, return id:) (51763)
  (         H[t0+17]〈〉 = 220) (51763)
  d++ (51763)
  *d= 220 (51764)
  (push arguments:) (51766)
  (         H[t0+18]〈〉 = t2) (51766)
  d++ (51766)
  a=r 2 (51767)
  *d=a (51769)
  (         t0 = t0 + 17) (51770)
  c= 17 (51770)
  a=r 0 (51772)
  a+=c (51774)
  r=a 0 (51775)
  (         goto addr_alloc_pM) (51777)
  lj 323 (51777)
  (        :return_id_220:) (51780)
  (         t3 = t1) (51780)
  a=r 1 (51780)
  r=a 3 (51782)
  (         t3 = t3 | 2147483648) (51784)
  a= 1 (51784)
  a<<= 31 (51786)
  c=a (51788)
  a=r 3 (51789)
  a|=c (51791)
  r=a 3 (51792)
  (         H[t0+15]〈base_word〉 = t3) (51794)
  a=r 0 (51794)
  a+= 15 (51796)
  d=a (51798)
  a=r 3 (51799)
  *d=a (51801)
  (                    3503:     i = 0) (51802)
  (         H[t0+8]〈i〉 = 0) (51802)
  a=r 0 (51802)
  a+= 8 (51804)
  d=a (51806)
  *d=0 (51807)
  (                    3504:     while i < offset_to-offset_from:) (51808)
  (        :while_2032:) (51808)
  (         t3 = H[t0+14]〈offset_to〉 - H[t0+13]〈offset_from〉) (51808)
  a=r 0 (51808)
  a+= 13 (51810)
  d=a (51812)
  c=*d (51813)
  d++ (51814)
  a=*d (51815)
  a-=c (51816)
  r=a 3 (51817)
  (         t2 = H[t0+8]〈i〉 < t3) (51819)
  c=a (51819)
  a=r 0 (51820)
  a+= 8 (51822)
  d=a (51824)
  a=*d (51825)
  a<c (51826)
  a=0 (51827)
  jf 1 (51828)
  a++ (51830)
  r=a 2 (51831)
  (         ifN t2 goto whileend_2034) (51833)
  a== 0 (51833)
  jf 3 (51835)
  lj 51942 (51837)
  (                    3505:       base_word[i] = BROTLI_DICTIONARY[i + offset_from]) (51840)
  (         t2 = H[t0+8]〈i〉 + H[t0+13]〈offset_from〉) (51840)
  a=r 0 (51840)
  a+= 13 (51842)
  d=a (51844)
  c=*d (51845)
  a=r 0 (51846)
  a+= 8 (51848)
  d=a (51850)
  a=*d (51851)
  a+=c (51852)
  r=a 2 (51853)
  (         t3 = H[t252+11]〈BROTLI_DICTIONARY〉 >> 31) (51855)
  c= 31 (51855)
  a=r 252 (51857)
  a+= 11 (51859)
  d=a (51861)
  a=*d (51862)
  a>>=c (51863)
  r=a 3 (51864)
  (         if t3 goto isM_2036) (51866)
  a== 0 (51866)
  jt 3 (51868)
  lj 51886 (51870)
  (         t3 = H[t252+11]〈BROTLI_DICTIONARY〉 + t2) (51873)
  c=r 2 (51873)
  a=*d (51875)
  a+=c (51876)
  r=a 3 (51877)
  (         t3 = H[t3]〈〉) (51879)
  d=a (51879)
  a=*d (51880)
  r=a 3 (51881)
  (         goto MorHdone_2037) (51883)
  lj 51909 (51883)
  (        :isM_2036:) (51886)
  (         t3 = H[t252+11]〈BROTLI_DICTIONARY〉 & 2147483647) (51886)
  a=0 (51886)
  a-- (51887)
  a>>= 1 (51888)
  c=a (51890)
  a=r 252 (51891)
  a+= 11 (51893)
  d=a (51895)
  a=*d (51896)
  a&=c (51897)
  r=a 3 (51898)
  (         t3 = t3 + t2) (51900)
  c=r 2 (51900)
  a+=c (51902)
  r=a 3 (51903)
  (         t3 = M[t3]) (51905)
  b=a (51905)
  a=*b (51906)
  r=a 3 (51907)
  (        :MorHdone_2037:) (51909)
  (         t4 = H[t0+15]〈base_word〉 & 2147483647) (51909)
  a=0 (51909)
  a-- (51910)
  a>>= 1 (51911)
  c=a (51913)
  a=r 0 (51914)
  a+= 15 (51916)
  d=a (51918)
  a=*d (51919)
  a&=c (51920)
  r=a 4 (51921)
  (         t4 = t4 + H[t0+8]〈i〉) (51923)
  a=r 0 (51923)
  a+= 8 (51925)
  d=a (51927)
  c=*d (51928)
  a=r 4 (51929)
  a+=c (51931)
  r=a 4 (51932)
  (         M[t4] = t3) (51934)
  c=a (51934)
  a=r 3 (51935)
  *c=a (51937)
  (                    3506:       i += 1) (51938)
  (         H[t0+8]〈i〉 = H[t0+8]〈i〉 + 1) (51938)
  *d++ (51938)
  (         goto while_2032) (51939)
  lj 51808 (51939)
  (        :whileend_2034:) (51942)
  (                    3507:     transform_id = word_id >> BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH[copy_length]) (51942)
  (         t4 = H[t252+10]〈BROTLI_DICTIONARY_SIZE_BITS_BY_LENGTH〉 & 2147483647) (51942)
  a=0 (51942)
  a-- (51943)
  a>>= 1 (51944)
  c=a (51946)
  a=r 252 (51947)
  a+= 10 (51949)
  d=a (51951)
  a=*d (51952)
  a&=c (51953)
  r=a 4 (51954)
  (         t4 = t4 + H[t0+2]〈copy_length〉) (51956)
  a=r 0 (51956)
  a+= 2 (51958)
  d=a (51960)
  c=*d (51961)
  a=r 4 (51962)
  a+=c (51964)
  r=a 4 (51965)
  (         t4 = M[t4]) (51967)
  b=a (51967)
  a=*b (51968)
  r=a 4 (51969)
  (         t3 = H[t0+10]〈word_id〉 >> t4) (51971)
  c=a (51971)
  a=r 0 (51972)
  a+= 10 (51974)
  d=a (51976)
  a=*d (51977)
  a>>=c (51978)
  r=a 3 (51979)
  (         H[t0+16]〈transform_id〉 = t3) (51981)
  a=r 0 (51981)
  a+= 16 (51983)
  d=a (51985)
  a=r 3 (51986)
  *d=a (51988)
  (                    3508:     if transform_id > 120:) (51989)
  (         t3 = H[t0+16]〈transform_id〉 > 120) (51989)
  c= 120 (51989)
  a=*d (51991)
  a>c (51992)
  a=0 (51993)
  jf 1 (51994)
  a++ (51996)
  r=a 3 (51997)
  (         ifN t3 goto else_2039) (51999)
  a== 0 (51999)
  jf 3 (52001)
  lj 52010 (52003)
  (                    3509:       error〈〉 # InvalidTransformId) (52006)
  (         error) (52006)
  error (52006)
  (         goto endif_2040) (52007)
  lj 52010 (52007)
  (        :else_2039:) (52010)
  (        :endif_2040:) (52010)
  (                    3510:     CopyLiterals_data = transformation〈transform_id, base_word〉) (52010)
  (         H[t0+19]〈〉 = t0) (52010)
  a=r 0 (52010)
  a+= 19 (52012)
  d=a (52014)
  a=r 0 (52015)
  *d=a (52017)
  (saved bsp, return id:) (52018)
  (         H[t0+20]〈〉 = 221) (52018)
  d++ (52018)
  *d= 221 (52019)
  (push arguments:) (52021)
  (         H[t0+21]〈〉 = H[t0+16]〈transform_id〉) (52021)
  a+= 16 (52021)
  d=a (52023)
  c=*d (52024)
  a=r 0 (52025)
  a+= 21 (52027)
  d=a (52029)
  *d=c (52030)
  (         H[t0+22]〈〉 = H[t0+15]〈base_word〉) (52031)
  a=r 0 (52031)
  a+= 15 (52033)
  d=a (52035)
  c=*d (52036)
  a=r 0 (52037)
  a+= 22 (52039)
  d=a (52041)
  *d=c (52042)
  (         t0 = t0 + 20) (52043)
  c= 20 (52043)
  a=r 0 (52045)
  a+=c (52047)
  r=a 0 (52048)
  (         goto transformation) (52050)
  lj 10763 (52050)
  (        :return_id_221:) (52053)
  (         t3 = t1) (52053)
  a=r 1 (52053)
  r=a 3 (52055)
  (         H[t252+106]〈CopyLiterals_data〉 = t3) (52057)
  a=r 252 (52057)
  a+= 106 (52059)
  d=a (52061)
  a=r 3 (52062)
  *d=a (52064)
  (                    3511:     if transform_id != 0:) (52065)
  (         t3 = H[t0+16]〈transform_id〉 != 0) (52065)
  c=0 (52065)
  a=r 0 (52066)
  a+= 16 (52068)
  d=a (52070)
  a=*d (52071)
  a==c (52072)
  a=0 (52073)
  jt 1 (52074)
  a++ (52076)
  r=a 3 (52077)
  (         ifN t3 goto else_2042) (52079)
  a== 0 (52079)
  jf 3 (52081)
  lj 52128 (52083)
  (                    3512:       free_pM〈base_word〉) (52086)
  (         t3 = H[t0+15]〈base_word〉 & 2147483647) (52086)
  a=0 (52086)
  a-- (52087)
  a>>= 1 (52088)
  c=a (52090)
  d-- (52091)
  a=*d (52092)
  a&=c (52093)
  r=a 3 (52094)
  (         H[t0+19]〈〉 = t0) (52096)
  a=r 0 (52096)
  a+= 19 (52098)
  d=a (52100)
  a=r 0 (52101)
  *d=a (52103)
  (saved bsp, return id:) (52104)
  (         H[t0+20]〈〉 = 222) (52104)
  d++ (52104)
  *d= 222 (52105)
  (push arguments:) (52107)
  (         H[t0+21]〈〉 = t3) (52107)
  d++ (52107)
  a=r 3 (52108)
  *d=a (52110)
  (         t0 = t0 + 20) (52111)
  c= 20 (52111)
  a=r 0 (52113)
  a+=c (52115)
  r=a 0 (52116)
  (         goto addr_free_pM) (52118)
  lj 2406 (52118)
  (        :return_id_222:) (52121)
  (         t4 = t1) (52121)
  a=r 1 (52121)
  r=a 4 (52123)
  (         goto endif_2043) (52125)
  lj 52128 (52125)
  (        :else_2042:) (52128)
  (        :endif_2043:) (52128)
  (                    3513:     return CopyLiterals) (52128)
  (         t1 = H[t252+105]〈CopyLiterals〉) (52128)
  a=r 252 (52128)
  a+= 105 (52130)
  d=a (52132)
  a=*d (52133)
  r=a 1 (52134)
  (         t2 = H[t0]〈〉) (52136)
  d=r 0 (52136)
  a=*d (52138)
  r=a 2 (52139)
  (         t0 = t0 - 1) (52141)
  a=r 0 (52141)
  a-- (52143)
  r=a 0 (52144)
  (         t0 = H[t0]〈〉) (52146)
  d=a (52146)
  a=*d (52147)
  r=a 0 (52148)
  (         goto find_label_ret_id) (52150)
  lj 62666 (52150)
  (        :endif_2011:) (52153)
  (insert return as it might not be done by the function:) (52153)
  (         t2 = H[t0]〈〉) (52153)
  d=r 0 (52153)
  a=*d (52155)
  r=a 2 (52156)
  (         t0 = t0 - 1) (52158)
  a=r 0 (52158)
  a-- (52160)
  r=a 0 (52161)
  (         t0 = H[t0]〈〉) (52163)
  d=a (52163)
  a=*d (52164)
  r=a 0 (52165)
  (         goto find_label_ret_id) (52167)
  lj 62666 (52167)
  (         MarkTempVarEnd) (52170)
  (        :copy_literals_end~:) (52170)
  (                    3516: expect_next_seg = True) (52170)
  (         H[t0+174]〈expect_next_seg〉 = 1) (52170)
  a=r 0 (52170)
  a+= 174 (52172)
  d=a (52174)
  *d= 1 (52175)
  (                    3517: def pcomp〈c〉:  # the passing of c is like having c = read_b〈〉 as first line) (52177)
  (         goto pcomp_end~) (52177)
  lj 62630 (52177)
  (        :pcomp:) (52180)
  (         MarkTempVarStart) (52180)
  (Arg c at t0 + 1) (52180)
  (                    3518:   global count_output, header_wbits, header_window_size, literal_buf_pointer, meta_block_blen_d) (52180)
  (Global count_output via H[t252+119]) (52180)
  (Global header_wbits via H[t252+115]) (52180)
  (Global header_window_size via H[t252+116]) (52180)
  (Global literal_buf_pointer via H[t252+123]) (52180)
  (Global meta_block_blen_d via H[t252+148]) (52180)
  (                    3519:   global meta_block_blen_i, meta_block_blen_l, meta_block_context_modes_literals, meta_block_copy_length) (52180)
  (Global meta_block_blen_i via H[t252+147]) (52180)
  (Global meta_block_blen_l via H[t252+146]) (52180)
  (Global meta_block_context_modes_literals via H[t252+159]) (52180)
  (Global meta_block_copy_length via H[t252+161]) (52180)
  (                    3520:   global meta_block_count_output, meta_block_distance, meta_block_distance_code, meta_block_header_c_map_d) (52180)
  (Global meta_block_count_output via H[t252+143]) (52180)
  (Global meta_block_distance via H[t252+163]) (52180)
  (Global meta_block_distance_code via H[t252+164]) (52180)
  (Global meta_block_header_c_map_d via H[t252+139]) (52180)
  (                    3521:   global meta_block_btype_l_prev, meta_block_btype_l, meta_block_btype_i, meta_block_btype_i_prev) (52180)
  (Global meta_block_btype_l_prev via H[t252+145]) (52180)
  (Global meta_block_btype_l via H[t252+144]) (52180)
  (Global meta_block_btype_i via H[t252+149]) (52180)
  (Global meta_block_btype_i_prev via H[t252+150]) (52180)
  (                    3522:   global meta_block_btype_d, meta_block_btype_d_prev) (52180)
  (Global meta_block_btype_d via H[t252+151]) (52180)
  (Global meta_block_btype_d_prev via H[t252+152]) (52180)
  (                    3523:   global meta_block_header_c_map_l, meta_block_header_is_last, meta_block_header_is_last_empty) (52180)
  (Global meta_block_header_c_map_l via H[t252+138]) (52180)
  (Global meta_block_header_is_last via H[t252+124]) (52180)
  (Global meta_block_header_is_last_empty via H[t252+125]) (52180)
  (                    3524:   global meta_block_header_is_uncompressed, meta_block_header_m_len, meta_block_header_m_nibbles) (52180)
  (Global meta_block_header_is_uncompressed via H[t252+130]) (52180)
  (Global meta_block_header_m_len via H[t252+129]) (52180)
  (Global meta_block_header_m_nibbles via H[t252+126]) (52180)
  (                    3525:   global meta_block_header_m_skip_bytes, meta_block_header_m_skip_len, meta_block_header_n_bltypes_d) (52180)
  (Global meta_block_header_m_skip_bytes via H[t252+127]) (52180)
  (Global meta_block_header_m_skip_len via H[t252+128]) (52180)
  (Global meta_block_header_n_bltypes_d via H[t252+133]) (52180)
  (                    3526:   global meta_block_header_n_bltypes_i, meta_block_header_n_bltypes_l, meta_block_header_n_direct) (52180)
  (Global meta_block_header_n_bltypes_i via H[t252+132]) (52180)
  (Global meta_block_header_n_bltypes_l via H[t252+131]) (52180)
  (Global meta_block_header_n_direct via H[t252+135]) (52180)
  (                    3527:   global meta_block_header_n_postfix, meta_block_header_n_trees_d, meta_block_header_n_trees_l) (52180)
  (Global meta_block_header_n_postfix via H[t252+134]) (52180)
  (Global meta_block_header_n_trees_d via H[t252+137]) (52180)
  (Global meta_block_header_n_trees_l via H[t252+136]) (52180)
  (                    3528:   global meta_block_insert_and_copy_length, meta_block_insert_length, meta_block_prefix_tree_block_counts_distances) (52180)
  (Global meta_block_insert_and_copy_length via H[t252+160]) (52180)
  (Global meta_block_insert_length via H[t252+162]) (52180)
  (Global meta_block_prefix_tree_block_counts_distances via H[t252+156]) (52180)
  (                    3529:   global meta_block_prefix_tree_block_counts_insert_and_copy_lengths, meta_block_prefix_tree_block_counts_literals) (52180)
  (Global meta_block_prefix_tree_block_counts_insert_and_copy_lengths via H[t252+154]) (52180)
  (Global meta_block_prefix_tree_block_counts_literals via H[t252+141]) (52180)
  (                    3530:   global meta_block_prefix_tree_block_types_distances, meta_block_prefix_tree_block_types_insert_and_copy_lengths) (52180)
  (Global meta_block_prefix_tree_block_types_distances via H[t252+155]) (52180)
  (Global meta_block_prefix_tree_block_types_insert_and_copy_lengths via H[t252+153]) (52180)
  (                    3531:   global meta_block_prefix_tree_block_types_literals, meta_block_prefix_trees_distances) (52180)
  (Global meta_block_prefix_tree_block_types_literals via H[t252+140]) (52180)
  (Global meta_block_prefix_trees_distances via H[t252+158]) (52180)
  (                    3532:   global meta_block_prefix_trees_insert_and_copy_lengths, meta_block_prefix_trees_literals) (52180)
  (Global meta_block_prefix_trees_insert_and_copy_lengths via H[t252+157]) (52180)
  (Global meta_block_prefix_trees_literals via H[t252+142]) (52180)
  (                    3533:   global output_window, output_window_pointer, state, WBits_data, BROTLI_DICTIONARY, expect_next_seg) (52180)
  (Global output_window via H[t252+117]) (52180)
  (Global output_window_pointer via H[t252+118]) (52180)
  (Global state via H[t252+165]) (52180)
  (Global WBits_data via H[t252+30]) (52180)
  (Global BROTLI_DICTIONARY via H[t252+11]) (52180)
  (Global expect_next_seg via H[t252+174]) (52180)
  (                    3534:   global distance_buf, distance_buf_pointer, literal_buf) (52180)
  (Global distance_buf via H[t252+120]) (52180)
  (Global distance_buf_pointer via H[t252+121]) (52180)
  (Global literal_buf via H[t252+122]) (52180)
  (                    3535:   global bit_pos, current_byte, global_bit_pos) (52180)
  (Global bit_pos via H[t252+1]) (52180)
  (Global current_byte via H[t252+2]) (52180)
  (Global global_bit_pos via H[t252+3]) (52180)
  (                    3537:   if expect_next_seg:) (52180)
  (         ifN H[t252+174]〈expect_next_seg〉 goto else_2044) (52180)
  a=r 252 (52180)
  a+= 174 (52182)
  d=a (52184)
  a=*d (52185)
  a== 0 (52186)
  jf 3 (52188)
  lj 52425 (52190)
  (                    3538:     if c == 0x74:) (52193)
  (         t1 = H[t0+1]〈c〉 == 116) (52193)
  c= 116 (52193)
  a=r 0 (52195)
  a++ (52197)
  d=a (52198)
  a=*d (52199)
  a==c (52200)
  a=0 (52201)
  jf 1 (52202)
  a++ (52204)
  r=a 1 (52205)
  (         ifN t1 goto else_2047) (52207)
  a== 0 (52207)
  jf 3 (52209)
  lj 52416 (52211)
  (                    3539:       push_b〈c〉  # push c back for the loop) (52214)
  (         t253 = H[t0+1]〈c〉) (52214)
  a=*d (52214)
  r=a 253 (52215)
  (                    3540:       if BROTLI_DICTIONARY == NONE:) (52217)
  (         t1 = H[t252+11]〈BROTLI_DICTIONARY〉 == 4294967295) (52217)
  c=0 (52217)
  c-- (52218)
  a=r 252 (52219)
  a+= 11 (52221)
  d=a (52223)
  a=*d (52224)
  a==c (52225)
  a=0 (52226)
  jf 1 (52227)
  a++ (52229)
  r=a 1 (52230)
  (         ifN t1 goto else_2050) (52232)
  a== 0 (52232)
  jf 3 (52234)
  lj 52293 (52236)
  (                    3541:         BROTLI_DICTIONARY = alloc_pM〈122784〉) (52239)
  (         H[t0+2]〈〉 = t0) (52239)
  a=r 0 (52239)
  a+= 2 (52241)
  d=a (52243)
  a=r 0 (52244)
  *d=a (52246)
  (saved bsp, return id:) (52247)
  (         H[t0+3]〈〉 = 223) (52247)
  d++ (52247)
  *d= 223 (52248)
  (push arguments:) (52250)
  (         H[t0+4]〈〉 = 122784) (52250)
  d++ (52250)
  a= 1 (52251)
  a<<= 8 (52253)
  a+= 223 (52255)
  a<<= 8 (52257)
  a+= 160 (52259)
  *d=a (52261)
  (         t0 = t0 + 3) (52262)
  c= 3 (52262)
  a=r 0 (52264)
  a+=c (52266)
  r=a 0 (52267)
  (         goto addr_alloc_pM) (52269)
  lj 323 (52269)
  (        :return_id_223:) (52272)
  (         t1 = t1 | 2147483648) (52272)
  a= 1 (52272)
  a<<= 31 (52274)
  c=a (52276)
  a=r 1 (52277)
  a|=c (52279)
  r=a 1 (52280)
  (         H[t252+11]〈BROTLI_DICTIONARY〉 = t1) (52282)
  a=r 252 (52282)
  a+= 11 (52284)
  d=a (52286)
  a=r 1 (52287)
  *d=a (52289)
  (         goto endif_2051) (52290)
  lj 52293 (52290)
  (        :else_2050:) (52293)
  (        :endif_2051:) (52293)
  (                    3542:       i = 0) (52293)
  (         H[t0+2]〈i〉 = 0) (52293)
  a=r 0 (52293)
  a+= 2 (52295)
  d=a (52297)
  *d=0 (52298)
  (                    3543:       while i < 122784:) (52299)
  (        :while_2052:) (52299)
  (         t1 = H[t0+2]〈i〉 < 122784) (52299)
  a= 1 (52299)
  a<<= 8 (52301)
  a+= 223 (52303)
  a<<= 8 (52305)
  a+= 160 (52307)
  c=a (52309)
  a=r 0 (52310)
  a+= 2 (52312)
  d=a (52314)
  a=*d (52315)
  a<c (52316)
  a=0 (52317)
  jf 1 (52318)
  a++ (52320)
  r=a 1 (52321)
  (         ifN t1 goto whileend_2054) (52323)
  a== 0 (52323)
  jf 3 (52325)
  lj 52407 (52327)
  (                    3544:         tmp_ = read_b〈〉) (52330)
  (         H[t0+3]〈〉 = t0) (52330)
  d++ (52330)
  a=r 0 (52331)
  *d=a (52333)
  (saved bsp, return id:) (52334)
  (         H[t0+4]〈〉 = 224) (52334)
  d++ (52334)
  *d= 224 (52335)
  (push arguments:) (52337)
  (         t0 = t0 + 4) (52337)
  c= 4 (52337)
  a+=c (52339)
  r=a 0 (52340)
  (         goto read_b) (52342)
  lj 38 (52342)
  (        :return_id_224:) (52345)
  (         H[t0+3]〈tmp_〉 = t1) (52345)
  a=r 0 (52345)
  a+= 3 (52347)
  d=a (52349)
  a=r 1 (52350)
  *d=a (52352)
  (                    3545:         if tmp_ == NONE:) (52353)
  (         t1 = H[t0+3]〈tmp_〉 == 4294967295) (52353)
  c=0 (52353)
  c-- (52354)
  a=*d (52355)
  a==c (52356)
  a=0 (52357)
  jf 1 (52358)
  a++ (52360)
  r=a 1 (52361)
  (         ifN t1 goto else_2057) (52363)
  a== 0 (52363)
  jf 3 (52365)
  lj 52374 (52367)
  (                    3546:           error〈〉 # was expecting all bytes of the dict) (52370)
  (         error) (52370)
  error (52370)
  (         goto endif_2058) (52371)
  lj 52374 (52371)
  (        :else_2057:) (52374)
  (        :endif_2058:) (52374)
  (                    3547:         BROTLI_DICTIONARY[i] = tmp_) (52374)
  (         t1 = H[t252+11]〈BROTLI_DICTIONARY〉 & 2147483647) (52374)
  a=0 (52374)
  a-- (52375)
  a>>= 1 (52376)
  c=a (52378)
  a=r 252 (52379)
  a+= 11 (52381)
  d=a (52383)
  a=*d (52384)
  a&=c (52385)
  r=a 1 (52386)
  (         t1 = t1 + H[t0+2]〈i〉) (52388)
  a=r 0 (52388)
  a+= 2 (52390)
  d=a (52392)
  c=*d (52393)
  a=r 1 (52394)
  a+=c (52396)
  r=a 1 (52397)
  (         M[t1] = H[t0+3]〈tmp_〉) (52399)
  c=a (52399)
  d++ (52400)
  *c=*d (52401)
  (                    3548:         i += 1) (52402)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (52402)
  d-- (52402)
  *d++ (52403)
  (         goto while_2052) (52404)
  lj 52299 (52404)
  (        :whileend_2054:) (52407)
  (                    3549:       expect_next_seg = False) (52407)
  (         H[t252+174]〈expect_next_seg〉 = 0) (52407)
  a=r 252 (52407)
  a+= 174 (52409)
  d=a (52411)
  *d=0 (52412)
  (         goto endif_2048) (52413)
  lj 52422 (52413)
  (        :else_2047:) (52416)
  (                    3551:       expect_next_seg = False  # no dict was provided as first input data, drop first byte) (52416)
  (         H[t252+174]〈expect_next_seg〉 = 0) (52416)
  a=r 252 (52416)
  a+= 174 (52418)
  d=a (52420)
  *d=0 (52421)
  (        :endif_2048:) (52422)
  (         goto endif_2045) (52422)
  lj 52425 (52422)
  (        :else_2044:) (52425)
  (        :endif_2045:) (52425)
  (                    3553:   while True:) (52425)
  (        :while_2059:) (52425)
  (         ifN 1 goto whileend_2061) (52425)
  a= 1 (52425)
  a== 0 (52427)
  jf 3 (52429)
  lj 62613 (52431)
  (                    3556:     if state == StreamBegin:) (52434)
  (         t1 = H[t252+165]〈state〉 == H[t252+27]〈StreamBegin〉) (52434)
  a=r 252 (52434)
  a+= 27 (52436)
  d=a (52438)
  c=*d (52439)
  a=r 252 (52440)
  a+= 165 (52442)
  d=a (52444)
  a=*d (52445)
  a==c (52446)
  a=0 (52447)
  jf 1 (52448)
  a++ (52450)
  r=a 1 (52451)
  (         ifN t1 goto else_2063) (52453)
  a== 0 (52453)
  jf 3 (52455)
  lj 52475 (52457)
  (                    3557:       state = HeaderBegin) (52460)
  (         H[t252+165]〈state〉 = H[t252+28]〈HeaderBegin〉) (52460)
  a=r 252 (52460)
  a+= 28 (52462)
  d=a (52464)
  c=*d (52465)
  a=r 252 (52466)
  a+= 165 (52468)
  d=a (52470)
  *d=c (52471)
  (         goto endif_2064) (52472)
  lj 62610 (52472)
  (        :else_2063:) (52475)
  (                    3558:     elif state == NONE: # dec err) (52475)
  (         t1 = H[t252+165]〈state〉 == 4294967295) (52475)
  c=0 (52475)
  c-- (52476)
  a=r 252 (52477)
  a+= 165 (52479)
  d=a (52481)
  a=*d (52482)
  a==c (52483)
  a=0 (52484)
  jf 1 (52485)
  a++ (52487)
  r=a 1 (52488)
  (         ifN t1 goto else_2066) (52490)
  a== 0 (52490)
  jf 3 (52492)
  lj 52518 (52494)
  (                    3559:       error〈〉) (52497)
  (         error) (52497)
  error (52497)
  (                    3560:       return) (52498)
  (         t2 = H[t0]〈〉) (52498)
  d=r 0 (52498)
  a=*d (52500)
  r=a 2 (52501)
  (         t0 = t0 - 1) (52503)
  a=r 0 (52503)
  a-- (52505)
  r=a 0 (52506)
  (         t0 = H[t0]〈〉) (52508)
  d=a (52508)
  a=*d (52509)
  r=a 0 (52510)
  (         goto find_label_ret_id) (52512)
  lj 62666 (52512)
  (         goto endif_2067) (52515)
  lj 62610 (52515)
  (        :else_2066:) (52518)
  (                    3561:     elif state == HeaderBegin:) (52518)
  (         t1 = H[t252+165]〈state〉 == H[t252+28]〈HeaderBegin〉) (52518)
  a=r 252 (52518)
  a+= 28 (52520)
  d=a (52522)
  c=*d (52523)
  a=r 252 (52524)
  a+= 165 (52526)
  d=a (52528)
  a=*d (52529)
  a==c (52530)
  a=0 (52531)
  jf 1 (52532)
  a++ (52534)
  r=a 1 (52535)
  (         ifN t1 goto else_2069) (52537)
  a== 0 (52537)
  jf 3 (52539)
  lj 52586 (52541)
  (                    3562:       state = WBits) (52544)
  (         H[t252+165]〈state〉 = H[t252+29]〈WBits〉) (52544)
  a=r 252 (52544)
  a+= 29 (52546)
  d=a (52548)
  c=*d (52549)
  a=r 252 (52550)
  a+= 165 (52552)
  d=a (52554)
  *d=c (52555)
  (                    3563:       WBits_data = parse_wbits〈〉) (52556)
  (         H[t0+4]〈〉 = t0) (52556)
  a=r 0 (52556)
  a+= 4 (52558)
  d=a (52560)
  a=r 0 (52561)
  *d=a (52563)
  (saved bsp, return id:) (52564)
  (         H[t0+5]〈〉 = 225) (52564)
  d++ (52564)
  *d= 225 (52565)
  (push arguments:) (52567)
  (         t0 = t0 + 5) (52567)
  c= 5 (52567)
  a+=c (52569)
  r=a 0 (52570)
  (         goto parse_wbits) (52572)
  lj 35176 (52572)
  (        :return_id_225:) (52575)
  (         H[t252+30]〈WBits_data〉 = t1) (52575)
  a=r 252 (52575)
  a+= 30 (52577)
  d=a (52579)
  a=r 1 (52580)
  *d=a (52582)
  (         goto endif_2070) (52583)
  lj 62610 (52583)
  (        :else_2069:) (52586)
  (                    3564:     elif state == WBits:) (52586)
  (         t1 = H[t252+165]〈state〉 == H[t252+29]〈WBits〉) (52586)
  a=r 252 (52586)
  a+= 29 (52588)
  d=a (52590)
  c=*d (52591)
  a=r 252 (52592)
  a+= 165 (52594)
  d=a (52596)
  a=*d (52597)
  a==c (52598)
  a=0 (52599)
  jf 1 (52600)
  a++ (52602)
  r=a 1 (52603)
  (         ifN t1 goto else_2072) (52605)
  a== 0 (52605)
  jf 3 (52607)
  lj 52775 (52609)
  (                    3565:       header_wbits = WBits_data) (52612)
  (         H[t252+115]〈header_wbits〉 = H[t252+30]〈WBits_data〉) (52612)
  a=r 252 (52612)
  a+= 30 (52614)
  d=a (52616)
  c=*d (52617)
  a=r 252 (52618)
  a+= 115 (52620)
  d=a (52622)
  *d=c (52623)
  (                    3566:       header_window_size = 〈1 << WBits_data〉 - 16) (52624)
  (         t2 = 1 << H[t252+30]〈WBits_data〉) (52624)
  a=r 252 (52624)
  a+= 30 (52626)
  d=a (52628)
  c=*d (52629)
  a= 1 (52630)
  a<<=c (52632)
  r=a 2 (52633)
  (         t1 = t2 - 16) (52635)
  c= 16 (52635)
  a-=c (52637)
  r=a 1 (52638)
  (         H[t252+116]〈header_window_size〉 = t1) (52640)
  a=r 252 (52640)
  a+= 116 (52642)
  d=a (52644)
  a=r 1 (52645)
  *d=a (52647)
  (                    3567:       if output_window != NONE:) (52648)
  (         t1 = H[t252+117]〈output_window〉 != 4294967295) (52648)
  c=0 (52648)
  c-- (52649)
  d++ (52650)
  a=*d (52651)
  a==c (52652)
  a=0 (52653)
  jt 1 (52654)
  a++ (52656)
  r=a 1 (52657)
  (         ifN t1 goto else_2075) (52659)
  a== 0 (52659)
  jf 3 (52661)
  lj 52707 (52663)
  (                    3568:         free_pM〈output_window〉) (52666)
  (         t1 = H[t252+117]〈output_window〉 & 2147483647) (52666)
  a=0 (52666)
  a-- (52667)
  a>>= 1 (52668)
  c=a (52670)
  a=*d (52671)
  a&=c (52672)
  r=a 1 (52673)
  (         H[t0+4]〈〉 = t0) (52675)
  a=r 0 (52675)
  a+= 4 (52677)
  d=a (52679)
  a=r 0 (52680)
  *d=a (52682)
  (saved bsp, return id:) (52683)
  (         H[t0+5]〈〉 = 226) (52683)
  d++ (52683)
  *d= 226 (52684)
  (push arguments:) (52686)
  (         H[t0+6]〈〉 = t1) (52686)
  d++ (52686)
  a=r 1 (52687)
  *d=a (52689)
  (         t0 = t0 + 5) (52690)
  c= 5 (52690)
  a=r 0 (52692)
  a+=c (52694)
  r=a 0 (52695)
  (         goto addr_free_pM) (52697)
  lj 2406 (52697)
  (        :return_id_226:) (52700)
  (         t2 = t1) (52700)
  a=r 1 (52700)
  r=a 2 (52702)
  (         goto endif_2076) (52704)
  lj 52707 (52704)
  (        :else_2075:) (52707)
  (        :endif_2076:) (52707)
  (                    3569:       output_window = alloc_pM〈header_window_size〉  # @TODO: maybe init with 0) (52707)
  (         H[t0+4]〈〉 = t0) (52707)
  a=r 0 (52707)
  a+= 4 (52709)
  d=a (52711)
  a=r 0 (52712)
  *d=a (52714)
  (saved bsp, return id:) (52715)
  (         H[t0+5]〈〉 = 227) (52715)
  d++ (52715)
  *d= 227 (52716)
  (push arguments:) (52718)
  (         H[t0+6]〈〉 = H[t252+116]〈header_window_size〉) (52718)
  a=r 252 (52718)
  a+= 116 (52720)
  d=a (52722)
  c=*d (52723)
  a=r 0 (52724)
  a+= 6 (52726)
  d=a (52728)
  *d=c (52729)
  (         t0 = t0 + 5) (52730)
  c= 5 (52730)
  a=r 0 (52732)
  a+=c (52734)
  r=a 0 (52735)
  (         goto addr_alloc_pM) (52737)
  lj 323 (52737)
  (        :return_id_227:) (52740)
  (         t1 = t1 | 2147483648) (52740)
  a= 1 (52740)
  a<<= 31 (52742)
  c=a (52744)
  a=r 1 (52745)
  a|=c (52747)
  r=a 1 (52748)
  (         H[t252+117]〈output_window〉 = t1) (52750)
  a=r 252 (52750)
  a+= 117 (52752)
  d=a (52754)
  a=r 1 (52755)
  *d=a (52757)
  (                    3570:       output_window_pointer = 0) (52758)
  (         H[t252+118]〈output_window_pointer〉 = 0) (52758)
  d++ (52758)
  *d=0 (52759)
  (                    3571:       state = HeaderEnd) (52760)
  (         H[t252+165]〈state〉 = H[t252+31]〈HeaderEnd〉) (52760)
  a=r 252 (52760)
  a+= 31 (52762)
  d=a (52764)
  c=*d (52765)
  a=r 252 (52766)
  a+= 165 (52768)
  d=a (52770)
  *d=c (52771)
  (         goto endif_2073) (52772)
  lj 62610 (52772)
  (        :else_2072:) (52775)
  (                    3572:     elif state == HeaderEnd:) (52775)
  (         t1 = H[t252+165]〈state〉 == H[t252+31]〈HeaderEnd〉) (52775)
  a=r 252 (52775)
  a+= 31 (52777)
  d=a (52779)
  c=*d (52780)
  a=r 252 (52781)
  a+= 165 (52783)
  d=a (52785)
  a=*d (52786)
  a==c (52787)
  a=0 (52788)
  jf 1 (52789)
  a++ (52791)
  r=a 1 (52792)
  (         ifN t1 goto else_2078) (52794)
  a== 0 (52794)
  jf 3 (52796)
  lj 52816 (52798)
  (                    3573:       state = HeaderMetaBlockBegin) (52801)
  (         H[t252+165]〈state〉 = H[t252+32]〈HeaderMetaBlockBegin〉) (52801)
  a=r 252 (52801)
  a+= 32 (52803)
  d=a (52805)
  c=*d (52806)
  a=r 252 (52807)
  a+= 165 (52809)
  d=a (52811)
  *d=c (52812)
  (         goto endif_2079) (52813)
  lj 62610 (52813)
  (        :else_2078:) (52816)
  (                    3574:     elif state == HeaderMetaBlockBegin:) (52816)
  (         t1 = H[t252+165]〈state〉 == H[t252+32]〈HeaderMetaBlockBegin〉) (52816)
  a=r 252 (52816)
  a+= 32 (52818)
  d=a (52820)
  c=*d (52821)
  a=r 252 (52822)
  a+= 165 (52824)
  d=a (52826)
  a=*d (52827)
  a==c (52828)
  a=0 (52829)
  jf 1 (52830)
  a++ (52832)
  r=a 1 (52833)
  (         ifN t1 goto else_2081) (52835)
  a== 0 (52835)
  jf 3 (52837)
  lj 54726 (52839)
  (                    3575:       meta_block_header_is_last = NONE) (52842)
  (         H[t252+124]〈meta_block_header_is_last〉 = 4294967295) (52842)
  a=r 252 (52842)
  a+= 124 (52844)
  d=a (52846)
  *d=0 (52847)
  *d-- (52848)
  (                    3576:       meta_block_header_is_last_empty = NONE) (52849)
  (         H[t252+125]〈meta_block_header_is_last_empty〉 = 4294967295) (52849)
  d++ (52849)
  *d=0 (52850)
  *d-- (52851)
  (                    3577:       meta_block_header_m_nibbles = NONE) (52852)
  (         H[t252+126]〈meta_block_header_m_nibbles〉 = 4294967295) (52852)
  d++ (52852)
  *d=0 (52853)
  *d-- (52854)
  (                    3578:       meta_block_header_m_skip_bytes = NONE) (52855)
  (         H[t252+127]〈meta_block_header_m_skip_bytes〉 = 4294967295) (52855)
  d++ (52855)
  *d=0 (52856)
  *d-- (52857)
  (                    3579:       meta_block_header_m_skip_len = NONE) (52858)
  (         H[t252+128]〈meta_block_header_m_skip_len〉 = 4294967295) (52858)
  d++ (52858)
  *d=0 (52859)
  *d-- (52860)
  (                    3580:       meta_block_header_m_len = NONE) (52861)
  (         H[t252+129]〈meta_block_header_m_len〉 = 4294967295) (52861)
  d++ (52861)
  *d=0 (52862)
  *d-- (52863)
  (                    3581:       meta_block_header_is_uncompressed = NONE) (52864)
  (         H[t252+130]〈meta_block_header_is_uncompressed〉 = 4294967295) (52864)
  d++ (52864)
  *d=0 (52865)
  *d-- (52866)
  (                    3582:       meta_block_header_n_bltypes_l = NONE) (52867)
  (         H[t252+131]〈meta_block_header_n_bltypes_l〉 = 4294967295) (52867)
  d++ (52867)
  *d=0 (52868)
  *d-- (52869)
  (                    3583:       meta_block_header_n_bltypes_i = NONE) (52870)
  (         H[t252+132]〈meta_block_header_n_bltypes_i〉 = 4294967295) (52870)
  d++ (52870)
  *d=0 (52871)
  *d-- (52872)
  (                    3584:       meta_block_header_n_bltypes_d = NONE) (52873)
  (         H[t252+133]〈meta_block_header_n_bltypes_d〉 = 4294967295) (52873)
  d++ (52873)
  *d=0 (52874)
  *d-- (52875)
  (                    3585:       meta_block_header_n_postfix = NONE) (52876)
  (         H[t252+134]〈meta_block_header_n_postfix〉 = 4294967295) (52876)
  d++ (52876)
  *d=0 (52877)
  *d-- (52878)
  (                    3586:       meta_block_header_n_direct = NONE) (52879)
  (         H[t252+135]〈meta_block_header_n_direct〉 = 4294967295) (52879)
  d++ (52879)
  *d=0 (52880)
  *d-- (52881)
  (                    3587:       meta_block_header_n_trees_l = NONE) (52882)
  (         H[t252+136]〈meta_block_header_n_trees_l〉 = 4294967295) (52882)
  d++ (52882)
  *d=0 (52883)
  *d-- (52884)
  (                    3588:       meta_block_header_n_trees_d = NONE) (52885)
  (         H[t252+137]〈meta_block_header_n_trees_d〉 = 4294967295) (52885)
  d++ (52885)
  *d=0 (52886)
  *d-- (52887)
  (                    3589:       if meta_block_header_c_map_l != NONE:) (52888)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 != 4294967295) (52888)
  c=0 (52888)
  c-- (52889)
  d++ (52890)
  a=*d (52891)
  a==c (52892)
  a=0 (52893)
  jt 1 (52894)
  a++ (52896)
  r=a 1 (52897)
  (         ifN t1 goto else_2084) (52899)
  a== 0 (52899)
  jf 3 (52901)
  lj 52947 (52903)
  (                    3590:         free_pM〈meta_block_header_c_map_l〉) (52906)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 & 2147483647) (52906)
  a=0 (52906)
  a-- (52907)
  a>>= 1 (52908)
  c=a (52910)
  a=*d (52911)
  a&=c (52912)
  r=a 1 (52913)
  (         H[t0+4]〈〉 = t0) (52915)
  a=r 0 (52915)
  a+= 4 (52917)
  d=a (52919)
  a=r 0 (52920)
  *d=a (52922)
  (saved bsp, return id:) (52923)
  (         H[t0+5]〈〉 = 228) (52923)
  d++ (52923)
  *d= 228 (52924)
  (push arguments:) (52926)
  (         H[t0+6]〈〉 = t1) (52926)
  d++ (52926)
  a=r 1 (52927)
  *d=a (52929)
  (         t0 = t0 + 5) (52930)
  c= 5 (52930)
  a=r 0 (52932)
  a+=c (52934)
  r=a 0 (52935)
  (         goto addr_free_pM) (52937)
  lj 2406 (52937)
  (        :return_id_228:) (52940)
  (         t2 = t1) (52940)
  a=r 1 (52940)
  r=a 2 (52942)
  (         goto endif_2085) (52944)
  lj 52947 (52944)
  (        :else_2084:) (52947)
  (        :endif_2085:) (52947)
  (                    3591:       meta_block_header_c_map_l = NONE) (52947)
  (         H[t252+138]〈meta_block_header_c_map_l〉 = 4294967295) (52947)
  a=r 252 (52947)
  a+= 138 (52949)
  d=a (52951)
  *d=0 (52952)
  *d-- (52953)
  (                    3592:       if meta_block_header_c_map_d != NONE:) (52954)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 != 4294967295) (52954)
  c=0 (52954)
  c-- (52955)
  d++ (52956)
  a=*d (52957)
  a==c (52958)
  a=0 (52959)
  jt 1 (52960)
  a++ (52962)
  r=a 1 (52963)
  (         ifN t1 goto else_2087) (52965)
  a== 0 (52965)
  jf 3 (52967)
  lj 53013 (52969)
  (                    3593:         free_pM〈meta_block_header_c_map_d〉) (52972)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 & 2147483647) (52972)
  a=0 (52972)
  a-- (52973)
  a>>= 1 (52974)
  c=a (52976)
  a=*d (52977)
  a&=c (52978)
  r=a 1 (52979)
  (         H[t0+4]〈〉 = t0) (52981)
  a=r 0 (52981)
  a+= 4 (52983)
  d=a (52985)
  a=r 0 (52986)
  *d=a (52988)
  (saved bsp, return id:) (52989)
  (         H[t0+5]〈〉 = 229) (52989)
  d++ (52989)
  *d= 229 (52990)
  (push arguments:) (52992)
  (         H[t0+6]〈〉 = t1) (52992)
  d++ (52992)
  a=r 1 (52993)
  *d=a (52995)
  (         t0 = t0 + 5) (52996)
  c= 5 (52996)
  a=r 0 (52998)
  a+=c (53000)
  r=a 0 (53001)
  (         goto addr_free_pM) (53003)
  lj 2406 (53003)
  (        :return_id_229:) (53006)
  (         t2 = t1) (53006)
  a=r 1 (53006)
  r=a 2 (53008)
  (         goto endif_2088) (53010)
  lj 53013 (53010)
  (        :else_2087:) (53013)
  (        :endif_2088:) (53013)
  (                    3594:       meta_block_header_c_map_d = NONE) (53013)
  (         H[t252+139]〈meta_block_header_c_map_d〉 = 4294967295) (53013)
  a=r 252 (53013)
  a+= 139 (53015)
  d=a (53017)
  *d=0 (53018)
  *d-- (53019)
  (                    3595:       if meta_block_prefix_tree_block_types_literals != NONE:) (53020)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 != 4294967295) (53020)
  c=0 (53020)
  c-- (53021)
  d++ (53022)
  a=*d (53023)
  a==c (53024)
  a=0 (53025)
  jt 1 (53026)
  a++ (53028)
  r=a 1 (53029)
  (         ifN t1 goto else_2090) (53031)
  a== 0 (53031)
  jf 3 (53033)
  lj 53146 (53035)
  (                    3596:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_literals[0]〉〉) (53038)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 >> 31) (53038)
  c= 31 (53038)
  a=*d (53040)
  a>>=c (53041)
  r=a 1 (53042)
  (         if t1 goto isM_2092) (53044)
  a== 0 (53044)
  jt 3 (53046)
  lj 53063 (53048)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 + 0) (53051)
  c=0 (53051)
  a=*d (53052)
  a+=c (53053)
  r=a 1 (53054)
  (         t1 = H[t1]〈〉) (53056)
  d=a (53056)
  a=*d (53057)
  r=a 1 (53058)
  (         goto MorHdone_2093) (53060)
  lj 53081 (53060)
  (        :isM_2092:) (53063)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 & 2147483647) (53063)
  a=0 (53063)
  a-- (53064)
  a>>= 1 (53065)
  c=a (53067)
  a=r 252 (53068)
  a+= 140 (53070)
  d=a (53072)
  a=*d (53073)
  a&=c (53074)
  r=a 1 (53075)
  (         t1 = t1 + 0) (53077)
  (         t1 = M[t1]) (53077)
  b=a (53077)
  a=*b (53078)
  r=a 1 (53079)
  (        :MorHdone_2093:) (53081)
  (         H[t0+4]〈〉 = t0) (53081)
  a=r 0 (53081)
  a+= 4 (53083)
  d=a (53085)
  a=r 0 (53086)
  *d=a (53088)
  (saved bsp, return id:) (53089)
  (         H[t0+5]〈〉 = 230) (53089)
  d++ (53089)
  *d= 230 (53090)
  (push arguments:) (53092)
  (         H[t0+6]〈〉 = t1) (53092)
  d++ (53092)
  a=r 1 (53093)
  *d=a (53095)
  (         t0 = t0 + 5) (53096)
  c= 5 (53096)
  a=r 0 (53098)
  a+=c (53100)
  r=a 0 (53101)
  (         goto addr_free_pH) (53103)
  lj 2913 (53103)
  (        :return_id_230:) (53106)
  (         t2 = t1) (53106)
  a=r 1 (53106)
  r=a 2 (53108)
  (                    3597:         free_pH〈meta_block_prefix_tree_block_types_literals〉) (53110)
  (         H[t0+4]〈〉 = t0) (53110)
  a=r 0 (53110)
  a+= 4 (53112)
  d=a (53114)
  a=r 0 (53115)
  *d=a (53117)
  (saved bsp, return id:) (53118)
  (         H[t0+5]〈〉 = 231) (53118)
  d++ (53118)
  *d= 231 (53119)
  (push arguments:) (53121)
  (         H[t0+6]〈〉 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉) (53121)
  a=r 252 (53121)
  a+= 140 (53123)
  d=a (53125)
  c=*d (53126)
  a=r 0 (53127)
  a+= 6 (53129)
  d=a (53131)
  *d=c (53132)
  (         t0 = t0 + 5) (53133)
  c= 5 (53133)
  a=r 0 (53135)
  a+=c (53137)
  r=a 0 (53138)
  (         goto addr_free_pH) (53140)
  lj 2913 (53140)
  (        :return_id_231:) (53143)
  (         goto endif_2091) (53143)
  lj 53146 (53143)
  (        :else_2090:) (53146)
  (        :endif_2091:) (53146)
  (                    3598:       meta_block_prefix_tree_block_types_literals = NONE) (53146)
  (         H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 = 4294967295) (53146)
  a=r 252 (53146)
  a+= 140 (53148)
  d=a (53150)
  *d=0 (53151)
  *d-- (53152)
  (                    3599:       if meta_block_prefix_tree_block_counts_literals != NONE:) (53153)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 != 4294967295) (53153)
  c=0 (53153)
  c-- (53154)
  d++ (53155)
  a=*d (53156)
  a==c (53157)
  a=0 (53158)
  jt 1 (53159)
  a++ (53161)
  r=a 1 (53162)
  (         ifN t1 goto else_2095) (53164)
  a== 0 (53164)
  jf 3 (53166)
  lj 53279 (53168)
  (                    3600:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_literals[0]〉〉) (53171)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 >> 31) (53171)
  c= 31 (53171)
  a=*d (53173)
  a>>=c (53174)
  r=a 1 (53175)
  (         if t1 goto isM_2097) (53177)
  a== 0 (53177)
  jt 3 (53179)
  lj 53196 (53181)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 + 0) (53184)
  c=0 (53184)
  a=*d (53185)
  a+=c (53186)
  r=a 1 (53187)
  (         t1 = H[t1]〈〉) (53189)
  d=a (53189)
  a=*d (53190)
  r=a 1 (53191)
  (         goto MorHdone_2098) (53193)
  lj 53214 (53193)
  (        :isM_2097:) (53196)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 & 2147483647) (53196)
  a=0 (53196)
  a-- (53197)
  a>>= 1 (53198)
  c=a (53200)
  a=r 252 (53201)
  a+= 141 (53203)
  d=a (53205)
  a=*d (53206)
  a&=c (53207)
  r=a 1 (53208)
  (         t1 = t1 + 0) (53210)
  (         t1 = M[t1]) (53210)
  b=a (53210)
  a=*b (53211)
  r=a 1 (53212)
  (        :MorHdone_2098:) (53214)
  (         H[t0+4]〈〉 = t0) (53214)
  a=r 0 (53214)
  a+= 4 (53216)
  d=a (53218)
  a=r 0 (53219)
  *d=a (53221)
  (saved bsp, return id:) (53222)
  (         H[t0+5]〈〉 = 232) (53222)
  d++ (53222)
  *d= 232 (53223)
  (push arguments:) (53225)
  (         H[t0+6]〈〉 = t1) (53225)
  d++ (53225)
  a=r 1 (53226)
  *d=a (53228)
  (         t0 = t0 + 5) (53229)
  c= 5 (53229)
  a=r 0 (53231)
  a+=c (53233)
  r=a 0 (53234)
  (         goto addr_free_pH) (53236)
  lj 2913 (53236)
  (        :return_id_232:) (53239)
  (         t2 = t1) (53239)
  a=r 1 (53239)
  r=a 2 (53241)
  (                    3601:         free_pH〈meta_block_prefix_tree_block_counts_literals〉) (53243)
  (         H[t0+4]〈〉 = t0) (53243)
  a=r 0 (53243)
  a+= 4 (53245)
  d=a (53247)
  a=r 0 (53248)
  *d=a (53250)
  (saved bsp, return id:) (53251)
  (         H[t0+5]〈〉 = 233) (53251)
  d++ (53251)
  *d= 233 (53252)
  (push arguments:) (53254)
  (         H[t0+6]〈〉 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉) (53254)
  a=r 252 (53254)
  a+= 141 (53256)
  d=a (53258)
  c=*d (53259)
  a=r 0 (53260)
  a+= 6 (53262)
  d=a (53264)
  *d=c (53265)
  (         t0 = t0 + 5) (53266)
  c= 5 (53266)
  a=r 0 (53268)
  a+=c (53270)
  r=a 0 (53271)
  (         goto addr_free_pH) (53273)
  lj 2913 (53273)
  (        :return_id_233:) (53276)
  (         goto endif_2096) (53276)
  lj 53279 (53276)
  (        :else_2095:) (53279)
  (        :endif_2096:) (53279)
  (                    3602:       meta_block_prefix_tree_block_counts_literals = NONE) (53279)
  (         H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 = 4294967295) (53279)
  a=r 252 (53279)
  a+= 141 (53281)
  d=a (53283)
  *d=0 (53284)
  *d-- (53285)
  (                    3603:       if meta_block_prefix_trees_literals != NONE:) (53286)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 != 4294967295) (53286)
  c=0 (53286)
  c-- (53287)
  d++ (53288)
  a=*d (53289)
  a==c (53290)
  a=0 (53291)
  jt 1 (53292)
  a++ (53294)
  r=a 1 (53295)
  (         ifN t1 goto else_2100) (53297)
  a== 0 (53297)
  jf 3 (53299)
  lj 53536 (53301)
  (                    3604:         i = 0) (53304)
  (         H[t0+2]〈i〉 = 0) (53304)
  a=r 0 (53304)
  a+= 2 (53306)
  d=a (53308)
  *d=0 (53309)
  (                    3605:         while i < len_pH〈meta_block_prefix_trees_literals〉:) (53310)
  (        :while_2102:) (53310)
  (         t2 = H[t252+142]〈meta_block_prefix_trees_literals〉) (53310)
  a=r 252 (53310)
  a+= 142 (53312)
  d=a (53314)
  a=*d (53315)
  r=a 2 (53316)
  (         t2 = t2 - 2) (53318)
  c= 2 (53318)
  a-=c (53320)
  r=a 2 (53321)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (53323)
  d=a (53323)
  c=*d (53324)
  a=r 0 (53325)
  a+= 2 (53327)
  d=a (53329)
  a=*d (53330)
  a<c (53331)
  a=0 (53332)
  jf 1 (53333)
  a++ (53335)
  r=a 1 (53336)
  (         ifN t1 goto whileend_2104) (53338)
  a== 0 (53338)
  jf 3 (53340)
  lj 53500 (53342)
  (                    3606:           innertree = array_pH〈meta_block_prefix_trees_literals[i]〉) (53345)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 >> 31) (53345)
  c= 31 (53345)
  a=r 252 (53347)
  a+= 142 (53349)
  d=a (53351)
  a=*d (53352)
  a>>=c (53353)
  r=a 1 (53354)
  (         if t1 goto isM_2106) (53356)
  a== 0 (53356)
  jt 3 (53358)
  lj 53385 (53360)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 + H[t0+2]〈i〉) (53363)
  a=r 0 (53363)
  a+= 2 (53365)
  d=a (53367)
  c=*d (53368)
  a=r 252 (53369)
  a+= 142 (53371)
  d=a (53373)
  a=*d (53374)
  a+=c (53375)
  r=a 1 (53376)
  (         t1 = H[t1]〈〉) (53378)
  d=a (53378)
  a=*d (53379)
  r=a 1 (53380)
  (         goto MorHdone_2107) (53382)
  lj 53414 (53382)
  (        :isM_2106:) (53385)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 & 2147483647) (53385)
  a=0 (53385)
  a-- (53386)
  a>>= 1 (53387)
  c=a (53389)
  a=r 252 (53390)
  a+= 142 (53392)
  d=a (53394)
  a=*d (53395)
  a&=c (53396)
  r=a 1 (53397)
  (         t1 = t1 + H[t0+2]〈i〉) (53399)
  a=r 0 (53399)
  a+= 2 (53401)
  d=a (53403)
  c=*d (53404)
  a=r 1 (53405)
  a+=c (53407)
  r=a 1 (53408)
  (         t1 = M[t1]) (53410)
  b=a (53410)
  a=*b (53411)
  r=a 1 (53412)
  (        :MorHdone_2107:) (53414)
  (         H[t0+4]〈innertree〉 = t1) (53414)
  a=r 0 (53414)
  a+= 4 (53416)
  d=a (53418)
  a=r 1 (53419)
  *d=a (53421)
  (                    3607:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (53422)
  (         t1 = H[t0+4]〈innertree〉 + 0) (53422)
  c=0 (53422)
  a=*d (53423)
  a+=c (53424)
  r=a 1 (53425)
  (         t1 = H[t1]〈〉) (53427)
  d=a (53427)
  a=*d (53428)
  r=a 1 (53429)
  (         H[t0+5]〈〉 = t0) (53431)
  a=r 0 (53431)
  a+= 5 (53433)
  d=a (53435)
  a=r 0 (53436)
  *d=a (53438)
  (saved bsp, return id:) (53439)
  (         H[t0+6]〈〉 = 234) (53439)
  d++ (53439)
  *d= 234 (53440)
  (push arguments:) (53442)
  (         H[t0+7]〈〉 = t1) (53442)
  d++ (53442)
  a=r 1 (53443)
  *d=a (53445)
  (         t0 = t0 + 6) (53446)
  c= 6 (53446)
  a=r 0 (53448)
  a+=c (53450)
  r=a 0 (53451)
  (         goto addr_free_pH) (53453)
  lj 2913 (53453)
  (        :return_id_234:) (53456)
  (         t2 = t1) (53456)
  a=r 1 (53456)
  r=a 2 (53458)
  (                    3608:           free_pH〈innertree〉) (53460)
  (         H[t0+5]〈〉 = t0) (53460)
  a=r 0 (53460)
  a+= 5 (53462)
  d=a (53464)
  a=r 0 (53465)
  *d=a (53467)
  (saved bsp, return id:) (53468)
  (         H[t0+6]〈〉 = 235) (53468)
  d++ (53468)
  *d= 235 (53469)
  (push arguments:) (53471)
  (         H[t0+7]〈〉 = H[t0+4]〈innertree〉) (53471)
  a+= 4 (53471)
  d=a (53473)
  c=*d (53474)
  a=r 0 (53475)
  a+= 7 (53477)
  d=a (53479)
  *d=c (53480)
  (         t0 = t0 + 6) (53481)
  c= 6 (53481)
  a=r 0 (53483)
  a+=c (53485)
  r=a 0 (53486)
  (         goto addr_free_pH) (53488)
  lj 2913 (53488)
  (        :return_id_235:) (53491)
  (                    3609:           i += 1) (53491)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (53491)
  a=r 0 (53491)
  a+= 2 (53493)
  d=a (53495)
  *d++ (53496)
  (         goto while_2102) (53497)
  lj 53310 (53497)
  (        :whileend_2104:) (53500)
  (                    3610:         free_pH〈meta_block_prefix_trees_literals〉) (53500)
  (         H[t0+5]〈〉 = t0) (53500)
  a=r 0 (53500)
  a+= 5 (53502)
  d=a (53504)
  a=r 0 (53505)
  *d=a (53507)
  (saved bsp, return id:) (53508)
  (         H[t0+6]〈〉 = 236) (53508)
  d++ (53508)
  *d= 236 (53509)
  (push arguments:) (53511)
  (         H[t0+7]〈〉 = H[t252+142]〈meta_block_prefix_trees_literals〉) (53511)
  a=r 252 (53511)
  a+= 142 (53513)
  d=a (53515)
  c=*d (53516)
  a=r 0 (53517)
  a+= 7 (53519)
  d=a (53521)
  *d=c (53522)
  (         t0 = t0 + 6) (53523)
  c= 6 (53523)
  a=r 0 (53525)
  a+=c (53527)
  r=a 0 (53528)
  (         goto addr_free_pH) (53530)
  lj 2913 (53530)
  (        :return_id_236:) (53533)
  (         goto endif_2101) (53533)
  lj 53536 (53533)
  (        :else_2100:) (53536)
  (        :endif_2101:) (53536)
  (                    3611:       meta_block_prefix_trees_literals = NONE) (53536)
  (         H[t252+142]〈meta_block_prefix_trees_literals〉 = 4294967295) (53536)
  a=r 252 (53536)
  a+= 142 (53538)
  d=a (53540)
  *d=0 (53541)
  *d-- (53542)
  (                    3612:       meta_block_count_output = 0) (53543)
  (         H[t252+143]〈meta_block_count_output〉 = 0) (53543)
  d++ (53543)
  *d=0 (53544)
  (                    3613:       meta_block_btype_l = 0) (53545)
  (         H[t252+144]〈meta_block_btype_l〉 = 0) (53545)
  d++ (53545)
  *d=0 (53546)
  (                    3614:       meta_block_btype_l_prev = 1) (53547)
  (         H[t252+145]〈meta_block_btype_l_prev〉 = 1) (53547)
  d++ (53547)
  *d= 1 (53548)
  (                    3615:       meta_block_blen_l = NONE) (53550)
  (         H[t252+146]〈meta_block_blen_l〉 = 4294967295) (53550)
  d++ (53550)
  *d=0 (53551)
  *d-- (53552)
  (                    3616:       meta_block_blen_i = NONE) (53553)
  (         H[t252+147]〈meta_block_blen_i〉 = 4294967295) (53553)
  d++ (53553)
  *d=0 (53554)
  *d-- (53555)
  (                    3617:       meta_block_blen_d = NONE) (53556)
  (         H[t252+148]〈meta_block_blen_d〉 = 4294967295) (53556)
  d++ (53556)
  *d=0 (53557)
  *d-- (53558)
  (                    3618:       meta_block_btype_i = 0) (53559)
  (         H[t252+149]〈meta_block_btype_i〉 = 0) (53559)
  d++ (53559)
  *d=0 (53560)
  (                    3619:       meta_block_btype_i_prev = 1) (53561)
  (         H[t252+150]〈meta_block_btype_i_prev〉 = 1) (53561)
  d++ (53561)
  *d= 1 (53562)
  (                    3620:       meta_block_btype_d = 0) (53564)
  (         H[t252+151]〈meta_block_btype_d〉 = 0) (53564)
  d++ (53564)
  *d=0 (53565)
  (                    3621:       meta_block_btype_d_prev = 1) (53566)
  (         H[t252+152]〈meta_block_btype_d_prev〉 = 1) (53566)
  d++ (53566)
  *d= 1 (53567)
  (                    3622:       if meta_block_prefix_tree_block_types_insert_and_copy_lengths != NONE:) (53569)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 != 4294967295) (53569)
  c=0 (53569)
  c-- (53570)
  d++ (53571)
  a=*d (53572)
  a==c (53573)
  a=0 (53574)
  jt 1 (53575)
  a++ (53577)
  r=a 1 (53578)
  (         ifN t1 goto else_2109) (53580)
  a== 0 (53580)
  jf 3 (53582)
  lj 53695 (53584)
  (                    3623:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_insert_and_copy_lengths[0]〉〉) (53587)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 >> 31) (53587)
  c= 31 (53587)
  a=*d (53589)
  a>>=c (53590)
  r=a 1 (53591)
  (         if t1 goto isM_2111) (53593)
  a== 0 (53593)
  jt 3 (53595)
  lj 53612 (53597)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 + 0) (53600)
  c=0 (53600)
  a=*d (53601)
  a+=c (53602)
  r=a 1 (53603)
  (         t1 = H[t1]〈〉) (53605)
  d=a (53605)
  a=*d (53606)
  r=a 1 (53607)
  (         goto MorHdone_2112) (53609)
  lj 53630 (53609)
  (        :isM_2111:) (53612)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 & 2147483647) (53612)
  a=0 (53612)
  a-- (53613)
  a>>= 1 (53614)
  c=a (53616)
  a=r 252 (53617)
  a+= 153 (53619)
  d=a (53621)
  a=*d (53622)
  a&=c (53623)
  r=a 1 (53624)
  (         t1 = t1 + 0) (53626)
  (         t1 = M[t1]) (53626)
  b=a (53626)
  a=*b (53627)
  r=a 1 (53628)
  (        :MorHdone_2112:) (53630)
  (         H[t0+5]〈〉 = t0) (53630)
  a=r 0 (53630)
  a+= 5 (53632)
  d=a (53634)
  a=r 0 (53635)
  *d=a (53637)
  (saved bsp, return id:) (53638)
  (         H[t0+6]〈〉 = 237) (53638)
  d++ (53638)
  *d= 237 (53639)
  (push arguments:) (53641)
  (         H[t0+7]〈〉 = t1) (53641)
  d++ (53641)
  a=r 1 (53642)
  *d=a (53644)
  (         t0 = t0 + 6) (53645)
  c= 6 (53645)
  a=r 0 (53647)
  a+=c (53649)
  r=a 0 (53650)
  (         goto addr_free_pH) (53652)
  lj 2913 (53652)
  (        :return_id_237:) (53655)
  (         t2 = t1) (53655)
  a=r 1 (53655)
  r=a 2 (53657)
  (                    3624:         free_pH〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉) (53659)
  (         H[t0+5]〈〉 = t0) (53659)
  a=r 0 (53659)
  a+= 5 (53661)
  d=a (53663)
  a=r 0 (53664)
  *d=a (53666)
  (saved bsp, return id:) (53667)
  (         H[t0+6]〈〉 = 238) (53667)
  d++ (53667)
  *d= 238 (53668)
  (push arguments:) (53670)
  (         H[t0+7]〈〉 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉) (53670)
  a=r 252 (53670)
  a+= 153 (53672)
  d=a (53674)
  c=*d (53675)
  a=r 0 (53676)
  a+= 7 (53678)
  d=a (53680)
  *d=c (53681)
  (         t0 = t0 + 6) (53682)
  c= 6 (53682)
  a=r 0 (53684)
  a+=c (53686)
  r=a 0 (53687)
  (         goto addr_free_pH) (53689)
  lj 2913 (53689)
  (        :return_id_238:) (53692)
  (         goto endif_2110) (53692)
  lj 53695 (53692)
  (        :else_2109:) (53695)
  (        :endif_2110:) (53695)
  (                    3625:       meta_block_prefix_tree_block_types_insert_and_copy_lengths = NONE) (53695)
  (         H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 = 4294967295) (53695)
  a=r 252 (53695)
  a+= 153 (53697)
  d=a (53699)
  *d=0 (53700)
  *d-- (53701)
  (                    3626:       if meta_block_prefix_tree_block_counts_insert_and_copy_lengths != NONE:) (53702)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 != 4294967295) (53702)
  c=0 (53702)
  c-- (53703)
  d++ (53704)
  a=*d (53705)
  a==c (53706)
  a=0 (53707)
  jt 1 (53708)
  a++ (53710)
  r=a 1 (53711)
  (         ifN t1 goto else_2114) (53713)
  a== 0 (53713)
  jf 3 (53715)
  lj 53828 (53717)
  (                    3627:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths[0]〉〉) (53720)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 >> 31) (53720)
  c= 31 (53720)
  a=*d (53722)
  a>>=c (53723)
  r=a 1 (53724)
  (         if t1 goto isM_2116) (53726)
  a== 0 (53726)
  jt 3 (53728)
  lj 53745 (53730)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 + 0) (53733)
  c=0 (53733)
  a=*d (53734)
  a+=c (53735)
  r=a 1 (53736)
  (         t1 = H[t1]〈〉) (53738)
  d=a (53738)
  a=*d (53739)
  r=a 1 (53740)
  (         goto MorHdone_2117) (53742)
  lj 53763 (53742)
  (        :isM_2116:) (53745)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 & 2147483647) (53745)
  a=0 (53745)
  a-- (53746)
  a>>= 1 (53747)
  c=a (53749)
  a=r 252 (53750)
  a+= 154 (53752)
  d=a (53754)
  a=*d (53755)
  a&=c (53756)
  r=a 1 (53757)
  (         t1 = t1 + 0) (53759)
  (         t1 = M[t1]) (53759)
  b=a (53759)
  a=*b (53760)
  r=a 1 (53761)
  (        :MorHdone_2117:) (53763)
  (         H[t0+5]〈〉 = t0) (53763)
  a=r 0 (53763)
  a+= 5 (53765)
  d=a (53767)
  a=r 0 (53768)
  *d=a (53770)
  (saved bsp, return id:) (53771)
  (         H[t0+6]〈〉 = 239) (53771)
  d++ (53771)
  *d= 239 (53772)
  (push arguments:) (53774)
  (         H[t0+7]〈〉 = t1) (53774)
  d++ (53774)
  a=r 1 (53775)
  *d=a (53777)
  (         t0 = t0 + 6) (53778)
  c= 6 (53778)
  a=r 0 (53780)
  a+=c (53782)
  r=a 0 (53783)
  (         goto addr_free_pH) (53785)
  lj 2913 (53785)
  (        :return_id_239:) (53788)
  (         t2 = t1) (53788)
  a=r 1 (53788)
  r=a 2 (53790)
  (                    3628:         free_pH〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (53792)
  (         H[t0+5]〈〉 = t0) (53792)
  a=r 0 (53792)
  a+= 5 (53794)
  d=a (53796)
  a=r 0 (53797)
  *d=a (53799)
  (saved bsp, return id:) (53800)
  (         H[t0+6]〈〉 = 240) (53800)
  d++ (53800)
  *d= 240 (53801)
  (push arguments:) (53803)
  (         H[t0+7]〈〉 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (53803)
  a=r 252 (53803)
  a+= 154 (53805)
  d=a (53807)
  c=*d (53808)
  a=r 0 (53809)
  a+= 7 (53811)
  d=a (53813)
  *d=c (53814)
  (         t0 = t0 + 6) (53815)
  c= 6 (53815)
  a=r 0 (53817)
  a+=c (53819)
  r=a 0 (53820)
  (         goto addr_free_pH) (53822)
  lj 2913 (53822)
  (        :return_id_240:) (53825)
  (         goto endif_2115) (53825)
  lj 53828 (53825)
  (        :else_2114:) (53828)
  (        :endif_2115:) (53828)
  (                    3629:       meta_block_prefix_tree_block_counts_insert_and_copy_lengths = NONE) (53828)
  (         H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 = 4294967295) (53828)
  a=r 252 (53828)
  a+= 154 (53830)
  d=a (53832)
  *d=0 (53833)
  *d-- (53834)
  (                    3630:       if meta_block_prefix_tree_block_types_distances != NONE:) (53835)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 != 4294967295) (53835)
  c=0 (53835)
  c-- (53836)
  d++ (53837)
  a=*d (53838)
  a==c (53839)
  a=0 (53840)
  jt 1 (53841)
  a++ (53843)
  r=a 1 (53844)
  (         ifN t1 goto else_2119) (53846)
  a== 0 (53846)
  jf 3 (53848)
  lj 53961 (53850)
  (                    3631:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_distances[0]〉〉) (53853)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 >> 31) (53853)
  c= 31 (53853)
  a=*d (53855)
  a>>=c (53856)
  r=a 1 (53857)
  (         if t1 goto isM_2121) (53859)
  a== 0 (53859)
  jt 3 (53861)
  lj 53878 (53863)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 + 0) (53866)
  c=0 (53866)
  a=*d (53867)
  a+=c (53868)
  r=a 1 (53869)
  (         t1 = H[t1]〈〉) (53871)
  d=a (53871)
  a=*d (53872)
  r=a 1 (53873)
  (         goto MorHdone_2122) (53875)
  lj 53896 (53875)
  (        :isM_2121:) (53878)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 & 2147483647) (53878)
  a=0 (53878)
  a-- (53879)
  a>>= 1 (53880)
  c=a (53882)
  a=r 252 (53883)
  a+= 155 (53885)
  d=a (53887)
  a=*d (53888)
  a&=c (53889)
  r=a 1 (53890)
  (         t1 = t1 + 0) (53892)
  (         t1 = M[t1]) (53892)
  b=a (53892)
  a=*b (53893)
  r=a 1 (53894)
  (        :MorHdone_2122:) (53896)
  (         H[t0+5]〈〉 = t0) (53896)
  a=r 0 (53896)
  a+= 5 (53898)
  d=a (53900)
  a=r 0 (53901)
  *d=a (53903)
  (saved bsp, return id:) (53904)
  (         H[t0+6]〈〉 = 241) (53904)
  d++ (53904)
  *d= 241 (53905)
  (push arguments:) (53907)
  (         H[t0+7]〈〉 = t1) (53907)
  d++ (53907)
  a=r 1 (53908)
  *d=a (53910)
  (         t0 = t0 + 6) (53911)
  c= 6 (53911)
  a=r 0 (53913)
  a+=c (53915)
  r=a 0 (53916)
  (         goto addr_free_pH) (53918)
  lj 2913 (53918)
  (        :return_id_241:) (53921)
  (         t2 = t1) (53921)
  a=r 1 (53921)
  r=a 2 (53923)
  (                    3632:         free_pH〈meta_block_prefix_tree_block_types_distances〉) (53925)
  (         H[t0+5]〈〉 = t0) (53925)
  a=r 0 (53925)
  a+= 5 (53927)
  d=a (53929)
  a=r 0 (53930)
  *d=a (53932)
  (saved bsp, return id:) (53933)
  (         H[t0+6]〈〉 = 242) (53933)
  d++ (53933)
  *d= 242 (53934)
  (push arguments:) (53936)
  (         H[t0+7]〈〉 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉) (53936)
  a=r 252 (53936)
  a+= 155 (53938)
  d=a (53940)
  c=*d (53941)
  a=r 0 (53942)
  a+= 7 (53944)
  d=a (53946)
  *d=c (53947)
  (         t0 = t0 + 6) (53948)
  c= 6 (53948)
  a=r 0 (53950)
  a+=c (53952)
  r=a 0 (53953)
  (         goto addr_free_pH) (53955)
  lj 2913 (53955)
  (        :return_id_242:) (53958)
  (         goto endif_2120) (53958)
  lj 53961 (53958)
  (        :else_2119:) (53961)
  (        :endif_2120:) (53961)
  (                    3633:       meta_block_prefix_tree_block_types_distances = NONE) (53961)
  (         H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 = 4294967295) (53961)
  a=r 252 (53961)
  a+= 155 (53963)
  d=a (53965)
  *d=0 (53966)
  *d-- (53967)
  (                    3634:       if meta_block_prefix_tree_block_counts_distances != NONE:) (53968)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 != 4294967295) (53968)
  c=0 (53968)
  c-- (53969)
  d++ (53970)
  a=*d (53971)
  a==c (53972)
  a=0 (53973)
  jt 1 (53974)
  a++ (53976)
  r=a 1 (53977)
  (         ifN t1 goto else_2124) (53979)
  a== 0 (53979)
  jf 3 (53981)
  lj 54094 (53983)
  (                    3635:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_distances[0]〉〉) (53986)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 >> 31) (53986)
  c= 31 (53986)
  a=*d (53988)
  a>>=c (53989)
  r=a 1 (53990)
  (         if t1 goto isM_2126) (53992)
  a== 0 (53992)
  jt 3 (53994)
  lj 54011 (53996)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 + 0) (53999)
  c=0 (53999)
  a=*d (54000)
  a+=c (54001)
  r=a 1 (54002)
  (         t1 = H[t1]〈〉) (54004)
  d=a (54004)
  a=*d (54005)
  r=a 1 (54006)
  (         goto MorHdone_2127) (54008)
  lj 54029 (54008)
  (        :isM_2126:) (54011)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 & 2147483647) (54011)
  a=0 (54011)
  a-- (54012)
  a>>= 1 (54013)
  c=a (54015)
  a=r 252 (54016)
  a+= 156 (54018)
  d=a (54020)
  a=*d (54021)
  a&=c (54022)
  r=a 1 (54023)
  (         t1 = t1 + 0) (54025)
  (         t1 = M[t1]) (54025)
  b=a (54025)
  a=*b (54026)
  r=a 1 (54027)
  (        :MorHdone_2127:) (54029)
  (         H[t0+5]〈〉 = t0) (54029)
  a=r 0 (54029)
  a+= 5 (54031)
  d=a (54033)
  a=r 0 (54034)
  *d=a (54036)
  (saved bsp, return id:) (54037)
  (         H[t0+6]〈〉 = 243) (54037)
  d++ (54037)
  *d= 243 (54038)
  (push arguments:) (54040)
  (         H[t0+7]〈〉 = t1) (54040)
  d++ (54040)
  a=r 1 (54041)
  *d=a (54043)
  (         t0 = t0 + 6) (54044)
  c= 6 (54044)
  a=r 0 (54046)
  a+=c (54048)
  r=a 0 (54049)
  (         goto addr_free_pH) (54051)
  lj 2913 (54051)
  (        :return_id_243:) (54054)
  (         t2 = t1) (54054)
  a=r 1 (54054)
  r=a 2 (54056)
  (                    3636:         free_pH〈meta_block_prefix_tree_block_counts_distances〉) (54058)
  (         H[t0+5]〈〉 = t0) (54058)
  a=r 0 (54058)
  a+= 5 (54060)
  d=a (54062)
  a=r 0 (54063)
  *d=a (54065)
  (saved bsp, return id:) (54066)
  (         H[t0+6]〈〉 = 244) (54066)
  d++ (54066)
  *d= 244 (54067)
  (push arguments:) (54069)
  (         H[t0+7]〈〉 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉) (54069)
  a=r 252 (54069)
  a+= 156 (54071)
  d=a (54073)
  c=*d (54074)
  a=r 0 (54075)
  a+= 7 (54077)
  d=a (54079)
  *d=c (54080)
  (         t0 = t0 + 6) (54081)
  c= 6 (54081)
  a=r 0 (54083)
  a+=c (54085)
  r=a 0 (54086)
  (         goto addr_free_pH) (54088)
  lj 2913 (54088)
  (        :return_id_244:) (54091)
  (         goto endif_2125) (54091)
  lj 54094 (54091)
  (        :else_2124:) (54094)
  (        :endif_2125:) (54094)
  (                    3637:       meta_block_prefix_tree_block_counts_distances = NONE) (54094)
  (         H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 = 4294967295) (54094)
  a=r 252 (54094)
  a+= 156 (54096)
  d=a (54098)
  *d=0 (54099)
  *d-- (54100)
  (                    3638:       if meta_block_prefix_trees_insert_and_copy_lengths != NONE:) (54101)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 != 4294967295) (54101)
  c=0 (54101)
  c-- (54102)
  d++ (54103)
  a=*d (54104)
  a==c (54105)
  a=0 (54106)
  jt 1 (54107)
  a++ (54109)
  r=a 1 (54110)
  (         ifN t1 goto else_2129) (54112)
  a== 0 (54112)
  jf 3 (54114)
  lj 54351 (54116)
  (                    3639:         i = 0) (54119)
  (         H[t0+2]〈i〉 = 0) (54119)
  a=r 0 (54119)
  a+= 2 (54121)
  d=a (54123)
  *d=0 (54124)
  (                    3640:         while i < len_pH〈meta_block_prefix_trees_insert_and_copy_lengths〉:) (54125)
  (        :while_2131:) (54125)
  (         t2 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉) (54125)
  a=r 252 (54125)
  a+= 157 (54127)
  d=a (54129)
  a=*d (54130)
  r=a 2 (54131)
  (         t2 = t2 - 2) (54133)
  c= 2 (54133)
  a-=c (54135)
  r=a 2 (54136)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (54138)
  d=a (54138)
  c=*d (54139)
  a=r 0 (54140)
  a+= 2 (54142)
  d=a (54144)
  a=*d (54145)
  a<c (54146)
  a=0 (54147)
  jf 1 (54148)
  a++ (54150)
  r=a 1 (54151)
  (         ifN t1 goto whileend_2133) (54153)
  a== 0 (54153)
  jf 3 (54155)
  lj 54315 (54157)
  (                    3641:           innertree = array_pH〈meta_block_prefix_trees_insert_and_copy_lengths[i]〉) (54160)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 >> 31) (54160)
  c= 31 (54160)
  a=r 252 (54162)
  a+= 157 (54164)
  d=a (54166)
  a=*d (54167)
  a>>=c (54168)
  r=a 1 (54169)
  (         if t1 goto isM_2135) (54171)
  a== 0 (54171)
  jt 3 (54173)
  lj 54200 (54175)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 + H[t0+2]〈i〉) (54178)
  a=r 0 (54178)
  a+= 2 (54180)
  d=a (54182)
  c=*d (54183)
  a=r 252 (54184)
  a+= 157 (54186)
  d=a (54188)
  a=*d (54189)
  a+=c (54190)
  r=a 1 (54191)
  (         t1 = H[t1]〈〉) (54193)
  d=a (54193)
  a=*d (54194)
  r=a 1 (54195)
  (         goto MorHdone_2136) (54197)
  lj 54229 (54197)
  (        :isM_2135:) (54200)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 & 2147483647) (54200)
  a=0 (54200)
  a-- (54201)
  a>>= 1 (54202)
  c=a (54204)
  a=r 252 (54205)
  a+= 157 (54207)
  d=a (54209)
  a=*d (54210)
  a&=c (54211)
  r=a 1 (54212)
  (         t1 = t1 + H[t0+2]〈i〉) (54214)
  a=r 0 (54214)
  a+= 2 (54216)
  d=a (54218)
  c=*d (54219)
  a=r 1 (54220)
  a+=c (54222)
  r=a 1 (54223)
  (         t1 = M[t1]) (54225)
  b=a (54225)
  a=*b (54226)
  r=a 1 (54227)
  (        :MorHdone_2136:) (54229)
  (         H[t0+4]〈innertree〉 = t1) (54229)
  a=r 0 (54229)
  a+= 4 (54231)
  d=a (54233)
  a=r 1 (54234)
  *d=a (54236)
  (                    3642:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (54237)
  (         t1 = H[t0+4]〈innertree〉 + 0) (54237)
  c=0 (54237)
  a=*d (54238)
  a+=c (54239)
  r=a 1 (54240)
  (         t1 = H[t1]〈〉) (54242)
  d=a (54242)
  a=*d (54243)
  r=a 1 (54244)
  (         H[t0+5]〈〉 = t0) (54246)
  a=r 0 (54246)
  a+= 5 (54248)
  d=a (54250)
  a=r 0 (54251)
  *d=a (54253)
  (saved bsp, return id:) (54254)
  (         H[t0+6]〈〉 = 245) (54254)
  d++ (54254)
  *d= 245 (54255)
  (push arguments:) (54257)
  (         H[t0+7]〈〉 = t1) (54257)
  d++ (54257)
  a=r 1 (54258)
  *d=a (54260)
  (         t0 = t0 + 6) (54261)
  c= 6 (54261)
  a=r 0 (54263)
  a+=c (54265)
  r=a 0 (54266)
  (         goto addr_free_pH) (54268)
  lj 2913 (54268)
  (        :return_id_245:) (54271)
  (         t2 = t1) (54271)
  a=r 1 (54271)
  r=a 2 (54273)
  (                    3643:           free_pH〈innertree〉) (54275)
  (         H[t0+5]〈〉 = t0) (54275)
  a=r 0 (54275)
  a+= 5 (54277)
  d=a (54279)
  a=r 0 (54280)
  *d=a (54282)
  (saved bsp, return id:) (54283)
  (         H[t0+6]〈〉 = 246) (54283)
  d++ (54283)
  *d= 246 (54284)
  (push arguments:) (54286)
  (         H[t0+7]〈〉 = H[t0+4]〈innertree〉) (54286)
  a+= 4 (54286)
  d=a (54288)
  c=*d (54289)
  a=r 0 (54290)
  a+= 7 (54292)
  d=a (54294)
  *d=c (54295)
  (         t0 = t0 + 6) (54296)
  c= 6 (54296)
  a=r 0 (54298)
  a+=c (54300)
  r=a 0 (54301)
  (         goto addr_free_pH) (54303)
  lj 2913 (54303)
  (        :return_id_246:) (54306)
  (                    3644:           i += 1) (54306)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (54306)
  a=r 0 (54306)
  a+= 2 (54308)
  d=a (54310)
  *d++ (54311)
  (         goto while_2131) (54312)
  lj 54125 (54312)
  (        :whileend_2133:) (54315)
  (                    3645:         free_pH〈meta_block_prefix_trees_insert_and_copy_lengths〉) (54315)
  (         H[t0+5]〈〉 = t0) (54315)
  a=r 0 (54315)
  a+= 5 (54317)
  d=a (54319)
  a=r 0 (54320)
  *d=a (54322)
  (saved bsp, return id:) (54323)
  (         H[t0+6]〈〉 = 247) (54323)
  d++ (54323)
  *d= 247 (54324)
  (push arguments:) (54326)
  (         H[t0+7]〈〉 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉) (54326)
  a=r 252 (54326)
  a+= 157 (54328)
  d=a (54330)
  c=*d (54331)
  a=r 0 (54332)
  a+= 7 (54334)
  d=a (54336)
  *d=c (54337)
  (         t0 = t0 + 6) (54338)
  c= 6 (54338)
  a=r 0 (54340)
  a+=c (54342)
  r=a 0 (54343)
  (         goto addr_free_pH) (54345)
  lj 2913 (54345)
  (        :return_id_247:) (54348)
  (         goto endif_2130) (54348)
  lj 54351 (54348)
  (        :else_2129:) (54351)
  (        :endif_2130:) (54351)
  (                    3646:       meta_block_prefix_trees_insert_and_copy_lengths = NONE) (54351)
  (         H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 = 4294967295) (54351)
  a=r 252 (54351)
  a+= 157 (54353)
  d=a (54355)
  *d=0 (54356)
  *d-- (54357)
  (                    3647:       if meta_block_prefix_trees_distances != NONE:) (54358)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 != 4294967295) (54358)
  c=0 (54358)
  c-- (54359)
  d++ (54360)
  a=*d (54361)
  a==c (54362)
  a=0 (54363)
  jt 1 (54364)
  a++ (54366)
  r=a 1 (54367)
  (         ifN t1 goto else_2138) (54369)
  a== 0 (54369)
  jf 3 (54371)
  lj 54608 (54373)
  (                    3648:         i = 0) (54376)
  (         H[t0+2]〈i〉 = 0) (54376)
  a=r 0 (54376)
  a+= 2 (54378)
  d=a (54380)
  *d=0 (54381)
  (                    3649:         while i < len_pH〈meta_block_prefix_trees_distances〉:) (54382)
  (        :while_2140:) (54382)
  (         t2 = H[t252+158]〈meta_block_prefix_trees_distances〉) (54382)
  a=r 252 (54382)
  a+= 158 (54384)
  d=a (54386)
  a=*d (54387)
  r=a 2 (54388)
  (         t2 = t2 - 2) (54390)
  c= 2 (54390)
  a-=c (54392)
  r=a 2 (54393)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (54395)
  d=a (54395)
  c=*d (54396)
  a=r 0 (54397)
  a+= 2 (54399)
  d=a (54401)
  a=*d (54402)
  a<c (54403)
  a=0 (54404)
  jf 1 (54405)
  a++ (54407)
  r=a 1 (54408)
  (         ifN t1 goto whileend_2142) (54410)
  a== 0 (54410)
  jf 3 (54412)
  lj 54572 (54414)
  (                    3650:           innertree = array_pH〈meta_block_prefix_trees_distances[i]〉) (54417)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 >> 31) (54417)
  c= 31 (54417)
  a=r 252 (54419)
  a+= 158 (54421)
  d=a (54423)
  a=*d (54424)
  a>>=c (54425)
  r=a 1 (54426)
  (         if t1 goto isM_2144) (54428)
  a== 0 (54428)
  jt 3 (54430)
  lj 54457 (54432)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 + H[t0+2]〈i〉) (54435)
  a=r 0 (54435)
  a+= 2 (54437)
  d=a (54439)
  c=*d (54440)
  a=r 252 (54441)
  a+= 158 (54443)
  d=a (54445)
  a=*d (54446)
  a+=c (54447)
  r=a 1 (54448)
  (         t1 = H[t1]〈〉) (54450)
  d=a (54450)
  a=*d (54451)
  r=a 1 (54452)
  (         goto MorHdone_2145) (54454)
  lj 54486 (54454)
  (        :isM_2144:) (54457)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 & 2147483647) (54457)
  a=0 (54457)
  a-- (54458)
  a>>= 1 (54459)
  c=a (54461)
  a=r 252 (54462)
  a+= 158 (54464)
  d=a (54466)
  a=*d (54467)
  a&=c (54468)
  r=a 1 (54469)
  (         t1 = t1 + H[t0+2]〈i〉) (54471)
  a=r 0 (54471)
  a+= 2 (54473)
  d=a (54475)
  c=*d (54476)
  a=r 1 (54477)
  a+=c (54479)
  r=a 1 (54480)
  (         t1 = M[t1]) (54482)
  b=a (54482)
  a=*b (54483)
  r=a 1 (54484)
  (        :MorHdone_2145:) (54486)
  (         H[t0+4]〈innertree〉 = t1) (54486)
  a=r 0 (54486)
  a+= 4 (54488)
  d=a (54490)
  a=r 1 (54491)
  *d=a (54493)
  (                    3651:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (54494)
  (         t1 = H[t0+4]〈innertree〉 + 0) (54494)
  c=0 (54494)
  a=*d (54495)
  a+=c (54496)
  r=a 1 (54497)
  (         t1 = H[t1]〈〉) (54499)
  d=a (54499)
  a=*d (54500)
  r=a 1 (54501)
  (         H[t0+5]〈〉 = t0) (54503)
  a=r 0 (54503)
  a+= 5 (54505)
  d=a (54507)
  a=r 0 (54508)
  *d=a (54510)
  (saved bsp, return id:) (54511)
  (         H[t0+6]〈〉 = 248) (54511)
  d++ (54511)
  *d= 248 (54512)
  (push arguments:) (54514)
  (         H[t0+7]〈〉 = t1) (54514)
  d++ (54514)
  a=r 1 (54515)
  *d=a (54517)
  (         t0 = t0 + 6) (54518)
  c= 6 (54518)
  a=r 0 (54520)
  a+=c (54522)
  r=a 0 (54523)
  (         goto addr_free_pH) (54525)
  lj 2913 (54525)
  (        :return_id_248:) (54528)
  (         t2 = t1) (54528)
  a=r 1 (54528)
  r=a 2 (54530)
  (                    3652:           free_pH〈innertree〉) (54532)
  (         H[t0+5]〈〉 = t0) (54532)
  a=r 0 (54532)
  a+= 5 (54534)
  d=a (54536)
  a=r 0 (54537)
  *d=a (54539)
  (saved bsp, return id:) (54540)
  (         H[t0+6]〈〉 = 249) (54540)
  d++ (54540)
  *d= 249 (54541)
  (push arguments:) (54543)
  (         H[t0+7]〈〉 = H[t0+4]〈innertree〉) (54543)
  a+= 4 (54543)
  d=a (54545)
  c=*d (54546)
  a=r 0 (54547)
  a+= 7 (54549)
  d=a (54551)
  *d=c (54552)
  (         t0 = t0 + 6) (54553)
  c= 6 (54553)
  a=r 0 (54555)
  a+=c (54557)
  r=a 0 (54558)
  (         goto addr_free_pH) (54560)
  lj 2913 (54560)
  (        :return_id_249:) (54563)
  (                    3653:           i += 1) (54563)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (54563)
  a=r 0 (54563)
  a+= 2 (54565)
  d=a (54567)
  *d++ (54568)
  (         goto while_2140) (54569)
  lj 54382 (54569)
  (        :whileend_2142:) (54572)
  (                    3654:         free_pH〈meta_block_prefix_trees_distances〉) (54572)
  (         H[t0+5]〈〉 = t0) (54572)
  a=r 0 (54572)
  a+= 5 (54574)
  d=a (54576)
  a=r 0 (54577)
  *d=a (54579)
  (saved bsp, return id:) (54580)
  (         H[t0+6]〈〉 = 250) (54580)
  d++ (54580)
  *d= 250 (54581)
  (push arguments:) (54583)
  (         H[t0+7]〈〉 = H[t252+158]〈meta_block_prefix_trees_distances〉) (54583)
  a=r 252 (54583)
  a+= 158 (54585)
  d=a (54587)
  c=*d (54588)
  a=r 0 (54589)
  a+= 7 (54591)
  d=a (54593)
  *d=c (54594)
  (         t0 = t0 + 6) (54595)
  c= 6 (54595)
  a=r 0 (54597)
  a+=c (54599)
  r=a 0 (54600)
  (         goto addr_free_pH) (54602)
  lj 2913 (54602)
  (        :return_id_250:) (54605)
  (         goto endif_2139) (54605)
  lj 54608 (54605)
  (        :else_2138:) (54608)
  (        :endif_2139:) (54608)
  (                    3655:       meta_block_prefix_trees_distances = NONE) (54608)
  (         H[t252+158]〈meta_block_prefix_trees_distances〉 = 4294967295) (54608)
  a=r 252 (54608)
  a+= 158 (54610)
  d=a (54612)
  *d=0 (54613)
  *d-- (54614)
  (                    3656:       if meta_block_context_modes_literals != NONE:) (54615)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 != 4294967295) (54615)
  c=0 (54615)
  c-- (54616)
  d++ (54617)
  a=*d (54618)
  a==c (54619)
  a=0 (54620)
  jt 1 (54621)
  a++ (54623)
  r=a 1 (54624)
  (         ifN t1 goto else_2147) (54626)
  a== 0 (54626)
  jf 3 (54628)
  lj 54674 (54630)
  (                    3657:         free_pM〈meta_block_context_modes_literals〉) (54633)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 & 2147483647) (54633)
  a=0 (54633)
  a-- (54634)
  a>>= 1 (54635)
  c=a (54637)
  a=*d (54638)
  a&=c (54639)
  r=a 1 (54640)
  (         H[t0+5]〈〉 = t0) (54642)
  a=r 0 (54642)
  a+= 5 (54644)
  d=a (54646)
  a=r 0 (54647)
  *d=a (54649)
  (saved bsp, return id:) (54650)
  (         H[t0+6]〈〉 = 251) (54650)
  d++ (54650)
  *d= 251 (54651)
  (push arguments:) (54653)
  (         H[t0+7]〈〉 = t1) (54653)
  d++ (54653)
  a=r 1 (54654)
  *d=a (54656)
  (         t0 = t0 + 6) (54657)
  c= 6 (54657)
  a=r 0 (54659)
  a+=c (54661)
  r=a 0 (54662)
  (         goto addr_free_pM) (54664)
  lj 2406 (54664)
  (        :return_id_251:) (54667)
  (         t2 = t1) (54667)
  a=r 1 (54667)
  r=a 2 (54669)
  (         goto endif_2148) (54671)
  lj 54674 (54671)
  (        :else_2147:) (54674)
  (        :endif_2148:) (54674)
  (                    3658:       meta_block_context_modes_literals = NONE) (54674)
  (         H[t252+159]〈meta_block_context_modes_literals〉 = 4294967295) (54674)
  a=r 252 (54674)
  a+= 159 (54676)
  d=a (54678)
  *d=0 (54679)
  *d-- (54680)
  (                    3659:       meta_block_insert_and_copy_length = NONE) (54681)
  (         H[t252+160]〈meta_block_insert_and_copy_length〉 = 4294967295) (54681)
  d++ (54681)
  *d=0 (54682)
  *d-- (54683)
  (                    3660:       meta_block_copy_length = NONE) (54684)
  (         H[t252+161]〈meta_block_copy_length〉 = 4294967295) (54684)
  d++ (54684)
  *d=0 (54685)
  *d-- (54686)
  (                    3661:       meta_block_insert_length = NONE) (54687)
  (         H[t252+162]〈meta_block_insert_length〉 = 4294967295) (54687)
  d++ (54687)
  *d=0 (54688)
  *d-- (54689)
  (                    3662:       meta_block_distance = NONE) (54690)
  (         H[t252+163]〈meta_block_distance〉 = 4294967295) (54690)
  d++ (54690)
  *d=0 (54691)
  *d-- (54692)
  (                    3663:       meta_block_distance_code = NONE) (54693)
  (         H[t252+164]〈meta_block_distance_code〉 = 4294967295) (54693)
  d++ (54693)
  *d=0 (54694)
  *d-- (54695)
  (                    3664:       state = parse_is_last〈〉) (54696)
  (         H[t0+5]〈〉 = t0) (54696)
  a=r 0 (54696)
  a+= 5 (54698)
  d=a (54700)
  a=r 0 (54701)
  *d=a (54703)
  (saved bsp, return id:) (54704)
  (         H[t0+6]〈〉 = 252) (54704)
  d++ (54704)
  *d= 252 (54705)
  (push arguments:) (54707)
  (         t0 = t0 + 6) (54707)
  c= 6 (54707)
  a+=c (54709)
  r=a 0 (54710)
  (         goto parse_is_last) (54712)
  lj 35244 (54712)
  (        :return_id_252:) (54715)
  (         H[t252+165]〈state〉 = t1) (54715)
  a=r 252 (54715)
  a+= 165 (54717)
  d=a (54719)
  a=r 1 (54720)
  *d=a (54722)
  (         goto endif_2082) (54723)
  lj 62610 (54723)
  (        :else_2081:) (54726)
  (                    3665:     elif state == IsLast and IsLast_data == 1:) (54726)
  (         t2 = H[t252+165]〈state〉 == H[t252+33]〈IsLast〉) (54726)
  a=r 252 (54726)
  a+= 33 (54728)
  d=a (54730)
  c=*d (54731)
  a=r 252 (54732)
  a+= 165 (54734)
  d=a (54736)
  a=*d (54737)
  a==c (54738)
  a=0 (54739)
  jf 1 (54740)
  a++ (54742)
  r=a 2 (54743)
  (         t3 = H[t252+34]〈IsLast_data〉 == 1) (54745)
  c= 1 (54745)
  a=r 252 (54747)
  a+= 34 (54749)
  d=a (54751)
  a=*d (54752)
  a==c (54753)
  a=0 (54754)
  jf 1 (54755)
  a++ (54757)
  r=a 3 (54758)
  (         t1 = t2 and t3) (54760)
  c=a (54760)
  a=r 2 (54761)
  a== 0 (54763)
  jt 1 (54765)
  a=c (54767)
  r=a 1 (54768)
  (         ifN t1 goto else_2151) (54770)
  a== 0 (54770)
  jf 3 (54772)
  lj 54814 (54774)
  (                    3666:       meta_block_header_is_last = 1) (54777)
  (         H[t252+124]〈meta_block_header_is_last〉 = 1) (54777)
  a=r 252 (54777)
  a+= 124 (54779)
  d=a (54781)
  *d= 1 (54782)
  (                    3667:       state = parse_is_last_empty〈〉) (54784)
  (         H[t0+5]〈〉 = t0) (54784)
  a=r 0 (54784)
  a+= 5 (54786)
  d=a (54788)
  a=r 0 (54789)
  *d=a (54791)
  (saved bsp, return id:) (54792)
  (         H[t0+6]〈〉 = 253) (54792)
  d++ (54792)
  *d= 253 (54793)
  (push arguments:) (54795)
  (         t0 = t0 + 6) (54795)
  c= 6 (54795)
  a+=c (54797)
  r=a 0 (54798)
  (         goto parse_is_last_empty) (54800)
  lj 35328 (54800)
  (        :return_id_253:) (54803)
  (         H[t252+165]〈state〉 = t1) (54803)
  a=r 252 (54803)
  a+= 165 (54805)
  d=a (54807)
  a=r 1 (54808)
  *d=a (54810)
  (         goto endif_2152) (54811)
  lj 62610 (54811)
  (        :else_2151:) (54814)
  (                    3668:     elif state == IsLast and IsLast_data == 0:) (54814)
  (         t2 = H[t252+165]〈state〉 == H[t252+33]〈IsLast〉) (54814)
  a=r 252 (54814)
  a+= 33 (54816)
  d=a (54818)
  c=*d (54819)
  a=r 252 (54820)
  a+= 165 (54822)
  d=a (54824)
  a=*d (54825)
  a==c (54826)
  a=0 (54827)
  jf 1 (54828)
  a++ (54830)
  r=a 2 (54831)
  (         t3 = H[t252+34]〈IsLast_data〉 == 0) (54833)
  c=0 (54833)
  a=r 252 (54834)
  a+= 34 (54836)
  d=a (54838)
  a=*d (54839)
  a==c (54840)
  a=0 (54841)
  jf 1 (54842)
  a++ (54844)
  r=a 3 (54845)
  (         t1 = t2 and t3) (54847)
  c=a (54847)
  a=r 2 (54848)
  a== 0 (54850)
  jt 1 (54852)
  a=c (54854)
  r=a 1 (54855)
  (         ifN t1 goto else_2155) (54857)
  a== 0 (54857)
  jf 3 (54859)
  lj 54900 (54861)
  (                    3669:       meta_block_header_is_last = 0) (54864)
  (         H[t252+124]〈meta_block_header_is_last〉 = 0) (54864)
  a=r 252 (54864)
  a+= 124 (54866)
  d=a (54868)
  *d=0 (54869)
  (                    3670:       state = parse_m_nibbles〈〉) (54870)
  (         H[t0+5]〈〉 = t0) (54870)
  a=r 0 (54870)
  a+= 5 (54872)
  d=a (54874)
  a=r 0 (54875)
  *d=a (54877)
  (saved bsp, return id:) (54878)
  (         H[t0+6]〈〉 = 254) (54878)
  d++ (54878)
  *d= 254 (54879)
  (push arguments:) (54881)
  (         t0 = t0 + 6) (54881)
  c= 6 (54881)
  a+=c (54883)
  r=a 0 (54884)
  (         goto parse_m_nibbles) (54886)
  lj 35412 (54886)
  (        :return_id_254:) (54889)
  (         H[t252+165]〈state〉 = t1) (54889)
  a=r 252 (54889)
  a+= 165 (54891)
  d=a (54893)
  a=r 1 (54894)
  *d=a (54896)
  (         goto endif_2156) (54897)
  lj 62610 (54897)
  (        :else_2155:) (54900)
  (                    3671:     elif state == IsLastEmpty and IsLastEmpty_data == 1:) (54900)
  (         t2 = H[t252+165]〈state〉 == H[t252+35]〈IsLastEmpty〉) (54900)
  a=r 252 (54900)
  a+= 35 (54902)
  d=a (54904)
  c=*d (54905)
  a=r 252 (54906)
  a+= 165 (54908)
  d=a (54910)
  a=*d (54911)
  a==c (54912)
  a=0 (54913)
  jf 1 (54914)
  a++ (54916)
  r=a 2 (54917)
  (         t3 = H[t252+36]〈IsLastEmpty_data〉 == 1) (54919)
  c= 1 (54919)
  a=r 252 (54921)
  a+= 36 (54923)
  d=a (54925)
  a=*d (54926)
  a==c (54927)
  a=0 (54928)
  jf 1 (54929)
  a++ (54931)
  r=a 3 (54932)
  (         t1 = t2 and t3) (54934)
  c=a (54934)
  a=r 2 (54935)
  a== 0 (54937)
  jt 1 (54939)
  a=c (54941)
  r=a 1 (54942)
  (         ifN t1 goto else_2159) (54944)
  a== 0 (54944)
  jf 3 (54946)
  lj 54973 (54948)
  (                    3672:       meta_block_header_is_last_empty = 1) (54951)
  (         H[t252+125]〈meta_block_header_is_last_empty〉 = 1) (54951)
  a=r 252 (54951)
  a+= 125 (54953)
  d=a (54955)
  *d= 1 (54956)
  (                    3673:       state = StreamEnd) (54958)
  (         H[t252+165]〈state〉 = H[t252+109]〈StreamEnd〉) (54958)
  a=r 252 (54958)
  a+= 109 (54960)
  d=a (54962)
  c=*d (54963)
  a=r 252 (54964)
  a+= 165 (54966)
  d=a (54968)
  *d=c (54969)
  (         goto endif_2160) (54970)
  lj 62610 (54970)
  (        :else_2159:) (54973)
  (                    3674:     elif state == IsLastEmpty and IsLastEmpty_data == 0:) (54973)
  (         t2 = H[t252+165]〈state〉 == H[t252+35]〈IsLastEmpty〉) (54973)
  a=r 252 (54973)
  a+= 35 (54975)
  d=a (54977)
  c=*d (54978)
  a=r 252 (54979)
  a+= 165 (54981)
  d=a (54983)
  a=*d (54984)
  a==c (54985)
  a=0 (54986)
  jf 1 (54987)
  a++ (54989)
  r=a 2 (54990)
  (         t3 = H[t252+36]〈IsLastEmpty_data〉 == 0) (54992)
  c=0 (54992)
  a=r 252 (54993)
  a+= 36 (54995)
  d=a (54997)
  a=*d (54998)
  a==c (54999)
  a=0 (55000)
  jf 1 (55001)
  a++ (55003)
  r=a 3 (55004)
  (         t1 = t2 and t3) (55006)
  c=a (55006)
  a=r 2 (55007)
  a== 0 (55009)
  jt 1 (55011)
  a=c (55013)
  r=a 1 (55014)
  (         ifN t1 goto else_2163) (55016)
  a== 0 (55016)
  jf 3 (55018)
  lj 55059 (55020)
  (                    3675:       meta_block_header_is_last_empty = 0) (55023)
  (         H[t252+125]〈meta_block_header_is_last_empty〉 = 0) (55023)
  a=r 252 (55023)
  a+= 125 (55025)
  d=a (55027)
  *d=0 (55028)
  (                    3676:       state = parse_m_nibbles〈〉) (55029)
  (         H[t0+5]〈〉 = t0) (55029)
  a=r 0 (55029)
  a+= 5 (55031)
  d=a (55033)
  a=r 0 (55034)
  *d=a (55036)
  (saved bsp, return id:) (55037)
  (         H[t0+6]〈〉 = 255) (55037)
  d++ (55037)
  *d= 255 (55038)
  (push arguments:) (55040)
  (         t0 = t0 + 6) (55040)
  c= 6 (55040)
  a+=c (55042)
  r=a 0 (55043)
  (         goto parse_m_nibbles) (55045)
  lj 35412 (55045)
  (        :return_id_255:) (55048)
  (         H[t252+165]〈state〉 = t1) (55048)
  a=r 252 (55048)
  a+= 165 (55050)
  d=a (55052)
  a=r 1 (55053)
  *d=a (55055)
  (         goto endif_2164) (55056)
  lj 62610 (55056)
  (        :else_2163:) (55059)
  (                    3677:     elif state == MNibbles and MNibbles_data == 0:) (55059)
  (         t2 = H[t252+165]〈state〉 == H[t252+37]〈MNibbles〉) (55059)
  a=r 252 (55059)
  a+= 37 (55061)
  d=a (55063)
  c=*d (55064)
  a=r 252 (55065)
  a+= 165 (55067)
  d=a (55069)
  a=*d (55070)
  a==c (55071)
  a=0 (55072)
  jf 1 (55073)
  a++ (55075)
  r=a 2 (55076)
  (         t3 = H[t252+38]〈MNibbles_data〉 == 0) (55078)
  c=0 (55078)
  a=r 252 (55079)
  a+= 38 (55081)
  d=a (55083)
  a=*d (55084)
  a==c (55085)
  a=0 (55086)
  jf 1 (55087)
  a++ (55089)
  r=a 3 (55090)
  (         t1 = t2 and t3) (55092)
  c=a (55092)
  a=r 2 (55093)
  a== 0 (55095)
  jt 1 (55097)
  a=c (55099)
  r=a 1 (55100)
  (         ifN t1 goto else_2167) (55102)
  a== 0 (55102)
  jf 3 (55104)
  lj 55223 (55106)
  (                    3678:       if read_bit〈〉:) (55109)
  (         H[t0+5]〈〉 = t0) (55109)
  a=r 0 (55109)
  a+= 5 (55111)
  d=a (55113)
  a=r 0 (55114)
  *d=a (55116)
  (saved bsp, return id:) (55117)
  (         H[t0+6]〈〉 = 256) (55117)
  d++ (55117)
  a= 1 (55118)
  a<<= 8 (55120)
  *d=a (55122)
  (push arguments:) (55123)
  (         t0 = t0 + 6) (55123)
  c= 6 (55123)
  a=r 0 (55125)
  a+=c (55127)
  r=a 0 (55128)
  (         goto read_bit) (55130)
  lj 4578 (55130)
  (        :return_id_256:) (55133)
  (         ifN t1 goto else_2169) (55133)
  a=r 1 (55133)
  a== 0 (55135)
  jf 3 (55137)
  lj 55146 (55139)
  (                    3679:         error〈〉 # eof) (55142)
  (         error) (55142)
  error (55142)
  (         goto endif_2170) (55143)
  lj 55146 (55143)
  (        :else_2169:) (55146)
  (        :endif_2170:) (55146)
  (                    3680:       if read_bit_result:) (55146)
  (         ifN H[t252+6]〈read_bit_result〉 goto else_2171) (55146)
  a=r 252 (55146)
  a+= 6 (55148)
  d=a (55150)
  a=*d (55151)
  a== 0 (55152)
  jf 3 (55154)
  lj 55180 (55156)
  (                    3681:         error〈〉 # NonZeroReservedBit) (55159)
  (         error) (55159)
  error (55159)
  (                    3682:         return) (55160)
  (         t2 = H[t0]〈〉) (55160)
  d=r 0 (55160)
  a=*d (55162)
  r=a 2 (55163)
  (         t0 = t0 - 1) (55165)
  a=r 0 (55165)
  a-- (55167)
  r=a 0 (55168)
  (         t0 = H[t0]〈〉) (55170)
  d=a (55170)
  a=*d (55171)
  r=a 0 (55172)
  (         goto find_label_ret_id) (55174)
  lj 62666 (55174)
  (         goto endif_2172) (55177)
  lj 55180 (55177)
  (        :else_2171:) (55180)
  (        :endif_2172:) (55180)
  (                    3683:       meta_block_header_m_nibbles = 0) (55180)
  (         H[t252+126]〈meta_block_header_m_nibbles〉 = 0) (55180)
  a=r 252 (55180)
  a+= 126 (55182)
  d=a (55184)
  *d=0 (55185)
  (                    3684:       state = parse_m_skip_bytes〈〉) (55186)
  (         H[t0+5]〈〉 = t0) (55186)
  a=r 0 (55186)
  a+= 5 (55188)
  d=a (55190)
  a=r 0 (55191)
  *d=a (55193)
  (saved bsp, return id:) (55194)
  (         H[t0+6]〈〉 = 257) (55194)
  d++ (55194)
  a= 1 (55195)
  a<<= 8 (55197)
  a+= 1 (55199)
  *d=a (55201)
  (push arguments:) (55202)
  (         t0 = t0 + 6) (55202)
  c= 6 (55202)
  a=r 0 (55204)
  a+=c (55206)
  r=a 0 (55207)
  (         goto parse_m_skip_bytes) (55209)
  lj 35558 (55209)
  (        :return_id_257:) (55212)
  (         H[t252+165]〈state〉 = t1) (55212)
  a=r 252 (55212)
  a+= 165 (55214)
  d=a (55216)
  a=r 1 (55217)
  *d=a (55219)
  (         goto endif_2168) (55220)
  lj 62610 (55220)
  (        :else_2167:) (55223)
  (                    3685:     elif state == MNibbles:) (55223)
  (         t1 = H[t252+165]〈state〉 == H[t252+37]〈MNibbles〉) (55223)
  a=r 252 (55223)
  a+= 37 (55225)
  d=a (55227)
  c=*d (55228)
  a=r 252 (55229)
  a+= 165 (55231)
  d=a (55233)
  a=*d (55234)
  a==c (55235)
  a=0 (55236)
  jf 1 (55237)
  a++ (55239)
  r=a 1 (55240)
  (         ifN t1 goto else_2174) (55242)
  a== 0 (55242)
  jf 3 (55244)
  lj 55298 (55246)
  (                    3686:       meta_block_header_m_nibbles = MNibbles_data) (55249)
  (         H[t252+126]〈meta_block_header_m_nibbles〉 = H[t252+38]〈MNibbles_data〉) (55249)
  a=r 252 (55249)
  a+= 38 (55251)
  d=a (55253)
  c=*d (55254)
  a=r 252 (55255)
  a+= 126 (55257)
  d=a (55259)
  *d=c (55260)
  (                    3687:       state = parse_m_len〈〉) (55261)
  (         H[t0+5]〈〉 = t0) (55261)
  a=r 0 (55261)
  a+= 5 (55263)
  d=a (55265)
  a=r 0 (55266)
  *d=a (55268)
  (saved bsp, return id:) (55269)
  (         H[t0+6]〈〉 = 258) (55269)
  d++ (55269)
  a= 1 (55270)
  a<<= 8 (55272)
  a+= 2 (55274)
  *d=a (55276)
  (push arguments:) (55277)
  (         t0 = t0 + 6) (55277)
  c= 6 (55277)
  a=r 0 (55279)
  a+=c (55281)
  r=a 0 (55282)
  (         goto parse_m_len) (55284)
  lj 36013 (55284)
  (        :return_id_258:) (55287)
  (         H[t252+165]〈state〉 = t1) (55287)
  a=r 252 (55287)
  a+= 165 (55289)
  d=a (55291)
  a=r 1 (55292)
  *d=a (55294)
  (         goto endif_2175) (55295)
  lj 62610 (55295)
  (        :else_2174:) (55298)
  (                    3688:     elif state == MSkipBytes and MSkipBytes_data == 0:) (55298)
  (         t2 = H[t252+165]〈state〉 == H[t252+39]〈MSkipBytes〉) (55298)
  a=r 252 (55298)
  a+= 39 (55300)
  d=a (55302)
  c=*d (55303)
  a=r 252 (55304)
  a+= 165 (55306)
  d=a (55308)
  a=*d (55309)
  a==c (55310)
  a=0 (55311)
  jf 1 (55312)
  a++ (55314)
  r=a 2 (55315)
  (         t3 = H[t252+40]〈MSkipBytes_data〉 == 0) (55317)
  c=0 (55317)
  a=r 252 (55318)
  a+= 40 (55320)
  d=a (55322)
  a=*d (55323)
  a==c (55324)
  a=0 (55325)
  jf 1 (55326)
  a++ (55328)
  r=a 3 (55329)
  (         t1 = t2 and t3) (55331)
  c=a (55331)
  a=r 2 (55332)
  a== 0 (55334)
  jt 1 (55336)
  a=c (55338)
  r=a 1 (55339)
  (         ifN t1 goto else_2178) (55341)
  a== 0 (55341)
  jf 3 (55343)
  lj 55435 (55345)
  (                    3689:       meta_block_header_m_skip_bytes = 0) (55348)
  (         H[t252+127]〈meta_block_header_m_skip_bytes〉 = 0) (55348)
  a=r 252 (55348)
  a+= 127 (55350)
  d=a (55352)
  *d=0 (55353)
  (                    3690:       if read_u8_from_byte_tail〈〉 != 0:) (55354)
  (         H[t0+6]〈〉 = t0) (55354)
  a=r 0 (55354)
  a+= 6 (55356)
  d=a (55358)
  a=r 0 (55359)
  *d=a (55361)
  (saved bsp, return id:) (55362)
  (         H[t0+7]〈〉 = 259) (55362)
  d++ (55362)
  a= 1 (55363)
  a<<= 8 (55365)
  a+= 3 (55367)
  *d=a (55369)
  (push arguments:) (55370)
  (         t0 = t0 + 7) (55370)
  c= 7 (55370)
  a=r 0 (55372)
  a+=c (55374)
  r=a 0 (55375)
  (         goto read_u8_from_byte_tail) (55377)
  lj 5033 (55377)
  (        :return_id_259:) (55380)
  (         t2 = t1) (55380)
  a=r 1 (55380)
  r=a 2 (55382)
  (         t1 = t2 != 0) (55384)
  c=0 (55384)
  a==c (55385)
  a=0 (55386)
  jt 1 (55387)
  a++ (55389)
  r=a 1 (55390)
  (         ifN t1 goto else_2181) (55392)
  a== 0 (55392)
  jf 3 (55394)
  lj 55420 (55396)
  (                    3691:         error〈〉 # NonZeroFillBit) (55399)
  (         error) (55399)
  error (55399)
  (                    3692:         return) (55400)
  (         t2 = H[t0]〈〉) (55400)
  d=r 0 (55400)
  a=*d (55402)
  r=a 2 (55403)
  (         t0 = t0 - 1) (55405)
  a=r 0 (55405)
  a-- (55407)
  r=a 0 (55408)
  (         t0 = H[t0]〈〉) (55410)
  d=a (55410)
  a=*d (55411)
  r=a 0 (55412)
  (         goto find_label_ret_id) (55414)
  lj 62666 (55414)
  (         goto endif_2182) (55417)
  lj 55420 (55417)
  (        :else_2181:) (55420)
  (        :endif_2182:) (55420)
  (                    3693:       state = MetaBlockEnd) (55420)
  (         H[t252+165]〈state〉 = H[t252+108]〈MetaBlockEnd〉) (55420)
  a=r 252 (55420)
  a+= 108 (55422)
  d=a (55424)
  c=*d (55425)
  a=r 252 (55426)
  a+= 165 (55428)
  d=a (55430)
  *d=c (55431)
  (         goto endif_2179) (55432)
  lj 62610 (55432)
  (        :else_2178:) (55435)
  (                    3694:     elif state == MSkipBytes:) (55435)
  (         t1 = H[t252+165]〈state〉 == H[t252+39]〈MSkipBytes〉) (55435)
  a=r 252 (55435)
  a+= 39 (55437)
  d=a (55439)
  c=*d (55440)
  a=r 252 (55441)
  a+= 165 (55443)
  d=a (55445)
  a=*d (55446)
  a==c (55447)
  a=0 (55448)
  jf 1 (55449)
  a++ (55451)
  r=a 1 (55452)
  (         ifN t1 goto else_2184) (55454)
  a== 0 (55454)
  jf 3 (55456)
  lj 55510 (55458)
  (                    3695:       meta_block_header_m_skip_bytes = MSkipBytes_data) (55461)
  (         H[t252+127]〈meta_block_header_m_skip_bytes〉 = H[t252+40]〈MSkipBytes_data〉) (55461)
  a=r 252 (55461)
  a+= 40 (55463)
  d=a (55465)
  c=*d (55466)
  a=r 252 (55467)
  a+= 127 (55469)
  d=a (55471)
  *d=c (55472)
  (                    3696:       state = parse_m_skip_len〈〉) (55473)
  (         H[t0+5]〈〉 = t0) (55473)
  a=r 0 (55473)
  a+= 5 (55475)
  d=a (55477)
  a=r 0 (55478)
  *d=a (55480)
  (saved bsp, return id:) (55481)
  (         H[t0+6]〈〉 = 260) (55481)
  d++ (55481)
  a= 1 (55482)
  a<<= 8 (55484)
  a+= 4 (55486)
  *d=a (55488)
  (push arguments:) (55489)
  (         t0 = t0 + 6) (55489)
  c= 6 (55489)
  a=r 0 (55491)
  a+=c (55493)
  r=a 0 (55494)
  (         goto parse_m_skip_len) (55496)
  lj 35644 (55496)
  (        :return_id_260:) (55499)
  (         H[t252+165]〈state〉 = t1) (55499)
  a=r 252 (55499)
  a+= 165 (55501)
  d=a (55503)
  a=r 1 (55504)
  *d=a (55506)
  (         goto endif_2185) (55507)
  lj 62610 (55507)
  (        :else_2184:) (55510)
  (                    3697:     elif state == MSkipLen:) (55510)
  (         t1 = H[t252+165]〈state〉 == H[t252+41]〈MSkipLen〉) (55510)
  a=r 252 (55510)
  a+= 41 (55512)
  d=a (55514)
  c=*d (55515)
  a=r 252 (55516)
  a+= 165 (55518)
  d=a (55520)
  a=*d (55521)
  a==c (55522)
  a=0 (55523)
  jf 1 (55524)
  a++ (55526)
  r=a 1 (55527)
  (         ifN t1 goto else_2187) (55529)
  a== 0 (55529)
  jf 3 (55531)
  lj 55715 (55533)
  (                    3698:       meta_block_header_m_skip_len = MSkipLen_data) (55536)
  (         H[t252+128]〈meta_block_header_m_skip_len〉 = H[t252+42]〈MSkipLen_data〉) (55536)
  a=r 252 (55536)
  a+= 42 (55538)
  d=a (55540)
  c=*d (55541)
  a=r 252 (55542)
  a+= 128 (55544)
  d=a (55546)
  *d=c (55547)
  (                    3699:       if read_u8_from_byte_tail〈〉 != 0:) (55548)
  (         H[t0+6]〈〉 = t0) (55548)
  a=r 0 (55548)
  a+= 6 (55550)
  d=a (55552)
  a=r 0 (55553)
  *d=a (55555)
  (saved bsp, return id:) (55556)
  (         H[t0+7]〈〉 = 261) (55556)
  d++ (55556)
  a= 1 (55557)
  a<<= 8 (55559)
  a+= 5 (55561)
  *d=a (55563)
  (push arguments:) (55564)
  (         t0 = t0 + 7) (55564)
  c= 7 (55564)
  a=r 0 (55566)
  a+=c (55568)
  r=a 0 (55569)
  (         goto read_u8_from_byte_tail) (55571)
  lj 5033 (55571)
  (        :return_id_261:) (55574)
  (         t2 = t1) (55574)
  a=r 1 (55574)
  r=a 2 (55576)
  (         t1 = t2 != 0) (55578)
  c=0 (55578)
  a==c (55579)
  a=0 (55580)
  jt 1 (55581)
  a++ (55583)
  r=a 1 (55584)
  (         ifN t1 goto else_2190) (55586)
  a== 0 (55586)
  jf 3 (55588)
  lj 55614 (55590)
  (                    3700:         error〈〉 # NonZeroFillBit) (55593)
  (         error) (55593)
  error (55593)
  (                    3701:         return) (55594)
  (         t2 = H[t0]〈〉) (55594)
  d=r 0 (55594)
  a=*d (55596)
  r=a 2 (55597)
  (         t0 = t0 - 1) (55599)
  a=r 0 (55599)
  a-- (55601)
  r=a 0 (55602)
  (         t0 = H[t0]〈〉) (55604)
  d=a (55604)
  a=*d (55605)
  r=a 0 (55606)
  (         goto find_label_ret_id) (55608)
  lj 62666 (55608)
  (         goto endif_2191) (55611)
  lj 55614 (55611)
  (        :else_2190:) (55614)
  (        :endif_2191:) (55614)
  (                    3702:       free_pM〈read_fixed_length_string〈MSkipLen_data〉〉) (55614)
  (         H[t0+6]〈〉 = t0) (55614)
  a=r 0 (55614)
  a+= 6 (55616)
  d=a (55618)
  a=r 0 (55619)
  *d=a (55621)
  (saved bsp, return id:) (55622)
  (         H[t0+7]〈〉 = 262) (55622)
  d++ (55622)
  a= 1 (55623)
  a<<= 8 (55625)
  a+= 6 (55627)
  *d=a (55629)
  (push arguments:) (55630)
  (         H[t0+8]〈〉 = H[t252+42]〈MSkipLen_data〉) (55630)
  a=r 252 (55630)
  a+= 42 (55632)
  d=a (55634)
  c=*d (55635)
  a=r 0 (55636)
  a+= 8 (55638)
  d=a (55640)
  *d=c (55641)
  (         t0 = t0 + 7) (55642)
  c= 7 (55642)
  a=r 0 (55644)
  a+=c (55646)
  r=a 0 (55647)
  (         goto read_fixed_length_string) (55649)
  lj 5371 (55649)
  (        :return_id_262:) (55652)
  (         t2 = t1) (55652)
  a=r 1 (55652)
  r=a 2 (55654)
  (         t1 = t2 & 2147483647) (55656)
  a=0 (55656)
  a-- (55657)
  a>>= 1 (55658)
  c=a (55660)
  a=r 2 (55661)
  a&=c (55663)
  r=a 1 (55664)
  (         H[t0+5]〈〉 = t0) (55666)
  a=r 0 (55666)
  a+= 5 (55668)
  d=a (55670)
  a=r 0 (55671)
  *d=a (55673)
  (saved bsp, return id:) (55674)
  (         H[t0+6]〈〉 = 263) (55674)
  d++ (55674)
  a= 1 (55675)
  a<<= 8 (55677)
  a+= 7 (55679)
  *d=a (55681)
  (push arguments:) (55682)
  (         H[t0+7]〈〉 = t1) (55682)
  d++ (55682)
  a=r 1 (55683)
  *d=a (55685)
  (         t0 = t0 + 6) (55686)
  c= 6 (55686)
  a=r 0 (55688)
  a+=c (55690)
  r=a 0 (55691)
  (         goto addr_free_pM) (55693)
  lj 2406 (55693)
  (        :return_id_263:) (55696)
  (         t2 = t1) (55696)
  a=r 1 (55696)
  r=a 2 (55698)
  (                    3703:       state = MetaBlockEnd) (55700)
  (         H[t252+165]〈state〉 = H[t252+108]〈MetaBlockEnd〉) (55700)
  a=r 252 (55700)
  a+= 108 (55702)
  d=a (55704)
  c=*d (55705)
  a=r 252 (55706)
  a+= 165 (55708)
  d=a (55710)
  *d=c (55711)
  (         goto endif_2188) (55712)
  lj 62610 (55712)
  (        :else_2187:) (55715)
  (                    3704:     elif state == MLen:) (55715)
  (         t1 = H[t252+165]〈state〉 == H[t252+43]〈MLen〉) (55715)
  a=r 252 (55715)
  a+= 43 (55717)
  d=a (55719)
  c=*d (55720)
  a=r 252 (55721)
  a+= 165 (55723)
  d=a (55725)
  a=*d (55726)
  a==c (55727)
  a=0 (55728)
  jf 1 (55729)
  a++ (55731)
  r=a 1 (55732)
  (         ifN t1 goto else_2193) (55734)
  a== 0 (55734)
  jf 3 (55736)
  lj 55840 (55738)
  (                    3705:       meta_block_header_m_len = MLen_data) (55741)
  (         H[t252+129]〈meta_block_header_m_len〉 = H[t252+44]〈MLen_data〉) (55741)
  a=r 252 (55741)
  a+= 44 (55743)
  d=a (55745)
  c=*d (55746)
  a=r 252 (55747)
  a+= 129 (55749)
  d=a (55751)
  *d=c (55752)
  (                    3706:       if meta_block_header_is_last:) (55753)
  (         ifN H[t252+124]〈meta_block_header_is_last〉 goto else_2195) (55753)
  a=r 252 (55753)
  a+= 124 (55755)
  d=a (55757)
  a=*d (55758)
  a== 0 (55759)
  jf 3 (55761)
  lj 55803 (55763)
  (                    3707:         state = parse_n_bltypes_l〈〉) (55766)
  (         H[t0+5]〈〉 = t0) (55766)
  a=r 0 (55766)
  a+= 5 (55768)
  d=a (55770)
  a=r 0 (55771)
  *d=a (55773)
  (saved bsp, return id:) (55774)
  (         H[t0+6]〈〉 = 264) (55774)
  d++ (55774)
  a= 1 (55775)
  a<<= 8 (55777)
  a+= 8 (55779)
  *d=a (55781)
  (push arguments:) (55782)
  (         t0 = t0 + 6) (55782)
  c= 6 (55782)
  a=r 0 (55784)
  a+=c (55786)
  r=a 0 (55787)
  (         goto parse_n_bltypes_l) (55789)
  lj 36779 (55789)
  (        :return_id_264:) (55792)
  (         H[t252+165]〈state〉 = t1) (55792)
  a=r 252 (55792)
  a+= 165 (55794)
  d=a (55796)
  a=r 1 (55797)
  *d=a (55799)
  (         goto endif_2196) (55800)
  lj 55837 (55800)
  (        :else_2195:) (55803)
  (                    3709:         state = parse_is_uncompressed〈〉) (55803)
  (         H[t0+5]〈〉 = t0) (55803)
  a=r 0 (55803)
  a+= 5 (55805)
  d=a (55807)
  a=r 0 (55808)
  *d=a (55810)
  (saved bsp, return id:) (55811)
  (         H[t0+6]〈〉 = 265) (55811)
  d++ (55811)
  a= 1 (55812)
  a<<= 8 (55814)
  a+= 9 (55816)
  *d=a (55818)
  (push arguments:) (55819)
  (         t0 = t0 + 6) (55819)
  c= 6 (55819)
  a=r 0 (55821)
  a+=c (55823)
  r=a 0 (55824)
  (         goto parse_is_uncompressed) (55826)
  lj 36182 (55826)
  (        :return_id_265:) (55829)
  (         H[t252+165]〈state〉 = t1) (55829)
  a=r 252 (55829)
  a+= 165 (55831)
  d=a (55833)
  a=r 1 (55834)
  *d=a (55836)
  (        :endif_2196:) (55837)
  (         goto endif_2194) (55837)
  lj 62610 (55837)
  (        :else_2193:) (55840)
  (                    3710:     elif state == IsUncompressed and IsUncompressed_data == 1:) (55840)
  (         t2 = H[t252+165]〈state〉 == H[t252+45]〈IsUncompressed〉) (55840)
  a=r 252 (55840)
  a+= 45 (55842)
  d=a (55844)
  c=*d (55845)
  a=r 252 (55846)
  a+= 165 (55848)
  d=a (55850)
  a=*d (55851)
  a==c (55852)
  a=0 (55853)
  jf 1 (55854)
  a++ (55856)
  r=a 2 (55857)
  (         t3 = H[t252+46]〈IsUncompressed_data〉 == 1) (55859)
  c= 1 (55859)
  a=r 252 (55861)
  a+= 46 (55863)
  d=a (55865)
  a=*d (55866)
  a==c (55867)
  a=0 (55868)
  jf 1 (55869)
  a++ (55871)
  r=a 3 (55872)
  (         t1 = t2 and t3) (55874)
  c=a (55874)
  a=r 2 (55875)
  a== 0 (55877)
  jt 1 (55879)
  a=c (55881)
  r=a 1 (55882)
  (         ifN t1 goto else_2199) (55884)
  a== 0 (55884)
  jf 3 (55886)
  lj 55984 (55888)
  (                    3711:       meta_block_header_is_uncompressed = 1) (55891)
  (         H[t252+130]〈meta_block_header_is_uncompressed〉 = 1) (55891)
  a=r 252 (55891)
  a+= 130 (55893)
  d=a (55895)
  *d= 1 (55896)
  (                    3712:       if read_u8_from_byte_tail〈〉 != 0:) (55898)
  (         H[t0+6]〈〉 = t0) (55898)
  a=r 0 (55898)
  a+= 6 (55900)
  d=a (55902)
  a=r 0 (55903)
  *d=a (55905)
  (saved bsp, return id:) (55906)
  (         H[t0+7]〈〉 = 266) (55906)
  d++ (55906)
  a= 1 (55907)
  a<<= 8 (55909)
  a+= 10 (55911)
  *d=a (55913)
  (push arguments:) (55914)
  (         t0 = t0 + 7) (55914)
  c= 7 (55914)
  a=r 0 (55916)
  a+=c (55918)
  r=a 0 (55919)
  (         goto read_u8_from_byte_tail) (55921)
  lj 5033 (55921)
  (        :return_id_266:) (55924)
  (         t2 = t1) (55924)
  a=r 1 (55924)
  r=a 2 (55926)
  (         t1 = t2 != 0) (55928)
  c=0 (55928)
  a==c (55929)
  a=0 (55930)
  jt 1 (55931)
  a++ (55933)
  r=a 1 (55934)
  (         ifN t1 goto else_2202) (55936)
  a== 0 (55936)
  jf 3 (55938)
  lj 55947 (55940)
  (                    3713:         error〈〉 # NonZeroFillBit) (55943)
  (         error) (55943)
  error (55943)
  (         goto endif_2203) (55944)
  lj 55947 (55944)
  (        :else_2202:) (55947)
  (        :endif_2203:) (55947)
  (                    3714:       state = parse_mlen_literals〈〉) (55947)
  (         H[t0+5]〈〉 = t0) (55947)
  a=r 0 (55947)
  a+= 5 (55949)
  d=a (55951)
  a=r 0 (55952)
  *d=a (55954)
  (saved bsp, return id:) (55955)
  (         H[t0+6]〈〉 = 267) (55955)
  d++ (55955)
  a= 1 (55956)
  a<<= 8 (55958)
  a+= 11 (55960)
  *d=a (55962)
  (push arguments:) (55963)
  (         t0 = t0 + 6) (55963)
  c= 6 (55963)
  a=r 0 (55965)
  a+=c (55967)
  r=a 0 (55968)
  (         goto parse_mlen_literals) (55970)
  lj 36265 (55970)
  (        :return_id_267:) (55973)
  (         H[t252+165]〈state〉 = t1) (55973)
  a=r 252 (55973)
  a+= 165 (55975)
  d=a (55977)
  a=r 1 (55978)
  *d=a (55980)
  (         goto endif_2200) (55981)
  lj 62610 (55981)
  (        :else_2199:) (55984)
  (                    3715:     elif state == MLenLiterals:) (55984)
  (         t1 = H[t252+165]〈state〉 == H[t252+47]〈MLenLiterals〉) (55984)
  a=r 252 (55984)
  a+= 47 (55986)
  d=a (55988)
  c=*d (55989)
  a=r 252 (55990)
  a+= 165 (55992)
  d=a (55994)
  a=*d (55995)
  a==c (55996)
  a=0 (55997)
  jf 1 (55998)
  a++ (56000)
  r=a 1 (56001)
  (         ifN t1 goto else_2205) (56003)
  a== 0 (56003)
  jf 3 (56005)
  lj 56422 (56007)
  (                    3716:       i = 0) (56010)
  (         H[t0+2]〈i〉 = 0) (56010)
  a=r 0 (56010)
  a+= 2 (56012)
  d=a (56014)
  *d=0 (56015)
  (                    3717:       while i < len_pM〈MLenLiterals_data〉:) (56016)
  (        :while_2207:) (56016)
  (         t2 = H[t252+48]〈MLenLiterals_data〉) (56016)
  a=r 252 (56016)
  a+= 48 (56018)
  d=a (56020)
  a=*d (56021)
  r=a 2 (56022)
  (         t2 = t2 & 2147483647) (56024)
  a=0 (56024)
  a-- (56025)
  a>>= 1 (56026)
  c=a (56028)
  a=r 2 (56029)
  a&=c (56031)
  r=a 2 (56032)
  (         t2 = t2 - 5) (56034)
  c= 5 (56034)
  a-=c (56036)
  r=a 2 (56037)
  (         t3 = M[t2] << 8) (56039)
  c= 8 (56039)
  b=a (56041)
  a=*b (56042)
  a<<=c (56043)
  r=a 3 (56044)
  (         t2 = t2 + 1) (56046)
  a=r 2 (56046)
  a++ (56048)
  r=a 2 (56049)
  (         t3 = t3 + M[t2]) (56051)
  b=a (56051)
  c=*b (56052)
  a=r 3 (56053)
  a+=c (56055)
  r=a 3 (56056)
  (         t3 = t3 << 8) (56058)
  c= 8 (56058)
  a<<=c (56060)
  r=a 3 (56061)
  (         t2 = t2 + 1) (56063)
  a=r 2 (56063)
  a++ (56065)
  r=a 2 (56066)
  (         t3 = t3 + M[t2]) (56068)
  b=a (56068)
  c=*b (56069)
  a=r 3 (56070)
  a+=c (56072)
  r=a 3 (56073)
  (         t3 = t3 << 8) (56075)
  c= 8 (56075)
  a<<=c (56077)
  r=a 3 (56078)
  (         t2 = t2 + 1) (56080)
  a=r 2 (56080)
  a++ (56082)
  r=a 2 (56083)
  (         t3 = t3 + M[t2]) (56085)
  b=a (56085)
  c=*b (56086)
  a=r 3 (56087)
  a+=c (56089)
  r=a 3 (56090)
  (         t1 = H[t0+2]〈i〉 < t3) (56092)
  c=a (56092)
  a=r 0 (56093)
  a+= 2 (56095)
  d=a (56097)
  a=*d (56098)
  a<c (56099)
  a=0 (56100)
  jf 1 (56101)
  a++ (56103)
  r=a 1 (56104)
  (         ifN t1 goto whileend_2209) (56106)
  a== 0 (56106)
  jf 3 (56108)
  lj 56359 (56110)
  (                    3718:         literal = MLenLiterals_data[i]) (56113)
  (         t1 = H[t252+48]〈MLenLiterals_data〉 >> 31) (56113)
  c= 31 (56113)
  a=r 252 (56115)
  a+= 48 (56117)
  d=a (56119)
  a=*d (56120)
  a>>=c (56121)
  r=a 1 (56122)
  (         if t1 goto isM_2211) (56124)
  a== 0 (56124)
  jt 3 (56126)
  lj 56153 (56128)
  (         t1 = H[t252+48]〈MLenLiterals_data〉 + H[t0+2]〈i〉) (56131)
  a=r 0 (56131)
  a+= 2 (56133)
  d=a (56135)
  c=*d (56136)
  a=r 252 (56137)
  a+= 48 (56139)
  d=a (56141)
  a=*d (56142)
  a+=c (56143)
  r=a 1 (56144)
  (         t1 = H[t1]〈〉) (56146)
  d=a (56146)
  a=*d (56147)
  r=a 1 (56148)
  (         goto MorHdone_2212) (56150)
  lj 56182 (56150)
  (        :isM_2211:) (56153)
  (         t1 = H[t252+48]〈MLenLiterals_data〉 & 2147483647) (56153)
  a=0 (56153)
  a-- (56154)
  a>>= 1 (56155)
  c=a (56157)
  a=r 252 (56158)
  a+= 48 (56160)
  d=a (56162)
  a=*d (56163)
  a&=c (56164)
  r=a 1 (56165)
  (         t1 = t1 + H[t0+2]〈i〉) (56167)
  a=r 0 (56167)
  a+= 2 (56169)
  d=a (56171)
  c=*d (56172)
  a=r 1 (56173)
  a+=c (56175)
  r=a 1 (56176)
  (         t1 = M[t1]) (56178)
  b=a (56178)
  a=*b (56179)
  r=a 1 (56180)
  (        :MorHdone_2212:) (56182)
  (         H[t0+5]〈literal〉 = t1) (56182)
  a=r 0 (56182)
  a+= 5 (56184)
  d=a (56186)
  a=r 1 (56187)
  *d=a (56189)
  (                    3719:         out〈literal〉) (56190)
  (         out H[t0+5]〈literal〉) (56190)
  a=*d (56190)
  out (56191)
  (                    3720:         output_window_pointer = 〈output_window_pointer + 1〉 % len_pM〈output_window〉) (56192)
  (         t2 = H[t252+118]〈output_window_pointer〉 + 1) (56192)
  c= 1 (56192)
  a=r 252 (56194)
  a+= 118 (56196)
  d=a (56198)
  a=*d (56199)
  a+=c (56200)
  r=a 2 (56201)
  (         t3 = H[t252+117]〈output_window〉) (56203)
  d-- (56203)
  a=*d (56204)
  r=a 3 (56205)
  (         t3 = t3 & 2147483647) (56207)
  a=0 (56207)
  a-- (56208)
  a>>= 1 (56209)
  c=a (56211)
  a=r 3 (56212)
  a&=c (56214)
  r=a 3 (56215)
  (         t3 = t3 - 5) (56217)
  c= 5 (56217)
  a-=c (56219)
  r=a 3 (56220)
  (         t4 = M[t3] << 8) (56222)
  c= 8 (56222)
  b=a (56224)
  a=*b (56225)
  a<<=c (56226)
  r=a 4 (56227)
  (         t3 = t3 + 1) (56229)
  a=r 3 (56229)
  a++ (56231)
  r=a 3 (56232)
  (         t4 = t4 + M[t3]) (56234)
  b=a (56234)
  c=*b (56235)
  a=r 4 (56236)
  a+=c (56238)
  r=a 4 (56239)
  (         t4 = t4 << 8) (56241)
  c= 8 (56241)
  a<<=c (56243)
  r=a 4 (56244)
  (         t3 = t3 + 1) (56246)
  a=r 3 (56246)
  a++ (56248)
  r=a 3 (56249)
  (         t4 = t4 + M[t3]) (56251)
  b=a (56251)
  c=*b (56252)
  a=r 4 (56253)
  a+=c (56255)
  r=a 4 (56256)
  (         t4 = t4 << 8) (56258)
  c= 8 (56258)
  a<<=c (56260)
  r=a 4 (56261)
  (         t3 = t3 + 1) (56263)
  a=r 3 (56263)
  a++ (56265)
  r=a 3 (56266)
  (         t4 = t4 + M[t3]) (56268)
  b=a (56268)
  c=*b (56269)
  a=r 4 (56270)
  a+=c (56272)
  r=a 4 (56273)
  (         t1 = t2 % t4) (56275)
  c=a (56275)
  a=r 2 (56276)
  a%=c (56278)
  r=a 1 (56279)
  (         H[t252+118]〈output_window_pointer〉 = t1) (56281)
  d++ (56281)
  *d=a (56282)
  (                    3721:         output_window[output_window_pointer] = literal) (56283)
  (         t1 = H[t252+117]〈output_window〉 & 2147483647) (56283)
  a=0 (56283)
  a-- (56284)
  a>>= 1 (56285)
  c=a (56287)
  d-- (56288)
  a=*d (56289)
  a&=c (56290)
  r=a 1 (56291)
  (         t1 = t1 + H[t252+118]〈output_window_pointer〉) (56293)
  d++ (56293)
  c=*d (56294)
  a+=c (56295)
  r=a 1 (56296)
  (         M[t1] = H[t0+5]〈literal〉) (56298)
  c=a (56298)
  a=r 0 (56299)
  a+= 5 (56301)
  d=a (56303)
  *c=*d (56304)
  (                    3722:         literal_buf_pointer = 〈literal_buf_pointer + 1〉 % 2) (56305)
  (         t2 = H[t252+123]〈literal_buf_pointer〉 + 1) (56305)
  c= 1 (56305)
  a=r 252 (56307)
  a+= 123 (56309)
  d=a (56311)
  a=*d (56312)
  a+=c (56313)
  r=a 2 (56314)
  (         t1 = t2 % 2) (56316)
  c= 2 (56316)
  a%=c (56318)
  r=a 1 (56319)
  (         H[t252+123]〈literal_buf_pointer〉 = t1) (56321)
  *d=a (56321)
  (                    3723:         literal_buf[literal_buf_pointer] = literal) (56322)
  (         t1 = H[t252+122]〈literal_buf〉 & 2147483647) (56322)
  a=0 (56322)
  a-- (56323)
  a>>= 1 (56324)
  c=a (56326)
  d-- (56327)
  a=*d (56328)
  a&=c (56329)
  r=a 1 (56330)
  (         t1 = t1 + H[t252+123]〈literal_buf_pointer〉) (56332)
  d++ (56332)
  c=*d (56333)
  a+=c (56334)
  r=a 1 (56335)
  (         M[t1] = H[t0+5]〈literal〉) (56337)
  c=a (56337)
  a=r 0 (56338)
  a+= 5 (56340)
  d=a (56342)
  *c=*d (56343)
  (                    3724:         count_output += 1) (56344)
  (         H[t252+119]〈count_output〉 = H[t252+119]〈count_output〉 + 1) (56344)
  a=r 252 (56344)
  a+= 119 (56346)
  d=a (56348)
  *d++ (56349)
  (                    3725:         i += 1) (56350)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (56350)
  a=r 0 (56350)
  a+= 2 (56352)
  d=a (56354)
  *d++ (56355)
  (         goto while_2207) (56356)
  lj 56016 (56356)
  (        :whileend_2209:) (56359)
  (                    3726:       free_pM〈MLenLiterals_data〉) (56359)
  (         t1 = H[t252+48]〈MLenLiterals_data〉 & 2147483647) (56359)
  a=0 (56359)
  a-- (56360)
  a>>= 1 (56361)
  c=a (56363)
  a=r 252 (56364)
  a+= 48 (56366)
  d=a (56368)
  a=*d (56369)
  a&=c (56370)
  r=a 1 (56371)
  (         H[t0+6]〈〉 = t0) (56373)
  a=r 0 (56373)
  a+= 6 (56375)
  d=a (56377)
  a=r 0 (56378)
  *d=a (56380)
  (saved bsp, return id:) (56381)
  (         H[t0+7]〈〉 = 268) (56381)
  d++ (56381)
  a= 1 (56382)
  a<<= 8 (56384)
  a+= 12 (56386)
  *d=a (56388)
  (push arguments:) (56389)
  (         H[t0+8]〈〉 = t1) (56389)
  d++ (56389)
  a=r 1 (56390)
  *d=a (56392)
  (         t0 = t0 + 7) (56393)
  c= 7 (56393)
  a=r 0 (56395)
  a+=c (56397)
  r=a 0 (56398)
  (         goto addr_free_pM) (56400)
  lj 2406 (56400)
  (        :return_id_268:) (56403)
  (         t2 = t1) (56403)
  a=r 1 (56403)
  r=a 2 (56405)
  (                    3727:       state = MetaBlockEnd) (56407)
  (         H[t252+165]〈state〉 = H[t252+108]〈MetaBlockEnd〉) (56407)
  a=r 252 (56407)
  a+= 108 (56409)
  d=a (56411)
  c=*d (56412)
  a=r 252 (56413)
  a+= 165 (56415)
  d=a (56417)
  *d=c (56418)
  (         goto endif_2206) (56419)
  lj 62610 (56419)
  (        :else_2205:) (56422)
  (                    3728:     elif state == IsUncompressed and IsUncompressed_data == 0:) (56422)
  (         t2 = H[t252+165]〈state〉 == H[t252+45]〈IsUncompressed〉) (56422)
  a=r 252 (56422)
  a+= 45 (56424)
  d=a (56426)
  c=*d (56427)
  a=r 252 (56428)
  a+= 165 (56430)
  d=a (56432)
  a=*d (56433)
  a==c (56434)
  a=0 (56435)
  jf 1 (56436)
  a++ (56438)
  r=a 2 (56439)
  (         t3 = H[t252+46]〈IsUncompressed_data〉 == 0) (56441)
  c=0 (56441)
  a=r 252 (56442)
  a+= 46 (56444)
  d=a (56446)
  a=*d (56447)
  a==c (56448)
  a=0 (56449)
  jf 1 (56450)
  a++ (56452)
  r=a 3 (56453)
  (         t1 = t2 and t3) (56455)
  c=a (56455)
  a=r 2 (56456)
  a== 0 (56458)
  jt 1 (56460)
  a=c (56462)
  r=a 1 (56463)
  (         ifN t1 goto else_2215) (56465)
  a== 0 (56465)
  jf 3 (56467)
  lj 56515 (56469)
  (                    3729:       meta_block_header_is_uncompressed = 0) (56472)
  (         H[t252+130]〈meta_block_header_is_uncompressed〉 = 0) (56472)
  a=r 252 (56472)
  a+= 130 (56474)
  d=a (56476)
  *d=0 (56477)
  (                    3730:       state = parse_n_bltypes_l〈〉) (56478)
  (         H[t0+6]〈〉 = t0) (56478)
  a=r 0 (56478)
  a+= 6 (56480)
  d=a (56482)
  a=r 0 (56483)
  *d=a (56485)
  (saved bsp, return id:) (56486)
  (         H[t0+7]〈〉 = 269) (56486)
  d++ (56486)
  a= 1 (56487)
  a<<= 8 (56489)
  a+= 13 (56491)
  *d=a (56493)
  (push arguments:) (56494)
  (         t0 = t0 + 7) (56494)
  c= 7 (56494)
  a=r 0 (56496)
  a+=c (56498)
  r=a 0 (56499)
  (         goto parse_n_bltypes_l) (56501)
  lj 36779 (56501)
  (        :return_id_269:) (56504)
  (         H[t252+165]〈state〉 = t1) (56504)
  a=r 252 (56504)
  a+= 165 (56506)
  d=a (56508)
  a=r 1 (56509)
  *d=a (56511)
  (         goto endif_2216) (56512)
  lj 62610 (56512)
  (        :else_2215:) (56515)
  (                    3731:     elif state == NBltypesL:) (56515)
  (         t1 = H[t252+165]〈state〉 == H[t252+49]〈NBltypesL〉) (56515)
  a=r 252 (56515)
  a+= 49 (56517)
  d=a (56519)
  c=*d (56520)
  a=r 252 (56521)
  a+= 165 (56523)
  d=a (56525)
  a=*d (56526)
  a==c (56527)
  a=0 (56528)
  jf 1 (56529)
  a++ (56531)
  r=a 1 (56532)
  (         ifN t1 goto else_2218) (56534)
  a== 0 (56534)
  jf 3 (56536)
  lj 56653 (56538)
  (                    3732:       meta_block_header_n_bltypes_l = NBltypesL_data) (56541)
  (         H[t252+131]〈meta_block_header_n_bltypes_l〉 = H[t252+50]〈NBltypesL_data〉) (56541)
  a=r 252 (56541)
  a+= 50 (56543)
  d=a (56545)
  c=*d (56546)
  a=r 252 (56547)
  a+= 131 (56549)
  d=a (56551)
  *d=c (56552)
  (                    3733:       if NBltypesL_data >= 2:) (56553)
  (         t1 = H[t252+50]〈NBltypesL_data〉 >= 2) (56553)
  c= 2 (56553)
  a=r 252 (56555)
  a+= 50 (56557)
  d=a (56559)
  a=*d (56560)
  a==c (56561)
  jt 4 (56562)
  a>c (56564)
  a=0 (56565)
  jf 2 (56566)
  a= 1 (56568)
  r=a 1 (56570)
  (         ifN t1 goto else_2221) (56572)
  a== 0 (56572)
  jf 3 (56574)
  lj 56616 (56576)
  (                    3734:         state = parse_prefix_code_block_types_literals〈〉) (56579)
  (         H[t0+6]〈〉 = t0) (56579)
  a=r 0 (56579)
  a+= 6 (56581)
  d=a (56583)
  a=r 0 (56584)
  *d=a (56586)
  (saved bsp, return id:) (56587)
  (         H[t0+7]〈〉 = 270) (56587)
  d++ (56587)
  a= 1 (56588)
  a<<= 8 (56590)
  a+= 14 (56592)
  *d=a (56594)
  (push arguments:) (56595)
  (         t0 = t0 + 7) (56595)
  c= 7 (56595)
  a=r 0 (56597)
  a+=c (56599)
  r=a 0 (56600)
  (         goto parse_prefix_code_block_types_literals) (56602)
  lj 42629 (56602)
  (        :return_id_270:) (56605)
  (         H[t252+165]〈state〉 = t1) (56605)
  a=r 252 (56605)
  a+= 165 (56607)
  d=a (56609)
  a=r 1 (56610)
  *d=a (56612)
  (         goto endif_2222) (56613)
  lj 56650 (56613)
  (        :else_2221:) (56616)
  (                    3736:         state = parse_n_bltypes_i〈〉) (56616)
  (         H[t0+6]〈〉 = t0) (56616)
  a=r 0 (56616)
  a+= 6 (56618)
  d=a (56620)
  a=r 0 (56621)
  *d=a (56623)
  (saved bsp, return id:) (56624)
  (         H[t0+7]〈〉 = 271) (56624)
  d++ (56624)
  a= 1 (56625)
  a<<= 8 (56627)
  a+= 15 (56629)
  *d=a (56631)
  (push arguments:) (56632)
  (         t0 = t0 + 7) (56632)
  c= 7 (56632)
  a=r 0 (56634)
  a+=c (56636)
  r=a 0 (56637)
  (         goto parse_n_bltypes_i) (56639)
  lj 36870 (56639)
  (        :return_id_271:) (56642)
  (         H[t252+165]〈state〉 = t1) (56642)
  a=r 252 (56642)
  a+= 165 (56644)
  d=a (56646)
  a=r 1 (56647)
  *d=a (56649)
  (        :endif_2222:) (56650)
  (         goto endif_2219) (56650)
  lj 62610 (56650)
  (        :else_2218:) (56653)
  (                    3737:     elif state == PrefixCodeBlockTypesLiterals:) (56653)
  (         t1 = H[t252+165]〈state〉 == H[t252+51]〈PrefixCodeBlockTypesLiterals〉) (56653)
  a=r 252 (56653)
  a+= 51 (56655)
  d=a (56657)
  c=*d (56658)
  a=r 252 (56659)
  a+= 165 (56661)
  d=a (56663)
  a=*d (56664)
  a==c (56665)
  a=0 (56666)
  jf 1 (56667)
  a++ (56669)
  r=a 1 (56670)
  (         ifN t1 goto else_2224) (56672)
  a== 0 (56672)
  jf 3 (56674)
  lj 56868 (56676)
  (                    3738:       if meta_block_prefix_tree_block_types_literals != NONE:) (56679)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 != 4294967295) (56679)
  c=0 (56679)
  c-- (56680)
  a=r 252 (56681)
  a+= 140 (56683)
  d=a (56685)
  a=*d (56686)
  a==c (56687)
  a=0 (56688)
  jt 1 (56689)
  a++ (56691)
  r=a 1 (56692)
  (         ifN t1 goto else_2227) (56694)
  a== 0 (56694)
  jf 3 (56696)
  lj 56819 (56698)
  (                    3739:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_literals[0]〉〉) (56701)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 >> 31) (56701)
  c= 31 (56701)
  a=*d (56703)
  a>>=c (56704)
  r=a 1 (56705)
  (         if t1 goto isM_2229) (56707)
  a== 0 (56707)
  jt 3 (56709)
  lj 56726 (56711)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 + 0) (56714)
  c=0 (56714)
  a=*d (56715)
  a+=c (56716)
  r=a 1 (56717)
  (         t1 = H[t1]〈〉) (56719)
  d=a (56719)
  a=*d (56720)
  r=a 1 (56721)
  (         goto MorHdone_2230) (56723)
  lj 56744 (56723)
  (        :isM_2229:) (56726)
  (         t1 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 & 2147483647) (56726)
  a=0 (56726)
  a-- (56727)
  a>>= 1 (56728)
  c=a (56730)
  a=r 252 (56731)
  a+= 140 (56733)
  d=a (56735)
  a=*d (56736)
  a&=c (56737)
  r=a 1 (56738)
  (         t1 = t1 + 0) (56740)
  (         t1 = M[t1]) (56740)
  b=a (56740)
  a=*b (56741)
  r=a 1 (56742)
  (        :MorHdone_2230:) (56744)
  (         H[t0+6]〈〉 = t0) (56744)
  a=r 0 (56744)
  a+= 6 (56746)
  d=a (56748)
  a=r 0 (56749)
  *d=a (56751)
  (saved bsp, return id:) (56752)
  (         H[t0+7]〈〉 = 272) (56752)
  d++ (56752)
  a= 1 (56753)
  a<<= 8 (56755)
  a+= 16 (56757)
  *d=a (56759)
  (push arguments:) (56760)
  (         H[t0+8]〈〉 = t1) (56760)
  d++ (56760)
  a=r 1 (56761)
  *d=a (56763)
  (         t0 = t0 + 7) (56764)
  c= 7 (56764)
  a=r 0 (56766)
  a+=c (56768)
  r=a 0 (56769)
  (         goto addr_free_pH) (56771)
  lj 2913 (56771)
  (        :return_id_272:) (56774)
  (         t2 = t1) (56774)
  a=r 1 (56774)
  r=a 2 (56776)
  (                    3740:         free_pH〈meta_block_prefix_tree_block_types_literals〉) (56778)
  (         H[t0+6]〈〉 = t0) (56778)
  a=r 0 (56778)
  a+= 6 (56780)
  d=a (56782)
  a=r 0 (56783)
  *d=a (56785)
  (saved bsp, return id:) (56786)
  (         H[t0+7]〈〉 = 273) (56786)
  d++ (56786)
  a= 1 (56787)
  a<<= 8 (56789)
  a+= 17 (56791)
  *d=a (56793)
  (push arguments:) (56794)
  (         H[t0+8]〈〉 = H[t252+140]〈meta_block_prefix_tree_block_types_literals〉) (56794)
  a=r 252 (56794)
  a+= 140 (56796)
  d=a (56798)
  c=*d (56799)
  a=r 0 (56800)
  a+= 8 (56802)
  d=a (56804)
  *d=c (56805)
  (         t0 = t0 + 7) (56806)
  c= 7 (56806)
  a=r 0 (56808)
  a+=c (56810)
  r=a 0 (56811)
  (         goto addr_free_pH) (56813)
  lj 2913 (56813)
  (        :return_id_273:) (56816)
  (         goto endif_2228) (56816)
  lj 56819 (56816)
  (        :else_2227:) (56819)
  (        :endif_2228:) (56819)
  (                    3741:       meta_block_prefix_tree_block_types_literals = PrefixCodeBlockTypesLiterals_data) (56819)
  (         H[t252+140]〈meta_block_prefix_tree_block_types_literals〉 = H[t252+52]〈PrefixCodeBlockTypesLiterals_data〉) (56819)
  a=r 252 (56819)
  a+= 52 (56821)
  d=a (56823)
  c=*d (56824)
  a=r 252 (56825)
  a+= 140 (56827)
  d=a (56829)
  *d=c (56830)
  (                    3742:       state = parse_prefix_code_block_counts_literals〈〉) (56831)
  (         H[t0+6]〈〉 = t0) (56831)
  a=r 0 (56831)
  a+= 6 (56833)
  d=a (56835)
  a=r 0 (56836)
  *d=a (56838)
  (saved bsp, return id:) (56839)
  (         H[t0+7]〈〉 = 274) (56839)
  d++ (56839)
  a= 1 (56840)
  a<<= 8 (56842)
  a+= 18 (56844)
  *d=a (56846)
  (push arguments:) (56847)
  (         t0 = t0 + 7) (56847)
  c= 7 (56847)
  a=r 0 (56849)
  a+=c (56851)
  r=a 0 (56852)
  (         goto parse_prefix_code_block_counts_literals) (56854)
  lj 42754 (56854)
  (        :return_id_274:) (56857)
  (         H[t252+165]〈state〉 = t1) (56857)
  a=r 252 (56857)
  a+= 165 (56859)
  d=a (56861)
  a=r 1 (56862)
  *d=a (56864)
  (         goto endif_2225) (56865)
  lj 62610 (56865)
  (        :else_2224:) (56868)
  (                    3743:     elif state == PrefixCodeBlockCountsLiterals:) (56868)
  (         t1 = H[t252+165]〈state〉 == H[t252+53]〈PrefixCodeBlockCountsLiterals〉) (56868)
  a=r 252 (56868)
  a+= 53 (56870)
  d=a (56872)
  c=*d (56873)
  a=r 252 (56874)
  a+= 165 (56876)
  d=a (56878)
  a=*d (56879)
  a==c (56880)
  a=0 (56881)
  jf 1 (56882)
  a++ (56884)
  r=a 1 (56885)
  (         ifN t1 goto else_2232) (56887)
  a== 0 (56887)
  jf 3 (56889)
  lj 57083 (56891)
  (                    3744:       if meta_block_prefix_tree_block_counts_literals != NONE:) (56894)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 != 4294967295) (56894)
  c=0 (56894)
  c-- (56895)
  a=r 252 (56896)
  a+= 141 (56898)
  d=a (56900)
  a=*d (56901)
  a==c (56902)
  a=0 (56903)
  jt 1 (56904)
  a++ (56906)
  r=a 1 (56907)
  (         ifN t1 goto else_2235) (56909)
  a== 0 (56909)
  jf 3 (56911)
  lj 57034 (56913)
  (                    3745:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_literals[0]〉〉) (56916)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 >> 31) (56916)
  c= 31 (56916)
  a=*d (56918)
  a>>=c (56919)
  r=a 1 (56920)
  (         if t1 goto isM_2237) (56922)
  a== 0 (56922)
  jt 3 (56924)
  lj 56941 (56926)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 + 0) (56929)
  c=0 (56929)
  a=*d (56930)
  a+=c (56931)
  r=a 1 (56932)
  (         t1 = H[t1]〈〉) (56934)
  d=a (56934)
  a=*d (56935)
  r=a 1 (56936)
  (         goto MorHdone_2238) (56938)
  lj 56959 (56938)
  (        :isM_2237:) (56941)
  (         t1 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 & 2147483647) (56941)
  a=0 (56941)
  a-- (56942)
  a>>= 1 (56943)
  c=a (56945)
  a=r 252 (56946)
  a+= 141 (56948)
  d=a (56950)
  a=*d (56951)
  a&=c (56952)
  r=a 1 (56953)
  (         t1 = t1 + 0) (56955)
  (         t1 = M[t1]) (56955)
  b=a (56955)
  a=*b (56956)
  r=a 1 (56957)
  (        :MorHdone_2238:) (56959)
  (         H[t0+6]〈〉 = t0) (56959)
  a=r 0 (56959)
  a+= 6 (56961)
  d=a (56963)
  a=r 0 (56964)
  *d=a (56966)
  (saved bsp, return id:) (56967)
  (         H[t0+7]〈〉 = 275) (56967)
  d++ (56967)
  a= 1 (56968)
  a<<= 8 (56970)
  a+= 19 (56972)
  *d=a (56974)
  (push arguments:) (56975)
  (         H[t0+8]〈〉 = t1) (56975)
  d++ (56975)
  a=r 1 (56976)
  *d=a (56978)
  (         t0 = t0 + 7) (56979)
  c= 7 (56979)
  a=r 0 (56981)
  a+=c (56983)
  r=a 0 (56984)
  (         goto addr_free_pH) (56986)
  lj 2913 (56986)
  (        :return_id_275:) (56989)
  (         t2 = t1) (56989)
  a=r 1 (56989)
  r=a 2 (56991)
  (                    3746:         free_pH〈meta_block_prefix_tree_block_counts_literals〉) (56993)
  (         H[t0+6]〈〉 = t0) (56993)
  a=r 0 (56993)
  a+= 6 (56995)
  d=a (56997)
  a=r 0 (56998)
  *d=a (57000)
  (saved bsp, return id:) (57001)
  (         H[t0+7]〈〉 = 276) (57001)
  d++ (57001)
  a= 1 (57002)
  a<<= 8 (57004)
  a+= 20 (57006)
  *d=a (57008)
  (push arguments:) (57009)
  (         H[t0+8]〈〉 = H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉) (57009)
  a=r 252 (57009)
  a+= 141 (57011)
  d=a (57013)
  c=*d (57014)
  a=r 0 (57015)
  a+= 8 (57017)
  d=a (57019)
  *d=c (57020)
  (         t0 = t0 + 7) (57021)
  c= 7 (57021)
  a=r 0 (57023)
  a+=c (57025)
  r=a 0 (57026)
  (         goto addr_free_pH) (57028)
  lj 2913 (57028)
  (        :return_id_276:) (57031)
  (         goto endif_2236) (57031)
  lj 57034 (57031)
  (        :else_2235:) (57034)
  (        :endif_2236:) (57034)
  (                    3747:       meta_block_prefix_tree_block_counts_literals = PrefixCodeBlockCountsLiterals_data) (57034)
  (         H[t252+141]〈meta_block_prefix_tree_block_counts_literals〉 = H[t252+54]〈PrefixCodeBlockCountsLiterals_data〉) (57034)
  a=r 252 (57034)
  a+= 54 (57036)
  d=a (57038)
  c=*d (57039)
  a=r 252 (57040)
  a+= 141 (57042)
  d=a (57044)
  *d=c (57045)
  (                    3748:       state = parse_first_block_count_literals〈〉) (57046)
  (         H[t0+6]〈〉 = t0) (57046)
  a=r 0 (57046)
  a+= 6 (57048)
  d=a (57050)
  a=r 0 (57051)
  *d=a (57053)
  (saved bsp, return id:) (57054)
  (         H[t0+7]〈〉 = 277) (57054)
  d++ (57054)
  a= 1 (57055)
  a<<= 8 (57057)
  a+= 21 (57059)
  *d=a (57061)
  (push arguments:) (57062)
  (         t0 = t0 + 7) (57062)
  c= 7 (57062)
  a=r 0 (57064)
  a+=c (57066)
  r=a 0 (57067)
  (         goto parse_first_block_count_literals) (57069)
  lj 44090 (57069)
  (        :return_id_277:) (57072)
  (         H[t252+165]〈state〉 = t1) (57072)
  a=r 252 (57072)
  a+= 165 (57074)
  d=a (57076)
  a=r 1 (57077)
  *d=a (57079)
  (         goto endif_2233) (57080)
  lj 62610 (57080)
  (        :else_2232:) (57083)
  (                    3749:     elif state == FirstBlockCountLiterals:) (57083)
  (         t1 = H[t252+165]〈state〉 == H[t252+55]〈FirstBlockCountLiterals〉) (57083)
  a=r 252 (57083)
  a+= 55 (57085)
  d=a (57087)
  c=*d (57088)
  a=r 252 (57089)
  a+= 165 (57091)
  d=a (57093)
  a=*d (57094)
  a==c (57095)
  a=0 (57096)
  jf 1 (57097)
  a++ (57099)
  r=a 1 (57100)
  (         ifN t1 goto else_2240) (57102)
  a== 0 (57102)
  jf 3 (57104)
  lj 57158 (57106)
  (                    3750:       meta_block_blen_l = FirstBlockCountLiterals_data) (57109)
  (         H[t252+146]〈meta_block_blen_l〉 = H[t252+56]〈FirstBlockCountLiterals_data〉) (57109)
  a=r 252 (57109)
  a+= 56 (57111)
  d=a (57113)
  c=*d (57114)
  a=r 252 (57115)
  a+= 146 (57117)
  d=a (57119)
  *d=c (57120)
  (                    3751:       state = parse_n_bltypes_i〈〉) (57121)
  (         H[t0+6]〈〉 = t0) (57121)
  a=r 0 (57121)
  a+= 6 (57123)
  d=a (57125)
  a=r 0 (57126)
  *d=a (57128)
  (saved bsp, return id:) (57129)
  (         H[t0+7]〈〉 = 278) (57129)
  d++ (57129)
  a= 1 (57130)
  a<<= 8 (57132)
  a+= 22 (57134)
  *d=a (57136)
  (push arguments:) (57137)
  (         t0 = t0 + 7) (57137)
  c= 7 (57137)
  a=r 0 (57139)
  a+=c (57141)
  r=a 0 (57142)
  (         goto parse_n_bltypes_i) (57144)
  lj 36870 (57144)
  (        :return_id_278:) (57147)
  (         H[t252+165]〈state〉 = t1) (57147)
  a=r 252 (57147)
  a+= 165 (57149)
  d=a (57151)
  a=r 1 (57152)
  *d=a (57154)
  (         goto endif_2241) (57155)
  lj 62610 (57155)
  (        :else_2240:) (57158)
  (                    3752:     elif state == NBltypesI:) (57158)
  (         t1 = H[t252+165]〈state〉 == H[t252+57]〈NBltypesI〉) (57158)
  a=r 252 (57158)
  a+= 57 (57160)
  d=a (57162)
  c=*d (57163)
  a=r 252 (57164)
  a+= 165 (57166)
  d=a (57168)
  a=*d (57169)
  a==c (57170)
  a=0 (57171)
  jf 1 (57172)
  a++ (57174)
  r=a 1 (57175)
  (         ifN t1 goto else_2243) (57177)
  a== 0 (57177)
  jf 3 (57179)
  lj 57296 (57181)
  (                    3753:       meta_block_header_n_bltypes_i = NBltypesI_data) (57184)
  (         H[t252+132]〈meta_block_header_n_bltypes_i〉 = H[t252+58]〈NBltypesI_data〉) (57184)
  a=r 252 (57184)
  a+= 58 (57186)
  d=a (57188)
  c=*d (57189)
  a=r 252 (57190)
  a+= 132 (57192)
  d=a (57194)
  *d=c (57195)
  (                    3754:       if NBltypesI_data >= 2:) (57196)
  (         t1 = H[t252+58]〈NBltypesI_data〉 >= 2) (57196)
  c= 2 (57196)
  a=r 252 (57198)
  a+= 58 (57200)
  d=a (57202)
  a=*d (57203)
  a==c (57204)
  jt 4 (57205)
  a>c (57207)
  a=0 (57208)
  jf 2 (57209)
  a= 1 (57211)
  r=a 1 (57213)
  (         ifN t1 goto else_2246) (57215)
  a== 0 (57215)
  jf 3 (57217)
  lj 57259 (57219)
  (                    3755:         state = parse_prefix_code_block_types_insert_and_copy_lengths〈〉) (57222)
  (         H[t0+6]〈〉 = t0) (57222)
  a=r 0 (57222)
  a+= 6 (57224)
  d=a (57226)
  a=r 0 (57227)
  *d=a (57229)
  (saved bsp, return id:) (57230)
  (         H[t0+7]〈〉 = 279) (57230)
  d++ (57230)
  a= 1 (57231)
  a<<= 8 (57233)
  a+= 23 (57235)
  *d=a (57237)
  (push arguments:) (57238)
  (         t0 = t0 + 7) (57238)
  c= 7 (57238)
  a=r 0 (57240)
  a+=c (57242)
  r=a 0 (57243)
  (         goto parse_prefix_code_block_types_insert_and_copy_lengths) (57245)
  lj 42854 (57245)
  (        :return_id_279:) (57248)
  (         H[t252+165]〈state〉 = t1) (57248)
  a=r 252 (57248)
  a+= 165 (57250)
  d=a (57252)
  a=r 1 (57253)
  *d=a (57255)
  (         goto endif_2247) (57256)
  lj 57293 (57256)
  (        :else_2246:) (57259)
  (                    3757:         state = parse_n_bltypes_d〈〉) (57259)
  (         H[t0+6]〈〉 = t0) (57259)
  a=r 0 (57259)
  a+= 6 (57261)
  d=a (57263)
  a=r 0 (57264)
  *d=a (57266)
  (saved bsp, return id:) (57267)
  (         H[t0+7]〈〉 = 280) (57267)
  d++ (57267)
  a= 1 (57268)
  a<<= 8 (57270)
  a+= 24 (57272)
  *d=a (57274)
  (push arguments:) (57275)
  (         t0 = t0 + 7) (57275)
  c= 7 (57275)
  a=r 0 (57277)
  a+=c (57279)
  r=a 0 (57280)
  (         goto parse_n_bltypes_d) (57282)
  lj 36961 (57282)
  (        :return_id_280:) (57285)
  (         H[t252+165]〈state〉 = t1) (57285)
  a=r 252 (57285)
  a+= 165 (57287)
  d=a (57289)
  a=r 1 (57290)
  *d=a (57292)
  (        :endif_2247:) (57293)
  (         goto endif_2244) (57293)
  lj 62610 (57293)
  (        :else_2243:) (57296)
  (                    3758:     elif state == PrefixCodeBlockTypesInsertAndCopyLengths:) (57296)
  (         t1 = H[t252+165]〈state〉 == H[t252+59]〈PrefixCodeBlockTypesInsertAndCopyLengths〉) (57296)
  a=r 252 (57296)
  a+= 59 (57298)
  d=a (57300)
  c=*d (57301)
  a=r 252 (57302)
  a+= 165 (57304)
  d=a (57306)
  a=*d (57307)
  a==c (57308)
  a=0 (57309)
  jf 1 (57310)
  a++ (57312)
  r=a 1 (57313)
  (         ifN t1 goto else_2249) (57315)
  a== 0 (57315)
  jf 3 (57317)
  lj 57511 (57319)
  (                    3759:       if meta_block_prefix_tree_block_types_insert_and_copy_lengths != NONE:) (57322)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 != 4294967295) (57322)
  c=0 (57322)
  c-- (57323)
  a=r 252 (57324)
  a+= 153 (57326)
  d=a (57328)
  a=*d (57329)
  a==c (57330)
  a=0 (57331)
  jt 1 (57332)
  a++ (57334)
  r=a 1 (57335)
  (         ifN t1 goto else_2252) (57337)
  a== 0 (57337)
  jf 3 (57339)
  lj 57462 (57341)
  (                    3760:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_insert_and_copy_lengths[0]〉〉) (57344)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 >> 31) (57344)
  c= 31 (57344)
  a=*d (57346)
  a>>=c (57347)
  r=a 1 (57348)
  (         if t1 goto isM_2254) (57350)
  a== 0 (57350)
  jt 3 (57352)
  lj 57369 (57354)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 + 0) (57357)
  c=0 (57357)
  a=*d (57358)
  a+=c (57359)
  r=a 1 (57360)
  (         t1 = H[t1]〈〉) (57362)
  d=a (57362)
  a=*d (57363)
  r=a 1 (57364)
  (         goto MorHdone_2255) (57366)
  lj 57387 (57366)
  (        :isM_2254:) (57369)
  (         t1 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 & 2147483647) (57369)
  a=0 (57369)
  a-- (57370)
  a>>= 1 (57371)
  c=a (57373)
  a=r 252 (57374)
  a+= 153 (57376)
  d=a (57378)
  a=*d (57379)
  a&=c (57380)
  r=a 1 (57381)
  (         t1 = t1 + 0) (57383)
  (         t1 = M[t1]) (57383)
  b=a (57383)
  a=*b (57384)
  r=a 1 (57385)
  (        :MorHdone_2255:) (57387)
  (         H[t0+6]〈〉 = t0) (57387)
  a=r 0 (57387)
  a+= 6 (57389)
  d=a (57391)
  a=r 0 (57392)
  *d=a (57394)
  (saved bsp, return id:) (57395)
  (         H[t0+7]〈〉 = 281) (57395)
  d++ (57395)
  a= 1 (57396)
  a<<= 8 (57398)
  a+= 25 (57400)
  *d=a (57402)
  (push arguments:) (57403)
  (         H[t0+8]〈〉 = t1) (57403)
  d++ (57403)
  a=r 1 (57404)
  *d=a (57406)
  (         t0 = t0 + 7) (57407)
  c= 7 (57407)
  a=r 0 (57409)
  a+=c (57411)
  r=a 0 (57412)
  (         goto addr_free_pH) (57414)
  lj 2913 (57414)
  (        :return_id_281:) (57417)
  (         t2 = t1) (57417)
  a=r 1 (57417)
  r=a 2 (57419)
  (                    3761:         free_pH〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉) (57421)
  (         H[t0+6]〈〉 = t0) (57421)
  a=r 0 (57421)
  a+= 6 (57423)
  d=a (57425)
  a=r 0 (57426)
  *d=a (57428)
  (saved bsp, return id:) (57429)
  (         H[t0+7]〈〉 = 282) (57429)
  d++ (57429)
  a= 1 (57430)
  a<<= 8 (57432)
  a+= 26 (57434)
  *d=a (57436)
  (push arguments:) (57437)
  (         H[t0+8]〈〉 = H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉) (57437)
  a=r 252 (57437)
  a+= 153 (57439)
  d=a (57441)
  c=*d (57442)
  a=r 0 (57443)
  a+= 8 (57445)
  d=a (57447)
  *d=c (57448)
  (         t0 = t0 + 7) (57449)
  c= 7 (57449)
  a=r 0 (57451)
  a+=c (57453)
  r=a 0 (57454)
  (         goto addr_free_pH) (57456)
  lj 2913 (57456)
  (        :return_id_282:) (57459)
  (         goto endif_2253) (57459)
  lj 57462 (57459)
  (        :else_2252:) (57462)
  (        :endif_2253:) (57462)
  (                    3762:       meta_block_prefix_tree_block_types_insert_and_copy_lengths = PrefixCodeBlockTypesInsertAndCopyLengths_data) (57462)
  (         H[t252+153]〈meta_block_prefix_tree_block_types_insert_and_copy_lengths〉 = H[t252+60]〈PrefixCodeBlockTypesInsertAndCopyLengths_data〉) (57462)
  a=r 252 (57462)
  a+= 60 (57464)
  d=a (57466)
  c=*d (57467)
  a=r 252 (57468)
  a+= 153 (57470)
  d=a (57472)
  *d=c (57473)
  (                    3763:       state = parse_prefix_code_block_counts_insert_and_copy_lengths〈〉) (57474)
  (         H[t0+6]〈〉 = t0) (57474)
  a=r 0 (57474)
  a+= 6 (57476)
  d=a (57478)
  a=r 0 (57479)
  *d=a (57481)
  (saved bsp, return id:) (57482)
  (         H[t0+7]〈〉 = 283) (57482)
  d++ (57482)
  a= 1 (57483)
  a<<= 8 (57485)
  a+= 27 (57487)
  *d=a (57489)
  (push arguments:) (57490)
  (         t0 = t0 + 7) (57490)
  c= 7 (57490)
  a=r 0 (57492)
  a+=c (57494)
  r=a 0 (57495)
  (         goto parse_prefix_code_block_counts_insert_and_copy_lengths) (57497)
  lj 42979 (57497)
  (        :return_id_283:) (57500)
  (         H[t252+165]〈state〉 = t1) (57500)
  a=r 252 (57500)
  a+= 165 (57502)
  d=a (57504)
  a=r 1 (57505)
  *d=a (57507)
  (         goto endif_2250) (57508)
  lj 62610 (57508)
  (        :else_2249:) (57511)
  (                    3764:     elif state == PrefixCodeBlockCountsInsertAndCopyLengths:) (57511)
  (         t1 = H[t252+165]〈state〉 == H[t252+61]〈PrefixCodeBlockCountsInsertAndCopyLengths〉) (57511)
  a=r 252 (57511)
  a+= 61 (57513)
  d=a (57515)
  c=*d (57516)
  a=r 252 (57517)
  a+= 165 (57519)
  d=a (57521)
  a=*d (57522)
  a==c (57523)
  a=0 (57524)
  jf 1 (57525)
  a++ (57527)
  r=a 1 (57528)
  (         ifN t1 goto else_2257) (57530)
  a== 0 (57530)
  jf 3 (57532)
  lj 57726 (57534)
  (                    3765:       if meta_block_prefix_tree_block_counts_insert_and_copy_lengths != NONE:) (57537)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 != 4294967295) (57537)
  c=0 (57537)
  c-- (57538)
  a=r 252 (57539)
  a+= 154 (57541)
  d=a (57543)
  a=*d (57544)
  a==c (57545)
  a=0 (57546)
  jt 1 (57547)
  a++ (57549)
  r=a 1 (57550)
  (         ifN t1 goto else_2260) (57552)
  a== 0 (57552)
  jf 3 (57554)
  lj 57677 (57556)
  (                    3766:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths[0]〉〉) (57559)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 >> 31) (57559)
  c= 31 (57559)
  a=*d (57561)
  a>>=c (57562)
  r=a 1 (57563)
  (         if t1 goto isM_2262) (57565)
  a== 0 (57565)
  jt 3 (57567)
  lj 57584 (57569)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 + 0) (57572)
  c=0 (57572)
  a=*d (57573)
  a+=c (57574)
  r=a 1 (57575)
  (         t1 = H[t1]〈〉) (57577)
  d=a (57577)
  a=*d (57578)
  r=a 1 (57579)
  (         goto MorHdone_2263) (57581)
  lj 57602 (57581)
  (        :isM_2262:) (57584)
  (         t1 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 & 2147483647) (57584)
  a=0 (57584)
  a-- (57585)
  a>>= 1 (57586)
  c=a (57588)
  a=r 252 (57589)
  a+= 154 (57591)
  d=a (57593)
  a=*d (57594)
  a&=c (57595)
  r=a 1 (57596)
  (         t1 = t1 + 0) (57598)
  (         t1 = M[t1]) (57598)
  b=a (57598)
  a=*b (57599)
  r=a 1 (57600)
  (        :MorHdone_2263:) (57602)
  (         H[t0+6]〈〉 = t0) (57602)
  a=r 0 (57602)
  a+= 6 (57604)
  d=a (57606)
  a=r 0 (57607)
  *d=a (57609)
  (saved bsp, return id:) (57610)
  (         H[t0+7]〈〉 = 284) (57610)
  d++ (57610)
  a= 1 (57611)
  a<<= 8 (57613)
  a+= 28 (57615)
  *d=a (57617)
  (push arguments:) (57618)
  (         H[t0+8]〈〉 = t1) (57618)
  d++ (57618)
  a=r 1 (57619)
  *d=a (57621)
  (         t0 = t0 + 7) (57622)
  c= 7 (57622)
  a=r 0 (57624)
  a+=c (57626)
  r=a 0 (57627)
  (         goto addr_free_pH) (57629)
  lj 2913 (57629)
  (        :return_id_284:) (57632)
  (         t2 = t1) (57632)
  a=r 1 (57632)
  r=a 2 (57634)
  (                    3767:         free_pH〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (57636)
  (         H[t0+6]〈〉 = t0) (57636)
  a=r 0 (57636)
  a+= 6 (57638)
  d=a (57640)
  a=r 0 (57641)
  *d=a (57643)
  (saved bsp, return id:) (57644)
  (         H[t0+7]〈〉 = 285) (57644)
  d++ (57644)
  a= 1 (57645)
  a<<= 8 (57647)
  a+= 29 (57649)
  *d=a (57651)
  (push arguments:) (57652)
  (         H[t0+8]〈〉 = H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉) (57652)
  a=r 252 (57652)
  a+= 154 (57654)
  d=a (57656)
  c=*d (57657)
  a=r 0 (57658)
  a+= 8 (57660)
  d=a (57662)
  *d=c (57663)
  (         t0 = t0 + 7) (57664)
  c= 7 (57664)
  a=r 0 (57666)
  a+=c (57668)
  r=a 0 (57669)
  (         goto addr_free_pH) (57671)
  lj 2913 (57671)
  (        :return_id_285:) (57674)
  (         goto endif_2261) (57674)
  lj 57677 (57674)
  (        :else_2260:) (57677)
  (        :endif_2261:) (57677)
  (                    3768:       meta_block_prefix_tree_block_counts_insert_and_copy_lengths = PrefixCodeBlockCountsInsertAndCopyLengths_data) (57677)
  (         H[t252+154]〈meta_block_prefix_tree_block_counts_insert_and_copy_lengths〉 = H[t252+62]〈PrefixCodeBlockCountsInsertAndCopyLengths_data〉) (57677)
  a=r 252 (57677)
  a+= 62 (57679)
  d=a (57681)
  c=*d (57682)
  a=r 252 (57683)
  a+= 154 (57685)
  d=a (57687)
  *d=c (57688)
  (                    3769:       state = parse_first_block_count_insert_and_copy_lengths〈〉) (57689)
  (         H[t0+6]〈〉 = t0) (57689)
  a=r 0 (57689)
  a+= 6 (57691)
  d=a (57693)
  a=r 0 (57694)
  *d=a (57696)
  (saved bsp, return id:) (57697)
  (         H[t0+7]〈〉 = 286) (57697)
  d++ (57697)
  a= 1 (57698)
  a<<= 8 (57700)
  a+= 30 (57702)
  *d=a (57704)
  (push arguments:) (57705)
  (         t0 = t0 + 7) (57705)
  c= 7 (57705)
  a=r 0 (57707)
  a+=c (57709)
  r=a 0 (57710)
  (         goto parse_first_block_count_insert_and_copy_lengths) (57712)
  lj 44191 (57712)
  (        :return_id_286:) (57715)
  (         H[t252+165]〈state〉 = t1) (57715)
  a=r 252 (57715)
  a+= 165 (57717)
  d=a (57719)
  a=r 1 (57720)
  *d=a (57722)
  (         goto endif_2258) (57723)
  lj 62610 (57723)
  (        :else_2257:) (57726)
  (                    3770:     elif state == FirstBlockCountInsertAndCopyLengths:) (57726)
  (         t1 = H[t252+165]〈state〉 == H[t252+63]〈FirstBlockCountInsertAndCopyLengths〉) (57726)
  a=r 252 (57726)
  a+= 63 (57728)
  d=a (57730)
  c=*d (57731)
  a=r 252 (57732)
  a+= 165 (57734)
  d=a (57736)
  a=*d (57737)
  a==c (57738)
  a=0 (57739)
  jf 1 (57740)
  a++ (57742)
  r=a 1 (57743)
  (         ifN t1 goto else_2265) (57745)
  a== 0 (57745)
  jf 3 (57747)
  lj 57801 (57749)
  (                    3771:       meta_block_blen_i = FirstBlockCountInsertAndCopyLengths_data) (57752)
  (         H[t252+147]〈meta_block_blen_i〉 = H[t252+64]〈FirstBlockCountInsertAndCopyLengths_data〉) (57752)
  a=r 252 (57752)
  a+= 64 (57754)
  d=a (57756)
  c=*d (57757)
  a=r 252 (57758)
  a+= 147 (57760)
  d=a (57762)
  *d=c (57763)
  (                    3772:       state = parse_n_bltypes_d〈〉) (57764)
  (         H[t0+6]〈〉 = t0) (57764)
  a=r 0 (57764)
  a+= 6 (57766)
  d=a (57768)
  a=r 0 (57769)
  *d=a (57771)
  (saved bsp, return id:) (57772)
  (         H[t0+7]〈〉 = 287) (57772)
  d++ (57772)
  a= 1 (57773)
  a<<= 8 (57775)
  a+= 31 (57777)
  *d=a (57779)
  (push arguments:) (57780)
  (         t0 = t0 + 7) (57780)
  c= 7 (57780)
  a=r 0 (57782)
  a+=c (57784)
  r=a 0 (57785)
  (         goto parse_n_bltypes_d) (57787)
  lj 36961 (57787)
  (        :return_id_287:) (57790)
  (         H[t252+165]〈state〉 = t1) (57790)
  a=r 252 (57790)
  a+= 165 (57792)
  d=a (57794)
  a=r 1 (57795)
  *d=a (57797)
  (         goto endif_2266) (57798)
  lj 62610 (57798)
  (        :else_2265:) (57801)
  (                    3773:     elif state == NBltypesD:) (57801)
  (         t1 = H[t252+165]〈state〉 == H[t252+65]〈NBltypesD〉) (57801)
  a=r 252 (57801)
  a+= 65 (57803)
  d=a (57805)
  c=*d (57806)
  a=r 252 (57807)
  a+= 165 (57809)
  d=a (57811)
  a=*d (57812)
  a==c (57813)
  a=0 (57814)
  jf 1 (57815)
  a++ (57817)
  r=a 1 (57818)
  (         ifN t1 goto else_2268) (57820)
  a== 0 (57820)
  jf 3 (57822)
  lj 57939 (57824)
  (                    3774:       meta_block_header_n_bltypes_d = NBltypesD_data) (57827)
  (         H[t252+133]〈meta_block_header_n_bltypes_d〉 = H[t252+66]〈NBltypesD_data〉) (57827)
  a=r 252 (57827)
  a+= 66 (57829)
  d=a (57831)
  c=*d (57832)
  a=r 252 (57833)
  a+= 133 (57835)
  d=a (57837)
  *d=c (57838)
  (                    3775:       if NBltypesD_data >= 2:) (57839)
  (         t1 = H[t252+66]〈NBltypesD_data〉 >= 2) (57839)
  c= 2 (57839)
  a=r 252 (57841)
  a+= 66 (57843)
  d=a (57845)
  a=*d (57846)
  a==c (57847)
  jt 4 (57848)
  a>c (57850)
  a=0 (57851)
  jf 2 (57852)
  a= 1 (57854)
  r=a 1 (57856)
  (         ifN t1 goto else_2271) (57858)
  a== 0 (57858)
  jf 3 (57860)
  lj 57902 (57862)
  (                    3776:         state = parse_prefix_code_block_types_distances〈〉) (57865)
  (         H[t0+6]〈〉 = t0) (57865)
  a=r 0 (57865)
  a+= 6 (57867)
  d=a (57869)
  a=r 0 (57870)
  *d=a (57872)
  (saved bsp, return id:) (57873)
  (         H[t0+7]〈〉 = 288) (57873)
  d++ (57873)
  a= 1 (57874)
  a<<= 8 (57876)
  a+= 32 (57878)
  *d=a (57880)
  (push arguments:) (57881)
  (         t0 = t0 + 7) (57881)
  c= 7 (57881)
  a=r 0 (57883)
  a+=c (57885)
  r=a 0 (57886)
  (         goto parse_prefix_code_block_types_distances) (57888)
  lj 43079 (57888)
  (        :return_id_288:) (57891)
  (         H[t252+165]〈state〉 = t1) (57891)
  a=r 252 (57891)
  a+= 165 (57893)
  d=a (57895)
  a=r 1 (57896)
  *d=a (57898)
  (         goto endif_2272) (57899)
  lj 57936 (57899)
  (        :else_2271:) (57902)
  (                    3778:         state = parse_n_postfix〈〉) (57902)
  (         H[t0+6]〈〉 = t0) (57902)
  a=r 0 (57902)
  a+= 6 (57904)
  d=a (57906)
  a=r 0 (57907)
  *d=a (57909)
  (saved bsp, return id:) (57910)
  (         H[t0+7]〈〉 = 289) (57910)
  d++ (57910)
  a= 1 (57911)
  a<<= 8 (57913)
  a+= 33 (57915)
  *d=a (57917)
  (push arguments:) (57918)
  (         t0 = t0 + 7) (57918)
  c= 7 (57918)
  a=r 0 (57920)
  a+=c (57922)
  r=a 0 (57923)
  (         goto parse_n_postfix) (57925)
  lj 37052 (57925)
  (        :return_id_289:) (57928)
  (         H[t252+165]〈state〉 = t1) (57928)
  a=r 252 (57928)
  a+= 165 (57930)
  d=a (57932)
  a=r 1 (57933)
  *d=a (57935)
  (        :endif_2272:) (57936)
  (         goto endif_2269) (57936)
  lj 62610 (57936)
  (        :else_2268:) (57939)
  (                    3779:     elif state == PrefixCodeBlockTypesDistances:) (57939)
  (         t1 = H[t252+165]〈state〉 == H[t252+67]〈PrefixCodeBlockTypesDistances〉) (57939)
  a=r 252 (57939)
  a+= 67 (57941)
  d=a (57943)
  c=*d (57944)
  a=r 252 (57945)
  a+= 165 (57947)
  d=a (57949)
  a=*d (57950)
  a==c (57951)
  a=0 (57952)
  jf 1 (57953)
  a++ (57955)
  r=a 1 (57956)
  (         ifN t1 goto else_2274) (57958)
  a== 0 (57958)
  jf 3 (57960)
  lj 58154 (57962)
  (                    3780:       if meta_block_prefix_tree_block_types_distances != NONE:) (57965)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 != 4294967295) (57965)
  c=0 (57965)
  c-- (57966)
  a=r 252 (57967)
  a+= 155 (57969)
  d=a (57971)
  a=*d (57972)
  a==c (57973)
  a=0 (57974)
  jt 1 (57975)
  a++ (57977)
  r=a 1 (57978)
  (         ifN t1 goto else_2277) (57980)
  a== 0 (57980)
  jf 3 (57982)
  lj 58105 (57984)
  (                    3781:         free_pH〈array_pH〈meta_block_prefix_tree_block_types_distances[0]〉〉) (57987)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 >> 31) (57987)
  c= 31 (57987)
  a=*d (57989)
  a>>=c (57990)
  r=a 1 (57991)
  (         if t1 goto isM_2279) (57993)
  a== 0 (57993)
  jt 3 (57995)
  lj 58012 (57997)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 + 0) (58000)
  c=0 (58000)
  a=*d (58001)
  a+=c (58002)
  r=a 1 (58003)
  (         t1 = H[t1]〈〉) (58005)
  d=a (58005)
  a=*d (58006)
  r=a 1 (58007)
  (         goto MorHdone_2280) (58009)
  lj 58030 (58009)
  (        :isM_2279:) (58012)
  (         t1 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 & 2147483647) (58012)
  a=0 (58012)
  a-- (58013)
  a>>= 1 (58014)
  c=a (58016)
  a=r 252 (58017)
  a+= 155 (58019)
  d=a (58021)
  a=*d (58022)
  a&=c (58023)
  r=a 1 (58024)
  (         t1 = t1 + 0) (58026)
  (         t1 = M[t1]) (58026)
  b=a (58026)
  a=*b (58027)
  r=a 1 (58028)
  (        :MorHdone_2280:) (58030)
  (         H[t0+6]〈〉 = t0) (58030)
  a=r 0 (58030)
  a+= 6 (58032)
  d=a (58034)
  a=r 0 (58035)
  *d=a (58037)
  (saved bsp, return id:) (58038)
  (         H[t0+7]〈〉 = 290) (58038)
  d++ (58038)
  a= 1 (58039)
  a<<= 8 (58041)
  a+= 34 (58043)
  *d=a (58045)
  (push arguments:) (58046)
  (         H[t0+8]〈〉 = t1) (58046)
  d++ (58046)
  a=r 1 (58047)
  *d=a (58049)
  (         t0 = t0 + 7) (58050)
  c= 7 (58050)
  a=r 0 (58052)
  a+=c (58054)
  r=a 0 (58055)
  (         goto addr_free_pH) (58057)
  lj 2913 (58057)
  (        :return_id_290:) (58060)
  (         t2 = t1) (58060)
  a=r 1 (58060)
  r=a 2 (58062)
  (                    3782:         free_pH〈meta_block_prefix_tree_block_types_distances〉) (58064)
  (         H[t0+6]〈〉 = t0) (58064)
  a=r 0 (58064)
  a+= 6 (58066)
  d=a (58068)
  a=r 0 (58069)
  *d=a (58071)
  (saved bsp, return id:) (58072)
  (         H[t0+7]〈〉 = 291) (58072)
  d++ (58072)
  a= 1 (58073)
  a<<= 8 (58075)
  a+= 35 (58077)
  *d=a (58079)
  (push arguments:) (58080)
  (         H[t0+8]〈〉 = H[t252+155]〈meta_block_prefix_tree_block_types_distances〉) (58080)
  a=r 252 (58080)
  a+= 155 (58082)
  d=a (58084)
  c=*d (58085)
  a=r 0 (58086)
  a+= 8 (58088)
  d=a (58090)
  *d=c (58091)
  (         t0 = t0 + 7) (58092)
  c= 7 (58092)
  a=r 0 (58094)
  a+=c (58096)
  r=a 0 (58097)
  (         goto addr_free_pH) (58099)
  lj 2913 (58099)
  (        :return_id_291:) (58102)
  (         goto endif_2278) (58102)
  lj 58105 (58102)
  (        :else_2277:) (58105)
  (        :endif_2278:) (58105)
  (                    3783:       meta_block_prefix_tree_block_types_distances = PrefixCodeBlockTypesDistances_data) (58105)
  (         H[t252+155]〈meta_block_prefix_tree_block_types_distances〉 = H[t252+68]〈PrefixCodeBlockTypesDistances_data〉) (58105)
  a=r 252 (58105)
  a+= 68 (58107)
  d=a (58109)
  c=*d (58110)
  a=r 252 (58111)
  a+= 155 (58113)
  d=a (58115)
  *d=c (58116)
  (                    3784:       state = parse_prefix_code_block_counts_distances〈〉) (58117)
  (         H[t0+6]〈〉 = t0) (58117)
  a=r 0 (58117)
  a+= 6 (58119)
  d=a (58121)
  a=r 0 (58122)
  *d=a (58124)
  (saved bsp, return id:) (58125)
  (         H[t0+7]〈〉 = 292) (58125)
  d++ (58125)
  a= 1 (58126)
  a<<= 8 (58128)
  a+= 36 (58130)
  *d=a (58132)
  (push arguments:) (58133)
  (         t0 = t0 + 7) (58133)
  c= 7 (58133)
  a=r 0 (58135)
  a+=c (58137)
  r=a 0 (58138)
  (         goto parse_prefix_code_block_counts_distances) (58140)
  lj 43204 (58140)
  (        :return_id_292:) (58143)
  (         H[t252+165]〈state〉 = t1) (58143)
  a=r 252 (58143)
  a+= 165 (58145)
  d=a (58147)
  a=r 1 (58148)
  *d=a (58150)
  (         goto endif_2275) (58151)
  lj 62610 (58151)
  (        :else_2274:) (58154)
  (                    3785:     elif state == PrefixCodeBlockCountsDistances:) (58154)
  (         t1 = H[t252+165]〈state〉 == H[t252+69]〈PrefixCodeBlockCountsDistances〉) (58154)
  a=r 252 (58154)
  a+= 69 (58156)
  d=a (58158)
  c=*d (58159)
  a=r 252 (58160)
  a+= 165 (58162)
  d=a (58164)
  a=*d (58165)
  a==c (58166)
  a=0 (58167)
  jf 1 (58168)
  a++ (58170)
  r=a 1 (58171)
  (         ifN t1 goto else_2282) (58173)
  a== 0 (58173)
  jf 3 (58175)
  lj 58369 (58177)
  (                    3786:       if meta_block_prefix_tree_block_counts_distances != NONE:) (58180)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 != 4294967295) (58180)
  c=0 (58180)
  c-- (58181)
  a=r 252 (58182)
  a+= 156 (58184)
  d=a (58186)
  a=*d (58187)
  a==c (58188)
  a=0 (58189)
  jt 1 (58190)
  a++ (58192)
  r=a 1 (58193)
  (         ifN t1 goto else_2285) (58195)
  a== 0 (58195)
  jf 3 (58197)
  lj 58320 (58199)
  (                    3787:         free_pH〈array_pH〈meta_block_prefix_tree_block_counts_distances[0]〉〉) (58202)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 >> 31) (58202)
  c= 31 (58202)
  a=*d (58204)
  a>>=c (58205)
  r=a 1 (58206)
  (         if t1 goto isM_2287) (58208)
  a== 0 (58208)
  jt 3 (58210)
  lj 58227 (58212)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 + 0) (58215)
  c=0 (58215)
  a=*d (58216)
  a+=c (58217)
  r=a 1 (58218)
  (         t1 = H[t1]〈〉) (58220)
  d=a (58220)
  a=*d (58221)
  r=a 1 (58222)
  (         goto MorHdone_2288) (58224)
  lj 58245 (58224)
  (        :isM_2287:) (58227)
  (         t1 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 & 2147483647) (58227)
  a=0 (58227)
  a-- (58228)
  a>>= 1 (58229)
  c=a (58231)
  a=r 252 (58232)
  a+= 156 (58234)
  d=a (58236)
  a=*d (58237)
  a&=c (58238)
  r=a 1 (58239)
  (         t1 = t1 + 0) (58241)
  (         t1 = M[t1]) (58241)
  b=a (58241)
  a=*b (58242)
  r=a 1 (58243)
  (        :MorHdone_2288:) (58245)
  (         H[t0+6]〈〉 = t0) (58245)
  a=r 0 (58245)
  a+= 6 (58247)
  d=a (58249)
  a=r 0 (58250)
  *d=a (58252)
  (saved bsp, return id:) (58253)
  (         H[t0+7]〈〉 = 293) (58253)
  d++ (58253)
  a= 1 (58254)
  a<<= 8 (58256)
  a+= 37 (58258)
  *d=a (58260)
  (push arguments:) (58261)
  (         H[t0+8]〈〉 = t1) (58261)
  d++ (58261)
  a=r 1 (58262)
  *d=a (58264)
  (         t0 = t0 + 7) (58265)
  c= 7 (58265)
  a=r 0 (58267)
  a+=c (58269)
  r=a 0 (58270)
  (         goto addr_free_pH) (58272)
  lj 2913 (58272)
  (        :return_id_293:) (58275)
  (         t2 = t1) (58275)
  a=r 1 (58275)
  r=a 2 (58277)
  (                    3788:         free_pH〈meta_block_prefix_tree_block_counts_distances〉) (58279)
  (         H[t0+6]〈〉 = t0) (58279)
  a=r 0 (58279)
  a+= 6 (58281)
  d=a (58283)
  a=r 0 (58284)
  *d=a (58286)
  (saved bsp, return id:) (58287)
  (         H[t0+7]〈〉 = 294) (58287)
  d++ (58287)
  a= 1 (58288)
  a<<= 8 (58290)
  a+= 38 (58292)
  *d=a (58294)
  (push arguments:) (58295)
  (         H[t0+8]〈〉 = H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉) (58295)
  a=r 252 (58295)
  a+= 156 (58297)
  d=a (58299)
  c=*d (58300)
  a=r 0 (58301)
  a+= 8 (58303)
  d=a (58305)
  *d=c (58306)
  (         t0 = t0 + 7) (58307)
  c= 7 (58307)
  a=r 0 (58309)
  a+=c (58311)
  r=a 0 (58312)
  (         goto addr_free_pH) (58314)
  lj 2913 (58314)
  (        :return_id_294:) (58317)
  (         goto endif_2286) (58317)
  lj 58320 (58317)
  (        :else_2285:) (58320)
  (        :endif_2286:) (58320)
  (                    3789:       meta_block_prefix_tree_block_counts_distances = PrefixCodeBlockCountsDistances_data) (58320)
  (         H[t252+156]〈meta_block_prefix_tree_block_counts_distances〉 = H[t252+70]〈PrefixCodeBlockCountsDistances_data〉) (58320)
  a=r 252 (58320)
  a+= 70 (58322)
  d=a (58324)
  c=*d (58325)
  a=r 252 (58326)
  a+= 156 (58328)
  d=a (58330)
  *d=c (58331)
  (                    3790:       state = parse_first_block_count_distances〈〉) (58332)
  (         H[t0+6]〈〉 = t0) (58332)
  a=r 0 (58332)
  a+= 6 (58334)
  d=a (58336)
  a=r 0 (58337)
  *d=a (58339)
  (saved bsp, return id:) (58340)
  (         H[t0+7]〈〉 = 295) (58340)
  d++ (58340)
  a= 1 (58341)
  a<<= 8 (58343)
  a+= 39 (58345)
  *d=a (58347)
  (push arguments:) (58348)
  (         t0 = t0 + 7) (58348)
  c= 7 (58348)
  a=r 0 (58350)
  a+=c (58352)
  r=a 0 (58353)
  (         goto parse_first_block_count_distances) (58355)
  lj 44292 (58355)
  (        :return_id_295:) (58358)
  (         H[t252+165]〈state〉 = t1) (58358)
  a=r 252 (58358)
  a+= 165 (58360)
  d=a (58362)
  a=r 1 (58363)
  *d=a (58365)
  (         goto endif_2283) (58366)
  lj 62610 (58366)
  (        :else_2282:) (58369)
  (                    3791:     elif state == FirstBlockCountDistances:) (58369)
  (         t1 = H[t252+165]〈state〉 == H[t252+71]〈FirstBlockCountDistances〉) (58369)
  a=r 252 (58369)
  a+= 71 (58371)
  d=a (58373)
  c=*d (58374)
  a=r 252 (58375)
  a+= 165 (58377)
  d=a (58379)
  a=*d (58380)
  a==c (58381)
  a=0 (58382)
  jf 1 (58383)
  a++ (58385)
  r=a 1 (58386)
  (         ifN t1 goto else_2290) (58388)
  a== 0 (58388)
  jf 3 (58390)
  lj 58444 (58392)
  (                    3792:       meta_block_blen_d = FirstBlockCountDistances_data) (58395)
  (         H[t252+148]〈meta_block_blen_d〉 = H[t252+72]〈FirstBlockCountDistances_data〉) (58395)
  a=r 252 (58395)
  a+= 72 (58397)
  d=a (58399)
  c=*d (58400)
  a=r 252 (58401)
  a+= 148 (58403)
  d=a (58405)
  *d=c (58406)
  (                    3793:       state = parse_n_postfix〈〉) (58407)
  (         H[t0+6]〈〉 = t0) (58407)
  a=r 0 (58407)
  a+= 6 (58409)
  d=a (58411)
  a=r 0 (58412)
  *d=a (58414)
  (saved bsp, return id:) (58415)
  (         H[t0+7]〈〉 = 296) (58415)
  d++ (58415)
  a= 1 (58416)
  a<<= 8 (58418)
  a+= 40 (58420)
  *d=a (58422)
  (push arguments:) (58423)
  (         t0 = t0 + 7) (58423)
  c= 7 (58423)
  a=r 0 (58425)
  a+=c (58427)
  r=a 0 (58428)
  (         goto parse_n_postfix) (58430)
  lj 37052 (58430)
  (        :return_id_296:) (58433)
  (         H[t252+165]〈state〉 = t1) (58433)
  a=r 252 (58433)
  a+= 165 (58435)
  d=a (58437)
  a=r 1 (58438)
  *d=a (58440)
  (         goto endif_2291) (58441)
  lj 62610 (58441)
  (        :else_2290:) (58444)
  (                    3794:     elif state == NPostfix:) (58444)
  (         t1 = H[t252+165]〈state〉 == H[t252+73]〈NPostfix〉) (58444)
  a=r 252 (58444)
  a+= 73 (58446)
  d=a (58448)
  c=*d (58449)
  a=r 252 (58450)
  a+= 165 (58452)
  d=a (58454)
  a=*d (58455)
  a==c (58456)
  a=0 (58457)
  jf 1 (58458)
  a++ (58460)
  r=a 1 (58461)
  (         ifN t1 goto else_2293) (58463)
  a== 0 (58463)
  jf 3 (58465)
  lj 58519 (58467)
  (                    3795:       meta_block_header_n_postfix = NPostfix_data) (58470)
  (         H[t252+134]〈meta_block_header_n_postfix〉 = H[t252+74]〈NPostfix_data〉) (58470)
  a=r 252 (58470)
  a+= 74 (58472)
  d=a (58474)
  c=*d (58475)
  a=r 252 (58476)
  a+= 134 (58478)
  d=a (58480)
  *d=c (58481)
  (                    3796:       state = parse_n_direct〈〉) (58482)
  (         H[t0+6]〈〉 = t0) (58482)
  a=r 0 (58482)
  a+= 6 (58484)
  d=a (58486)
  a=r 0 (58487)
  *d=a (58489)
  (saved bsp, return id:) (58490)
  (         H[t0+7]〈〉 = 297) (58490)
  d++ (58490)
  a= 1 (58491)
  a<<= 8 (58493)
  a+= 41 (58495)
  *d=a (58497)
  (push arguments:) (58498)
  (         t0 = t0 + 7) (58498)
  c= 7 (58498)
  a=r 0 (58500)
  a+=c (58502)
  r=a 0 (58503)
  (         goto parse_n_direct) (58505)
  lj 37138 (58505)
  (        :return_id_297:) (58508)
  (         H[t252+165]〈state〉 = t1) (58508)
  a=r 252 (58508)
  a+= 165 (58510)
  d=a (58512)
  a=r 1 (58513)
  *d=a (58515)
  (         goto endif_2294) (58516)
  lj 62610 (58516)
  (        :else_2293:) (58519)
  (                    3797:     elif state == NDirect:) (58519)
  (         t1 = H[t252+165]〈state〉 == H[t252+75]〈NDirect〉) (58519)
  a=r 252 (58519)
  a+= 75 (58521)
  d=a (58523)
  c=*d (58524)
  a=r 252 (58525)
  a+= 165 (58527)
  d=a (58529)
  a=*d (58530)
  a==c (58531)
  a=0 (58532)
  jf 1 (58533)
  a++ (58535)
  r=a 1 (58536)
  (         ifN t1 goto else_2296) (58538)
  a== 0 (58538)
  jf 3 (58540)
  lj 58594 (58542)
  (                    3798:       meta_block_header_n_direct = NDirect_data) (58545)
  (         H[t252+135]〈meta_block_header_n_direct〉 = H[t252+76]〈NDirect_data〉) (58545)
  a=r 252 (58545)
  a+= 76 (58547)
  d=a (58549)
  c=*d (58550)
  a=r 252 (58551)
  a+= 135 (58553)
  d=a (58555)
  *d=c (58556)
  (                    3799:       state = parse_context_modes_literals〈〉) (58557)
  (         H[t0+6]〈〉 = t0) (58557)
  a=r 0 (58557)
  a+= 6 (58559)
  d=a (58561)
  a=r 0 (58562)
  *d=a (58564)
  (saved bsp, return id:) (58565)
  (         H[t0+7]〈〉 = 298) (58565)
  d++ (58565)
  a= 1 (58566)
  a<<= 8 (58568)
  a+= 42 (58570)
  *d=a (58572)
  (push arguments:) (58573)
  (         t0 = t0 + 7) (58573)
  c= 7 (58573)
  a=r 0 (58575)
  a+=c (58577)
  r=a 0 (58578)
  (         goto parse_context_modes_literals) (58580)
  lj 37235 (58580)
  (        :return_id_298:) (58583)
  (         H[t252+165]〈state〉 = t1) (58583)
  a=r 252 (58583)
  a+= 165 (58585)
  d=a (58587)
  a=r 1 (58588)
  *d=a (58590)
  (         goto endif_2297) (58591)
  lj 62610 (58591)
  (        :else_2296:) (58594)
  (                    3800:     elif state == ContextModesLiterals:) (58594)
  (         t1 = H[t252+165]〈state〉 == H[t252+77]〈ContextModesLiterals〉) (58594)
  a=r 252 (58594)
  a+= 77 (58596)
  d=a (58598)
  c=*d (58599)
  a=r 252 (58600)
  a+= 165 (58602)
  d=a (58604)
  a=*d (58605)
  a==c (58606)
  a=0 (58607)
  jf 1 (58608)
  a++ (58610)
  r=a 1 (58611)
  (         ifN t1 goto else_2299) (58613)
  a== 0 (58613)
  jf 3 (58615)
  lj 58737 (58617)
  (                    3801:       if meta_block_context_modes_literals != NONE:) (58620)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 != 4294967295) (58620)
  c=0 (58620)
  c-- (58621)
  a=r 252 (58622)
  a+= 159 (58624)
  d=a (58626)
  a=*d (58627)
  a==c (58628)
  a=0 (58629)
  jt 1 (58630)
  a++ (58632)
  r=a 1 (58633)
  (         ifN t1 goto else_2302) (58635)
  a== 0 (58635)
  jf 3 (58637)
  lj 58688 (58639)
  (                    3802:         free_pM〈meta_block_context_modes_literals〉) (58642)
  (         t1 = H[t252+159]〈meta_block_context_modes_literals〉 & 2147483647) (58642)
  a=0 (58642)
  a-- (58643)
  a>>= 1 (58644)
  c=a (58646)
  a=*d (58647)
  a&=c (58648)
  r=a 1 (58649)
  (         H[t0+6]〈〉 = t0) (58651)
  a=r 0 (58651)
  a+= 6 (58653)
  d=a (58655)
  a=r 0 (58656)
  *d=a (58658)
  (saved bsp, return id:) (58659)
  (         H[t0+7]〈〉 = 299) (58659)
  d++ (58659)
  a= 1 (58660)
  a<<= 8 (58662)
  a+= 43 (58664)
  *d=a (58666)
  (push arguments:) (58667)
  (         H[t0+8]〈〉 = t1) (58667)
  d++ (58667)
  a=r 1 (58668)
  *d=a (58670)
  (         t0 = t0 + 7) (58671)
  c= 7 (58671)
  a=r 0 (58673)
  a+=c (58675)
  r=a 0 (58676)
  (         goto addr_free_pM) (58678)
  lj 2406 (58678)
  (        :return_id_299:) (58681)
  (         t2 = t1) (58681)
  a=r 1 (58681)
  r=a 2 (58683)
  (         goto endif_2303) (58685)
  lj 58688 (58685)
  (        :else_2302:) (58688)
  (        :endif_2303:) (58688)
  (                    3803:       meta_block_context_modes_literals = ContextModesLiterals_data) (58688)
  (         H[t252+159]〈meta_block_context_modes_literals〉 = H[t252+78]〈ContextModesLiterals_data〉) (58688)
  a=r 252 (58688)
  a+= 78 (58690)
  d=a (58692)
  c=*d (58693)
  a=r 252 (58694)
  a+= 159 (58696)
  d=a (58698)
  *d=c (58699)
  (                    3804:       state = parse_n_trees_l〈〉) (58700)
  (         H[t0+6]〈〉 = t0) (58700)
  a=r 0 (58700)
  a+= 6 (58702)
  d=a (58704)
  a=r 0 (58705)
  *d=a (58707)
  (saved bsp, return id:) (58708)
  (         H[t0+7]〈〉 = 300) (58708)
  d++ (58708)
  a= 1 (58709)
  a<<= 8 (58711)
  a+= 44 (58713)
  *d=a (58715)
  (push arguments:) (58716)
  (         t0 = t0 + 7) (58716)
  c= 7 (58716)
  a=r 0 (58718)
  a+=c (58720)
  r=a 0 (58721)
  (         goto parse_n_trees_l) (58723)
  lj 37429 (58723)
  (        :return_id_300:) (58726)
  (         H[t252+165]〈state〉 = t1) (58726)
  a=r 252 (58726)
  a+= 165 (58728)
  d=a (58730)
  a=r 1 (58731)
  *d=a (58733)
  (         goto endif_2300) (58734)
  lj 62610 (58734)
  (        :else_2299:) (58737)
  (                    3805:     elif state == NTreesL:) (58737)
  (         t1 = H[t252+165]〈state〉 == H[t252+79]〈NTreesL〉) (58737)
  a=r 252 (58737)
  a+= 79 (58739)
  d=a (58741)
  c=*d (58742)
  a=r 252 (58743)
  a+= 165 (58745)
  d=a (58747)
  a=*d (58748)
  a==c (58749)
  a=0 (58750)
  jf 1 (58751)
  a++ (58753)
  r=a 1 (58754)
  (         ifN t1 goto else_2305) (58756)
  a== 0 (58756)
  jf 3 (58758)
  lj 59006 (58760)
  (                    3806:       meta_block_header_n_trees_l = NTreesL_data) (58763)
  (         H[t252+136]〈meta_block_header_n_trees_l〉 = H[t252+80]〈NTreesL_data〉) (58763)
  a=r 252 (58763)
  a+= 80 (58765)
  d=a (58767)
  c=*d (58768)
  a=r 252 (58769)
  a+= 136 (58771)
  d=a (58773)
  *d=c (58774)
  (                    3807:       if meta_block_header_c_map_l != NONE:) (58775)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 != 4294967295) (58775)
  c=0 (58775)
  c-- (58776)
  a=r 252 (58777)
  a+= 138 (58779)
  d=a (58781)
  a=*d (58782)
  a==c (58783)
  a=0 (58784)
  jt 1 (58785)
  a++ (58787)
  r=a 1 (58788)
  (         ifN t1 goto else_2308) (58790)
  a== 0 (58790)
  jf 3 (58792)
  lj 58843 (58794)
  (                    3808:         free_pM〈meta_block_header_c_map_l〉) (58797)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 & 2147483647) (58797)
  a=0 (58797)
  a-- (58798)
  a>>= 1 (58799)
  c=a (58801)
  a=*d (58802)
  a&=c (58803)
  r=a 1 (58804)
  (         H[t0+6]〈〉 = t0) (58806)
  a=r 0 (58806)
  a+= 6 (58808)
  d=a (58810)
  a=r 0 (58811)
  *d=a (58813)
  (saved bsp, return id:) (58814)
  (         H[t0+7]〈〉 = 301) (58814)
  d++ (58814)
  a= 1 (58815)
  a<<= 8 (58817)
  a+= 45 (58819)
  *d=a (58821)
  (push arguments:) (58822)
  (         H[t0+8]〈〉 = t1) (58822)
  d++ (58822)
  a=r 1 (58823)
  *d=a (58825)
  (         t0 = t0 + 7) (58826)
  c= 7 (58826)
  a=r 0 (58828)
  a+=c (58830)
  r=a 0 (58831)
  (         goto addr_free_pM) (58833)
  lj 2406 (58833)
  (        :return_id_301:) (58836)
  (         t2 = t1) (58836)
  a=r 1 (58836)
  r=a 2 (58838)
  (         goto endif_2309) (58840)
  lj 58843 (58840)
  (        :else_2308:) (58843)
  (        :endif_2309:) (58843)
  (                    3809:       meta_block_header_c_map_l = alloc_pM〈64 * meta_block_header_n_bltypes_l〉) (58843)
  (         t1 = 64 * H[t252+131]〈meta_block_header_n_bltypes_l〉) (58843)
  a=r 252 (58843)
  a+= 131 (58845)
  d=a (58847)
  c=*d (58848)
  a= 64 (58849)
  a*=c (58851)
  r=a 1 (58852)
  (         H[t0+6]〈〉 = t0) (58854)
  a=r 0 (58854)
  a+= 6 (58856)
  d=a (58858)
  a=r 0 (58859)
  *d=a (58861)
  (saved bsp, return id:) (58862)
  (         H[t0+7]〈〉 = 302) (58862)
  d++ (58862)
  a= 1 (58863)
  a<<= 8 (58865)
  a+= 46 (58867)
  *d=a (58869)
  (push arguments:) (58870)
  (         H[t0+8]〈〉 = t1) (58870)
  d++ (58870)
  a=r 1 (58871)
  *d=a (58873)
  (         t0 = t0 + 7) (58874)
  c= 7 (58874)
  a=r 0 (58876)
  a+=c (58878)
  r=a 0 (58879)
  (         goto addr_alloc_pM) (58881)
  lj 323 (58881)
  (        :return_id_302:) (58884)
  (         t2 = t1) (58884)
  a=r 1 (58884)
  r=a 2 (58886)
  (         t2 = t2 | 2147483648) (58888)
  a= 1 (58888)
  a<<= 31 (58890)
  c=a (58892)
  a=r 2 (58893)
  a|=c (58895)
  r=a 2 (58896)
  (         H[t252+138]〈meta_block_header_c_map_l〉 = t2) (58898)
  a=r 252 (58898)
  a+= 138 (58900)
  d=a (58902)
  a=r 2 (58903)
  *d=a (58905)
  (                    3810:       if NTreesL_data >= 2:) (58906)
  (         t1 = H[t252+80]〈NTreesL_data〉 >= 2) (58906)
  c= 2 (58906)
  a=r 252 (58908)
  a+= 80 (58910)
  d=a (58912)
  a=*d (58913)
  a==c (58914)
  jt 4 (58915)
  a>c (58917)
  a=0 (58918)
  jf 2 (58919)
  a= 1 (58921)
  r=a 1 (58923)
  (         ifN t1 goto else_2311) (58925)
  a== 0 (58925)
  jf 3 (58927)
  lj 58969 (58929)
  (                    3811:         state = parse_context_map_literals〈〉) (58932)
  (         H[t0+6]〈〉 = t0) (58932)
  a=r 0 (58932)
  a+= 6 (58934)
  d=a (58936)
  a=r 0 (58937)
  *d=a (58939)
  (saved bsp, return id:) (58940)
  (         H[t0+7]〈〉 = 303) (58940)
  d++ (58940)
  a= 1 (58941)
  a<<= 8 (58943)
  a+= 47 (58945)
  *d=a (58947)
  (push arguments:) (58948)
  (         t0 = t0 + 7) (58948)
  c= 7 (58948)
  a=r 0 (58950)
  a+=c (58952)
  r=a 0 (58953)
  (         goto parse_context_map_literals) (58955)
  lj 45806 (58955)
  (        :return_id_303:) (58958)
  (         H[t252+165]〈state〉 = t1) (58958)
  a=r 252 (58958)
  a+= 165 (58960)
  d=a (58962)
  a=r 1 (58963)
  *d=a (58965)
  (         goto endif_2312) (58966)
  lj 59003 (58966)
  (        :else_2311:) (58969)
  (                    3813:         state = parse_n_trees_d〈〉) (58969)
  (         H[t0+6]〈〉 = t0) (58969)
  a=r 0 (58969)
  a+= 6 (58971)
  d=a (58973)
  a=r 0 (58974)
  *d=a (58976)
  (saved bsp, return id:) (58977)
  (         H[t0+7]〈〉 = 304) (58977)
  d++ (58977)
  a= 1 (58978)
  a<<= 8 (58980)
  a+= 48 (58982)
  *d=a (58984)
  (push arguments:) (58985)
  (         t0 = t0 + 7) (58985)
  c= 7 (58985)
  a=r 0 (58987)
  a+=c (58989)
  r=a 0 (58990)
  (         goto parse_n_trees_d) (58992)
  lj 37520 (58992)
  (        :return_id_304:) (58995)
  (         H[t252+165]〈state〉 = t1) (58995)
  a=r 252 (58995)
  a+= 165 (58997)
  d=a (58999)
  a=r 1 (59000)
  *d=a (59002)
  (        :endif_2312:) (59003)
  (         goto endif_2306) (59003)
  lj 62610 (59003)
  (        :else_2305:) (59006)
  (                    3814:     elif state == ContextMapLiterals:) (59006)
  (         t1 = H[t252+165]〈state〉 == H[t252+85]〈ContextMapLiterals〉) (59006)
  a=r 252 (59006)
  a+= 85 (59008)
  d=a (59010)
  c=*d (59011)
  a=r 252 (59012)
  a+= 165 (59014)
  d=a (59016)
  a=*d (59017)
  a==c (59018)
  a=0 (59019)
  jf 1 (59020)
  a++ (59022)
  r=a 1 (59023)
  (         ifN t1 goto else_2314) (59025)
  a== 0 (59025)
  jf 3 (59027)
  lj 59149 (59029)
  (                    3815:       if meta_block_header_c_map_l != NONE:) (59032)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 != 4294967295) (59032)
  c=0 (59032)
  c-- (59033)
  a=r 252 (59034)
  a+= 138 (59036)
  d=a (59038)
  a=*d (59039)
  a==c (59040)
  a=0 (59041)
  jt 1 (59042)
  a++ (59044)
  r=a 1 (59045)
  (         ifN t1 goto else_2317) (59047)
  a== 0 (59047)
  jf 3 (59049)
  lj 59100 (59051)
  (                    3816:         free_pM〈meta_block_header_c_map_l〉) (59054)
  (         t1 = H[t252+138]〈meta_block_header_c_map_l〉 & 2147483647) (59054)
  a=0 (59054)
  a-- (59055)
  a>>= 1 (59056)
  c=a (59058)
  a=*d (59059)
  a&=c (59060)
  r=a 1 (59061)
  (         H[t0+6]〈〉 = t0) (59063)
  a=r 0 (59063)
  a+= 6 (59065)
  d=a (59067)
  a=r 0 (59068)
  *d=a (59070)
  (saved bsp, return id:) (59071)
  (         H[t0+7]〈〉 = 305) (59071)
  d++ (59071)
  a= 1 (59072)
  a<<= 8 (59074)
  a+= 49 (59076)
  *d=a (59078)
  (push arguments:) (59079)
  (         H[t0+8]〈〉 = t1) (59079)
  d++ (59079)
  a=r 1 (59080)
  *d=a (59082)
  (         t0 = t0 + 7) (59083)
  c= 7 (59083)
  a=r 0 (59085)
  a+=c (59087)
  r=a 0 (59088)
  (         goto addr_free_pM) (59090)
  lj 2406 (59090)
  (        :return_id_305:) (59093)
  (         t2 = t1) (59093)
  a=r 1 (59093)
  r=a 2 (59095)
  (         goto endif_2318) (59097)
  lj 59100 (59097)
  (        :else_2317:) (59100)
  (        :endif_2318:) (59100)
  (                    3817:       meta_block_header_c_map_l = ContextMapLiterals_data) (59100)
  (         H[t252+138]〈meta_block_header_c_map_l〉 = H[t252+86]〈ContextMapLiterals_data〉) (59100)
  a=r 252 (59100)
  a+= 86 (59102)
  d=a (59104)
  c=*d (59105)
  a=r 252 (59106)
  a+= 138 (59108)
  d=a (59110)
  *d=c (59111)
  (                    3818:       state = parse_n_trees_d〈〉) (59112)
  (         H[t0+6]〈〉 = t0) (59112)
  a=r 0 (59112)
  a+= 6 (59114)
  d=a (59116)
  a=r 0 (59117)
  *d=a (59119)
  (saved bsp, return id:) (59120)
  (         H[t0+7]〈〉 = 306) (59120)
  d++ (59120)
  a= 1 (59121)
  a<<= 8 (59123)
  a+= 50 (59125)
  *d=a (59127)
  (push arguments:) (59128)
  (         t0 = t0 + 7) (59128)
  c= 7 (59128)
  a=r 0 (59130)
  a+=c (59132)
  r=a 0 (59133)
  (         goto parse_n_trees_d) (59135)
  lj 37520 (59135)
  (        :return_id_306:) (59138)
  (         H[t252+165]〈state〉 = t1) (59138)
  a=r 252 (59138)
  a+= 165 (59140)
  d=a (59142)
  a=r 1 (59143)
  *d=a (59145)
  (         goto endif_2315) (59146)
  lj 62610 (59146)
  (        :else_2314:) (59149)
  (                    3819:     elif state == NTreesD:) (59149)
  (         t1 = H[t252+165]〈state〉 == H[t252+81]〈NTreesD〉) (59149)
  a=r 252 (59149)
  a+= 81 (59151)
  d=a (59153)
  c=*d (59154)
  a=r 252 (59155)
  a+= 165 (59157)
  d=a (59159)
  a=*d (59160)
  a==c (59161)
  a=0 (59162)
  jf 1 (59163)
  a++ (59165)
  r=a 1 (59166)
  (         ifN t1 goto else_2320) (59168)
  a== 0 (59168)
  jf 3 (59170)
  lj 59418 (59172)
  (                    3820:       meta_block_header_n_trees_d = NTreesD_data) (59175)
  (         H[t252+137]〈meta_block_header_n_trees_d〉 = H[t252+82]〈NTreesD_data〉) (59175)
  a=r 252 (59175)
  a+= 82 (59177)
  d=a (59179)
  c=*d (59180)
  a=r 252 (59181)
  a+= 137 (59183)
  d=a (59185)
  *d=c (59186)
  (                    3821:       if meta_block_header_c_map_d != NONE:) (59187)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 != 4294967295) (59187)
  c=0 (59187)
  c-- (59188)
  a=r 252 (59189)
  a+= 139 (59191)
  d=a (59193)
  a=*d (59194)
  a==c (59195)
  a=0 (59196)
  jt 1 (59197)
  a++ (59199)
  r=a 1 (59200)
  (         ifN t1 goto else_2323) (59202)
  a== 0 (59202)
  jf 3 (59204)
  lj 59255 (59206)
  (                    3822:         free_pM〈meta_block_header_c_map_d〉) (59209)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 & 2147483647) (59209)
  a=0 (59209)
  a-- (59210)
  a>>= 1 (59211)
  c=a (59213)
  a=*d (59214)
  a&=c (59215)
  r=a 1 (59216)
  (         H[t0+6]〈〉 = t0) (59218)
  a=r 0 (59218)
  a+= 6 (59220)
  d=a (59222)
  a=r 0 (59223)
  *d=a (59225)
  (saved bsp, return id:) (59226)
  (         H[t0+7]〈〉 = 307) (59226)
  d++ (59226)
  a= 1 (59227)
  a<<= 8 (59229)
  a+= 51 (59231)
  *d=a (59233)
  (push arguments:) (59234)
  (         H[t0+8]〈〉 = t1) (59234)
  d++ (59234)
  a=r 1 (59235)
  *d=a (59237)
  (         t0 = t0 + 7) (59238)
  c= 7 (59238)
  a=r 0 (59240)
  a+=c (59242)
  r=a 0 (59243)
  (         goto addr_free_pM) (59245)
  lj 2406 (59245)
  (        :return_id_307:) (59248)
  (         t2 = t1) (59248)
  a=r 1 (59248)
  r=a 2 (59250)
  (         goto endif_2324) (59252)
  lj 59255 (59252)
  (        :else_2323:) (59255)
  (        :endif_2324:) (59255)
  (                    3823:       meta_block_header_c_map_d = alloc_pM〈4 * meta_block_header_n_bltypes_d〉) (59255)
  (         t1 = 4 * H[t252+133]〈meta_block_header_n_bltypes_d〉) (59255)
  a=r 252 (59255)
  a+= 133 (59257)
  d=a (59259)
  c=*d (59260)
  a= 4 (59261)
  a*=c (59263)
  r=a 1 (59264)
  (         H[t0+6]〈〉 = t0) (59266)
  a=r 0 (59266)
  a+= 6 (59268)
  d=a (59270)
  a=r 0 (59271)
  *d=a (59273)
  (saved bsp, return id:) (59274)
  (         H[t0+7]〈〉 = 308) (59274)
  d++ (59274)
  a= 1 (59275)
  a<<= 8 (59277)
  a+= 52 (59279)
  *d=a (59281)
  (push arguments:) (59282)
  (         H[t0+8]〈〉 = t1) (59282)
  d++ (59282)
  a=r 1 (59283)
  *d=a (59285)
  (         t0 = t0 + 7) (59286)
  c= 7 (59286)
  a=r 0 (59288)
  a+=c (59290)
  r=a 0 (59291)
  (         goto addr_alloc_pM) (59293)
  lj 323 (59293)
  (        :return_id_308:) (59296)
  (         t2 = t1) (59296)
  a=r 1 (59296)
  r=a 2 (59298)
  (         t2 = t2 | 2147483648) (59300)
  a= 1 (59300)
  a<<= 31 (59302)
  c=a (59304)
  a=r 2 (59305)
  a|=c (59307)
  r=a 2 (59308)
  (         H[t252+139]〈meta_block_header_c_map_d〉 = t2) (59310)
  a=r 252 (59310)
  a+= 139 (59312)
  d=a (59314)
  a=r 2 (59315)
  *d=a (59317)
  (                    3824:       if NTreesD_data >= 2:) (59318)
  (         t1 = H[t252+82]〈NTreesD_data〉 >= 2) (59318)
  c= 2 (59318)
  a=r 252 (59320)
  a+= 82 (59322)
  d=a (59324)
  a=*d (59325)
  a==c (59326)
  jt 4 (59327)
  a>c (59329)
  a=0 (59330)
  jf 2 (59331)
  a= 1 (59333)
  r=a 1 (59335)
  (         ifN t1 goto else_2326) (59337)
  a== 0 (59337)
  jf 3 (59339)
  lj 59381 (59341)
  (                    3825:         state = parse_context_map_distances〈〉) (59344)
  (         H[t0+6]〈〉 = t0) (59344)
  a=r 0 (59344)
  a+= 6 (59346)
  d=a (59348)
  a=r 0 (59349)
  *d=a (59351)
  (saved bsp, return id:) (59352)
  (         H[t0+7]〈〉 = 309) (59352)
  d++ (59352)
  a= 1 (59353)
  a<<= 8 (59355)
  a+= 53 (59357)
  *d=a (59359)
  (push arguments:) (59360)
  (         t0 = t0 + 7) (59360)
  c= 7 (59360)
  a=r 0 (59362)
  a+=c (59364)
  r=a 0 (59365)
  (         goto parse_context_map_distances) (59367)
  lj 45947 (59367)
  (        :return_id_309:) (59370)
  (         H[t252+165]〈state〉 = t1) (59370)
  a=r 252 (59370)
  a+= 165 (59372)
  d=a (59374)
  a=r 1 (59375)
  *d=a (59377)
  (         goto endif_2327) (59378)
  lj 59415 (59378)
  (        :else_2326:) (59381)
  (                    3827:         state = parse_prefix_codes_literals〈〉) (59381)
  (         H[t0+6]〈〉 = t0) (59381)
  a=r 0 (59381)
  a+= 6 (59383)
  d=a (59385)
  a=r 0 (59386)
  *d=a (59388)
  (saved bsp, return id:) (59389)
  (         H[t0+7]〈〉 = 310) (59389)
  d++ (59389)
  a= 1 (59390)
  a<<= 8 (59392)
  a+= 54 (59394)
  *d=a (59396)
  (push arguments:) (59397)
  (         t0 = t0 + 7) (59397)
  c= 7 (59397)
  a=r 0 (59399)
  a+=c (59401)
  r=a 0 (59402)
  (         goto parse_prefix_codes_literals) (59404)
  lj 44393 (59404)
  (        :return_id_310:) (59407)
  (         H[t252+165]〈state〉 = t1) (59407)
  a=r 252 (59407)
  a+= 165 (59409)
  d=a (59411)
  a=r 1 (59412)
  *d=a (59414)
  (        :endif_2327:) (59415)
  (         goto endif_2321) (59415)
  lj 62610 (59415)
  (        :else_2320:) (59418)
  (                    3828:     elif state == ContextMapDistances:) (59418)
  (         t1 = H[t252+165]〈state〉 == H[t252+83]〈ContextMapDistances〉) (59418)
  a=r 252 (59418)
  a+= 83 (59420)
  d=a (59422)
  c=*d (59423)
  a=r 252 (59424)
  a+= 165 (59426)
  d=a (59428)
  a=*d (59429)
  a==c (59430)
  a=0 (59431)
  jf 1 (59432)
  a++ (59434)
  r=a 1 (59435)
  (         ifN t1 goto else_2329) (59437)
  a== 0 (59437)
  jf 3 (59439)
  lj 59561 (59441)
  (                    3829:       if meta_block_header_c_map_d != NONE:) (59444)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 != 4294967295) (59444)
  c=0 (59444)
  c-- (59445)
  a=r 252 (59446)
  a+= 139 (59448)
  d=a (59450)
  a=*d (59451)
  a==c (59452)
  a=0 (59453)
  jt 1 (59454)
  a++ (59456)
  r=a 1 (59457)
  (         ifN t1 goto else_2332) (59459)
  a== 0 (59459)
  jf 3 (59461)
  lj 59512 (59463)
  (                    3830:         free_pM〈meta_block_header_c_map_d〉) (59466)
  (         t1 = H[t252+139]〈meta_block_header_c_map_d〉 & 2147483647) (59466)
  a=0 (59466)
  a-- (59467)
  a>>= 1 (59468)
  c=a (59470)
  a=*d (59471)
  a&=c (59472)
  r=a 1 (59473)
  (         H[t0+6]〈〉 = t0) (59475)
  a=r 0 (59475)
  a+= 6 (59477)
  d=a (59479)
  a=r 0 (59480)
  *d=a (59482)
  (saved bsp, return id:) (59483)
  (         H[t0+7]〈〉 = 311) (59483)
  d++ (59483)
  a= 1 (59484)
  a<<= 8 (59486)
  a+= 55 (59488)
  *d=a (59490)
  (push arguments:) (59491)
  (         H[t0+8]〈〉 = t1) (59491)
  d++ (59491)
  a=r 1 (59492)
  *d=a (59494)
  (         t0 = t0 + 7) (59495)
  c= 7 (59495)
  a=r 0 (59497)
  a+=c (59499)
  r=a 0 (59500)
  (         goto addr_free_pM) (59502)
  lj 2406 (59502)
  (        :return_id_311:) (59505)
  (         t2 = t1) (59505)
  a=r 1 (59505)
  r=a 2 (59507)
  (         goto endif_2333) (59509)
  lj 59512 (59509)
  (        :else_2332:) (59512)
  (        :endif_2333:) (59512)
  (                    3831:       meta_block_header_c_map_d = ContextMapDistances_data) (59512)
  (         H[t252+139]〈meta_block_header_c_map_d〉 = H[t252+84]〈ContextMapDistances_data〉) (59512)
  a=r 252 (59512)
  a+= 84 (59514)
  d=a (59516)
  c=*d (59517)
  a=r 252 (59518)
  a+= 139 (59520)
  d=a (59522)
  *d=c (59523)
  (                    3832:       state = parse_prefix_codes_literals〈〉) (59524)
  (         H[t0+6]〈〉 = t0) (59524)
  a=r 0 (59524)
  a+= 6 (59526)
  d=a (59528)
  a=r 0 (59529)
  *d=a (59531)
  (saved bsp, return id:) (59532)
  (         H[t0+7]〈〉 = 312) (59532)
  d++ (59532)
  a= 1 (59533)
  a<<= 8 (59535)
  a+= 56 (59537)
  *d=a (59539)
  (push arguments:) (59540)
  (         t0 = t0 + 7) (59540)
  c= 7 (59540)
  a=r 0 (59542)
  a+=c (59544)
  r=a 0 (59545)
  (         goto parse_prefix_codes_literals) (59547)
  lj 44393 (59547)
  (        :return_id_312:) (59550)
  (         H[t252+165]〈state〉 = t1) (59550)
  a=r 252 (59550)
  a+= 165 (59552)
  d=a (59554)
  a=r 1 (59555)
  *d=a (59557)
  (         goto endif_2330) (59558)
  lj 62610 (59558)
  (        :else_2329:) (59561)
  (                    3833:     elif state == PrefixCodesLiterals:) (59561)
  (         t1 = H[t252+165]〈state〉 == H[t252+87]〈PrefixCodesLiterals〉) (59561)
  a=r 252 (59561)
  a+= 87 (59563)
  d=a (59565)
  c=*d (59566)
  a=r 252 (59567)
  a+= 165 (59569)
  d=a (59571)
  a=*d (59572)
  a==c (59573)
  a=0 (59574)
  jf 1 (59575)
  a++ (59577)
  r=a 1 (59578)
  (         ifN t1 goto else_2335) (59580)
  a== 0 (59580)
  jf 3 (59582)
  lj 59907 (59584)
  (                    3834:       if meta_block_prefix_trees_literals != NONE:) (59587)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 != 4294967295) (59587)
  c=0 (59587)
  c-- (59588)
  a=r 252 (59589)
  a+= 142 (59591)
  d=a (59593)
  a=*d (59594)
  a==c (59595)
  a=0 (59596)
  jt 1 (59597)
  a++ (59599)
  r=a 1 (59600)
  (         ifN t1 goto else_2338) (59602)
  a== 0 (59602)
  jf 3 (59604)
  lj 59858 (59606)
  (                    3835:         i = 0) (59609)
  (         H[t0+2]〈i〉 = 0) (59609)
  a=r 0 (59609)
  a+= 2 (59611)
  d=a (59613)
  *d=0 (59614)
  (                    3836:         while i < len_pH〈meta_block_prefix_trees_literals〉:) (59615)
  (        :while_2340:) (59615)
  (         t2 = H[t252+142]〈meta_block_prefix_trees_literals〉) (59615)
  a=r 252 (59615)
  a+= 142 (59617)
  d=a (59619)
  a=*d (59620)
  r=a 2 (59621)
  (         t2 = t2 - 2) (59623)
  c= 2 (59623)
  a-=c (59625)
  r=a 2 (59626)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (59628)
  d=a (59628)
  c=*d (59629)
  a=r 0 (59630)
  a+= 2 (59632)
  d=a (59634)
  a=*d (59635)
  a<c (59636)
  a=0 (59637)
  jf 1 (59638)
  a++ (59640)
  r=a 1 (59641)
  (         ifN t1 goto whileend_2342) (59643)
  a== 0 (59643)
  jf 3 (59645)
  lj 59817 (59647)
  (                    3837:           innertree = array_pH〈meta_block_prefix_trees_literals[i]〉) (59650)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 >> 31) (59650)
  c= 31 (59650)
  a=r 252 (59652)
  a+= 142 (59654)
  d=a (59656)
  a=*d (59657)
  a>>=c (59658)
  r=a 1 (59659)
  (         if t1 goto isM_2344) (59661)
  a== 0 (59661)
  jt 3 (59663)
  lj 59690 (59665)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 + H[t0+2]〈i〉) (59668)
  a=r 0 (59668)
  a+= 2 (59670)
  d=a (59672)
  c=*d (59673)
  a=r 252 (59674)
  a+= 142 (59676)
  d=a (59678)
  a=*d (59679)
  a+=c (59680)
  r=a 1 (59681)
  (         t1 = H[t1]〈〉) (59683)
  d=a (59683)
  a=*d (59684)
  r=a 1 (59685)
  (         goto MorHdone_2345) (59687)
  lj 59719 (59687)
  (        :isM_2344:) (59690)
  (         t1 = H[t252+142]〈meta_block_prefix_trees_literals〉 & 2147483647) (59690)
  a=0 (59690)
  a-- (59691)
  a>>= 1 (59692)
  c=a (59694)
  a=r 252 (59695)
  a+= 142 (59697)
  d=a (59699)
  a=*d (59700)
  a&=c (59701)
  r=a 1 (59702)
  (         t1 = t1 + H[t0+2]〈i〉) (59704)
  a=r 0 (59704)
  a+= 2 (59706)
  d=a (59708)
  c=*d (59709)
  a=r 1 (59710)
  a+=c (59712)
  r=a 1 (59713)
  (         t1 = M[t1]) (59715)
  b=a (59715)
  a=*b (59716)
  r=a 1 (59717)
  (        :MorHdone_2345:) (59719)
  (         H[t0+4]〈innertree〉 = t1) (59719)
  a=r 0 (59719)
  a+= 4 (59721)
  d=a (59723)
  a=r 1 (59724)
  *d=a (59726)
  (                    3838:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (59727)
  (         t1 = H[t0+4]〈innertree〉 + 0) (59727)
  c=0 (59727)
  a=*d (59728)
  a+=c (59729)
  r=a 1 (59730)
  (         t1 = H[t1]〈〉) (59732)
  d=a (59732)
  a=*d (59733)
  r=a 1 (59734)
  (         H[t0+6]〈〉 = t0) (59736)
  a=r 0 (59736)
  a+= 6 (59738)
  d=a (59740)
  a=r 0 (59741)
  *d=a (59743)
  (saved bsp, return id:) (59744)
  (         H[t0+7]〈〉 = 313) (59744)
  d++ (59744)
  a= 1 (59745)
  a<<= 8 (59747)
  a+= 57 (59749)
  *d=a (59751)
  (push arguments:) (59752)
  (         H[t0+8]〈〉 = t1) (59752)
  d++ (59752)
  a=r 1 (59753)
  *d=a (59755)
  (         t0 = t0 + 7) (59756)
  c= 7 (59756)
  a=r 0 (59758)
  a+=c (59760)
  r=a 0 (59761)
  (         goto addr_free_pH) (59763)
  lj 2913 (59763)
  (        :return_id_313:) (59766)
  (         t2 = t1) (59766)
  a=r 1 (59766)
  r=a 2 (59768)
  (                    3839:           free_pH〈innertree〉) (59770)
  (         H[t0+6]〈〉 = t0) (59770)
  a=r 0 (59770)
  a+= 6 (59772)
  d=a (59774)
  a=r 0 (59775)
  *d=a (59777)
  (saved bsp, return id:) (59778)
  (         H[t0+7]〈〉 = 314) (59778)
  d++ (59778)
  a= 1 (59779)
  a<<= 8 (59781)
  a+= 58 (59783)
  *d=a (59785)
  (push arguments:) (59786)
  (         H[t0+8]〈〉 = H[t0+4]〈innertree〉) (59786)
  a=r 0 (59786)
  a+= 4 (59788)
  d=a (59790)
  c=*d (59791)
  a=r 0 (59792)
  a+= 8 (59794)
  d=a (59796)
  *d=c (59797)
  (         t0 = t0 + 7) (59798)
  c= 7 (59798)
  a=r 0 (59800)
  a+=c (59802)
  r=a 0 (59803)
  (         goto addr_free_pH) (59805)
  lj 2913 (59805)
  (        :return_id_314:) (59808)
  (                    3840:           i += 1) (59808)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (59808)
  a=r 0 (59808)
  a+= 2 (59810)
  d=a (59812)
  *d++ (59813)
  (         goto while_2340) (59814)
  lj 59615 (59814)
  (        :whileend_2342:) (59817)
  (                    3841:         free_pH〈meta_block_prefix_trees_literals〉) (59817)
  (         H[t0+6]〈〉 = t0) (59817)
  a=r 0 (59817)
  a+= 6 (59819)
  d=a (59821)
  a=r 0 (59822)
  *d=a (59824)
  (saved bsp, return id:) (59825)
  (         H[t0+7]〈〉 = 315) (59825)
  d++ (59825)
  a= 1 (59826)
  a<<= 8 (59828)
  a+= 59 (59830)
  *d=a (59832)
  (push arguments:) (59833)
  (         H[t0+8]〈〉 = H[t252+142]〈meta_block_prefix_trees_literals〉) (59833)
  a=r 252 (59833)
  a+= 142 (59835)
  d=a (59837)
  c=*d (59838)
  a=r 0 (59839)
  a+= 8 (59841)
  d=a (59843)
  *d=c (59844)
  (         t0 = t0 + 7) (59845)
  c= 7 (59845)
  a=r 0 (59847)
  a+=c (59849)
  r=a 0 (59850)
  (         goto addr_free_pH) (59852)
  lj 2913 (59852)
  (        :return_id_315:) (59855)
  (         goto endif_2339) (59855)
  lj 59858 (59855)
  (        :else_2338:) (59858)
  (        :endif_2339:) (59858)
  (                    3842:       meta_block_prefix_trees_literals = PrefixCodesLiterals_data) (59858)
  (         H[t252+142]〈meta_block_prefix_trees_literals〉 = H[t252+88]〈PrefixCodesLiterals_data〉) (59858)
  a=r 252 (59858)
  a+= 88 (59860)
  d=a (59862)
  c=*d (59863)
  a=r 252 (59864)
  a+= 142 (59866)
  d=a (59868)
  *d=c (59869)
  (                    3843:       state = parse_prefix_codes_insert_and_copy_lengths〈〉) (59870)
  (         H[t0+6]〈〉 = t0) (59870)
  a=r 0 (59870)
  a+= 6 (59872)
  d=a (59874)
  a=r 0 (59875)
  *d=a (59877)
  (saved bsp, return id:) (59878)
  (         H[t0+7]〈〉 = 316) (59878)
  d++ (59878)
  a= 1 (59879)
  a<<= 8 (59881)
  a+= 60 (59883)
  *d=a (59885)
  (push arguments:) (59886)
  (         t0 = t0 + 7) (59886)
  c= 7 (59886)
  a=r 0 (59888)
  a+=c (59890)
  r=a 0 (59891)
  (         goto parse_prefix_codes_insert_and_copy_lengths) (59893)
  lj 44608 (59893)
  (        :return_id_316:) (59896)
  (         H[t252+165]〈state〉 = t1) (59896)
  a=r 252 (59896)
  a+= 165 (59898)
  d=a (59900)
  a=r 1 (59901)
  *d=a (59903)
  (         goto endif_2336) (59904)
  lj 62610 (59904)
  (        :else_2335:) (59907)
  (                    3844:     elif state == PrefixCodesInsertAndCopyLengths:) (59907)
  (         t1 = H[t252+165]〈state〉 == H[t252+89]〈PrefixCodesInsertAndCopyLengths〉) (59907)
  a=r 252 (59907)
  a+= 89 (59909)
  d=a (59911)
  c=*d (59912)
  a=r 252 (59913)
  a+= 165 (59915)
  d=a (59917)
  a=*d (59918)
  a==c (59919)
  a=0 (59920)
  jf 1 (59921)
  a++ (59923)
  r=a 1 (59924)
  (         ifN t1 goto else_2347) (59926)
  a== 0 (59926)
  jf 3 (59928)
  lj 60253 (59930)
  (                    3845:       if meta_block_prefix_trees_insert_and_copy_lengths != NONE:) (59933)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 != 4294967295) (59933)
  c=0 (59933)
  c-- (59934)
  a=r 252 (59935)
  a+= 157 (59937)
  d=a (59939)
  a=*d (59940)
  a==c (59941)
  a=0 (59942)
  jt 1 (59943)
  a++ (59945)
  r=a 1 (59946)
  (         ifN t1 goto else_2350) (59948)
  a== 0 (59948)
  jf 3 (59950)
  lj 60204 (59952)
  (                    3846:         i = 0) (59955)
  (         H[t0+2]〈i〉 = 0) (59955)
  a=r 0 (59955)
  a+= 2 (59957)
  d=a (59959)
  *d=0 (59960)
  (                    3847:         while i < len_pH〈meta_block_prefix_trees_insert_and_copy_lengths〉:) (59961)
  (        :while_2352:) (59961)
  (         t2 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉) (59961)
  a=r 252 (59961)
  a+= 157 (59963)
  d=a (59965)
  a=*d (59966)
  r=a 2 (59967)
  (         t2 = t2 - 2) (59969)
  c= 2 (59969)
  a-=c (59971)
  r=a 2 (59972)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (59974)
  d=a (59974)
  c=*d (59975)
  a=r 0 (59976)
  a+= 2 (59978)
  d=a (59980)
  a=*d (59981)
  a<c (59982)
  a=0 (59983)
  jf 1 (59984)
  a++ (59986)
  r=a 1 (59987)
  (         ifN t1 goto whileend_2354) (59989)
  a== 0 (59989)
  jf 3 (59991)
  lj 60163 (59993)
  (                    3848:           innertree = array_pH〈meta_block_prefix_trees_insert_and_copy_lengths[i]〉) (59996)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 >> 31) (59996)
  c= 31 (59996)
  a=r 252 (59998)
  a+= 157 (60000)
  d=a (60002)
  a=*d (60003)
  a>>=c (60004)
  r=a 1 (60005)
  (         if t1 goto isM_2356) (60007)
  a== 0 (60007)
  jt 3 (60009)
  lj 60036 (60011)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 + H[t0+2]〈i〉) (60014)
  a=r 0 (60014)
  a+= 2 (60016)
  d=a (60018)
  c=*d (60019)
  a=r 252 (60020)
  a+= 157 (60022)
  d=a (60024)
  a=*d (60025)
  a+=c (60026)
  r=a 1 (60027)
  (         t1 = H[t1]〈〉) (60029)
  d=a (60029)
  a=*d (60030)
  r=a 1 (60031)
  (         goto MorHdone_2357) (60033)
  lj 60065 (60033)
  (        :isM_2356:) (60036)
  (         t1 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 & 2147483647) (60036)
  a=0 (60036)
  a-- (60037)
  a>>= 1 (60038)
  c=a (60040)
  a=r 252 (60041)
  a+= 157 (60043)
  d=a (60045)
  a=*d (60046)
  a&=c (60047)
  r=a 1 (60048)
  (         t1 = t1 + H[t0+2]〈i〉) (60050)
  a=r 0 (60050)
  a+= 2 (60052)
  d=a (60054)
  c=*d (60055)
  a=r 1 (60056)
  a+=c (60058)
  r=a 1 (60059)
  (         t1 = M[t1]) (60061)
  b=a (60061)
  a=*b (60062)
  r=a 1 (60063)
  (        :MorHdone_2357:) (60065)
  (         H[t0+4]〈innertree〉 = t1) (60065)
  a=r 0 (60065)
  a+= 4 (60067)
  d=a (60069)
  a=r 1 (60070)
  *d=a (60072)
  (                    3849:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (60073)
  (         t1 = H[t0+4]〈innertree〉 + 0) (60073)
  c=0 (60073)
  a=*d (60074)
  a+=c (60075)
  r=a 1 (60076)
  (         t1 = H[t1]〈〉) (60078)
  d=a (60078)
  a=*d (60079)
  r=a 1 (60080)
  (         H[t0+6]〈〉 = t0) (60082)
  a=r 0 (60082)
  a+= 6 (60084)
  d=a (60086)
  a=r 0 (60087)
  *d=a (60089)
  (saved bsp, return id:) (60090)
  (         H[t0+7]〈〉 = 317) (60090)
  d++ (60090)
  a= 1 (60091)
  a<<= 8 (60093)
  a+= 61 (60095)
  *d=a (60097)
  (push arguments:) (60098)
  (         H[t0+8]〈〉 = t1) (60098)
  d++ (60098)
  a=r 1 (60099)
  *d=a (60101)
  (         t0 = t0 + 7) (60102)
  c= 7 (60102)
  a=r 0 (60104)
  a+=c (60106)
  r=a 0 (60107)
  (         goto addr_free_pH) (60109)
  lj 2913 (60109)
  (        :return_id_317:) (60112)
  (         t2 = t1) (60112)
  a=r 1 (60112)
  r=a 2 (60114)
  (                    3850:           free_pH〈innertree〉) (60116)
  (         H[t0+6]〈〉 = t0) (60116)
  a=r 0 (60116)
  a+= 6 (60118)
  d=a (60120)
  a=r 0 (60121)
  *d=a (60123)
  (saved bsp, return id:) (60124)
  (         H[t0+7]〈〉 = 318) (60124)
  d++ (60124)
  a= 1 (60125)
  a<<= 8 (60127)
  a+= 62 (60129)
  *d=a (60131)
  (push arguments:) (60132)
  (         H[t0+8]〈〉 = H[t0+4]〈innertree〉) (60132)
  a=r 0 (60132)
  a+= 4 (60134)
  d=a (60136)
  c=*d (60137)
  a=r 0 (60138)
  a+= 8 (60140)
  d=a (60142)
  *d=c (60143)
  (         t0 = t0 + 7) (60144)
  c= 7 (60144)
  a=r 0 (60146)
  a+=c (60148)
  r=a 0 (60149)
  (         goto addr_free_pH) (60151)
  lj 2913 (60151)
  (        :return_id_318:) (60154)
  (                    3851:           i += 1) (60154)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (60154)
  a=r 0 (60154)
  a+= 2 (60156)
  d=a (60158)
  *d++ (60159)
  (         goto while_2352) (60160)
  lj 59961 (60160)
  (        :whileend_2354:) (60163)
  (                    3852:         free_pH〈meta_block_prefix_trees_insert_and_copy_lengths〉) (60163)
  (         H[t0+6]〈〉 = t0) (60163)
  a=r 0 (60163)
  a+= 6 (60165)
  d=a (60167)
  a=r 0 (60168)
  *d=a (60170)
  (saved bsp, return id:) (60171)
  (         H[t0+7]〈〉 = 319) (60171)
  d++ (60171)
  a= 1 (60172)
  a<<= 8 (60174)
  a+= 63 (60176)
  *d=a (60178)
  (push arguments:) (60179)
  (         H[t0+8]〈〉 = H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉) (60179)
  a=r 252 (60179)
  a+= 157 (60181)
  d=a (60183)
  c=*d (60184)
  a=r 0 (60185)
  a+= 8 (60187)
  d=a (60189)
  *d=c (60190)
  (         t0 = t0 + 7) (60191)
  c= 7 (60191)
  a=r 0 (60193)
  a+=c (60195)
  r=a 0 (60196)
  (         goto addr_free_pH) (60198)
  lj 2913 (60198)
  (        :return_id_319:) (60201)
  (         goto endif_2351) (60201)
  lj 60204 (60201)
  (        :else_2350:) (60204)
  (        :endif_2351:) (60204)
  (                    3853:       meta_block_prefix_trees_insert_and_copy_lengths = PrefixCodesInsertAndCopyLengths_data) (60204)
  (         H[t252+157]〈meta_block_prefix_trees_insert_and_copy_lengths〉 = H[t252+90]〈PrefixCodesInsertAndCopyLengths_data〉) (60204)
  a=r 252 (60204)
  a+= 90 (60206)
  d=a (60208)
  c=*d (60209)
  a=r 252 (60210)
  a+= 157 (60212)
  d=a (60214)
  *d=c (60215)
  (                    3854:       state = parse_prefix_codes_distances〈〉) (60216)
  (         H[t0+6]〈〉 = t0) (60216)
  a=r 0 (60216)
  a+= 6 (60218)
  d=a (60220)
  a=r 0 (60221)
  *d=a (60223)
  (saved bsp, return id:) (60224)
  (         H[t0+7]〈〉 = 320) (60224)
  d++ (60224)
  a= 1 (60225)
  a<<= 8 (60227)
  a+= 64 (60229)
  *d=a (60231)
  (push arguments:) (60232)
  (         t0 = t0 + 7) (60232)
  c= 7 (60232)
  a=r 0 (60234)
  a+=c (60236)
  r=a 0 (60237)
  (         goto parse_prefix_codes_distances) (60239)
  lj 44825 (60239)
  (        :return_id_320:) (60242)
  (         H[t252+165]〈state〉 = t1) (60242)
  a=r 252 (60242)
  a+= 165 (60244)
  d=a (60246)
  a=r 1 (60247)
  *d=a (60249)
  (         goto endif_2348) (60250)
  lj 62610 (60250)
  (        :else_2347:) (60253)
  (                    3855:     elif state == PrefixCodesDistances:) (60253)
  (         t1 = H[t252+165]〈state〉 == H[t252+91]〈PrefixCodesDistances〉) (60253)
  a=r 252 (60253)
  a+= 91 (60255)
  d=a (60257)
  c=*d (60258)
  a=r 252 (60259)
  a+= 165 (60261)
  d=a (60263)
  a=*d (60264)
  a==c (60265)
  a=0 (60266)
  jf 1 (60267)
  a++ (60269)
  r=a 1 (60270)
  (         ifN t1 goto else_2359) (60272)
  a== 0 (60272)
  jf 3 (60274)
  lj 60577 (60276)
  (                    3856:       if meta_block_prefix_trees_distances != NONE:) (60279)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 != 4294967295) (60279)
  c=0 (60279)
  c-- (60280)
  a=r 252 (60281)
  a+= 158 (60283)
  d=a (60285)
  a=*d (60286)
  a==c (60287)
  a=0 (60288)
  jt 1 (60289)
  a++ (60291)
  r=a 1 (60292)
  (         ifN t1 goto else_2362) (60294)
  a== 0 (60294)
  jf 3 (60296)
  lj 60550 (60298)
  (                    3857:         i = 0) (60301)
  (         H[t0+2]〈i〉 = 0) (60301)
  a=r 0 (60301)
  a+= 2 (60303)
  d=a (60305)
  *d=0 (60306)
  (                    3858:         while i < len_pH〈meta_block_prefix_trees_distances〉:) (60307)
  (        :while_2364:) (60307)
  (         t2 = H[t252+158]〈meta_block_prefix_trees_distances〉) (60307)
  a=r 252 (60307)
  a+= 158 (60309)
  d=a (60311)
  a=*d (60312)
  r=a 2 (60313)
  (         t2 = t2 - 2) (60315)
  c= 2 (60315)
  a-=c (60317)
  r=a 2 (60318)
  (         t1 = H[t0+2]〈i〉 < H[t2]〈〉) (60320)
  d=a (60320)
  c=*d (60321)
  a=r 0 (60322)
  a+= 2 (60324)
  d=a (60326)
  a=*d (60327)
  a<c (60328)
  a=0 (60329)
  jf 1 (60330)
  a++ (60332)
  r=a 1 (60333)
  (         ifN t1 goto whileend_2366) (60335)
  a== 0 (60335)
  jf 3 (60337)
  lj 60509 (60339)
  (                    3859:           innertree = array_pH〈meta_block_prefix_trees_distances[i]〉) (60342)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 >> 31) (60342)
  c= 31 (60342)
  a=r 252 (60344)
  a+= 158 (60346)
  d=a (60348)
  a=*d (60349)
  a>>=c (60350)
  r=a 1 (60351)
  (         if t1 goto isM_2368) (60353)
  a== 0 (60353)
  jt 3 (60355)
  lj 60382 (60357)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 + H[t0+2]〈i〉) (60360)
  a=r 0 (60360)
  a+= 2 (60362)
  d=a (60364)
  c=*d (60365)
  a=r 252 (60366)
  a+= 158 (60368)
  d=a (60370)
  a=*d (60371)
  a+=c (60372)
  r=a 1 (60373)
  (         t1 = H[t1]〈〉) (60375)
  d=a (60375)
  a=*d (60376)
  r=a 1 (60377)
  (         goto MorHdone_2369) (60379)
  lj 60411 (60379)
  (        :isM_2368:) (60382)
  (         t1 = H[t252+158]〈meta_block_prefix_trees_distances〉 & 2147483647) (60382)
  a=0 (60382)
  a-- (60383)
  a>>= 1 (60384)
  c=a (60386)
  a=r 252 (60387)
  a+= 158 (60389)
  d=a (60391)
  a=*d (60392)
  a&=c (60393)
  r=a 1 (60394)
  (         t1 = t1 + H[t0+2]〈i〉) (60396)
  a=r 0 (60396)
  a+= 2 (60398)
  d=a (60400)
  c=*d (60401)
  a=r 1 (60402)
  a+=c (60404)
  r=a 1 (60405)
  (         t1 = M[t1]) (60407)
  b=a (60407)
  a=*b (60408)
  r=a 1 (60409)
  (        :MorHdone_2369:) (60411)
  (         H[t0+4]〈innertree〉 = t1) (60411)
  a=r 0 (60411)
  a+= 4 (60413)
  d=a (60415)
  a=r 1 (60416)
  *d=a (60418)
  (                    3860:           free_pH〈array_pH〈innertree[0]〉〉  # free tree's buffer) (60419)
  (         t1 = H[t0+4]〈innertree〉 + 0) (60419)
  c=0 (60419)
  a=*d (60420)
  a+=c (60421)
  r=a 1 (60422)
  (         t1 = H[t1]〈〉) (60424)
  d=a (60424)
  a=*d (60425)
  r=a 1 (60426)
  (         H[t0+6]〈〉 = t0) (60428)
  a=r 0 (60428)
  a+= 6 (60430)
  d=a (60432)
  a=r 0 (60433)
  *d=a (60435)
  (saved bsp, return id:) (60436)
  (         H[t0+7]〈〉 = 321) (60436)
  d++ (60436)
  a= 1 (60437)
  a<<= 8 (60439)
  a+= 65 (60441)
  *d=a (60443)
  (push arguments:) (60444)
  (         H[t0+8]〈〉 = t1) (60444)
  d++ (60444)
  a=r 1 (60445)
  *d=a (60447)
  (         t0 = t0 + 7) (60448)
  c= 7 (60448)
  a=r 0 (60450)
  a+=c (60452)
  r=a 0 (60453)
  (         goto addr_free_pH) (60455)
  lj 2913 (60455)
  (        :return_id_321:) (60458)
  (         t2 = t1) (60458)
  a=r 1 (60458)
  r=a 2 (60460)
  (                    3861:           free_pH〈innertree〉) (60462)
  (         H[t0+6]〈〉 = t0) (60462)
  a=r 0 (60462)
  a+= 6 (60464)
  d=a (60466)
  a=r 0 (60467)
  *d=a (60469)
  (saved bsp, return id:) (60470)
  (         H[t0+7]〈〉 = 322) (60470)
  d++ (60470)
  a= 1 (60471)
  a<<= 8 (60473)
  a+= 66 (60475)
  *d=a (60477)
  (push arguments:) (60478)
  (         H[t0+8]〈〉 = H[t0+4]〈innertree〉) (60478)
  a=r 0 (60478)
  a+= 4 (60480)
  d=a (60482)
  c=*d (60483)
  a=r 0 (60484)
  a+= 8 (60486)
  d=a (60488)
  *d=c (60489)
  (         t0 = t0 + 7) (60490)
  c= 7 (60490)
  a=r 0 (60492)
  a+=c (60494)
  r=a 0 (60495)
  (         goto addr_free_pH) (60497)
  lj 2913 (60497)
  (        :return_id_322:) (60500)
  (                    3862:           i += 1) (60500)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (60500)
  a=r 0 (60500)
  a+= 2 (60502)
  d=a (60504)
  *d++ (60505)
  (         goto while_2364) (60506)
  lj 60307 (60506)
  (        :whileend_2366:) (60509)
  (                    3863:         free_pH〈meta_block_prefix_trees_distances〉) (60509)
  (         H[t0+6]〈〉 = t0) (60509)
  a=r 0 (60509)
  a+= 6 (60511)
  d=a (60513)
  a=r 0 (60514)
  *d=a (60516)
  (saved bsp, return id:) (60517)
  (         H[t0+7]〈〉 = 323) (60517)
  d++ (60517)
  a= 1 (60518)
  a<<= 8 (60520)
  a+= 67 (60522)
  *d=a (60524)
  (push arguments:) (60525)
  (         H[t0+8]〈〉 = H[t252+158]〈meta_block_prefix_trees_distances〉) (60525)
  a=r 252 (60525)
  a+= 158 (60527)
  d=a (60529)
  c=*d (60530)
  a=r 0 (60531)
  a+= 8 (60533)
  d=a (60535)
  *d=c (60536)
  (         t0 = t0 + 7) (60537)
  c= 7 (60537)
  a=r 0 (60539)
  a+=c (60541)
  r=a 0 (60542)
  (         goto addr_free_pH) (60544)
  lj 2913 (60544)
  (        :return_id_323:) (60547)
  (         goto endif_2363) (60547)
  lj 60550 (60547)
  (        :else_2362:) (60550)
  (        :endif_2363:) (60550)
  (                    3864:       meta_block_prefix_trees_distances = PrefixCodesDistances_data) (60550)
  (         H[t252+158]〈meta_block_prefix_trees_distances〉 = H[t252+92]〈PrefixCodesDistances_data〉) (60550)
  a=r 252 (60550)
  a+= 92 (60552)
  d=a (60554)
  c=*d (60555)
  a=r 252 (60556)
  a+= 158 (60558)
  d=a (60560)
  *d=c (60561)
  (                    3865:       state = DataMetaBlockBegin) (60562)
  (         H[t252+165]〈state〉 = H[t252+93]〈DataMetaBlockBegin〉) (60562)
  a=r 252 (60562)
  a+= 93 (60564)
  d=a (60566)
  c=*d (60567)
  a=r 252 (60568)
  a+= 165 (60570)
  d=a (60572)
  *d=c (60573)
  (         goto endif_2360) (60574)
  lj 62610 (60574)
  (        :else_2359:) (60577)
  (                    3866:     elif state == DataMetaBlockBegin:) (60577)
  (         t1 = H[t252+165]〈state〉 == H[t252+93]〈DataMetaBlockBegin〉) (60577)
  a=r 252 (60577)
  a+= 93 (60579)
  d=a (60581)
  c=*d (60582)
  a=r 252 (60583)
  a+= 165 (60585)
  d=a (60587)
  a=*d (60588)
  a==c (60589)
  a=0 (60590)
  jf 1 (60591)
  a++ (60593)
  r=a 1 (60594)
  (         ifN t1 goto else_2371) (60596)
  a== 0 (60596)
  jf 3 (60598)
  lj 60640 (60600)
  (                    3867:       state = parse_insert_and_copy_length〈〉) (60603)
  (         H[t0+6]〈〉 = t0) (60603)
  a=r 0 (60603)
  a+= 6 (60605)
  d=a (60607)
  a=r 0 (60608)
  *d=a (60610)
  (saved bsp, return id:) (60611)
  (         H[t0+7]〈〉 = 324) (60611)
  d++ (60611)
  a= 1 (60612)
  a<<= 8 (60614)
  a+= 68 (60616)
  *d=a (60618)
  (push arguments:) (60619)
  (         t0 = t0 + 7) (60619)
  c= 7 (60619)
  a=r 0 (60621)
  a+=c (60623)
  r=a 0 (60624)
  (         goto parse_insert_and_copy_length) (60626)
  lj 47652 (60626)
  (        :return_id_324:) (60629)
  (         H[t252+165]〈state〉 = t1) (60629)
  a=r 252 (60629)
  a+= 165 (60631)
  d=a (60633)
  a=r 1 (60634)
  *d=a (60636)
  (         goto endif_2372) (60637)
  lj 62610 (60637)
  (        :else_2371:) (60640)
  (                    3868:     elif state == InsertAndCopyLength:) (60640)
  (         t1 = H[t252+165]〈state〉 == H[t252+94]〈InsertAndCopyLength〉) (60640)
  a=r 252 (60640)
  a+= 94 (60642)
  d=a (60644)
  c=*d (60645)
  a=r 252 (60646)
  a+= 165 (60648)
  d=a (60650)
  a=*d (60651)
  a==c (60652)
  a=0 (60653)
  jf 1 (60654)
  a++ (60656)
  r=a 1 (60657)
  (         ifN t1 goto else_2374) (60659)
  a== 0 (60659)
  jf 3 (60661)
  lj 60780 (60663)
  (                    3869:       meta_block_insert_and_copy_length = InsertAndCopyLength_data) (60666)
  (         H[t252+160]〈meta_block_insert_and_copy_length〉 = H[t252+95]〈InsertAndCopyLength_data〉) (60666)
  a=r 252 (60666)
  a+= 95 (60668)
  d=a (60670)
  c=*d (60671)
  a=r 252 (60672)
  a+= 160 (60674)
  d=a (60676)
  *d=c (60677)
  (                    3870:       if InsertAndCopyLength_data >= 0 and InsertAndCopyLength_data <= 127:) (60678)
  (         t2 = H[t252+95]〈InsertAndCopyLength_data〉 >= 0) (60678)
  c=0 (60678)
  a=r 252 (60679)
  a+= 95 (60681)
  d=a (60683)
  a=*d (60684)
  a==c (60685)
  jt 4 (60686)
  a>c (60688)
  a=0 (60689)
  jf 2 (60690)
  a= 1 (60692)
  r=a 2 (60694)
  (         t3 = H[t252+95]〈InsertAndCopyLength_data〉 <= 127) (60696)
  c= 127 (60696)
  a=*d (60698)
  a==c (60699)
  jt 4 (60700)
  a<c (60702)
  a=0 (60703)
  jf 2 (60704)
  a= 1 (60706)
  r=a 3 (60708)
  (         t1 = t2 and t3) (60710)
  c=a (60710)
  a=r 2 (60711)
  a== 0 (60713)
  jt 1 (60715)
  a=c (60717)
  r=a 1 (60718)
  (         ifN t1 goto else_2378) (60720)
  a== 0 (60720)
  jf 3 (60722)
  lj 60736 (60724)
  (                    3871:         meta_block_distance = 0) (60727)
  (         H[t252+163]〈meta_block_distance〉 = 0) (60727)
  a=r 252 (60727)
  a+= 163 (60729)
  d=a (60731)
  *d=0 (60732)
  (         goto endif_2379) (60733)
  lj 60743 (60733)
  (        :else_2378:) (60736)
  (                    3873:         meta_block_distance = NONE) (60736)
  (         H[t252+163]〈meta_block_distance〉 = 4294967295) (60736)
  a=r 252 (60736)
  a+= 163 (60738)
  d=a (60740)
  *d=0 (60741)
  *d-- (60742)
  (        :endif_2379:) (60743)
  (                    3874:       state = decode_insert_and_copy_length〈〉) (60743)
  (         H[t0+6]〈〉 = t0) (60743)
  a=r 0 (60743)
  a+= 6 (60745)
  d=a (60747)
  a=r 0 (60748)
  *d=a (60750)
  (saved bsp, return id:) (60751)
  (         H[t0+7]〈〉 = 325) (60751)
  d++ (60751)
  a= 1 (60752)
  a<<= 8 (60754)
  a+= 69 (60756)
  *d=a (60758)
  (push arguments:) (60759)
  (         t0 = t0 + 7) (60759)
  c= 7 (60759)
  a=r 0 (60761)
  a+=c (60763)
  r=a 0 (60764)
  (         goto decode_insert_and_copy_length) (60766)
  lj 46512 (60766)
  (        :return_id_325:) (60769)
  (         H[t252+165]〈state〉 = t1) (60769)
  a=r 252 (60769)
  a+= 165 (60771)
  d=a (60773)
  a=r 1 (60774)
  *d=a (60776)
  (         goto endif_2375) (60777)
  lj 62610 (60777)
  (        :else_2374:) (60780)
  (                    3875:     elif state == InsertLengthAndCopyLength:) (60780)
  (         t1 = H[t252+165]〈state〉 == H[t252+96]〈InsertLengthAndCopyLength〉) (60780)
  a=r 252 (60780)
  a+= 96 (60782)
  d=a (60784)
  c=*d (60785)
  a=r 252 (60786)
  a+= 165 (60788)
  d=a (60790)
  a=*d (60791)
  a==c (60792)
  a=0 (60793)
  jf 1 (60794)
  a++ (60796)
  r=a 1 (60797)
  (         ifN t1 goto else_2381) (60799)
  a== 0 (60799)
  jf 3 (60801)
  lj 60915 (60803)
  (                    3876:       m_len = meta_block_header_m_len) (60806)
  (         H[t0+6]〈m_len〉 = H[t252+129]〈meta_block_header_m_len〉) (60806)
  a=r 252 (60806)
  a+= 129 (60808)
  d=a (60810)
  c=*d (60811)
  a=r 0 (60812)
  a+= 6 (60814)
  d=a (60816)
  *d=c (60817)
  (                    3877:       meta_block_insert_length = InsertLengthAndCopyLength_data_in_len) (60818)
  (         H[t252+162]〈meta_block_insert_length〉 = H[t252+98]〈InsertLengthAndCopyLength_data_in_len〉) (60818)
  a=r 252 (60818)
  a+= 98 (60820)
  d=a (60822)
  c=*d (60823)
  a=r 252 (60824)
  a+= 162 (60826)
  d=a (60828)
  *d=c (60829)
  (                    3878:       meta_block_copy_length = InsertLengthAndCopyLength_data_co_len) (60830)
  (         H[t252+161]〈meta_block_copy_length〉 = H[t252+97]〈InsertLengthAndCopyLength_data_co_len〉) (60830)
  a=r 252 (60830)
  a+= 97 (60832)
  d=a (60834)
  c=*d (60835)
  a=r 252 (60836)
  a+= 161 (60838)
  d=a (60840)
  *d=c (60841)
  (                    3879:       if m_len < meta_block_count_output + meta_block_insert_length:  # or 〈m_len > meta_block_count_output + meta_block_insert_length and m_len < meta_block_count_output + meta_block_insert_length + meta_block_copy_length〉) (60842)
  (         t2 = H[t252+143]〈meta_block_count_output〉 + H[t252+162]〈meta_block_insert_length〉) (60842)
  d++ (60842)
  c=*d (60843)
  a=r 252 (60844)
  a+= 143 (60846)
  d=a (60848)
  a=*d (60849)
  a+=c (60850)
  r=a 2 (60851)
  (         t1 = H[t0+6]〈m_len〉 < t2) (60853)
  c=a (60853)
  a=r 0 (60854)
  a+= 6 (60856)
  d=a (60858)
  a=*d (60859)
  a<c (60860)
  a=0 (60861)
  jf 1 (60862)
  a++ (60864)
  r=a 1 (60865)
  (         ifN t1 goto else_2384) (60867)
  a== 0 (60867)
  jf 3 (60869)
  lj 60878 (60871)
  (                    3880:         error〈〉 # ExceededExpectedBytes) (60874)
  (         error) (60874)
  error (60874)
  (         goto endif_2385) (60875)
  lj 60878 (60875)
  (        :else_2384:) (60878)
  (        :endif_2385:) (60878)
  (                    3881:       state = parse_insert_literals〈〉) (60878)
  (         H[t0+7]〈〉 = t0) (60878)
  a=r 0 (60878)
  a+= 7 (60880)
  d=a (60882)
  a=r 0 (60883)
  *d=a (60885)
  (saved bsp, return id:) (60886)
  (         H[t0+8]〈〉 = 326) (60886)
  d++ (60886)
  a= 1 (60887)
  a<<= 8 (60889)
  a+= 70 (60891)
  *d=a (60893)
  (push arguments:) (60894)
  (         t0 = t0 + 8) (60894)
  c= 8 (60894)
  a=r 0 (60896)
  a+=c (60898)
  r=a 0 (60899)
  (         goto parse_insert_literals) (60901)
  lj 48176 (60901)
  (        :return_id_326:) (60904)
  (         H[t252+165]〈state〉 = t1) (60904)
  a=r 252 (60904)
  a+= 165 (60906)
  d=a (60908)
  a=r 1 (60909)
  *d=a (60911)
  (         goto endif_2382) (60912)
  lj 62610 (60912)
  (        :else_2381:) (60915)
  (                    3882:     elif state == InsertLiterals:) (60915)
  (         t1 = H[t252+165]〈state〉 == H[t252+99]〈InsertLiterals〉) (60915)
  a=r 252 (60915)
  a+= 99 (60917)
  d=a (60919)
  c=*d (60920)
  a=r 252 (60921)
  a+= 165 (60923)
  d=a (60925)
  a=*d (60926)
  a==c (60927)
  a=0 (60928)
  jf 1 (60929)
  a++ (60931)
  r=a 1 (60932)
  (         ifN t1 goto else_2387) (60934)
  a== 0 (60934)
  jf 3 (60936)
  lj 61506 (60938)
  (                    3883:       m_len = meta_block_header_m_len) (60941)
  (         H[t0+6]〈m_len〉 = H[t252+129]〈meta_block_header_m_len〉) (60941)
  a=r 252 (60941)
  a+= 129 (60943)
  d=a (60945)
  c=*d (60946)
  a=r 0 (60947)
  a+= 6 (60949)
  d=a (60951)
  *d=c (60952)
  (                    3884:       if m_len < meta_block_count_output + len_pM〈InsertLiterals_data〉:) (60953)
  (         t3 = H[t252+100]〈InsertLiterals_data〉) (60953)
  a=r 252 (60953)
  a+= 100 (60955)
  d=a (60957)
  a=*d (60958)
  r=a 3 (60959)
  (         t3 = t3 & 2147483647) (60961)
  a=0 (60961)
  a-- (60962)
  a>>= 1 (60963)
  c=a (60965)
  a=r 3 (60966)
  a&=c (60968)
  r=a 3 (60969)
  (         t3 = t3 - 5) (60971)
  c= 5 (60971)
  a-=c (60973)
  r=a 3 (60974)
  (         t4 = M[t3] << 8) (60976)
  c= 8 (60976)
  b=a (60978)
  a=*b (60979)
  a<<=c (60980)
  r=a 4 (60981)
  (         t3 = t3 + 1) (60983)
  a=r 3 (60983)
  a++ (60985)
  r=a 3 (60986)
  (         t4 = t4 + M[t3]) (60988)
  b=a (60988)
  c=*b (60989)
  a=r 4 (60990)
  a+=c (60992)
  r=a 4 (60993)
  (         t4 = t4 << 8) (60995)
  c= 8 (60995)
  a<<=c (60997)
  r=a 4 (60998)
  (         t3 = t3 + 1) (61000)
  a=r 3 (61000)
  a++ (61002)
  r=a 3 (61003)
  (         t4 = t4 + M[t3]) (61005)
  b=a (61005)
  c=*b (61006)
  a=r 4 (61007)
  a+=c (61009)
  r=a 4 (61010)
  (         t4 = t4 << 8) (61012)
  c= 8 (61012)
  a<<=c (61014)
  r=a 4 (61015)
  (         t3 = t3 + 1) (61017)
  a=r 3 (61017)
  a++ (61019)
  r=a 3 (61020)
  (         t4 = t4 + M[t3]) (61022)
  b=a (61022)
  c=*b (61023)
  a=r 4 (61024)
  a+=c (61026)
  r=a 4 (61027)
  (         t2 = H[t252+143]〈meta_block_count_output〉 + t4) (61029)
  c=a (61029)
  a=r 252 (61030)
  a+= 143 (61032)
  d=a (61034)
  a=*d (61035)
  a+=c (61036)
  r=a 2 (61037)
  (         t1 = H[t0+6]〈m_len〉 < t2) (61039)
  c=a (61039)
  a=r 0 (61040)
  a+= 6 (61042)
  d=a (61044)
  a=*d (61045)
  a<c (61046)
  a=0 (61047)
  jf 1 (61048)
  a++ (61050)
  r=a 1 (61051)
  (         ifN t1 goto else_2390) (61053)
  a== 0 (61053)
  jf 3 (61055)
  lj 61064 (61057)
  (                    3885:         error〈〉 # ExceededExpectedBytes) (61060)
  (         error) (61060)
  error (61060)
  (         goto endif_2391) (61061)
  lj 61064 (61061)
  (        :else_2390:) (61064)
  (        :endif_2391:) (61064)
  (                    3886:       i = 0) (61064)
  (         H[t0+2]〈i〉 = 0) (61064)
  a=r 0 (61064)
  a+= 2 (61066)
  d=a (61068)
  *d=0 (61069)
  (                    3887:       while i < len_pM〈InsertLiterals_data〉:) (61070)
  (        :while_2392:) (61070)
  (         t2 = H[t252+100]〈InsertLiterals_data〉) (61070)
  a=r 252 (61070)
  a+= 100 (61072)
  d=a (61074)
  a=*d (61075)
  r=a 2 (61076)
  (         t2 = t2 & 2147483647) (61078)
  a=0 (61078)
  a-- (61079)
  a>>= 1 (61080)
  c=a (61082)
  a=r 2 (61083)
  a&=c (61085)
  r=a 2 (61086)
  (         t2 = t2 - 5) (61088)
  c= 5 (61088)
  a-=c (61090)
  r=a 2 (61091)
  (         t3 = M[t2] << 8) (61093)
  c= 8 (61093)
  b=a (61095)
  a=*b (61096)
  a<<=c (61097)
  r=a 3 (61098)
  (         t2 = t2 + 1) (61100)
  a=r 2 (61100)
  a++ (61102)
  r=a 2 (61103)
  (         t3 = t3 + M[t2]) (61105)
  b=a (61105)
  c=*b (61106)
  a=r 3 (61107)
  a+=c (61109)
  r=a 3 (61110)
  (         t3 = t3 << 8) (61112)
  c= 8 (61112)
  a<<=c (61114)
  r=a 3 (61115)
  (         t2 = t2 + 1) (61117)
  a=r 2 (61117)
  a++ (61119)
  r=a 2 (61120)
  (         t3 = t3 + M[t2]) (61122)
  b=a (61122)
  c=*b (61123)
  a=r 3 (61124)
  a+=c (61126)
  r=a 3 (61127)
  (         t3 = t3 << 8) (61129)
  c= 8 (61129)
  a<<=c (61131)
  r=a 3 (61132)
  (         t2 = t2 + 1) (61134)
  a=r 2 (61134)
  a++ (61136)
  r=a 2 (61137)
  (         t3 = t3 + M[t2]) (61139)
  b=a (61139)
  c=*b (61140)
  a=r 3 (61141)
  a+=c (61143)
  r=a 3 (61144)
  (         t1 = H[t0+2]〈i〉 < t3) (61146)
  c=a (61146)
  a=r 0 (61147)
  a+= 2 (61149)
  d=a (61151)
  a=*d (61152)
  a<c (61153)
  a=0 (61154)
  jf 1 (61155)
  a++ (61157)
  r=a 1 (61158)
  (         ifN t1 goto whileend_2394) (61160)
  a== 0 (61160)
  jf 3 (61162)
  lj 61380 (61164)
  (                    3888:         literal = InsertLiterals_data[i]) (61167)
  (         t1 = H[t252+100]〈InsertLiterals_data〉 >> 31) (61167)
  c= 31 (61167)
  a=r 252 (61169)
  a+= 100 (61171)
  d=a (61173)
  a=*d (61174)
  a>>=c (61175)
  r=a 1 (61176)
  (         if t1 goto isM_2396) (61178)
  a== 0 (61178)
  jt 3 (61180)
  lj 61207 (61182)
  (         t1 = H[t252+100]〈InsertLiterals_data〉 + H[t0+2]〈i〉) (61185)
  a=r 0 (61185)
  a+= 2 (61187)
  d=a (61189)
  c=*d (61190)
  a=r 252 (61191)
  a+= 100 (61193)
  d=a (61195)
  a=*d (61196)
  a+=c (61197)
  r=a 1 (61198)
  (         t1 = H[t1]〈〉) (61200)
  d=a (61200)
  a=*d (61201)
  r=a 1 (61202)
  (         goto MorHdone_2397) (61204)
  lj 61236 (61204)
  (        :isM_2396:) (61207)
  (         t1 = H[t252+100]〈InsertLiterals_data〉 & 2147483647) (61207)
  a=0 (61207)
  a-- (61208)
  a>>= 1 (61209)
  c=a (61211)
  a=r 252 (61212)
  a+= 100 (61214)
  d=a (61216)
  a=*d (61217)
  a&=c (61218)
  r=a 1 (61219)
  (         t1 = t1 + H[t0+2]〈i〉) (61221)
  a=r 0 (61221)
  a+= 2 (61223)
  d=a (61225)
  c=*d (61226)
  a=r 1 (61227)
  a+=c (61229)
  r=a 1 (61230)
  (         t1 = M[t1]) (61232)
  b=a (61232)
  a=*b (61233)
  r=a 1 (61234)
  (        :MorHdone_2397:) (61236)
  (         H[t0+5]〈literal〉 = t1) (61236)
  a=r 0 (61236)
  a+= 5 (61238)
  d=a (61240)
  a=r 1 (61241)
  *d=a (61243)
  (                    3889:         out〈literal〉) (61244)
  (         out H[t0+5]〈literal〉) (61244)
  a=*d (61244)
  out (61245)
  (                    3890:         output_window_pointer = 〈output_window_pointer + 1〉 % len_pM〈output_window〉) (61246)
  (         t2 = H[t252+118]〈output_window_pointer〉 + 1) (61246)
  c= 1 (61246)
  a=r 252 (61248)
  a+= 118 (61250)
  d=a (61252)
  a=*d (61253)
  a+=c (61254)
  r=a 2 (61255)
  (         t3 = H[t252+117]〈output_window〉) (61257)
  d-- (61257)
  a=*d (61258)
  r=a 3 (61259)
  (         t3 = t3 & 2147483647) (61261)
  a=0 (61261)
  a-- (61262)
  a>>= 1 (61263)
  c=a (61265)
  a=r 3 (61266)
  a&=c (61268)
  r=a 3 (61269)
  (         t3 = t3 - 5) (61271)
  c= 5 (61271)
  a-=c (61273)
  r=a 3 (61274)
  (         t4 = M[t3] << 8) (61276)
  c= 8 (61276)
  b=a (61278)
  a=*b (61279)
  a<<=c (61280)
  r=a 4 (61281)
  (         t3 = t3 + 1) (61283)
  a=r 3 (61283)
  a++ (61285)
  r=a 3 (61286)
  (         t4 = t4 + M[t3]) (61288)
  b=a (61288)
  c=*b (61289)
  a=r 4 (61290)
  a+=c (61292)
  r=a 4 (61293)
  (         t4 = t4 << 8) (61295)
  c= 8 (61295)
  a<<=c (61297)
  r=a 4 (61298)
  (         t3 = t3 + 1) (61300)
  a=r 3 (61300)
  a++ (61302)
  r=a 3 (61303)
  (         t4 = t4 + M[t3]) (61305)
  b=a (61305)
  c=*b (61306)
  a=r 4 (61307)
  a+=c (61309)
  r=a 4 (61310)
  (         t4 = t4 << 8) (61312)
  c= 8 (61312)
  a<<=c (61314)
  r=a 4 (61315)
  (         t3 = t3 + 1) (61317)
  a=r 3 (61317)
  a++ (61319)
  r=a 3 (61320)
  (         t4 = t4 + M[t3]) (61322)
  b=a (61322)
  c=*b (61323)
  a=r 4 (61324)
  a+=c (61326)
  r=a 4 (61327)
  (         t1 = t2 % t4) (61329)
  c=a (61329)
  a=r 2 (61330)
  a%=c (61332)
  r=a 1 (61333)
  (         H[t252+118]〈output_window_pointer〉 = t1) (61335)
  d++ (61335)
  *d=a (61336)
  (                    3891:         output_window[output_window_pointer] = literal) (61337)
  (         t1 = H[t252+117]〈output_window〉 & 2147483647) (61337)
  a=0 (61337)
  a-- (61338)
  a>>= 1 (61339)
  c=a (61341)
  d-- (61342)
  a=*d (61343)
  a&=c (61344)
  r=a 1 (61345)
  (         t1 = t1 + H[t252+118]〈output_window_pointer〉) (61347)
  d++ (61347)
  c=*d (61348)
  a+=c (61349)
  r=a 1 (61350)
  (         M[t1] = H[t0+5]〈literal〉) (61352)
  c=a (61352)
  a=r 0 (61353)
  a+= 5 (61355)
  d=a (61357)
  *c=*d (61358)
  (                    3892:         count_output += 1) (61359)
  (         H[t252+119]〈count_output〉 = H[t252+119]〈count_output〉 + 1) (61359)
  a=r 252 (61359)
  a+= 119 (61361)
  d=a (61363)
  *d++ (61364)
  (                    3893:         meta_block_count_output += 1) (61365)
  (         H[t252+143]〈meta_block_count_output〉 = H[t252+143]〈meta_block_count_output〉 + 1) (61365)
  a=r 252 (61365)
  a+= 143 (61367)
  d=a (61369)
  *d++ (61370)
  (                    3894:         i += 1) (61371)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (61371)
  a=r 0 (61371)
  a+= 2 (61373)
  d=a (61375)
  *d++ (61376)
  (         goto while_2392) (61377)
  lj 61070 (61377)
  (        :whileend_2394:) (61380)
  (                    3895:       free_pM〈InsertLiterals_data〉) (61380)
  (         t1 = H[t252+100]〈InsertLiterals_data〉 & 2147483647) (61380)
  a=0 (61380)
  a-- (61381)
  a>>= 1 (61382)
  c=a (61384)
  a=r 252 (61385)
  a+= 100 (61387)
  d=a (61389)
  a=*d (61390)
  a&=c (61391)
  r=a 1 (61392)
  (         H[t0+7]〈〉 = t0) (61394)
  a=r 0 (61394)
  a+= 7 (61396)
  d=a (61398)
  a=r 0 (61399)
  *d=a (61401)
  (saved bsp, return id:) (61402)
  (         H[t0+8]〈〉 = 327) (61402)
  d++ (61402)
  a= 1 (61403)
  a<<= 8 (61405)
  a+= 71 (61407)
  *d=a (61409)
  (push arguments:) (61410)
  (         H[t0+9]〈〉 = t1) (61410)
  d++ (61410)
  a=r 1 (61411)
  *d=a (61413)
  (         t0 = t0 + 8) (61414)
  c= 8 (61414)
  a=r 0 (61416)
  a+=c (61418)
  r=a 0 (61419)
  (         goto addr_free_pM) (61421)
  lj 2406 (61421)
  (        :return_id_327:) (61424)
  (         t2 = t1) (61424)
  a=r 1 (61424)
  r=a 2 (61426)
  (                    3896:       if meta_block_header_m_len == meta_block_count_output:) (61428)
  (         t1 = H[t252+129]〈meta_block_header_m_len〉 == H[t252+143]〈meta_block_count_output〉) (61428)
  a=r 252 (61428)
  a+= 143 (61430)
  d=a (61432)
  c=*d (61433)
  a=r 252 (61434)
  a+= 129 (61436)
  d=a (61438)
  a=*d (61439)
  a==c (61440)
  a=0 (61441)
  jf 1 (61442)
  a++ (61444)
  r=a 1 (61445)
  (         ifN t1 goto else_2399) (61447)
  a== 0 (61447)
  jf 3 (61449)
  lj 61469 (61451)
  (                    3897:         state = DataMetaBlockEnd) (61454)
  (         H[t252+165]〈state〉 = H[t252+107]〈DataMetaBlockEnd〉) (61454)
  a=r 252 (61454)
  a+= 107 (61456)
  d=a (61458)
  c=*d (61459)
  a=r 252 (61460)
  a+= 165 (61462)
  d=a (61464)
  *d=c (61465)
  (         goto endif_2400) (61466)
  lj 61503 (61466)
  (        :else_2399:) (61469)
  (                    3899:         state = parse_distance_code〈〉) (61469)
  (         H[t0+7]〈〉 = t0) (61469)
  a=r 0 (61469)
  a+= 7 (61471)
  d=a (61473)
  a=r 0 (61474)
  *d=a (61476)
  (saved bsp, return id:) (61477)
  (         H[t0+8]〈〉 = 328) (61477)
  d++ (61477)
  a= 1 (61478)
  a<<= 8 (61480)
  a+= 72 (61482)
  *d=a (61484)
  (push arguments:) (61485)
  (         t0 = t0 + 8) (61485)
  c= 8 (61485)
  a=r 0 (61487)
  a+=c (61489)
  r=a 0 (61490)
  (         goto parse_distance_code) (61492)
  lj 49162 (61492)
  (        :return_id_328:) (61495)
  (         H[t252+165]〈state〉 = t1) (61495)
  a=r 252 (61495)
  a+= 165 (61497)
  d=a (61499)
  a=r 1 (61500)
  *d=a (61502)
  (        :endif_2400:) (61503)
  (         goto endif_2388) (61503)
  lj 62610 (61503)
  (        :else_2387:) (61506)
  (                    3900:     elif state == DistanceCode:) (61506)
  (         t1 = H[t252+165]〈state〉 == H[t252+101]〈DistanceCode〉) (61506)
  a=r 252 (61506)
  a+= 101 (61508)
  d=a (61510)
  c=*d (61511)
  a=r 252 (61512)
  a+= 165 (61514)
  d=a (61516)
  a=*d (61517)
  a==c (61518)
  a=0 (61519)
  jf 1 (61520)
  a++ (61522)
  r=a 1 (61523)
  (         ifN t1 goto else_2402) (61525)
  a== 0 (61525)
  jf 3 (61527)
  lj 61581 (61529)
  (                    3901:       meta_block_distance_code = DistanceCode_data) (61532)
  (         H[t252+164]〈meta_block_distance_code〉 = H[t252+102]〈DistanceCode_data〉) (61532)
  a=r 252 (61532)
  a+= 102 (61534)
  d=a (61536)
  c=*d (61537)
  a=r 252 (61538)
  a+= 164 (61540)
  d=a (61542)
  *d=c (61543)
  (                    3902:       state = decode_distance〈〉) (61544)
  (         H[t0+7]〈〉 = t0) (61544)
  a=r 0 (61544)
  a+= 7 (61546)
  d=a (61548)
  a=r 0 (61549)
  *d=a (61551)
  (saved bsp, return id:) (61552)
  (         H[t0+8]〈〉 = 329) (61552)
  d++ (61552)
  a= 1 (61553)
  a<<= 8 (61555)
  a+= 73 (61557)
  *d=a (61559)
  (push arguments:) (61560)
  (         t0 = t0 + 8) (61560)
  c= 8 (61560)
  a=r 0 (61562)
  a+=c (61564)
  r=a 0 (61565)
  (         goto decode_distance) (61567)
  lj 49767 (61567)
  (        :return_id_329:) (61570)
  (         H[t252+165]〈state〉 = t1) (61570)
  a=r 252 (61570)
  a+= 165 (61572)
  d=a (61574)
  a=r 1 (61575)
  *d=a (61577)
  (         goto endif_2403) (61578)
  lj 62610 (61578)
  (        :else_2402:) (61581)
  (                    3903:     elif state == Distance:) (61581)
  (         t1 = H[t252+165]〈state〉 == H[t252+103]〈Distance〉) (61581)
  a=r 252 (61581)
  a+= 103 (61583)
  d=a (61585)
  c=*d (61586)
  a=r 252 (61587)
  a+= 165 (61589)
  d=a (61591)
  a=*d (61592)
  a==c (61593)
  a=0 (61594)
  jf 1 (61595)
  a++ (61597)
  r=a 1 (61598)
  (         ifN t1 goto else_2405) (61600)
  a== 0 (61600)
  jf 3 (61602)
  lj 61656 (61604)
  (                    3904:       meta_block_distance = Distance_data) (61607)
  (         H[t252+163]〈meta_block_distance〉 = H[t252+104]〈Distance_data〉) (61607)
  a=r 252 (61607)
  a+= 104 (61609)
  d=a (61611)
  c=*d (61612)
  a=r 252 (61613)
  a+= 163 (61615)
  d=a (61617)
  *d=c (61618)
  (                    3905:       state = copy_literals〈〉) (61619)
  (         H[t0+7]〈〉 = t0) (61619)
  a=r 0 (61619)
  a+= 7 (61621)
  d=a (61623)
  a=r 0 (61624)
  *d=a (61626)
  (saved bsp, return id:) (61627)
  (         H[t0+8]〈〉 = 330) (61627)
  d++ (61627)
  a= 1 (61628)
  a<<= 8 (61630)
  a+= 74 (61632)
  *d=a (61634)
  (push arguments:) (61635)
  (         t0 = t0 + 8) (61635)
  c= 8 (61635)
  a=r 0 (61637)
  a+=c (61639)
  r=a 0 (61640)
  (         goto copy_literals) (61642)
  lj 50824 (61642)
  (        :return_id_330:) (61645)
  (         H[t252+165]〈state〉 = t1) (61645)
  a=r 252 (61645)
  a+= 165 (61647)
  d=a (61649)
  a=r 1 (61650)
  *d=a (61652)
  (         goto endif_2406) (61653)
  lj 62610 (61653)
  (        :else_2405:) (61656)
  (                    3906:     elif state == CopyLiterals:) (61656)
  (         t1 = H[t252+165]〈state〉 == H[t252+105]〈CopyLiterals〉) (61656)
  a=r 252 (61656)
  a+= 105 (61658)
  d=a (61660)
  c=*d (61661)
  a=r 252 (61662)
  a+= 165 (61664)
  d=a (61666)
  a=*d (61667)
  a==c (61668)
  a=0 (61669)
  jf 1 (61670)
  a++ (61672)
  r=a 1 (61673)
  (         ifN t1 goto else_2408) (61675)
  a== 0 (61675)
  jf 3 (61677)
  lj 62264 (61679)
  (                    3907:       m_len = meta_block_header_m_len) (61682)
  (         H[t0+6]〈m_len〉 = H[t252+129]〈meta_block_header_m_len〉) (61682)
  a=r 252 (61682)
  a+= 129 (61684)
  d=a (61686)
  c=*d (61687)
  a=r 0 (61688)
  a+= 6 (61690)
  d=a (61692)
  *d=c (61693)
  (                    3908:       if m_len < meta_block_count_output + len_pM〈CopyLiterals_data〉:) (61694)
  (         t3 = H[t252+106]〈CopyLiterals_data〉) (61694)
  a=r 252 (61694)
  a+= 106 (61696)
  d=a (61698)
  a=*d (61699)
  r=a 3 (61700)
  (         t3 = t3 & 2147483647) (61702)
  a=0 (61702)
  a-- (61703)
  a>>= 1 (61704)
  c=a (61706)
  a=r 3 (61707)
  a&=c (61709)
  r=a 3 (61710)
  (         t3 = t3 - 5) (61712)
  c= 5 (61712)
  a-=c (61714)
  r=a 3 (61715)
  (         t4 = M[t3] << 8) (61717)
  c= 8 (61717)
  b=a (61719)
  a=*b (61720)
  a<<=c (61721)
  r=a 4 (61722)
  (         t3 = t3 + 1) (61724)
  a=r 3 (61724)
  a++ (61726)
  r=a 3 (61727)
  (         t4 = t4 + M[t3]) (61729)
  b=a (61729)
  c=*b (61730)
  a=r 4 (61731)
  a+=c (61733)
  r=a 4 (61734)
  (         t4 = t4 << 8) (61736)
  c= 8 (61736)
  a<<=c (61738)
  r=a 4 (61739)
  (         t3 = t3 + 1) (61741)
  a=r 3 (61741)
  a++ (61743)
  r=a 3 (61744)
  (         t4 = t4 + M[t3]) (61746)
  b=a (61746)
  c=*b (61747)
  a=r 4 (61748)
  a+=c (61750)
  r=a 4 (61751)
  (         t4 = t4 << 8) (61753)
  c= 8 (61753)
  a<<=c (61755)
  r=a 4 (61756)
  (         t3 = t3 + 1) (61758)
  a=r 3 (61758)
  a++ (61760)
  r=a 3 (61761)
  (         t4 = t4 + M[t3]) (61763)
  b=a (61763)
  c=*b (61764)
  a=r 4 (61765)
  a+=c (61767)
  r=a 4 (61768)
  (         t2 = H[t252+143]〈meta_block_count_output〉 + t4) (61770)
  c=a (61770)
  a=r 252 (61771)
  a+= 143 (61773)
  d=a (61775)
  a=*d (61776)
  a+=c (61777)
  r=a 2 (61778)
  (         t1 = H[t0+6]〈m_len〉 < t2) (61780)
  c=a (61780)
  a=r 0 (61781)
  a+= 6 (61783)
  d=a (61785)
  a=*d (61786)
  a<c (61787)
  a=0 (61788)
  jf 1 (61789)
  a++ (61791)
  r=a 1 (61792)
  (         ifN t1 goto else_2411) (61794)
  a== 0 (61794)
  jf 3 (61796)
  lj 61805 (61798)
  (                    3909:         error〈〉 # err ExceededExpectedBytes) (61801)
  (         error) (61801)
  error (61801)
  (         goto endif_2412) (61802)
  lj 61805 (61802)
  (        :else_2411:) (61805)
  (        :endif_2412:) (61805)
  (                    3910:       i = 0) (61805)
  (         H[t0+2]〈i〉 = 0) (61805)
  a=r 0 (61805)
  a+= 2 (61807)
  d=a (61809)
  *d=0 (61810)
  (                    3911:       while i < len_pM〈CopyLiterals_data〉:) (61811)
  (        :while_2413:) (61811)
  (         t2 = H[t252+106]〈CopyLiterals_data〉) (61811)
  a=r 252 (61811)
  a+= 106 (61813)
  d=a (61815)
  a=*d (61816)
  r=a 2 (61817)
  (         t2 = t2 & 2147483647) (61819)
  a=0 (61819)
  a-- (61820)
  a>>= 1 (61821)
  c=a (61823)
  a=r 2 (61824)
  a&=c (61826)
  r=a 2 (61827)
  (         t2 = t2 - 5) (61829)
  c= 5 (61829)
  a-=c (61831)
  r=a 2 (61832)
  (         t3 = M[t2] << 8) (61834)
  c= 8 (61834)
  b=a (61836)
  a=*b (61837)
  a<<=c (61838)
  r=a 3 (61839)
  (         t2 = t2 + 1) (61841)
  a=r 2 (61841)
  a++ (61843)
  r=a 2 (61844)
  (         t3 = t3 + M[t2]) (61846)
  b=a (61846)
  c=*b (61847)
  a=r 3 (61848)
  a+=c (61850)
  r=a 3 (61851)
  (         t3 = t3 << 8) (61853)
  c= 8 (61853)
  a<<=c (61855)
  r=a 3 (61856)
  (         t2 = t2 + 1) (61858)
  a=r 2 (61858)
  a++ (61860)
  r=a 2 (61861)
  (         t3 = t3 + M[t2]) (61863)
  b=a (61863)
  c=*b (61864)
  a=r 3 (61865)
  a+=c (61867)
  r=a 3 (61868)
  (         t3 = t3 << 8) (61870)
  c= 8 (61870)
  a<<=c (61872)
  r=a 3 (61873)
  (         t2 = t2 + 1) (61875)
  a=r 2 (61875)
  a++ (61877)
  r=a 2 (61878)
  (         t3 = t3 + M[t2]) (61880)
  b=a (61880)
  c=*b (61881)
  a=r 3 (61882)
  a+=c (61884)
  r=a 3 (61885)
  (         t1 = H[t0+2]〈i〉 < t3) (61887)
  c=a (61887)
  a=r 0 (61888)
  a+= 2 (61890)
  d=a (61892)
  a=*d (61893)
  a<c (61894)
  a=0 (61895)
  jf 1 (61896)
  a++ (61898)
  r=a 1 (61899)
  (         ifN t1 goto whileend_2415) (61901)
  a== 0 (61901)
  jf 3 (61903)
  lj 62160 (61905)
  (                    3912:         literal = CopyLiterals_data[i]) (61908)
  (         t1 = H[t252+106]〈CopyLiterals_data〉 >> 31) (61908)
  c= 31 (61908)
  a=r 252 (61910)
  a+= 106 (61912)
  d=a (61914)
  a=*d (61915)
  a>>=c (61916)
  r=a 1 (61917)
  (         if t1 goto isM_2417) (61919)
  a== 0 (61919)
  jt 3 (61921)
  lj 61948 (61923)
  (         t1 = H[t252+106]〈CopyLiterals_data〉 + H[t0+2]〈i〉) (61926)
  a=r 0 (61926)
  a+= 2 (61928)
  d=a (61930)
  c=*d (61931)
  a=r 252 (61932)
  a+= 106 (61934)
  d=a (61936)
  a=*d (61937)
  a+=c (61938)
  r=a 1 (61939)
  (         t1 = H[t1]〈〉) (61941)
  d=a (61941)
  a=*d (61942)
  r=a 1 (61943)
  (         goto MorHdone_2418) (61945)
  lj 61977 (61945)
  (        :isM_2417:) (61948)
  (         t1 = H[t252+106]〈CopyLiterals_data〉 & 2147483647) (61948)
  a=0 (61948)
  a-- (61949)
  a>>= 1 (61950)
  c=a (61952)
  a=r 252 (61953)
  a+= 106 (61955)
  d=a (61957)
  a=*d (61958)
  a&=c (61959)
  r=a 1 (61960)
  (         t1 = t1 + H[t0+2]〈i〉) (61962)
  a=r 0 (61962)
  a+= 2 (61964)
  d=a (61966)
  c=*d (61967)
  a=r 1 (61968)
  a+=c (61970)
  r=a 1 (61971)
  (         t1 = M[t1]) (61973)
  b=a (61973)
  a=*b (61974)
  r=a 1 (61975)
  (        :MorHdone_2418:) (61977)
  (         H[t0+5]〈literal〉 = t1) (61977)
  a=r 0 (61977)
  a+= 5 (61979)
  d=a (61981)
  a=r 1 (61982)
  *d=a (61984)
  (                    3913:         out〈literal〉) (61985)
  (         out H[t0+5]〈literal〉) (61985)
  a=*d (61985)
  out (61986)
  (                    3914:         literal_buf_pointer = 〈literal_buf_pointer + 1〉 % 2) (61987)
  (         t2 = H[t252+123]〈literal_buf_pointer〉 + 1) (61987)
  c= 1 (61987)
  a=r 252 (61989)
  a+= 123 (61991)
  d=a (61993)
  a=*d (61994)
  a+=c (61995)
  r=a 2 (61996)
  (         t1 = t2 % 2) (61998)
  c= 2 (61998)
  a%=c (62000)
  r=a 1 (62001)
  (         H[t252+123]〈literal_buf_pointer〉 = t1) (62003)
  *d=a (62003)
  (                    3915:         literal_buf[literal_buf_pointer] = literal) (62004)
  (         t1 = H[t252+122]〈literal_buf〉 & 2147483647) (62004)
  a=0 (62004)
  a-- (62005)
  a>>= 1 (62006)
  c=a (62008)
  d-- (62009)
  a=*d (62010)
  a&=c (62011)
  r=a 1 (62012)
  (         t1 = t1 + H[t252+123]〈literal_buf_pointer〉) (62014)
  d++ (62014)
  c=*d (62015)
  a+=c (62016)
  r=a 1 (62017)
  (         M[t1] = H[t0+5]〈literal〉) (62019)
  c=a (62019)
  a=r 0 (62020)
  a+= 5 (62022)
  d=a (62024)
  *c=*d (62025)
  (                    3916:         output_window_pointer = 〈output_window_pointer + 1〉 % len_pM〈output_window〉) (62026)
  (         t2 = H[t252+118]〈output_window_pointer〉 + 1) (62026)
  c= 1 (62026)
  a=r 252 (62028)
  a+= 118 (62030)
  d=a (62032)
  a=*d (62033)
  a+=c (62034)
  r=a 2 (62035)
  (         t3 = H[t252+117]〈output_window〉) (62037)
  d-- (62037)
  a=*d (62038)
  r=a 3 (62039)
  (         t3 = t3 & 2147483647) (62041)
  a=0 (62041)
  a-- (62042)
  a>>= 1 (62043)
  c=a (62045)
  a=r 3 (62046)
  a&=c (62048)
  r=a 3 (62049)
  (         t3 = t3 - 5) (62051)
  c= 5 (62051)
  a-=c (62053)
  r=a 3 (62054)
  (         t4 = M[t3] << 8) (62056)
  c= 8 (62056)
  b=a (62058)
  a=*b (62059)
  a<<=c (62060)
  r=a 4 (62061)
  (         t3 = t3 + 1) (62063)
  a=r 3 (62063)
  a++ (62065)
  r=a 3 (62066)
  (         t4 = t4 + M[t3]) (62068)
  b=a (62068)
  c=*b (62069)
  a=r 4 (62070)
  a+=c (62072)
  r=a 4 (62073)
  (         t4 = t4 << 8) (62075)
  c= 8 (62075)
  a<<=c (62077)
  r=a 4 (62078)
  (         t3 = t3 + 1) (62080)
  a=r 3 (62080)
  a++ (62082)
  r=a 3 (62083)
  (         t4 = t4 + M[t3]) (62085)
  b=a (62085)
  c=*b (62086)
  a=r 4 (62087)
  a+=c (62089)
  r=a 4 (62090)
  (         t4 = t4 << 8) (62092)
  c= 8 (62092)
  a<<=c (62094)
  r=a 4 (62095)
  (         t3 = t3 + 1) (62097)
  a=r 3 (62097)
  a++ (62099)
  r=a 3 (62100)
  (         t4 = t4 + M[t3]) (62102)
  b=a (62102)
  c=*b (62103)
  a=r 4 (62104)
  a+=c (62106)
  r=a 4 (62107)
  (         t1 = t2 % t4) (62109)
  c=a (62109)
  a=r 2 (62110)
  a%=c (62112)
  r=a 1 (62113)
  (         H[t252+118]〈output_window_pointer〉 = t1) (62115)
  d++ (62115)
  *d=a (62116)
  (                    3917:         output_window[output_window_pointer] = literal) (62117)
  (         t1 = H[t252+117]〈output_window〉 & 2147483647) (62117)
  a=0 (62117)
  a-- (62118)
  a>>= 1 (62119)
  c=a (62121)
  d-- (62122)
  a=*d (62123)
  a&=c (62124)
  r=a 1 (62125)
  (         t1 = t1 + H[t252+118]〈output_window_pointer〉) (62127)
  d++ (62127)
  c=*d (62128)
  a+=c (62129)
  r=a 1 (62130)
  (         M[t1] = H[t0+5]〈literal〉) (62132)
  c=a (62132)
  a=r 0 (62133)
  a+= 5 (62135)
  d=a (62137)
  *c=*d (62138)
  (                    3918:         count_output += 1) (62139)
  (         H[t252+119]〈count_output〉 = H[t252+119]〈count_output〉 + 1) (62139)
  a=r 252 (62139)
  a+= 119 (62141)
  d=a (62143)
  *d++ (62144)
  (                    3919:         meta_block_count_output += 1) (62145)
  (         H[t252+143]〈meta_block_count_output〉 = H[t252+143]〈meta_block_count_output〉 + 1) (62145)
  a=r 252 (62145)
  a+= 143 (62147)
  d=a (62149)
  *d++ (62150)
  (                    3920:         i += 1) (62151)
  (         H[t0+2]〈i〉 = H[t0+2]〈i〉 + 1) (62151)
  a=r 0 (62151)
  a+= 2 (62153)
  d=a (62155)
  *d++ (62156)
  (         goto while_2413) (62157)
  lj 61811 (62157)
  (        :whileend_2415:) (62160)
  (                    3921:       free_pM〈CopyLiterals_data〉) (62160)
  (         t1 = H[t252+106]〈CopyLiterals_data〉 & 2147483647) (62160)
  a=0 (62160)
  a-- (62161)
  a>>= 1 (62162)
  c=a (62164)
  a=r 252 (62165)
  a+= 106 (62167)
  d=a (62169)
  a=*d (62170)
  a&=c (62171)
  r=a 1 (62172)
  (         H[t0+7]〈〉 = t0) (62174)
  a=r 0 (62174)
  a+= 7 (62176)
  d=a (62178)
  a=r 0 (62179)
  *d=a (62181)
  (saved bsp, return id:) (62182)
  (         H[t0+8]〈〉 = 331) (62182)
  d++ (62182)
  a= 1 (62183)
  a<<= 8 (62185)
  a+= 75 (62187)
  *d=a (62189)
  (push arguments:) (62190)
  (         H[t0+9]〈〉 = t1) (62190)
  d++ (62190)
  a=r 1 (62191)
  *d=a (62193)
  (         t0 = t0 + 8) (62194)
  c= 8 (62194)
  a=r 0 (62196)
  a+=c (62198)
  r=a 0 (62199)
  (         goto addr_free_pM) (62201)
  lj 2406 (62201)
  (        :return_id_331:) (62204)
  (         t2 = t1) (62204)
  a=r 1 (62204)
  r=a 2 (62206)
  (                    3922:       if meta_block_header_m_len == meta_block_count_output:) (62208)
  (         t1 = H[t252+129]〈meta_block_header_m_len〉 == H[t252+143]〈meta_block_count_output〉) (62208)
  a=r 252 (62208)
  a+= 143 (62210)
  d=a (62212)
  c=*d (62213)
  a=r 252 (62214)
  a+= 129 (62216)
  d=a (62218)
  a=*d (62219)
  a==c (62220)
  a=0 (62221)
  jf 1 (62222)
  a++ (62224)
  r=a 1 (62225)
  (         ifN t1 goto else_2420) (62227)
  a== 0 (62227)
  jf 3 (62229)
  lj 62249 (62231)
  (                    3923:         state = DataMetaBlockEnd) (62234)
  (         H[t252+165]〈state〉 = H[t252+107]〈DataMetaBlockEnd〉) (62234)
  a=r 252 (62234)
  a+= 107 (62236)
  d=a (62238)
  c=*d (62239)
  a=r 252 (62240)
  a+= 165 (62242)
  d=a (62244)
  *d=c (62245)
  (         goto endif_2421) (62246)
  lj 62261 (62246)
  (        :else_2420:) (62249)
  (                    3925:         state = DataMetaBlockBegin) (62249)
  (         H[t252+165]〈state〉 = H[t252+93]〈DataMetaBlockBegin〉) (62249)
  a=r 252 (62249)
  a+= 93 (62251)
  d=a (62253)
  c=*d (62254)
  a=r 252 (62255)
  a+= 165 (62257)
  d=a (62259)
  *d=c (62260)
  (        :endif_2421:) (62261)
  (         goto endif_2409) (62261)
  lj 62610 (62261)
  (        :else_2408:) (62264)
  (                    3926:     elif state == DataMetaBlockEnd:) (62264)
  (         t1 = H[t252+165]〈state〉 == H[t252+107]〈DataMetaBlockEnd〉) (62264)
  a=r 252 (62264)
  a+= 107 (62266)
  d=a (62268)
  c=*d (62269)
  a=r 252 (62270)
  a+= 165 (62272)
  d=a (62274)
  a=*d (62275)
  a==c (62276)
  a=0 (62277)
  jf 1 (62278)
  a++ (62280)
  r=a 1 (62281)
  (         ifN t1 goto else_2423) (62283)
  a== 0 (62283)
  jf 3 (62285)
  lj 62305 (62287)
  (                    3927:       state = MetaBlockEnd) (62290)
  (         H[t252+165]〈state〉 = H[t252+108]〈MetaBlockEnd〉) (62290)
  a=r 252 (62290)
  a+= 108 (62292)
  d=a (62294)
  c=*d (62295)
  a=r 252 (62296)
  a+= 165 (62298)
  d=a (62300)
  *d=c (62301)
  (         goto endif_2424) (62302)
  lj 62610 (62302)
  (        :else_2423:) (62305)
  (                    3928:     elif state == MetaBlockEnd:) (62305)
  (         t1 = H[t252+165]〈state〉 == H[t252+108]〈MetaBlockEnd〉) (62305)
  a=r 252 (62305)
  a+= 108 (62307)
  d=a (62309)
  c=*d (62310)
  a=r 252 (62311)
  a+= 165 (62313)
  d=a (62315)
  a=*d (62316)
  a==c (62317)
  a=0 (62318)
  jf 1 (62319)
  a++ (62321)
  r=a 1 (62322)
  (         ifN t1 goto else_2426) (62324)
  a== 0 (62324)
  jf 3 (62326)
  lj 62374 (62328)
  (                    3929:       if meta_block_header_is_last:) (62331)
  (         ifN H[t252+124]〈meta_block_header_is_last〉 goto else_2428) (62331)
  a=r 252 (62331)
  a+= 124 (62333)
  d=a (62335)
  a=*d (62336)
  a== 0 (62337)
  jf 3 (62339)
  lj 62359 (62341)
  (                    3930:         state = StreamEnd) (62344)
  (         H[t252+165]〈state〉 = H[t252+109]〈StreamEnd〉) (62344)
  a=r 252 (62344)
  a+= 109 (62346)
  d=a (62348)
  c=*d (62349)
  a=r 252 (62350)
  a+= 165 (62352)
  d=a (62354)
  *d=c (62355)
  (         goto endif_2429) (62356)
  lj 62371 (62356)
  (        :else_2428:) (62359)
  (                    3932:         state = HeaderMetaBlockBegin) (62359)
  (         H[t252+165]〈state〉 = H[t252+32]〈HeaderMetaBlockBegin〉) (62359)
  a=r 252 (62359)
  a+= 32 (62361)
  d=a (62363)
  c=*d (62364)
  a=r 252 (62365)
  a+= 165 (62367)
  d=a (62369)
  *d=c (62370)
  (        :endif_2429:) (62371)
  (         goto endif_2427) (62371)
  lj 62610 (62371)
  (        :else_2426:) (62374)
  (                    3933:     elif state == StreamEnd:) (62374)
  (         t1 = H[t252+165]〈state〉 == H[t252+109]〈StreamEnd〉) (62374)
  a=r 252 (62374)
  a+= 109 (62376)
  d=a (62378)
  c=*d (62379)
  a=r 252 (62380)
  a+= 165 (62382)
  d=a (62384)
  a=*d (62385)
  a==c (62386)
  a=0 (62387)
  jf 1 (62388)
  a++ (62390)
  r=a 1 (62391)
  (         ifN t1 goto else_2431) (62393)
  a== 0 (62393)
  jf 3 (62395)
  lj 62610 (62397)
  (                    3934:       if read_u8_from_byte_tail〈〉 != 0:) (62400)
  (         H[t0+8]〈〉 = t0) (62400)
  a=r 0 (62400)
  a+= 8 (62402)
  d=a (62404)
  a=r 0 (62405)
  *d=a (62407)
  (saved bsp, return id:) (62408)
  (         H[t0+9]〈〉 = 332) (62408)
  d++ (62408)
  a= 1 (62409)
  a<<= 8 (62411)
  a+= 76 (62413)
  *d=a (62415)
  (push arguments:) (62416)
  (         t0 = t0 + 9) (62416)
  c= 9 (62416)
  a=r 0 (62418)
  a+=c (62420)
  r=a 0 (62421)
  (         goto read_u8_from_byte_tail) (62423)
  lj 5033 (62423)
  (        :return_id_332:) (62426)
  (         t2 = t1) (62426)
  a=r 1 (62426)
  r=a 2 (62428)
  (         t1 = t2 != 0) (62430)
  c=0 (62430)
  a==c (62431)
  a=0 (62432)
  jt 1 (62433)
  a++ (62435)
  r=a 1 (62436)
  (         ifN t1 goto else_2434) (62438)
  a== 0 (62438)
  jf 3 (62440)
  lj 62449 (62442)
  (                    3935:         error〈〉 # NonZeroTrailerBit) (62445)
  (         error) (62445)
  error (62445)
  (         goto endif_2435) (62446)
  lj 62449 (62446)
  (        :else_2434:) (62449)
  (        :endif_2435:) (62449)
  (                    3936:       if read_u8〈〉 == NONE: # i.e. BitReaderError) (62449)
  (         H[t0+8]〈〉 = t0) (62449)
  a=r 0 (62449)
  a+= 8 (62451)
  d=a (62453)
  a=r 0 (62454)
  *d=a (62456)
  (saved bsp, return id:) (62457)
  (         H[t0+9]〈〉 = 333) (62457)
  d++ (62457)
  a= 1 (62458)
  a<<= 8 (62460)
  a+= 77 (62462)
  *d=a (62464)
  (push arguments:) (62465)
  (         t0 = t0 + 9) (62465)
  c= 9 (62465)
  a=r 0 (62467)
  a+=c (62469)
  r=a 0 (62470)
  (         goto read_u8) (62472)
  lj 3373 (62472)
  (        :return_id_333:) (62475)
  (         t2 = t1) (62475)
  a=r 1 (62475)
  r=a 2 (62477)
  (         t1 = t2 == 4294967295) (62479)
  c=0 (62479)
  c-- (62480)
  a==c (62481)
  a=0 (62482)
  jf 1 (62483)
  a++ (62485)
  r=a 1 (62486)
  (         ifN t1 goto else_2437) (62488)
  a== 0 (62488)
  jf 3 (62490)
  lj 62607 (62492)
  (                    3937:         state = StreamBegin) (62495)
  (         H[t252+165]〈state〉 = H[t252+27]〈StreamBegin〉) (62495)
  a=r 252 (62495)
  a+= 27 (62497)
  d=a (62499)
  c=*d (62500)
  a=r 252 (62501)
  a+= 165 (62503)
  d=a (62505)
  *d=c (62506)
  (                    3938:         distance_buf[0] = 16  # reversed!) (62507)
  (         t1 = H[t252+120]〈distance_buf〉 + 0) (62507)
  c=0 (62507)
  a=r 252 (62508)
  a+= 120 (62510)
  d=a (62512)
  a=*d (62513)
  a+=c (62514)
  r=a 1 (62515)
  (         H[t1]〈〉 = 16) (62517)
  d=a (62517)
  *d= 16 (62518)
  (                    3939:         distance_buf[1] = 15) (62520)
  (         t1 = t1 + 1) (62520)
  a++ (62520)
  r=a 1 (62521)
  (         H[t1]〈〉 = 15) (62523)
  d=a (62523)
  *d= 15 (62524)
  (                    3940:         distance_buf[2] = 11) (62526)
  (         t1 = t1 + 1) (62526)
  a++ (62526)
  r=a 1 (62527)
  (         H[t1]〈〉 = 11) (62529)
  d=a (62529)
  *d= 11 (62530)
  (                    3941:         distance_buf[3] = 4) (62532)
  (         t1 = t1 + 1) (62532)
  a++ (62532)
  r=a 1 (62533)
  (         H[t1]〈〉 = 4) (62535)
  d=a (62535)
  *d= 4 (62536)
  (                    3942:         distance_buf_pointer = 3) (62538)
  (         H[t252+121]〈distance_buf_pointer〉 = 3) (62538)
  a=r 252 (62538)
  a+= 121 (62540)
  d=a (62542)
  *d= 3 (62543)
  (                    3943:         literal_buf[0] = 0) (62545)
  (         t1 = H[t252+122]〈literal_buf〉 & 2147483647) (62545)
  a=0 (62545)
  a-- (62546)
  a>>= 1 (62547)
  c=a (62549)
  d++ (62550)
  a=*d (62551)
  a&=c (62552)
  r=a 1 (62553)
  (         t1 = t1 + 0) (62555)
  (         M[t1] = 0) (62555)
  c=a (62555)
  *c=0 (62556)
  (                    3944:         literal_buf[1] = 0) (62557)
  c++ (62557)
  *c=0 (62558)
  a=c (62559)
  r=a 1 (62560)
  (                    3945:         literal_buf_pointer = 0) (62562)
  (         H[t252+123]〈literal_buf_pointer〉 = 0) (62562)
  d++ (62562)
  *d=0 (62563)
  (                    3946:         count_output = 0) (62564)
  (         H[t252+119]〈count_output〉 = 0) (62564)
  a=r 252 (62564)
  a+= 119 (62566)
  d=a (62568)
  *d=0 (62569)
  (                    3947:         bit_pos = 0) (62570)
  (         H[t252+1]〈bit_pos〉 = 0) (62570)
  a=r 252 (62570)
  a++ (62572)
  d=a (62573)
  *d=0 (62574)
  (                    3948:         current_byte = NONE) (62575)
  (         H[t252+2]〈current_byte〉 = 4294967295) (62575)
  d++ (62575)
  *d=0 (62576)
  *d-- (62577)
  (                    3949:         global_bit_pos = 0) (62578)
  (         H[t252+3]〈global_bit_pos〉 = 0) (62578)
  d++ (62578)
  *d=0 (62579)
  (                    3950:         expect_next_seg = True) (62580)
  (         H[t252+174]〈expect_next_seg〉 = 1) (62580)
  a=r 252 (62580)
  a+= 174 (62582)
  d=a (62584)
  *d= 1 (62585)
  (                    3951:         return) (62587)
  (         t2 = H[t0]〈〉) (62587)
  d=r 0 (62587)
  a=*d (62589)
  r=a 2 (62590)
  (         t0 = t0 - 1) (62592)
  a=r 0 (62592)
  a-- (62594)
  r=a 0 (62595)
  (         t0 = H[t0]〈〉) (62597)
  d=a (62597)
  a=*d (62598)
  r=a 0 (62599)
  (         goto find_label_ret_id) (62601)
  lj 62666 (62601)
  (         goto endif_2438) (62604)
  lj 62607 (62604)
  (        :else_2437:) (62607)
  (        :endif_2438:) (62607)
  (         goto endif_2432) (62607)
  lj 62610 (62607)
  (        :else_2431:) (62610)
  (        :endif_2432:) (62610)
  (        :endif_2427:) (62610)
  (        :endif_2424:) (62610)
  (        :endif_2409:) (62610)
  (        :endif_2406:) (62610)
  (        :endif_2403:) (62610)
  (        :endif_2388:) (62610)
  (        :endif_2382:) (62610)
  (        :endif_2375:) (62610)
  (        :endif_2372:) (62610)
  (        :endif_2360:) (62610)
  (        :endif_2348:) (62610)
  (        :endif_2336:) (62610)
  (        :endif_2330:) (62610)
  (        :endif_2321:) (62610)
  (        :endif_2315:) (62610)
  (        :endif_2306:) (62610)
  (        :endif_2300:) (62610)
  (        :endif_2297:) (62610)
  (        :endif_2294:) (62610)
  (        :endif_2291:) (62610)
  (        :endif_2283:) (62610)
  (        :endif_2275:) (62610)
  (        :endif_2269:) (62610)
  (        :endif_2266:) (62610)
  (        :endif_2258:) (62610)
  (        :endif_2250:) (62610)
  (        :endif_2244:) (62610)
  (        :endif_2241:) (62610)
  (        :endif_2233:) (62610)
  (        :endif_2225:) (62610)
  (        :endif_2219:) (62610)
  (        :endif_2216:) (62610)
  (        :endif_2206:) (62610)
  (        :endif_2200:) (62610)
  (        :endif_2194:) (62610)
  (        :endif_2188:) (62610)
  (        :endif_2185:) (62610)
  (        :endif_2179:) (62610)
  (        :endif_2175:) (62610)
  (        :endif_2168:) (62610)
  (        :endif_2164:) (62610)
  (        :endif_2160:) (62610)
  (        :endif_2156:) (62610)
  (        :endif_2152:) (62610)
  (        :endif_2082:) (62610)
  (        :endif_2079:) (62610)
  (        :endif_2073:) (62610)
  (        :endif_2070:) (62610)
  (        :endif_2067:) (62610)
  (        :endif_2064:) (62610)
  (         goto while_2059) (62610)
  lj 52425 (62610)
  (        :whileend_2061:) (62613)
  (insert return as it might not be done by the function:) (62613)
  (         t2 = H[t0]〈〉) (62613)
  d=r 0 (62613)
  a=*d (62615)
  r=a 2 (62616)
  (         t0 = t0 - 1) (62618)
  a=r 0 (62618)
  a-- (62620)
  r=a 0 (62621)
  (         t0 = H[t0]〈〉) (62623)
  d=a (62623)
  a=*d (62624)
  r=a 0 (62625)
  (         goto find_label_ret_id) (62627)
  lj 62666 (62627)
  (         MarkTempVarEnd) (62630)
  (        :pcomp_end~:) (62630)
  (                    3953: pass) (62630)
  (        :call_next:) (62630)
  (         t253 = 4294967294) (62630)
  a=0 (62630)
  a-- (62631)
  a-- (62632)
  r=a 253 (62633)
  (         H[t0+175]〈〉 = t0) (62635)
  a=r 0 (62635)
  a+= 175 (62637)
  d=a (62639)
  a=r 0 (62640)
  *d=a (62642)
  (saved bsp, return id:) (62643)
  (         H[t0+176]〈〉 = 334) (62643)
  d++ (62643)
  a= 1 (62644)
  a<<= 8 (62646)
  a+= 78 (62648)
  *d=a (62650)
  (push arguments:) (62651)
  (         H[t0+177]〈〉 = t255) (62651)
  d++ (62651)
  a=r 255 (62652)
  *d=a (62654)
  (         t0 = t0 + 176) (62655)
  c= 176 (62655)
  a=r 0 (62657)
  a+=c (62659)
  r=a 0 (62660)
  (         goto pcomp) (62662)
  lj 52180 (62662)
  (        :return_id_334:) (62665)
  (         halt) (62665)
  halt (62665)
  (        :find_label_ret_id:) (62666)
  (         t4 = t0 > 68157240) (62666)
  a= 4 (62666)
  a<<= 8 (62668)
  a+= 15 (62670)
  a<<= 8 (62672)
  a+= 255 (62674)
  a<<= 8 (62676)
  a+= 56 (62678)
  c=a (62680)
  a=r 0 (62681)
  a>c (62683)
  a=0 (62684)
  jf 1 (62685)
  a++ (62687)
  r=a 4 (62688)
  (         if t4 goto throw_error) (62690)
  a== 0 (62690)
  jt 3 (62692)
  lj 64941 (62694)
  (         ifEq t2 0 goto return_id_0) (62697)
  c=r 2 (62697)
  a=0 (62699)
  a==c (62700)
  jf 3 (62701)
  lj 359 (62703)
  (         ifEq t2 1 goto return_id_1) (62706)
  a++ (62706)
  a==c (62707)
  jf 3 (62708)
  lj 437 (62710)
  (         ifEq t2 2 goto return_id_2) (62713)
  a++ (62713)
  a==c (62714)
  jf 3 (62715)
  lj 582 (62717)
  (         ifEq t2 3 goto return_id_3) (62720)
  a++ (62720)
  a==c (62721)
  jf 3 (62722)
  lj 659 (62724)
  (         ifEq t2 4 goto return_id_4) (62727)
  a++ (62727)
  a==c (62728)
  jf 3 (62729)
  lj 792 (62731)
  (         ifEq t2 5 goto return_id_5) (62734)
  a++ (62734)
  a==c (62735)
  jf 3 (62736)
  lj 1156 (62738)
  (         ifEq t2 6 goto return_id_6) (62741)
  a++ (62741)
  a==c (62742)
  jf 3 (62743)
  lj 1202 (62745)
  (         ifEq t2 7 goto return_id_7) (62748)
  a++ (62748)
  a==c (62749)
  jf 3 (62750)
  lj 1293 (62752)
  (         ifEq t2 8 goto return_id_8) (62755)
  a++ (62755)
  a==c (62756)
  jf 3 (62757)
  lj 1365 (62759)
  (         ifEq t2 18 goto return_id_18) (62762)
  a= 18 (62762)
  a==c (62764)
  jf 3 (62765)
  lj 2525 (62767)
  (         ifEq t2 19 goto return_id_19) (62770)
  a++ (62770)
  a==c (62771)
  jf 3 (62772)
  lj 2578 (62774)
  (         ifEq t2 20 goto return_id_20) (62777)
  a++ (62777)
  a==c (62778)
  jf 3 (62779)
  lj 2729 (62781)
  (         ifEq t2 21 goto return_id_21) (62784)
  a++ (62784)
  a==c (62785)
  jf 3 (62786)
  lj 2775 (62788)
  (         ifEq t2 22 goto return_id_22) (62791)
  a++ (62791)
  a==c (62792)
  jf 3 (62793)
  lj 2835 (62795)
  (         ifEq t2 23 goto return_id_23) (62798)
  a++ (62798)
  a==c (62799)
  jf 3 (62800)
  lj 2886 (62802)
  (         ifEq t2 30 goto return_id_30) (62805)
  a= 30 (62805)
  a==c (62807)
  jf 3 (62808)
  lj 3285 (62810)
  (         ifEq t2 31 goto return_id_31) (62813)
  a++ (62813)
  a==c (62814)
  jf 3 (62815)
  lj 3391 (62817)
  (         ifEq t2 32 goto return_id_32) (62820)
  a++ (62820)
  a==c (62821)
  jf 3 (62822)
  lj 3851 (62824)
  (         ifEq t2 33 goto return_id_33) (62827)
  a++ (62827)
  a==c (62828)
  jf 3 (62829)
  lj 4349 (62831)
  (         ifEq t2 34 goto return_id_34) (62834)
  a++ (62834)
  a==c (62835)
  jf 3 (62836)
  lj 4741 (62838)
  (         ifEq t2 35 goto return_id_35) (62841)
  a++ (62841)
  a==c (62842)
  jf 3 (62843)
  lj 4905 (62845)
  (         ifEq t2 36 goto return_id_36) (62848)
  a++ (62848)
  a==c (62849)
  jf 3 (62850)
  lj 5110 (62852)
  (         ifEq t2 37 goto return_id_37) (62855)
  a++ (62855)
  a==c (62856)
  jf 3 (62857)
  lj 5248 (62859)
  (         ifEq t2 38 goto return_id_38) (62862)
  a++ (62862)
  a==c (62863)
  jf 3 (62864)
  lj 5401 (62866)
  (         ifEq t2 39 goto return_id_39) (62869)
  a++ (62869)
  a==c (62870)
  jf 3 (62871)
  lj 5461 (62873)
  (         ifEq t2 40 goto return_id_40) (62876)
  a++ (62876)
  a==c (62877)
  jf 3 (62878)
  lj 5603 (62880)
  (         ifEq t2 41 goto return_id_41) (62883)
  a++ (62883)
  a==c (62884)
  jf 3 (62885)
  lj 5746 (62887)
  (         ifEq t2 42 goto return_id_42) (62890)
  a++ (62890)
  a==c (62891)
  jf 3 (62892)
  lj 5836 (62894)
  (         ifEq t2 43 goto return_id_43) (62897)
  a++ (62897)
  a==c (62898)
  jf 3 (62899)
  lj 6543 (62901)
  (         ifEq t2 44 goto return_id_44) (62904)
  a++ (62904)
  a==c (62905)
  jf 3 (62906)
  lj 6662 (62908)
  (         ifEq t2 45 goto return_id_45) (62911)
  a++ (62911)
  a==c (62912)
  jf 3 (62913)
  lj 7071 (62915)
  (         ifEq t2 46 goto return_id_46) (62918)
  a++ (62918)
  a==c (62919)
  jf 3 (62920)
  lj 7138 (62922)
  (         ifEq t2 47 goto return_id_47) (62925)
  a++ (62925)
  a==c (62926)
  jf 3 (62927)
  lj 7604 (62929)
  (         ifEq t2 48 goto return_id_48) (62932)
  a++ (62932)
  a==c (62933)
  jf 3 (62934)
  lj 7928 (62936)
  (         ifEq t2 49 goto return_id_49) (62939)
  a++ (62939)
  a==c (62940)
  jf 3 (62941)
  lj 8078 (62943)
  (         ifEq t2 50 goto return_id_50) (62946)
  a++ (62946)
  a==c (62947)
  jf 3 (62948)
  lj 8358 (62950)
  (         ifEq t2 51 goto return_id_51) (62953)
  a++ (62953)
  a==c (62954)
  jf 3 (62955)
  lj 8470 (62957)
  (         ifEq t2 52 goto return_id_52) (62960)
  a++ (62960)
  a==c (62961)
  jf 3 (62962)
  lj 8560 (62964)
  (         ifEq t2 53 goto return_id_53) (62967)
  a++ (62967)
  a==c (62968)
  jf 3 (62969)
  lj 8591 (62971)
  (         ifEq t2 54 goto return_id_54) (62974)
  a++ (62974)
  a==c (62975)
  jf 3 (62976)
  lj 8731 (62978)
  (         ifEq t2 55 goto return_id_55) (62981)
  a++ (62981)
  a==c (62982)
  jf 3 (62983)
  lj 8899 (62985)
  (         ifEq t2 56 goto return_id_56) (62988)
  a++ (62988)
  a==c (62989)
  jf 3 (62990)
  lj 8934 (62992)
  (         ifEq t2 57 goto return_id_57) (62995)
  a++ (62995)
  a==c (62996)
  jf 3 (62997)
  lj 9083 (62999)
  (         ifEq t2 58 goto return_id_58) (63002)
  a++ (63002)
  a==c (63003)
  jf 3 (63004)
  lj 9950 (63006)
  (         ifEq t2 59 goto return_id_59) (63009)
  a++ (63009)
  a==c (63010)
  jf 3 (63011)
  lj 10011 (63013)
  (         ifEq t2 60 goto return_id_60) (63016)
  a++ (63016)
  a==c (63017)
  jf 3 (63018)
  lj 11105 (63020)
  (         ifEq t2 61 goto return_id_61) (63023)
  a++ (63023)
  a==c (63024)
  jf 3 (63025)
  lj 11775 (63027)
  (         ifEq t2 62 goto return_id_62) (63030)
  a++ (63030)
  a==c (63031)
  jf 3 (63032)
  lj 12784 (63034)
  (         ifEq t2 63 goto return_id_63) (63037)
  a++ (63037)
  a==c (63038)
  jf 3 (63039)
  lj 13058 (63041)
  (         ifEq t2 64 goto return_id_64) (63044)
  a++ (63044)
  a==c (63045)
  jf 3 (63046)
  lj 13174 (63048)
  (         ifEq t2 65 goto return_id_65) (63051)
  a++ (63051)
  a==c (63052)
  jf 3 (63053)
  lj 13633 (63055)
  (         ifEq t2 66 goto return_id_66) (63058)
  a++ (63058)
  a==c (63059)
  jf 3 (63060)
  lj 13777 (63062)
  (         ifEq t2 67 goto return_id_67) (63065)
  a++ (63065)
  a==c (63066)
  jf 3 (63067)
  lj 14727 (63069)
  (         ifEq t2 68 goto return_id_68) (63072)
  a++ (63072)
  a==c (63073)
  jf 3 (63074)
  lj 15029 (63076)
  (         ifEq t2 69 goto return_id_69) (63079)
  a++ (63079)
  a==c (63080)
  jf 3 (63081)
  lj 15620 (63083)
  (         ifEq t2 70 goto return_id_70) (63086)
  a++ (63086)
  a==c (63087)
  jf 3 (63088)
  lj 17073 (63090)
  (         ifEq t2 71 goto return_id_71) (63093)
  a++ (63093)
  a==c (63094)
  jf 3 (63095)
  lj 17921 (63097)
  (         ifEq t2 72 goto return_id_72) (63100)
  a++ (63100)
  a==c (63101)
  jf 3 (63102)
  lj 18181 (63104)
  (         ifEq t2 73 goto return_id_73) (63107)
  a++ (63107)
  a==c (63108)
  jf 3 (63109)
  lj 18878 (63111)
  (         ifEq t2 74 goto return_id_74) (63114)
  a++ (63114)
  a==c (63115)
  jf 3 (63116)
  lj 18994 (63118)
  (         ifEq t2 75 goto return_id_75) (63121)
  a++ (63121)
  a==c (63122)
  jf 3 (63123)
  lj 19317 (63125)
  (         ifEq t2 76 goto return_id_76) (63128)
  a++ (63128)
  a==c (63129)
  jf 3 (63130)
  lj 19461 (63132)
  (         ifEq t2 77 goto return_id_77) (63135)
  a++ (63135)
  a==c (63136)
  jf 3 (63137)
  lj 20141 (63139)
  (         ifEq t2 78 goto return_id_78) (63142)
  a++ (63142)
  a==c (63143)
  jf 3 (63144)
  lj 21144 (63146)
  (         ifEq t2 79 goto return_id_79) (63149)
  a++ (63149)
  a==c (63150)
  jf 3 (63151)
  lj 21260 (63153)
  (         ifEq t2 80 goto return_id_80) (63156)
  a++ (63156)
  a==c (63157)
  jf 3 (63158)
  lj 21463 (63160)
  (         ifEq t2 81 goto return_id_81) (63163)
  a++ (63163)
  a==c (63164)
  jf 3 (63165)
  lj 21587 (63167)
  (         ifEq t2 82 goto return_id_82) (63170)
  a++ (63170)
  a==c (63171)
  jf 3 (63172)
  lj 22067 (63174)
  (         ifEq t2 83 goto return_id_83) (63177)
  a++ (63177)
  a==c (63178)
  jf 3 (63179)
  lj 22718 (63181)
  (         ifEq t2 84 goto return_id_84) (63184)
  a++ (63184)
  a==c (63185)
  jf 3 (63186)
  lj 22829 (63188)
  (         ifEq t2 85 goto return_id_85) (63191)
  a++ (63191)
  a==c (63192)
  jf 3 (63193)
  lj 23143 (63195)
  (         ifEq t2 86 goto return_id_86) (63198)
  a++ (63198)
  a==c (63199)
  jf 3 (63200)
  lj 23259 (63202)
  (         ifEq t2 87 goto return_id_87) (63205)
  a++ (63205)
  a==c (63206)
  jf 3 (63207)
  lj 23856 (63209)
  (         ifEq t2 88 goto return_id_88) (63212)
  a++ (63212)
  a==c (63213)
  jf 3 (63214)
  lj 23920 (63216)
  (         ifEq t2 89 goto return_id_89) (63219)
  a++ (63219)
  a==c (63220)
  jf 3 (63221)
  lj 24314 (63223)
  (         ifEq t2 90 goto return_id_90) (63226)
  a++ (63226)
  a==c (63227)
  jf 3 (63228)
  lj 24430 (63230)
  (         ifEq t2 91 goto return_id_91) (63233)
  a++ (63233)
  a==c (63234)
  jf 3 (63235)
  lj 24873 (63237)
  (         ifEq t2 92 goto return_id_92) (63240)
  a++ (63240)
  a==c (63241)
  jf 3 (63242)
  lj 25032 (63244)
  (         ifEq t2 93 goto return_id_93) (63247)
  a++ (63247)
  a==c (63248)
  jf 3 (63249)
  lj 25148 (63251)
  (         ifEq t2 94 goto return_id_94) (63254)
  a++ (63254)
  a==c (63255)
  jf 3 (63256)
  lj 25583 (63258)
  (         ifEq t2 95 goto return_id_95) (63261)
  a++ (63261)
  a==c (63262)
  jf 3 (63263)
  lj 25647 (63265)
  (         ifEq t2 96 goto return_id_96) (63268)
  a++ (63268)
  a==c (63269)
  jf 3 (63270)
  lj 26062 (63272)
  (         ifEq t2 97 goto return_id_97) (63275)
  a++ (63275)
  a==c (63276)
  jf 3 (63277)
  lj 26369 (63279)
  (         ifEq t2 98 goto return_id_98) (63282)
  a++ (63282)
  a==c (63283)
  jf 3 (63284)
  lj 26485 (63286)
  (         ifEq t2 99 goto return_id_99) (63289)
  a++ (63289)
  a==c (63290)
  jf 3 (63291)
  lj 26786 (63293)
  (         ifEq t2 100 goto return_id_100) (63296)
  a++ (63296)
  a==c (63297)
  jf 3 (63298)
  lj 26845 (63300)
  (         ifEq t2 101 goto return_id_101) (63303)
  a++ (63303)
  a==c (63304)
  jf 3 (63305)
  lj 26961 (63307)
  (         ifEq t2 102 goto return_id_102) (63310)
  a++ (63310)
  a==c (63311)
  jf 3 (63312)
  lj 27164 (63314)
  (         ifEq t2 103 goto return_id_103) (63317)
  a++ (63317)
  a==c (63318)
  jf 3 (63319)
  lj 27303 (63321)
  (         ifEq t2 104 goto return_id_104) (63324)
  a++ (63324)
  a==c (63325)
  jf 3 (63326)
  lj 27419 (63328)
  (         ifEq t2 105 goto return_id_105) (63331)
  a++ (63331)
  a==c (63332)
  jf 3 (63333)
  lj 28016 (63335)
  (         ifEq t2 106 goto return_id_106) (63338)
  a++ (63338)
  a==c (63339)
  jf 3 (63340)
  lj 28080 (63342)
  (         ifEq t2 107 goto return_id_107) (63345)
  a++ (63345)
  a==c (63346)
  jf 3 (63347)
  lj 28338 (63349)
  (         ifEq t2 108 goto return_id_108) (63352)
  a++ (63352)
  a==c (63353)
  jf 3 (63354)
  lj 28454 (63356)
  (         ifEq t2 109 goto return_id_109) (63359)
  a++ (63359)
  a==c (63360)
  jf 3 (63361)
  lj 28941 (63363)
  (         ifEq t2 110 goto return_id_110) (63366)
  a++ (63366)
  a==c (63367)
  jf 3 (63368)
  lj 29032 (63370)
  (         ifEq t2 111 goto return_id_111) (63373)
  a++ (63373)
  a==c (63374)
  jf 3 (63375)
  lj 29369 (63377)
  (         ifEq t2 112 goto return_id_112) (63380)
  a++ (63380)
  a==c (63381)
  jf 3 (63382)
  lj 29496 (63384)
  (         ifEq t2 113 goto return_id_113) (63387)
  a++ (63387)
  a==c (63388)
  jf 3 (63389)
  lj 30255 (63391)
  (         ifEq t2 114 goto return_id_114) (63394)
  a++ (63394)
  a==c (63395)
  jf 3 (63396)
  lj 30946 (63398)
  (         ifEq t2 115 goto return_id_115) (63401)
  a++ (63401)
  a==c (63402)
  jf 3 (63403)
  lj 31775 (63405)
  (         ifEq t2 116 goto return_id_116) (63408)
  a++ (63408)
  a==c (63409)
  jf 3 (63410)
  lj 34344 (63412)
  (         ifEq t2 117 goto return_id_117) (63415)
  a++ (63415)
  a==c (63416)
  jf 3 (63417)
  lj 34553 (63419)
  (         ifEq t2 118 goto return_id_118) (63422)
  a++ (63422)
  a==c (63423)
  jf 3 (63424)
  lj 34579 (63426)
  (         ifEq t2 119 goto return_id_119) (63429)
  a++ (63429)
  a==c (63430)
  jf 3 (63431)
  lj 34725 (63433)
  (         ifEq t2 120 goto return_id_120) (63436)
  a++ (63436)
  a==c (63437)
  jf 3 (63438)
  lj 34751 (63440)
  (         ifEq t2 121 goto return_id_121) (63443)
  a++ (63443)
  a==c (63444)
  jf 3 (63445)
  lj 34908 (63447)
  (         ifEq t2 122 goto return_id_122) (63450)
  a++ (63450)
  a==c (63451)
  jf 3 (63452)
  lj 34947 (63454)
  (         ifEq t2 123 goto return_id_123) (63457)
  a++ (63457)
  a==c (63458)
  jf 3 (63459)
  lj 35006 (63461)
  (         ifEq t2 124 goto return_id_124) (63464)
  a++ (63464)
  a==c (63465)
  jf 3 (63466)
  lj 35208 (63468)
  (         ifEq t2 125 goto return_id_125) (63471)
  a++ (63471)
  a==c (63472)
  jf 3 (63473)
  lj 35262 (63475)
  (         ifEq t2 126 goto return_id_126) (63478)
  a++ (63478)
  a==c (63479)
  jf 3 (63480)
  lj 35346 (63482)
  (         ifEq t2 127 goto return_id_127) (63485)
  a++ (63485)
  a==c (63486)
  jf 3 (63487)
  lj 35433 (63489)
  (         ifEq t2 128 goto return_id_128) (63492)
  a++ (63492)
  a==c (63493)
  jf 3 (63494)
  lj 35579 (63496)
  (         ifEq t2 129 goto return_id_129) (63499)
  a++ (63499)
  a==c (63500)
  jf 3 (63501)
  lj 35676 (63503)
  (         ifEq t2 130 goto return_id_130) (63506)
  a++ (63506)
  a==c (63507)
  jf 3 (63508)
  lj 35965 (63510)
  (         ifEq t2 131 goto return_id_131) (63513)
  a++ (63513)
  a==c (63514)
  jf 3 (63515)
  lj 36045 (63517)
  (         ifEq t2 132 goto return_id_132) (63520)
  a++ (63520)
  a==c (63521)
  jf 3 (63522)
  lj 36200 (63524)
  (         ifEq t2 133 goto return_id_133) (63527)
  a++ (63527)
  a==c (63528)
  jf 3 (63529)
  lj 36297 (63531)
  (         ifEq t2 134 goto return_id_134) (63534)
  a++ (63534)
  a==c (63535)
  jf 3 (63536)
  lj 36402 (63538)
  (         ifEq t2 135 goto return_id_135) (63541)
  a++ (63541)
  a==c (63542)
  jf 3 (63543)
  lj 36688 (63545)
  (         ifEq t2 136 goto return_id_136) (63548)
  a++ (63548)
  a==c (63549)
  jf 3 (63550)
  lj 36797 (63552)
  (         ifEq t2 137 goto return_id_137) (63555)
  a++ (63555)
  a==c (63556)
  jf 3 (63557)
  lj 36888 (63559)
  (         ifEq t2 138 goto return_id_138) (63562)
  a++ (63562)
  a==c (63563)
  jf 3 (63564)
  lj 36979 (63566)
  (         ifEq t2 139 goto return_id_139) (63569)
  a++ (63569)
  a==c (63570)
  jf 3 (63571)
  lj 37073 (63573)
  (         ifEq t2 140 goto return_id_140) (63576)
  a++ (63576)
  a==c (63577)
  jf 3 (63578)
  lj 37159 (63580)
  (         ifEq t2 141 goto return_id_141) (63583)
  a++ (63583)
  a==c (63584)
  jf 3 (63585)
  lj 37267 (63587)
  (         ifEq t2 142 goto return_id_142) (63590)
  a++ (63590)
  a==c (63591)
  jf 3 (63592)
  lj 37333 (63594)
  (         ifEq t2 143 goto return_id_143) (63597)
  a++ (63597)
  a==c (63598)
  jf 3 (63599)
  lj 37447 (63601)
  (         ifEq t2 144 goto return_id_144) (63604)
  a++ (63604)
  a==c (63605)
  jf 3 (63606)
  lj 37538 (63608)
  (         ifEq t2 145 goto return_id_145) (63611)
  a++ (63611)
  a==c (63612)
  jf 3 (63613)
  lj 37632 (63615)
  (         ifEq t2 146 goto return_id_146) (63618)
  a++ (63618)
  a==c (63619)
  jf 3 (63620)
  lj 37879 (63622)
  (         ifEq t2 147 goto return_id_147) (63625)
  a++ (63625)
  a==c (63626)
  jf 3 (63627)
  lj 37938 (63629)
  (         ifEq t2 148 goto return_id_148) (63632)
  a++ (63632)
  a==c (63633)
  jf 3 (63634)
  lj 38001 (63636)
  (         ifEq t2 149 goto return_id_149) (63639)
  a++ (63639)
  a==c (63640)
  jf 3 (63641)
  lj 38254 (63643)
  (         ifEq t2 150 goto return_id_150) (63646)
  a++ (63646)
  a==c (63647)
  jf 3 (63648)
  lj 38354 (63650)
  (         ifEq t2 151 goto return_id_151) (63653)
  a++ (63653)
  a==c (63654)
  jf 3 (63655)
  lj 38565 (63657)
  (         ifEq t2 152 goto return_id_152) (63660)
  a++ (63660)
  a==c (63661)
  jf 3 (63662)
  lj 38785 (63664)
  (         ifEq t2 153 goto return_id_153) (63667)
  a++ (63667)
  a==c (63668)
  jf 3 (63669)
  lj 39121 (63671)
  (         ifEq t2 154 goto return_id_154) (63674)
  a++ (63674)
  a==c (63675)
  jf 3 (63676)
  lj 39347 (63678)
  (         ifEq t2 155 goto return_id_155) (63681)
  a++ (63681)
  a==c (63682)
  jf 3 (63683)
  lj 39436 (63685)
  (         ifEq t2 156 goto return_id_156) (63688)
  a++ (63688)
  a==c (63689)
  jf 3 (63690)
  lj 39483 (63692)
  (         ifEq t2 157 goto return_id_157) (63695)
  a++ (63695)
  a==c (63696)
  jf 3 (63697)
  lj 39518 (63699)
  (         ifEq t2 158 goto return_id_158) (63702)
  a++ (63702)
  a==c (63703)
  jf 3 (63704)
  lj 39592 (63706)
  (         ifEq t2 159 goto return_id_159) (63709)
  a++ (63709)
  a==c (63710)
  jf 3 (63711)
  lj 39727 (63713)
  (         ifEq t2 160 goto return_id_160) (63716)
  a++ (63716)
  a==c (63717)
  jf 3 (63718)
  lj 39977 (63720)
  (         ifEq t2 161 goto return_id_161) (63723)
  a++ (63723)
  a==c (63724)
  jf 3 (63725)
  lj 40527 (63727)
  (         ifEq t2 162 goto return_id_162) (63730)
  a++ (63730)
  a==c (63731)
  jf 3 (63732)
  lj 40565 (63734)
  (         ifEq t2 163 goto return_id_163) (63737)
  a++ (63737)
  a==c (63738)
  jf 3 (63739)
  lj 40672 (63741)
  (         ifEq t2 164 goto return_id_164) (63744)
  a++ (63744)
  a==c (63745)
  jf 3 (63746)
  lj 40719 (63748)
  (         ifEq t2 165 goto return_id_165) (63751)
  a++ (63751)
  a==c (63752)
  jf 3 (63753)
  lj 40754 (63755)
  (         ifEq t2 166 goto return_id_166) (63758)
  a++ (63758)
  a==c (63759)
  jf 3 (63760)
  lj 40917 (63762)
  (         ifEq t2 167 goto return_id_167) (63765)
  a++ (63765)
  a==c (63766)
  jf 3 (63767)
  lj 41192 (63769)
  (         ifEq t2 168 goto return_id_168) (63772)
  a++ (63772)
  a==c (63773)
  jf 3 (63774)
  lj 41799 (63776)
  (         ifEq t2 169 goto return_id_169) (63779)
  a++ (63779)
  a==c (63780)
  jf 3 (63781)
  lj 42179 (63783)
  (         ifEq t2 170 goto return_id_170) (63786)
  a++ (63786)
  a==c (63787)
  jf 3 (63788)
  lj 42226 (63790)
  (         ifEq t2 171 goto return_id_171) (63793)
  a++ (63793)
  a==c (63794)
  jf 3 (63795)
  lj 42303 (63797)
  (         ifEq t2 172 goto return_id_172) (63800)
  a++ (63800)
  a==c (63801)
  jf 3 (63802)
  lj 42338 (63804)
  (         ifEq t2 173 goto return_id_173) (63807)
  a++ (63807)
  a==c (63808)
  jf 3 (63809)
  lj 42401 (63811)
  (         ifEq t2 174 goto return_id_174) (63814)
  a++ (63814)
  a==c (63815)
  jf 3 (63816)
  lj 42496 (63818)
  (         ifEq t2 175 goto return_id_175) (63821)
  a++ (63821)
  a==c (63822)
  jf 3 (63823)
  lj 42568 (63825)
  (         ifEq t2 176 goto return_id_176) (63828)
  a++ (63828)
  a==c (63829)
  jf 3 (63830)
  lj 42673 (63832)
  (         ifEq t2 177 goto return_id_177) (63835)
  a++ (63835)
  a==c (63836)
  jf 3 (63837)
  lj 42775 (63839)
  (         ifEq t2 178 goto return_id_178) (63842)
  a++ (63842)
  a==c (63843)
  jf 3 (63844)
  lj 42898 (63846)
  (         ifEq t2 179 goto return_id_179) (63849)
  a++ (63849)
  a==c (63850)
  jf 3 (63851)
  lj 43000 (63853)
  (         ifEq t2 180 goto return_id_180) (63856)
  a++ (63856)
  a==c (63857)
  jf 3 (63858)
  lj 43123 (63860)
  (         ifEq t2 181 goto return_id_181) (63863)
  a++ (63863)
  a==c (63864)
  jf 3 (63865)
  lj 43225 (63867)
  (         ifEq t2 182 goto return_id_182) (63870)
  a++ (63870)
  a==c (63871)
  jf 3 (63872)
  lj 43334 (63874)
  (         ifEq t2 183 goto return_id_183) (63877)
  a++ (63877)
  a==c (63878)
  jf 3 (63879)
  lj 44026 (63881)
  (         ifEq t2 184 goto return_id_184) (63884)
  a++ (63884)
  a==c (63885)
  jf 3 (63886)
  lj 44118 (63888)
  (         ifEq t2 185 goto return_id_185) (63891)
  a++ (63891)
  a==c (63892)
  jf 3 (63893)
  lj 44219 (63895)
  (         ifEq t2 186 goto return_id_186) (63898)
  a++ (63898)
  a==c (63899)
  jf 3 (63900)
  lj 44320 (63902)
  (         ifEq t2 187 goto return_id_187) (63905)
  a++ (63905)
  a==c (63906)
  jf 3 (63907)
  lj 44421 (63909)
  (         ifEq t2 188 goto return_id_188) (63912)
  a++ (63912)
  a==c (63913)
  jf 3 (63914)
  lj 44489 (63916)
  (         ifEq t2 189 goto return_id_189) (63919)
  a++ (63919)
  a==c (63920)
  jf 3 (63921)
  lj 44636 (63923)
  (         ifEq t2 190 goto return_id_190) (63926)
  a++ (63926)
  a==c (63927)
  jf 3 (63928)
  lj 44706 (63930)
  (         ifEq t2 191 goto return_id_191) (63933)
  a++ (63933)
  a==c (63934)
  jf 3 (63935)
  lj 44853 (63937)
  (         ifEq t2 192 goto return_id_192) (63940)
  a++ (63940)
  a==c (63941)
  jf 3 (63942)
  lj 44947 (63944)
  (         ifEq t2 193 goto return_id_193) (63947)
  a++ (63947)
  a==c (63948)
  jf 3 (63949)
  lj 45085 (63951)
  (         ifEq t2 194 goto return_id_194) (63954)
  a++ (63954)
  a==c (63955)
  jf 3 (63956)
  lj 45136 (63958)
  (         ifEq t2 195 goto return_id_195) (63961)
  a++ (63961)
  a==c (63962)
  jf 3 (63963)
  lj 45214 (63965)
  (         ifEq t2 196 goto return_id_196) (63968)
  a++ (63968)
  a==c (63969)
  jf 3 (63970)
  lj 45274 (63972)
  (         ifEq t2 197 goto return_id_197) (63975)
  a++ (63975)
  a==c (63976)
  jf 3 (63977)
  lj 45347 (63979)
  (         ifEq t2 198 goto return_id_198) (63982)
  a++ (63982)
  a==c (63983)
  jf 3 (63984)
  lj 45457 (63986)
  (         ifEq t2 199 goto return_id_199) (63989)
  a++ (63989)
  a==c (63990)
  jf 3 (63991)
  lj 45699 (63993)
  (         ifEq t2 200 goto return_id_200) (63996)
  a++ (63996)
  a==c (63997)
  jf 3 (63998)
  lj 45759 (64000)
  (         ifEq t2 201 goto return_id_201) (64003)
  a++ (64003)
  a==c (64004)
  jf 3 (64005)
  lj 45874 (64007)
  (         ifEq t2 202 goto return_id_202) (64010)
  a++ (64010)
  a==c (64011)
  jf 3 (64012)
  lj 46015 (64014)
  (         ifEq t2 203 goto return_id_203) (64017)
  a++ (64017)
  a==c (64018)
  jf 3 (64019)
  lj 46116 (64021)
  (         ifEq t2 204 goto return_id_204) (64024)
  a++ (64024)
  a==c (64025)
  jf 3 (64026)
  lj 46697 (64028)
  (         ifEq t2 205 goto return_id_205) (64031)
  a++ (64031)
  a==c (64032)
  jf 3 (64033)
  lj 46757 (64035)
  (         ifEq t2 206 goto return_id_206) (64038)
  a++ (64038)
  a==c (64039)
  jf 3 (64040)
  lj 46888 (64042)
  (         ifEq t2 207 goto return_id_207) (64045)
  a++ (64045)
  a==c (64046)
  jf 3 (64047)
  lj 47126 (64049)
  (         ifEq t2 208 goto return_id_208) (64052)
  a++ (64052)
  a==c (64053)
  jf 3 (64054)
  lj 47361 (64056)
  (         ifEq t2 209 goto return_id_209) (64059)
  a++ (64059)
  a==c (64060)
  jf 3 (64061)
  lj 47576 (64063)
  (         ifEq t2 210 goto return_id_210) (64066)
  a++ (64066)
  a==c (64067)
  jf 3 (64068)
  lj 47716 (64070)
  (         ifEq t2 211 goto return_id_211) (64073)
  a++ (64073)
  a==c (64074)
  jf 3 (64075)
  lj 47880 (64077)
  (         ifEq t2 212 goto return_id_212) (64080)
  a++ (64080)
  a==c (64081)
  jf 3 (64082)
  lj 48100 (64084)
  (         ifEq t2 213 goto return_id_213) (64087)
  a++ (64087)
  a==c (64088)
  jf 3 (64089)
  lj 48204 (64091)
  (         ifEq t2 214 goto return_id_214) (64094)
  a++ (64094)
  a==c (64095)
  jf 3 (64096)
  lj 48314 (64098)
  (         ifEq t2 215 goto return_id_215) (64101)
  a++ (64101)
  a==c (64102)
  jf 3 (64103)
  lj 49003 (64105)
  (         ifEq t2 216 goto return_id_216) (64108)
  a++ (64108)
  a==c (64109)
  jf 3 (64110)
  lj 49323 (64112)
  (         ifEq t2 217 goto return_id_217) (64115)
  a++ (64115)
  a==c (64116)
  jf 3 (64117)
  lj 49690 (64119)
  (         ifEq t2 218 goto return_id_218) (64122)
  a++ (64122)
  a==c (64123)
  jf 3 (64124)
  lj 50430 (64126)
  (         ifEq t2 219 goto return_id_219) (64129)
  a++ (64129)
  a==c (64130)
  jf 3 (64131)
  lj 50957 (64133)
  (         ifEq t2 220 goto return_id_220) (64136)
  a++ (64136)
  a==c (64137)
  jf 3 (64138)
  lj 51780 (64140)
  (         ifEq t2 221 goto return_id_221) (64143)
  a++ (64143)
  a==c (64144)
  jf 3 (64145)
  lj 52053 (64147)
  (         ifEq t2 222 goto return_id_222) (64150)
  a++ (64150)
  a==c (64151)
  jf 3 (64152)
  lj 52121 (64154)
  (         ifEq t2 223 goto return_id_223) (64157)
  a++ (64157)
  a==c (64158)
  jf 3 (64159)
  lj 52272 (64161)
  (         ifEq t2 224 goto return_id_224) (64164)
  a++ (64164)
  a==c (64165)
  jf 3 (64166)
  lj 52345 (64168)
  (         ifEq t2 225 goto return_id_225) (64171)
  a++ (64171)
  a==c (64172)
  jf 3 (64173)
  lj 52575 (64175)
  (         ifEq t2 226 goto return_id_226) (64178)
  a++ (64178)
  a==c (64179)
  jf 3 (64180)
  lj 52700 (64182)
  (         ifEq t2 227 goto return_id_227) (64185)
  a++ (64185)
  a==c (64186)
  jf 3 (64187)
  lj 52740 (64189)
  (         ifEq t2 228 goto return_id_228) (64192)
  a++ (64192)
  a==c (64193)
  jf 3 (64194)
  lj 52940 (64196)
  (         ifEq t2 229 goto return_id_229) (64199)
  a++ (64199)
  a==c (64200)
  jf 3 (64201)
  lj 53006 (64203)
  (         ifEq t2 230 goto return_id_230) (64206)
  a++ (64206)
  a==c (64207)
  jf 3 (64208)
  lj 53106 (64210)
  (         ifEq t2 231 goto return_id_231) (64213)
  a++ (64213)
  a==c (64214)
  jf 3 (64215)
  lj 53143 (64217)
  (         ifEq t2 232 goto return_id_232) (64220)
  a++ (64220)
  a==c (64221)
  jf 3 (64222)
  lj 53239 (64224)
  (         ifEq t2 233 goto return_id_233) (64227)
  a++ (64227)
  a==c (64228)
  jf 3 (64229)
  lj 53276 (64231)
  (         ifEq t2 234 goto return_id_234) (64234)
  a++ (64234)
  a==c (64235)
  jf 3 (64236)
  lj 53456 (64238)
  (         ifEq t2 235 goto return_id_235) (64241)
  a++ (64241)
  a==c (64242)
  jf 3 (64243)
  lj 53491 (64245)
  (         ifEq t2 236 goto return_id_236) (64248)
  a++ (64248)
  a==c (64249)
  jf 3 (64250)
  lj 53533 (64252)
  (         ifEq t2 237 goto return_id_237) (64255)
  a++ (64255)
  a==c (64256)
  jf 3 (64257)
  lj 53655 (64259)
  (         ifEq t2 238 goto return_id_238) (64262)
  a++ (64262)
  a==c (64263)
  jf 3 (64264)
  lj 53692 (64266)
  (         ifEq t2 239 goto return_id_239) (64269)
  a++ (64269)
  a==c (64270)
  jf 3 (64271)
  lj 53788 (64273)
  (         ifEq t2 240 goto return_id_240) (64276)
  a++ (64276)
  a==c (64277)
  jf 3 (64278)
  lj 53825 (64280)
  (         ifEq t2 241 goto return_id_241) (64283)
  a++ (64283)
  a==c (64284)
  jf 3 (64285)
  lj 53921 (64287)
  (         ifEq t2 242 goto return_id_242) (64290)
  a++ (64290)
  a==c (64291)
  jf 3 (64292)
  lj 53958 (64294)
  (         ifEq t2 243 goto return_id_243) (64297)
  a++ (64297)
  a==c (64298)
  jf 3 (64299)
  lj 54054 (64301)
  (         ifEq t2 244 goto return_id_244) (64304)
  a++ (64304)
  a==c (64305)
  jf 3 (64306)
  lj 54091 (64308)
  (         ifEq t2 245 goto return_id_245) (64311)
  a++ (64311)
  a==c (64312)
  jf 3 (64313)
  lj 54271 (64315)
  (         ifEq t2 246 goto return_id_246) (64318)
  a++ (64318)
  a==c (64319)
  jf 3 (64320)
  lj 54306 (64322)
  (         ifEq t2 247 goto return_id_247) (64325)
  a++ (64325)
  a==c (64326)
  jf 3 (64327)
  lj 54348 (64329)
  (         ifEq t2 248 goto return_id_248) (64332)
  a++ (64332)
  a==c (64333)
  jf 3 (64334)
  lj 54528 (64336)
  (         ifEq t2 249 goto return_id_249) (64339)
  a++ (64339)
  a==c (64340)
  jf 3 (64341)
  lj 54563 (64343)
  (         ifEq t2 250 goto return_id_250) (64346)
  a++ (64346)
  a==c (64347)
  jf 3 (64348)
  lj 54605 (64350)
  (         ifEq t2 251 goto return_id_251) (64353)
  a++ (64353)
  a==c (64354)
  jf 3 (64355)
  lj 54667 (64357)
  (         ifEq t2 252 goto return_id_252) (64360)
  a++ (64360)
  a==c (64361)
  jf 3 (64362)
  lj 54715 (64364)
  (         ifEq t2 253 goto return_id_253) (64367)
  a++ (64367)
  a==c (64368)
  jf 3 (64369)
  lj 54803 (64371)
  (         ifEq t2 254 goto return_id_254) (64374)
  a++ (64374)
  a==c (64375)
  jf 3 (64376)
  lj 54889 (64378)
  (         ifEq t2 255 goto return_id_255) (64381)
  a++ (64381)
  a==c (64382)
  jf 3 (64383)
  lj 55048 (64385)
  (         ifEq t2 256 goto return_id_256) (64388)
  a++ (64388)
  a==c (64389)
  jf 3 (64390)
  lj 55133 (64392)
  (         ifEq t2 257 goto return_id_257) (64395)
  a++ (64395)
  a==c (64396)
  jf 3 (64397)
  lj 55212 (64399)
  (         ifEq t2 258 goto return_id_258) (64402)
  a++ (64402)
  a==c (64403)
  jf 3 (64404)
  lj 55287 (64406)
  (         ifEq t2 259 goto return_id_259) (64409)
  a++ (64409)
  a==c (64410)
  jf 3 (64411)
  lj 55380 (64413)
  (         ifEq t2 260 goto return_id_260) (64416)
  a++ (64416)
  a==c (64417)
  jf 3 (64418)
  lj 55499 (64420)
  (         ifEq t2 261 goto return_id_261) (64423)
  a++ (64423)
  a==c (64424)
  jf 3 (64425)
  lj 55574 (64427)
  (         ifEq t2 262 goto return_id_262) (64430)
  a++ (64430)
  a==c (64431)
  jf 3 (64432)
  lj 55652 (64434)
  (         ifEq t2 263 goto return_id_263) (64437)
  a++ (64437)
  a==c (64438)
  jf 3 (64439)
  lj 55696 (64441)
  (         ifEq t2 264 goto return_id_264) (64444)
  a++ (64444)
  a==c (64445)
  jf 3 (64446)
  lj 55792 (64448)
  (         ifEq t2 265 goto return_id_265) (64451)
  a++ (64451)
  a==c (64452)
  jf 3 (64453)
  lj 55829 (64455)
  (         ifEq t2 266 goto return_id_266) (64458)
  a++ (64458)
  a==c (64459)
  jf 3 (64460)
  lj 55924 (64462)
  (         ifEq t2 267 goto return_id_267) (64465)
  a++ (64465)
  a==c (64466)
  jf 3 (64467)
  lj 55973 (64469)
  (         ifEq t2 268 goto return_id_268) (64472)
  a++ (64472)
  a==c (64473)
  jf 3 (64474)
  lj 56403 (64476)
  (         ifEq t2 269 goto return_id_269) (64479)
  a++ (64479)
  a==c (64480)
  jf 3 (64481)
  lj 56504 (64483)
  (         ifEq t2 270 goto return_id_270) (64486)
  a++ (64486)
  a==c (64487)
  jf 3 (64488)
  lj 56605 (64490)
  (         ifEq t2 271 goto return_id_271) (64493)
  a++ (64493)
  a==c (64494)
  jf 3 (64495)
  lj 56642 (64497)
  (         ifEq t2 272 goto return_id_272) (64500)
  a++ (64500)
  a==c (64501)
  jf 3 (64502)
  lj 56774 (64504)
  (         ifEq t2 273 goto return_id_273) (64507)
  a++ (64507)
  a==c (64508)
  jf 3 (64509)
  lj 56816 (64511)
  (         ifEq t2 274 goto return_id_274) (64514)
  a++ (64514)
  a==c (64515)
  jf 3 (64516)
  lj 56857 (64518)
  (         ifEq t2 275 goto return_id_275) (64521)
  a++ (64521)
  a==c (64522)
  jf 3 (64523)
  lj 56989 (64525)
  (         ifEq t2 276 goto return_id_276) (64528)
  a++ (64528)
  a==c (64529)
  jf 3 (64530)
  lj 57031 (64532)
  (         ifEq t2 277 goto return_id_277) (64535)
  a++ (64535)
  a==c (64536)
  jf 3 (64537)
  lj 57072 (64539)
  (         ifEq t2 278 goto return_id_278) (64542)
  a++ (64542)
  a==c (64543)
  jf 3 (64544)
  lj 57147 (64546)
  (         ifEq t2 279 goto return_id_279) (64549)
  a++ (64549)
  a==c (64550)
  jf 3 (64551)
  lj 57248 (64553)
  (         ifEq t2 280 goto return_id_280) (64556)
  a++ (64556)
  a==c (64557)
  jf 3 (64558)
  lj 57285 (64560)
  (         ifEq t2 281 goto return_id_281) (64563)
  a++ (64563)
  a==c (64564)
  jf 3 (64565)
  lj 57417 (64567)
  (         ifEq t2 282 goto return_id_282) (64570)
  a++ (64570)
  a==c (64571)
  jf 3 (64572)
  lj 57459 (64574)
  (         ifEq t2 283 goto return_id_283) (64577)
  a++ (64577)
  a==c (64578)
  jf 3 (64579)
  lj 57500 (64581)
  (         ifEq t2 284 goto return_id_284) (64584)
  a++ (64584)
  a==c (64585)
  jf 3 (64586)
  lj 57632 (64588)
  (         ifEq t2 285 goto return_id_285) (64591)
  a++ (64591)
  a==c (64592)
  jf 3 (64593)
  lj 57674 (64595)
  (         ifEq t2 286 goto return_id_286) (64598)
  a++ (64598)
  a==c (64599)
  jf 3 (64600)
  lj 57715 (64602)
  (         ifEq t2 287 goto return_id_287) (64605)
  a++ (64605)
  a==c (64606)
  jf 3 (64607)
  lj 57790 (64609)
  (         ifEq t2 288 goto return_id_288) (64612)
  a++ (64612)
  a==c (64613)
  jf 3 (64614)
  lj 57891 (64616)
  (         ifEq t2 289 goto return_id_289) (64619)
  a++ (64619)
  a==c (64620)
  jf 3 (64621)
  lj 57928 (64623)
  (         ifEq t2 290 goto return_id_290) (64626)
  a++ (64626)
  a==c (64627)
  jf 3 (64628)
  lj 58060 (64630)
  (         ifEq t2 291 goto return_id_291) (64633)
  a++ (64633)
  a==c (64634)
  jf 3 (64635)
  lj 58102 (64637)
  (         ifEq t2 292 goto return_id_292) (64640)
  a++ (64640)
  a==c (64641)
  jf 3 (64642)
  lj 58143 (64644)
  (         ifEq t2 293 goto return_id_293) (64647)
  a++ (64647)
  a==c (64648)
  jf 3 (64649)
  lj 58275 (64651)
  (         ifEq t2 294 goto return_id_294) (64654)
  a++ (64654)
  a==c (64655)
  jf 3 (64656)
  lj 58317 (64658)
  (         ifEq t2 295 goto return_id_295) (64661)
  a++ (64661)
  a==c (64662)
  jf 3 (64663)
  lj 58358 (64665)
  (         ifEq t2 296 goto return_id_296) (64668)
  a++ (64668)
  a==c (64669)
  jf 3 (64670)
  lj 58433 (64672)
  (         ifEq t2 297 goto return_id_297) (64675)
  a++ (64675)
  a==c (64676)
  jf 3 (64677)
  lj 58508 (64679)
  (         ifEq t2 298 goto return_id_298) (64682)
  a++ (64682)
  a==c (64683)
  jf 3 (64684)
  lj 58583 (64686)
  (         ifEq t2 299 goto return_id_299) (64689)
  a++ (64689)
  a==c (64690)
  jf 3 (64691)
  lj 58681 (64693)
  (         ifEq t2 300 goto return_id_300) (64696)
  a++ (64696)
  a==c (64697)
  jf 3 (64698)
  lj 58726 (64700)
  (         ifEq t2 301 goto return_id_301) (64703)
  a++ (64703)
  a==c (64704)
  jf 3 (64705)
  lj 58836 (64707)
  (         ifEq t2 302 goto return_id_302) (64710)
  a++ (64710)
  a==c (64711)
  jf 3 (64712)
  lj 58884 (64714)
  (         ifEq t2 303 goto return_id_303) (64717)
  a++ (64717)
  a==c (64718)
  jf 3 (64719)
  lj 58958 (64721)
  (         ifEq t2 304 goto return_id_304) (64724)
  a++ (64724)
  a==c (64725)
  jf 3 (64726)
  lj 58995 (64728)
  (         ifEq t2 305 goto return_id_305) (64731)
  a++ (64731)
  a==c (64732)
  jf 3 (64733)
  lj 59093 (64735)
  (         ifEq t2 306 goto return_id_306) (64738)
  a++ (64738)
  a==c (64739)
  jf 3 (64740)
  lj 59138 (64742)
  (         ifEq t2 307 goto return_id_307) (64745)
  a++ (64745)
  a==c (64746)
  jf 3 (64747)
  lj 59248 (64749)
  (         ifEq t2 308 goto return_id_308) (64752)
  a++ (64752)
  a==c (64753)
  jf 3 (64754)
  lj 59296 (64756)
  (         ifEq t2 309 goto return_id_309) (64759)
  a++ (64759)
  a==c (64760)
  jf 3 (64761)
  lj 59370 (64763)
  (         ifEq t2 310 goto return_id_310) (64766)
  a++ (64766)
  a==c (64767)
  jf 3 (64768)
  lj 59407 (64770)
  (         ifEq t2 311 goto return_id_311) (64773)
  a++ (64773)
  a==c (64774)
  jf 3 (64775)
  lj 59505 (64777)
  (         ifEq t2 312 goto return_id_312) (64780)
  a++ (64780)
  a==c (64781)
  jf 3 (64782)
  lj 59550 (64784)
  (         ifEq t2 313 goto return_id_313) (64787)
  a++ (64787)
  a==c (64788)
  jf 3 (64789)
  lj 59766 (64791)
  (         ifEq t2 314 goto return_id_314) (64794)
  a++ (64794)
  a==c (64795)
  jf 3 (64796)
  lj 59808 (64798)
  (         ifEq t2 315 goto return_id_315) (64801)
  a++ (64801)
  a==c (64802)
  jf 3 (64803)
  lj 59855 (64805)
  (         ifEq t2 316 goto return_id_316) (64808)
  a++ (64808)
  a==c (64809)
  jf 3 (64810)
  lj 59896 (64812)
  (         ifEq t2 317 goto return_id_317) (64815)
  a++ (64815)
  a==c (64816)
  jf 3 (64817)
  lj 60112 (64819)
  (         ifEq t2 318 goto return_id_318) (64822)
  a++ (64822)
  a==c (64823)
  jf 3 (64824)
  lj 60154 (64826)
  (         ifEq t2 319 goto return_id_319) (64829)
  a++ (64829)
  a==c (64830)
  jf 3 (64831)
  lj 60201 (64833)
  (         ifEq t2 320 goto return_id_320) (64836)
  a++ (64836)
  a==c (64837)
  jf 3 (64838)
  lj 60242 (64840)
  (         ifEq t2 321 goto return_id_321) (64843)
  a++ (64843)
  a==c (64844)
  jf 3 (64845)
  lj 60458 (64847)
  (         ifEq t2 322 goto return_id_322) (64850)
  a++ (64850)
  a==c (64851)
  jf 3 (64852)
  lj 60500 (64854)
  (         ifEq t2 323 goto return_id_323) (64857)
  a++ (64857)
  a==c (64858)
  jf 3 (64859)
  lj 60547 (64861)
  (         ifEq t2 324 goto return_id_324) (64864)
  a++ (64864)
  a==c (64865)
  jf 3 (64866)
  lj 60629 (64868)
  (         ifEq t2 325 goto return_id_325) (64871)
  a++ (64871)
  a==c (64872)
  jf 3 (64873)
  lj 60769 (64875)
  (         ifEq t2 326 goto return_id_326) (64878)
  a++ (64878)
  a==c (64879)
  jf 3 (64880)
  lj 60904 (64882)
  (         ifEq t2 327 goto return_id_327) (64885)
  a++ (64885)
  a==c (64886)
  jf 3 (64887)
  lj 61424 (64889)
  (         ifEq t2 328 goto return_id_328) (64892)
  a++ (64892)
  a==c (64893)
  jf 3 (64894)
  lj 61495 (64896)
  (         ifEq t2 329 goto return_id_329) (64899)
  a++ (64899)
  a==c (64900)
  jf 3 (64901)
  lj 61570 (64903)
  (         ifEq t2 330 goto return_id_330) (64906)
  a++ (64906)
  a==c (64907)
  jf 3 (64908)
  lj 61645 (64910)
  (         ifEq t2 331 goto return_id_331) (64913)
  a++ (64913)
  a==c (64914)
  jf 3 (64915)
  lj 62204 (64917)
  (         ifEq t2 332 goto return_id_332) (64920)
  a++ (64920)
  a==c (64921)
  jf 3 (64922)
  lj 62426 (64924)
  (         ifEq t2 333 goto return_id_333) (64927)
  a++ (64927)
  a==c (64928)
  jf 3 (64929)
  lj 62475 (64931)
  (         ifEq t2 334 goto return_id_334) (64934)
  a++ (64934)
  a==c (64935)
  jf 3 (64936)
  lj 62665 (64938)
  (        :throw_error:) (64941)
  (         error) (64941)
  error (64941)
  (         halt) (64942)
  halt (64942)
end
