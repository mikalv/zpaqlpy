comp 21 0 21 0 3 (hh hm ph pm n)
  0 cm 19 22
  1 cm 19 22
  2 mix2 1 0 1 30 0
hcomp
  r=a 255        (0)
  (t255 holds the inital value passed into the A register, first ZPAQL instruction must thus be r=a 255)        (2)
  (         ifN t0 goto init_code)        (2)
  a=r 0        (2)
  a== 0        (4)
  jf 3        (6)
  lj 23        (8)
  (         if t254 goto cont_reading)        (11)
  a=r 254        (11)
  a== 0        (13)
  jt 3        (15)
  lj 68        (17)
  (         goto call_next)        (20)
  lj 260        (20)
  (        :init_code:)        (23)
  (         t0 = 4)        (23)
  a= 4        (23)
  r=a 0        (25)
  (         t252 = t0)        (27)
  r=a 252        (27)
  (         goto read_b_end~)        (29)
  lj 92        (29)
  (        :read_b:)        (32)
  (         t1 = t253 == 4294967294)        (32)
  c=0        (32)
  c--        (33)
  c--        (34)
  a=r 253        (35)
  a==c        (37)
  a=0        (38)
  jf 1        (39)
  a++        (41)
  r=a 1        (42)
  (         if t1 goto do_read_in)        (44)
  a== 0        (44)
  jt 3        (46)
  lj 63        (48)
  (         t255 = t253)        (51)
  a=r 253        (51)
  r=a 255        (53)
  (         t253 = 4294967294)        (55)
  a=0        (55)
  a--        (56)
  a--        (57)
  r=a 253        (58)
  (         goto cont_reading)        (60)
  lj 68        (60)
  (        :do_read_in:)        (63)
  (         t254 = 1)        (63)
  a= 1        (63)
  r=a 254        (65)
  (         halt)        (67)
  halt        (67)
  (        :cont_reading:)        (68)
  (         t254 = 0)        (68)
  a=0        (68)
  r=a 254        (69)
  (         t1 = t255)        (71)
  a=r 255        (71)
  r=a 1        (73)
  (         t2 = H[t0]〈〉)        (75)
  d=r 0        (75)
  a=*d        (77)
  r=a 2        (78)
  (         t0 = t0 - 1)        (80)
  a=r 0        (80)
  a--        (82)
  r=a 0        (83)
  (         t0 = H[t0]〈〉)        (85)
  d=a        (85)
  a=*d        (86)
  r=a 0        (87)
  (         goto find_label_ret_id)        (89)
  lj 290        (89)
  (        :read_b_end~:)        (92)
  (                    21: pass)        (92)
  (                    159: at_counter = False  # if false, then c is byte, otherwise c is a counter)        (92)
  (         H[t0+1]〈at_counter〉 = 0)        (92)
  a=r 0        (92)
  a++        (94)
  d=a        (95)
  *d=0        (96)
  (                    160: last_value = 0)        (97)
  (         H[t0+2]〈last_value〉 = 0)        (97)
  d++        (97)
  *d=0        (98)
  (                    161: last_counter = 0)        (99)
  (         H[t0+3]〈last_counter〉 = 0)        (99)
  d++        (99)
  *d=0        (100)
  (                    163: def hcomp〈c〉:  # pcomp bytecode is passed first 〈or 0 if there is none〉)        (101)
  (         goto hcomp_end~)        (101)
  lj 260        (101)
  (        :hcomp:)        (104)
  (         MarkTempVarStart)        (104)
  (Arg c at t0 + 1)        (104)
  (                    164:   global at_counter, last_value, last_counter)        (104)
  (Global at_counter via H[t252+1])        (104)
  (Global last_value via H[t252+2])        (104)
  (Global last_counter via H[t252+3])        (104)
  (                    165:   if at_counter:)        (104)
  (         ifN H[t252+1]〈at_counter〉 goto else_1)        (104)
  a=r 252        (104)
  a++        (106)
  d=a        (107)
  a=*d        (108)
  a== 0        (109)
  jf 3        (111)
  lj 130        (113)
  (                    166:     last_counter = c)        (116)
  (         H[t252+3]〈last_counter〉 = H[t0+1]〈c〉)        (116)
  a=r 0        (116)
  a++        (118)
  d=a        (119)
  c=*d        (120)
  a=r 252        (121)
  a+= 3        (123)
  d=a        (125)
  *d=c        (126)
  (         goto endif_2)        (127)
  lj 141        (127)
  (        :else_1:)        (130)
  (                    168:     last_value = c)        (130)
  (         H[t252+2]〈last_value〉 = H[t0+1]〈c〉)        (130)
  a=r 0        (130)
  a++        (132)
  d=a        (133)
  c=*d        (134)
  a=r 252        (135)
  a+= 2        (137)
  d=a        (139)
  *d=c        (140)
  (        :endif_2:)        (141)
  (                    171:   hH[0] = 〈last_value << 1〉 + at_counter  # at_counter will occupy one bit, therefore shift)        (141)
  (         t2 = H[t252+2]〈last_value〉 << 1)        (141)
  c= 1        (141)
  a=r 252        (143)
  a+= 2        (145)
  d=a        (147)
  a=*d        (148)
  a<<=c        (149)
  r=a 2        (150)
  (         t1 = t2 + H[t252+1]〈at_counter〉)        (152)
  d--        (152)
  c=*d        (153)
  a+=c        (154)
  r=a 1        (155)
  (         t2 = 0)        (157)
  a=0        (157)
  r=a 2        (158)
  (         H[t2]〈〉 = t1)        (160)
  d=a        (160)
  a=r 1        (161)
  *d=a        (163)
  (                    172:   hH[0] <<= 9  # again shift to the side because of the xor with the partially decoded byte)        (164)
  (         t1 = 0)        (164)
  a=0        (164)
  r=a 1        (165)
  (         H[t1]〈〉 = H[t1]〈〉 << 9)        (167)
  c= 9        (167)
  d=a        (169)
  a=*d        (170)
  a<<=c        (171)
  *d=a        (172)
  (                    174:   hH[1] = 〈last_counter << 1〉 + at_counter)        (173)
  (         t2 = H[t252+3]〈last_counter〉 << 1)        (173)
  c= 1        (173)
  a=r 252        (175)
  a+= 3        (177)
  d=a        (179)
  a=*d        (180)
  a<<=c        (181)
  r=a 2        (182)
  (         t1 = t2 + H[t252+1]〈at_counter〉)        (184)
  a=r 252        (184)
  a++        (186)
  d=a        (187)
  c=*d        (188)
  a=r 2        (189)
  a+=c        (191)
  r=a 1        (192)
  (         t2 = 1)        (194)
  a= 1        (194)
  r=a 2        (196)
  (         H[t2]〈〉 = t1)        (198)
  d=a        (198)
  a=r 1        (199)
  *d=a        (201)
  (                    175:   hH[1] <<= 9)        (202)
  (         t1 = 1)        (202)
  a= 1        (202)
  r=a 1        (204)
  (         H[t1]〈〉 = H[t1]〈〉 << 9)        (206)
  c= 9        (206)
  d=a        (208)
  a=*d        (209)
  a<<=c        (210)
  *d=a        (211)
  (                    176:   hH[2] = at_counter + 0  # context for mixer: is at counter 〈1〉 or not 〈0〉)        (212)
  (         t1 = H[t252+1]〈at_counter〉 + 0)        (212)
  c=0        (212)
  a=r 252        (213)
  a++        (215)
  d=a        (216)
  a=*d        (217)
  a+=c        (218)
  r=a 1        (219)
  (         t2 = 2)        (221)
  a= 2        (221)
  r=a 2        (223)
  (         H[t2]〈〉 = t1)        (225)
  d=a        (225)
  a=r 1        (226)
  *d=a        (228)
  (                    177:   at_counter = not at_counter)        (229)
  (         t1 = ! H[t252+1]〈at_counter〉)        (229)
  a=r 252        (229)
  a++        (231)
  d=a        (232)
  a=*d        (233)
  a++        (234)
  a== 1        (235)
  jt 1        (237)
  a=0        (239)
  r=a 1        (240)
  (         H[t252+1]〈at_counter〉 = t1)        (242)
  *d=a        (242)
  (insert return as it might not be done by the function:)        (243)
  (         t2 = H[t0]〈〉)        (243)
  d=r 0        (243)
  a=*d        (245)
  r=a 2        (246)
  (         t0 = t0 - 1)        (248)
  a=r 0        (248)
  a--        (250)
  r=a 0        (251)
  (         t0 = H[t0]〈〉)        (253)
  d=a        (253)
  a=*d        (254)
  r=a 0        (255)
  (         goto find_label_ret_id)        (257)
  lj 290        (257)
  (         MarkTempVarEnd)        (260)
  (        :hcomp_end~:)        (260)
  (                    181: pass)        (260)
  (        :call_next:)        (260)
  (         t253 = 4294967294)        (260)
  a=0        (260)
  a--        (261)
  a--        (262)
  r=a 253        (263)
  (         H[t0+4]〈〉 = t0)        (265)
  a=r 0        (265)
  a+= 4        (267)
  d=a        (269)
  a=r 0        (270)
  *d=a        (272)
  (saved bsp, return id:)        (273)
  (         H[t0+5]〈〉 = 0)        (273)
  d++        (273)
  *d=0        (274)
  (push arguments:)        (275)
  (         H[t0+6]〈〉 = t255)        (275)
  d++        (275)
  a=r 255        (276)
  *d=a        (278)
  (         t0 = t0 + 5)        (279)
  c= 5        (279)
  a=r 0        (281)
  a+=c        (283)
  r=a 0        (284)
  (         goto hcomp)        (286)
  lj 104        (286)
  (        :return_id_0:)        (289)
  (         halt)        (289)
  halt        (289)
  (        :find_label_ret_id:)        (290)
  (         t4 = t0 > 1048380)        (290)
  a= 15        (290)
  a<<= 8        (292)
  a+= 255        (294)
  a<<= 8        (296)
  a+= 60        (298)
  c=a        (300)
  a=r 0        (301)
  a>c        (303)
  a=0        (304)
  jf 1        (305)
  a++        (307)
  r=a 4        (308)
  (         if t4 goto throw_error)        (310)
  a== 0        (310)
  jt 3        (312)
  lj 326        (314)
  (         ifEq t2 0 goto return_id_0)        (317)
  c=r 2        (317)
  a=0        (319)
  a==c        (320)
  jf 3        (321)
  lj 289        (323)
  (        :throw_error:)        (326)
  (         error)        (326)
  error        (326)
  (         halt)        (327)
  halt        (327)
pcomp ./simple_rle ;
  r=a 255        (0)
  (t255 holds the inital value passed into the A register, first ZPAQL instruction must thus be r=a 255)        (2)
  (         ifN t0 goto init_code)        (2)
  a=r 0        (2)
  a== 0        (4)
  jf 3        (6)
  lj 23        (8)
  (         if t254 goto cont_reading)        (11)
  a=r 254        (11)
  a== 0        (13)
  jt 3        (15)
  lj 68        (17)
  (         goto call_next)        (20)
  lj 241        (20)
  (        :init_code:)        (23)
  (         t0 = 1)        (23)
  a= 1        (23)
  r=a 0        (25)
  (         t252 = t0)        (27)
  r=a 252        (27)
  (         goto read_b_end~)        (29)
  lj 92        (29)
  (        :read_b:)        (32)
  (         t1 = t253 == 4294967294)        (32)
  c=0        (32)
  c--        (33)
  c--        (34)
  a=r 253        (35)
  a==c        (37)
  a=0        (38)
  jf 1        (39)
  a++        (41)
  r=a 1        (42)
  (         if t1 goto do_read_in)        (44)
  a== 0        (44)
  jt 3        (46)
  lj 63        (48)
  (         t255 = t253)        (51)
  a=r 253        (51)
  r=a 255        (53)
  (         t253 = 4294967294)        (55)
  a=0        (55)
  a--        (56)
  a--        (57)
  r=a 253        (58)
  (         goto cont_reading)        (60)
  lj 68        (60)
  (        :do_read_in:)        (63)
  (         t254 = 1)        (63)
  a= 1        (63)
  r=a 254        (65)
  (         halt)        (67)
  halt        (67)
  (        :cont_reading:)        (68)
  (         t254 = 0)        (68)
  a=0        (68)
  r=a 254        (69)
  (         t1 = t255)        (71)
  a=r 255        (71)
  r=a 1        (73)
  (         t2 = H[t0]〈〉)        (75)
  d=r 0        (75)
  a=*d        (77)
  r=a 2        (78)
  (         t0 = t0 - 1)        (80)
  a=r 0        (80)
  a--        (82)
  r=a 0        (83)
  (         t0 = H[t0]〈〉)        (85)
  d=a        (85)
  a=*d        (86)
  r=a 0        (87)
  (         goto find_label_ret_id)        (89)
  lj 271        (89)
  (        :read_b_end~:)        (92)
  (                    21: pass)        (92)
  (                    189: case_loading = False)        (92)
  (         H[t0+1]〈case_loading〉 = 0)        (92)
  a=r 0        (92)
  a++        (94)
  d=a        (95)
  *d=0        (96)
  (                    190: last = NONE)        (97)
  (         H[t0+2]〈last〉 = 4294967295)        (97)
  d++        (97)
  *d=0        (98)
  *d--        (99)
  (                    192: def pcomp〈c〉:)        (100)
  (         goto pcomp_end~)        (100)
  lj 241        (100)
  (        :pcomp:)        (103)
  (         MarkTempVarStart)        (103)
  (Arg c at t0 + 1)        (103)
  (                    193:   global case_loading, last)        (103)
  (Global case_loading via H[t252+1])        (103)
  (Global last via H[t252+2])        (103)
  (                    194:   if c == NONE:  # start of new segment, so restart our code)        (103)
  (         t1 = H[t0+1]〈c〉 == 4294967295)        (103)
  c=0        (103)
  c--        (104)
  a=r 0        (105)
  a++        (107)
  d=a        (108)
  a=*d        (109)
  a==c        (110)
  a=0        (111)
  jf 1        (112)
  a++        (114)
  r=a 1        (115)
  (         ifN t1 goto else_2)        (117)
  a== 0        (117)
  jf 3        (119)
  lj 152        (121)
  (                    195:     case_loading = False)        (124)
  (         H[t252+1]〈case_loading〉 = 0)        (124)
  a=r 252        (124)
  a++        (126)
  d=a        (127)
  *d=0        (128)
  (                    196:     last = NONE)        (129)
  (         H[t252+2]〈last〉 = 4294967295)        (129)
  d++        (129)
  *d=0        (130)
  *d--        (131)
  (                    197:     return)        (132)
  (         t2 = H[t0]〈〉)        (132)
  d=r 0        (132)
  a=*d        (134)
  r=a 2        (135)
  (         t0 = t0 - 1)        (137)
  a=r 0        (137)
  a--        (139)
  r=a 0        (140)
  (         t0 = H[t0]〈〉)        (142)
  d=a        (142)
  a=*d        (143)
  r=a 0        (144)
  (         goto find_label_ret_id)        (146)
  lj 271        (146)
  (         goto endif_3)        (149)
  lj 152        (149)
  (        :else_2:)        (152)
  (        :endif_3:)        (152)
  (                    198:   if not case_loading:  # c is byte to load)        (152)
  (         t1 = ! H[t252+1]〈case_loading〉)        (152)
  a=r 252        (152)
  a++        (154)
  d=a        (155)
  a=*d        (156)
  a++        (157)
  a== 1        (158)
  jt 1        (160)
  a=0        (162)
  r=a 1        (163)
  (         ifN t1 goto else_4)        (165)
  a== 0        (165)
  jf 3        (167)
  lj 188        (169)
  (                    199:     case_loading = True)        (172)
  (         H[t252+1]〈case_loading〉 = 1)        (172)
  *d= 1        (172)
  (                    200:     last = c)        (174)
  (         H[t252+2]〈last〉 = H[t0+1]〈c〉)        (174)
  a=r 0        (174)
  a++        (176)
  d=a        (177)
  c=*d        (178)
  a=r 252        (179)
  a+= 2        (181)
  d=a        (183)
  *d=c        (184)
  (         goto endif_5)        (185)
  lj 224        (185)
  (        :else_4:)        (188)
  (                    202:     case_loading = False)        (188)
  (         H[t252+1]〈case_loading〉 = 0)        (188)
  a=r 252        (188)
  a++        (190)
  d=a        (191)
  *d=0        (192)
  (                    203:     while c > 0:)        (193)
  (        :while_6:)        (193)
  (         t1 = H[t0+1]〈c〉 > 0)        (193)
  c=0        (193)
  a=r 0        (194)
  a++        (196)
  d=a        (197)
  a=*d        (198)
  a>c        (199)
  a=0        (200)
  jf 1        (201)
  a++        (203)
  r=a 1        (204)
  (         ifN t1 goto whileend_8)        (206)
  a== 0        (206)
  jf 3        (208)
  lj 224        (210)
  (                    204:       c-= 1)        (213)
  (         H[t0+1]〈c〉 = H[t0+1]〈c〉 - 1)        (213)
  *d--        (213)
  (                    205:       out〈last〉)        (214)
  (         out H[t252+2]〈last〉)        (214)
  a=r 252        (214)
  a+= 2        (216)
  d=a        (218)
  a=*d        (219)
  out        (220)
  (         goto while_6)        (221)
  lj 193        (221)
  (        :whileend_8:)        (224)
  (        :endif_5:)        (224)
  (insert return as it might not be done by the function:)        (224)
  (         t2 = H[t0]〈〉)        (224)
  d=r 0        (224)
  a=*d        (226)
  r=a 2        (227)
  (         t0 = t0 - 1)        (229)
  a=r 0        (229)
  a--        (231)
  r=a 0        (232)
  (         t0 = H[t0]〈〉)        (234)
  d=a        (234)
  a=*d        (235)
  r=a 0        (236)
  (         goto find_label_ret_id)        (238)
  lj 271        (238)
  (         MarkTempVarEnd)        (241)
  (        :pcomp_end~:)        (241)
  (                    208: pass)        (241)
  (        :call_next:)        (241)
  (         t253 = 4294967294)        (241)
  a=0        (241)
  a--        (242)
  a--        (243)
  r=a 253        (244)
  (         H[t0+3]〈〉 = t0)        (246)
  a=r 0        (246)
  a+= 3        (248)
  d=a        (250)
  a=r 0        (251)
  *d=a        (253)
  (saved bsp, return id:)        (254)
  (         H[t0+4]〈〉 = 0)        (254)
  d++        (254)
  *d=0        (255)
  (push arguments:)        (256)
  (         H[t0+5]〈〉 = t255)        (256)
  d++        (256)
  a=r 255        (257)
  *d=a        (259)
  (         t0 = t0 + 4)        (260)
  c= 4        (260)
  a=r 0        (262)
  a+=c        (264)
  r=a 0        (265)
  (         goto pcomp)        (267)
  lj 103        (267)
  (        :return_id_0:)        (270)
  (         halt)        (270)
  halt        (270)
  (        :find_label_ret_id:)        (271)
  (         t4 = t0 > 1048377)        (271)
  a= 15        (271)
  a<<= 8        (273)
  a+= 255        (275)
  a<<= 8        (277)
  a+= 57        (279)
  c=a        (281)
  a=r 0        (282)
  a>c        (284)
  a=0        (285)
  jf 1        (286)
  a++        (288)
  r=a 4        (289)
  (         if t4 goto throw_error)        (291)
  a== 0        (291)
  jt 3        (293)
  lj 307        (295)
  (         ifEq t2 0 goto return_id_0)        (298)
  c=r 2        (298)
  a=0        (300)
  a==c        (301)
  jf 3        (302)
  lj 270        (304)
  (        :throw_error:)        (307)
  (         error)        (307)
  error        (307)
  (         halt)        (308)
  halt        (308)
end
