(zpaq 6.00+ config file for 24-bit bmp files)

comp 17 17 0 3 33 (hh hm ph pm n)
  0 const 160
  1 cm $1+20 255
  2 cm $1+20 255
  3 cm $1+20 255
  4 cm $1+20 255
  5 cm $1+20 255
  6 cm $1+20 255
  7 cm $1+20 255
  8 cm $1+20 255
  9 icm $1+16
  10 cm $1+20 255
  11 icm $1+16
  12 cm $1+20 255
  13 icm $1+16
  14 cm $1+20 255
  15 icm $1+16
  16 cm $1+20 255
  17 cm $1+20 255
  18 cm $1+20 255
  19 cm $1+20 255
  20 cm $1+20 255
  21 icm $1+16
  22 icm $1+16
  23 cm 11 255

  24 mix 16 0 24 16 255
  25 mix 11 0 25 20 255
  26 mix2 0 24 25 40 0
  27 mix 0 0 26 32 0
  28 mix2 0 26 27 40 0
  29 sse 16 28 8 255
  30 mix2 8 28 29 40 255
  31 sse 8 30 8 255
  32 mix2 0 30 31 40 0

hcomp
  *c=a (save in rotating buffer)
  a=c a== 0 if (compute lookup ilog table)
    d= 255 *d=0 d++ *d=0
    a= 1 a<<= 16 r=a 0
    a= 7 a*= 100 a+= 74 a*= 100 a+= 54 a*= 100 a+= 10 a*= 100 a+= 2 r=a 1
    a= 14 a*= 100 a+= 15 a*= 100 a+= 57 a*= 100 a+= 76 c=a
    d= 2
    do
      a=d a*= 2 a-- b=a
      a=r 1 a/=b b=a
      a=c a+=b c=a
      a=d a+= 255 d=a a=c a>>= 24 *d=a a=d a-= 255 d=a
      d++
    a=r 0 b=a a=d a<b while
   c=0 a= 255 r=a 0
  endif
  a=c a== 3 if
    b=0 a=*b
    a== 0 ifnot b++ b++ a=*b a>>= 8 b-- a+=*b a++ a++ endif
    a+= 20
    r=a 19
  endif

  a=r 19 a==c if b=c a=*b a<<= 8 b-- a+=*b a*= 3 a+= 3 a|= 3 a^= 3 r=a 0 endif (r0=w)

  a=c a%= 3 r=a 1 (r1=color)
  b=c b-- b-- a=*b r=a 2 (r2=buf(3))
  a=c a++ b=r 0 a-=b b=a a=*b r=a 3 (r3=buf(w))
  a=c a-- a-- b=r 0 a-=b b=a a=*b r=a 4 (r4=buf(w+3))
  a=c a+= 4 b=r 0 a-=b b=a a=*b r=a 5 (r5=buf(w-3))
  a=r 2 b=r 3 a+=b b=r 4 a+=b b=r 5 a+=b r=a 6 (r6=mean)
  a=r 2 a*=a b=a a=r 3 a*=a a+=b b=a a=r 4 a*=a a+=b b=a a=r 5 a*=a a+=b b=a a=r 6 a*=a a/= 4 b<>a a-=b a>>= 2 r=a 7 (r7=var)
  a=r 6 a>>= 2 r=a 6 (r6>>=2)
  a=r 7 a+= 255 d=a a=*d r=a 8 (r8=logvar)

  b=c a=*b r=a 9 (r9=buf(1))
  b=c b-- a=*b r=a 10 (r10=buf(2))
  a=c a-= 3 b=a a=*b r=a 11 (r11=buf(4))
  a=c a-= 5 b=a a=*b r=a 12 (r12=buf(6))
  a=c a++ b=r 0 a-=b a-=b b=a a=*b r=a 13 (r13=buf(w*2))
  a=c a+= 7 b=r 0 a-=b a-=b b=a a=*b r=a 14 (r14=buf(w*2-6))
  a=c a+= 4 b=r 0 a-=b a-=b b=a a=*b r=a 15 (r15=buf(w*2-3))
  a=c a-= 5 b=r 0 a-=b a-=b b=a a=*b r=a 16 (r16=buf(w*2+6))
  a=c b=r 0 a-=b b=a a=*b r=a 17 (r17=buf(w+1))
  a=c a+= 3 b=r 0 a-=b b=a a=*b r=a 18 (r18=buf(w-2))

  d=0 do *d=0 d++ a=d a< 24 while

  d=0
  d++
  a=r 3 b=r 4 a-=b b=r 2 a+=b hashd d++
  a=r 2 b=r 3 a-=b b=r 5 a+=b hashd d++
  a=r 2 a*= 2 b=r 12 a-=b hashd d++
  a=r 3 a*= 2 b=r 13 a-=b hashd d++
  a=r 4 a*= 2 b=r 16 a-=b hashd d++
  a=r 5 a*= 2 b=r 14 a-=b hashd d++
  a=r 9 b=r 18 a-=b b=r 5 a+=b hashd d++
  a=r 3 b=r 15 a-=b b=r 5 a+=b hashd d++
  a= 24 a*= 16 b=a a=r 8 a<<= 1 a&=b b=a a=r 6 a>>= 1 a|=b hashd d++

  b=r 11 a=r 9 a-=b b=r 2 a+=b hashd d++
  b=r 17 a=r 9 a-=b b=r 3 a+=b hashd d++
  a=r 2 hashd b=r 11 a=r 9 a-=b hashd d++
  a=r 9 hashd a=r 10 hashd d++
  a=r 3 hashd b=r 17 a=r 9 a-=b hashd d++
  b=r 2 a=r 3 a+=b a>>= 3 hashd a=r 9 a>>= 4 hashd a=r 10 a>>= 4 hashd d++
  a=r 6 hashd a=r 8 a>>= 4 hashd d++
  a=r 2 hashd a=r 9 hashd a=r 10 hashd d++
  a=r 3 hashd d++
  a=r 3 hashd a=r 9 hashd a=r 10 hashd d++
  a=r 2 hashd d++
  a=r 2 hashd a=r 9 hashd d++
  a=r 3 hashd a=r 9 hashd d++
  d++

  d=0
  do
    a=r 1 hashd d++
  a=d a< 24 while

  a=r 9 a>>= 4 a*= 3 b=r 1 a+=b a<<= 9 *d=a (mix)
  d++
  a=r 1 a<<= 9 *d=a (mix)

  d++ d++ d++ d++

  a=r 3 (b=r 4 a-=b) b=r 2 a+=b a>>= 3 a*= 3 b=r 1 a+=b a<<= 9 *d=a (sse)
  c++
  halt
pcomp ../zpaqd r colorpre p ;
  a> 255 ifnot
    *c=a (save input)
    a=c a== 19 if
      b=c a=*b a<<= 8
      b-- a+=*b a*= 3 r=a 1
      a+= 3 a|= 3 a^= 3 r=a 0      
    endif
    a=c a> 53 if
      b=r 0 a=c a-= 54 a%=b b=a
      a=r 1 a>b ifnot
        a=*c out
      else
        a=b a%= 3 a== 2 if
          b=c a=*b d=a b-- b-- a=*b a-=d out
          a+=d out
          b++ a-=*b out
        endif
      endif
    else
      a=*c out
    endif
    c++
  else
    c=0
  endif
  halt
end
